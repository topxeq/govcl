
package api

import (
    "unsafe"
    "time"
    . "github.com/topxeq/govcl/vcl/types"
)


//--------------------------- TApplication ---------------------------

func Application_Create(obj uintptr) uintptr {
    ret, _, _ := application_Create.Call(obj)
    return ret
}

func Application_Free(obj uintptr) {
    application_Free.Call(obj)
}

func Application_ActivateHint(obj uintptr, CursorPos TPoint)  {
    application_ActivateHint.Call(obj, uintptr(unsafe.Pointer(&CursorPos)))
}

func Application_BringToFront(obj uintptr)  {
    application_BringToFront.Call(obj)
}

func Application_CancelHint(obj uintptr)  {
    application_CancelHint.Call(obj)
}

func Application_HandleMessage(obj uintptr)  {
    application_HandleMessage.Call(obj)
}

func Application_HideHint(obj uintptr)  {
    application_HideHint.Call(obj)
}

func Application_Minimize(obj uintptr)  {
    application_Minimize.Call(obj)
}

func Application_ModalStarted(obj uintptr)  {
    application_ModalStarted.Call(obj)
}

func Application_ModalFinished(obj uintptr)  {
    application_ModalFinished.Call(obj)
}

func Application_ProcessMessages(obj uintptr)  {
    application_ProcessMessages.Call(obj)
}

func Application_Restore(obj uintptr)  {
    application_Restore.Call(obj)
}

func Application_RestoreTopMosts(obj uintptr)  {
    application_RestoreTopMosts.Call(obj)
}

func Application_Terminate(obj uintptr)  {
    application_Terminate.Call(obj)
}

func Application_MessageBox(obj uintptr, Text string, Caption string, Flags int32) int32 {
    ret, _, _ := application_MessageBox.Call(obj, GoStrToDStr(Text) , GoStrToDStr(Caption) , uintptr(Flags) )
    return int32(ret)
}

func Application_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := application_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Application_GetNamePath(obj uintptr) string {
    ret, _, _ := application_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Application_HasParent(obj uintptr) bool {
    ret, _, _ := application_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_Assign(obj uintptr, Source uintptr)  {
    application_Assign.Call(obj, Source )
}

func Application_ClassType(obj uintptr) TClass {
    ret, _, _ := application_ClassType.Call(obj)
    return TClass(ret)
}

func Application_ClassName(obj uintptr) string {
    ret, _, _ := application_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Application_InstanceSize(obj uintptr) int32 {
    ret, _, _ := application_InstanceSize.Call(obj)
    return int32(ret)
}

func Application_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := application_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Application_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := application_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Application_GetHashCode(obj uintptr) int32 {
    ret, _, _ := application_GetHashCode.Call(obj)
    return int32(ret)
}

func Application_ToString(obj uintptr) string {
    ret, _, _ := application_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Application_GetScaled(obj uintptr) bool {
    ret, _, _ := application_GetScaled.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_SetScaled(obj uintptr, value bool) {
   application_SetScaled.Call(obj, GoBoolToDBool(value))
}

func Application_GetExeName(obj uintptr) string {
    ret, _, _ := application_GetExeName.Call(obj)
    return DStrToGoStr(ret)
}

func Application_GetHint(obj uintptr) string {
    ret, _, _ := application_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Application_SetHint(obj uintptr, value string) {
   application_SetHint.Call(obj, GoStrToDStr(value))
}

func Application_GetHintColor(obj uintptr) TColor {
    ret, _, _ := application_GetHintColor.Call(obj)
    return TColor(ret)
}

func Application_SetHintColor(obj uintptr, value TColor) {
   application_SetHintColor.Call(obj, uintptr(value))
}

func Application_GetHintHidePause(obj uintptr) int32 {
    ret, _, _ := application_GetHintHidePause.Call(obj)
    return int32(ret)
}

func Application_SetHintHidePause(obj uintptr, value int32) {
   application_SetHintHidePause.Call(obj, uintptr(value))
}

func Application_GetHintPause(obj uintptr) int32 {
    ret, _, _ := application_GetHintPause.Call(obj)
    return int32(ret)
}

func Application_SetHintPause(obj uintptr, value int32) {
   application_SetHintPause.Call(obj, uintptr(value))
}

func Application_GetHintShortCuts(obj uintptr) bool {
    ret, _, _ := application_GetHintShortCuts.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_SetHintShortCuts(obj uintptr, value bool) {
   application_SetHintShortCuts.Call(obj, GoBoolToDBool(value))
}

func Application_GetHintShortPause(obj uintptr) int32 {
    ret, _, _ := application_GetHintShortPause.Call(obj)
    return int32(ret)
}

func Application_SetHintShortPause(obj uintptr, value int32) {
   application_SetHintShortPause.Call(obj, uintptr(value))
}

func Application_GetIcon(obj uintptr) uintptr {
    ret, _, _ := application_GetIcon.Call(obj)
    return ret
}

func Application_SetIcon(obj uintptr, value uintptr) {
   application_SetIcon.Call(obj, value)
}

func Application_GetMainForm(obj uintptr) uintptr {
    ret, _, _ := application_GetMainForm.Call(obj)
    return ret
}

func Application_GetMainFormHandle(obj uintptr) HWND {
    ret, _, _ := application_GetMainFormHandle.Call(obj)
    return HWND(ret)
}

func Application_GetMainFormOnTaskBar(obj uintptr) bool {
    ret, _, _ := application_GetMainFormOnTaskBar.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_SetMainFormOnTaskBar(obj uintptr, value bool) {
   application_SetMainFormOnTaskBar.Call(obj, GoBoolToDBool(value))
}

func Application_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := application_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Application_SetBiDiMode(obj uintptr, value TBiDiMode) {
   application_SetBiDiMode.Call(obj, uintptr(value))
}

func Application_GetShowHint(obj uintptr) bool {
    ret, _, _ := application_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_SetShowHint(obj uintptr, value bool) {
   application_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Application_GetShowMainForm(obj uintptr) bool {
    ret, _, _ := application_GetShowMainForm.Call(obj)
    return DBoolToGoBool(ret)
}

func Application_SetShowMainForm(obj uintptr, value bool) {
   application_SetShowMainForm.Call(obj, GoBoolToDBool(value))
}

func Application_GetTitle(obj uintptr) string {
    ret, _, _ := application_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func Application_SetTitle(obj uintptr, value string) {
   application_SetTitle.Call(obj, GoStrToDStr(value))
}

func Application_SetOnException(obj uintptr, fn interface{}) {
    application_SetOnException.Call(obj, addEventToMap(fn))
}

func Application_SetOnHelp(obj uintptr, fn interface{}) {
    application_SetOnHelp.Call(obj, addEventToMap(fn))
}

func Application_SetOnHint(obj uintptr, fn interface{}) {
    application_SetOnHint.Call(obj, addEventToMap(fn))
}

func Application_SetOnMinimize(obj uintptr, fn interface{}) {
    application_SetOnMinimize.Call(obj, addEventToMap(fn))
}

func Application_SetOnRestore(obj uintptr, fn interface{}) {
    application_SetOnRestore.Call(obj, addEventToMap(fn))
}

func Application_SetOnShortCut(obj uintptr, fn interface{}) {
    application_SetOnShortCut.Call(obj, addEventToMap(fn))
}

func Application_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := application_GetComponentCount.Call(obj)
    return int32(ret)
}

func Application_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := application_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Application_SetComponentIndex(obj uintptr, value int32) {
   application_SetComponentIndex.Call(obj, uintptr(value))
}

func Application_GetOwner(obj uintptr) uintptr {
    ret, _, _ := application_GetOwner.Call(obj)
    return ret
}

func Application_GetName(obj uintptr) string {
    ret, _, _ := application_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Application_SetName(obj uintptr, value string) {
   application_SetName.Call(obj, GoStrToDStr(value))
}

func Application_GetTag(obj uintptr) int {
    ret, _, _ := application_GetTag.Call(obj)
    return int(ret)
}

func Application_SetTag(obj uintptr, value int) {
   application_SetTag.Call(obj, uintptr(value))
}

func Application_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := application_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Application_StaticClassType() TClass {
    r, _, _:= application_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TForm ---------------------------

func Form_Create(obj uintptr) uintptr {
    ret, _, _ := form_Create.Call(obj)
    return ret
}

func Form_Free(obj uintptr) {
    form_Free.Call(obj)
}

func Form_Close(obj uintptr)  {
    form_Close.Call(obj)
}

func Form_Hide(obj uintptr)  {
    form_Hide.Call(obj)
}

func Form_SetFocus(obj uintptr)  {
    form_SetFocus.Call(obj)
}

func Form_Show(obj uintptr)  {
    form_Show.Call(obj)
}

func Form_ShowModal(obj uintptr) int32 {
    ret, _, _ := form_ShowModal.Call(obj)
    return int32(ret)
}

func Form_ScrollInView(obj uintptr, AControl uintptr)  {
    form_ScrollInView.Call(obj, AControl )
}

func Form_CanFocus(obj uintptr) bool {
    ret, _, _ := form_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := form_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Form_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := form_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Form_DisableAlign(obj uintptr)  {
    form_DisableAlign.Call(obj)
}

func Form_EnableAlign(obj uintptr)  {
    form_EnableAlign.Call(obj)
}

func Form_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := form_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Form_FlipChildren(obj uintptr, AllLevels bool)  {
    form_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Form_Focused(obj uintptr) bool {
    ret, _, _ := form_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_HandleAllocated(obj uintptr) bool {
    ret, _, _ := form_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_InsertControl(obj uintptr, AControl uintptr)  {
    form_InsertControl.Call(obj, AControl )
}

func Form_Invalidate(obj uintptr)  {
    form_Invalidate.Call(obj)
}

func Form_RemoveControl(obj uintptr, AControl uintptr)  {
    form_RemoveControl.Call(obj, AControl )
}

func Form_Realign(obj uintptr)  {
    form_Realign.Call(obj)
}

func Form_Repaint(obj uintptr)  {
    form_Repaint.Call(obj)
}

func Form_ScaleBy(obj uintptr, M int32, D int32)  {
    form_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Form_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    form_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Form_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    form_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Form_Update(obj uintptr)  {
    form_Update.Call(obj)
}

func Form_BringToFront(obj uintptr)  {
    form_BringToFront.Call(obj)
}

func Form_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    form_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    form_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_Dragging(obj uintptr) bool {
    ret, _, _ := form_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_HasParent(obj uintptr) bool {
    ret, _, _ := form_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := form_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Form_Refresh(obj uintptr)  {
    form_Refresh.Call(obj)
}

func Form_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    form_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    form_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_SendToBack(obj uintptr)  {
    form_SendToBack.Call(obj)
}

func Form_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := form_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Form_GetTextLen(obj uintptr) int32 {
    ret, _, _ := form_GetTextLen.Call(obj)
    return int32(ret)
}

func Form_SetTextBuf(obj uintptr, Buffer string)  {
    form_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Form_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := form_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Form_GetNamePath(obj uintptr) string {
    ret, _, _ := form_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Form_Assign(obj uintptr, Source uintptr)  {
    form_Assign.Call(obj, Source )
}

func Form_ClassType(obj uintptr) TClass {
    ret, _, _ := form_ClassType.Call(obj)
    return TClass(ret)
}

func Form_ClassName(obj uintptr) string {
    ret, _, _ := form_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Form_InstanceSize(obj uintptr) int32 {
    ret, _, _ := form_InstanceSize.Call(obj)
    return int32(ret)
}

func Form_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := form_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Form_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := form_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Form_GetHashCode(obj uintptr) int32 {
    ret, _, _ := form_GetHashCode.Call(obj)
    return int32(ret)
}

func Form_ToString(obj uintptr) string {
    ret, _, _ := form_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Form_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    form_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Form_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    form_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Form_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    form_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Form_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    form_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Form_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    form_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Form_AnchorClient(obj uintptr, ASpace int32)  {
    form_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Form_GetAction(obj uintptr) uintptr {
    ret, _, _ := form_GetAction.Call(obj)
    return ret
}

func Form_SetAction(obj uintptr, value uintptr) {
   form_SetAction.Call(obj, value)
}

func Form_GetAlign(obj uintptr) TAlign {
    ret, _, _ := form_GetAlign.Call(obj)
    return TAlign(ret)
}

func Form_SetAlign(obj uintptr, value TAlign) {
   form_SetAlign.Call(obj, uintptr(value))
}

func Form_GetAlphaBlend(obj uintptr) bool {
    ret, _, _ := form_GetAlphaBlend.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetAlphaBlend(obj uintptr, value bool) {
   form_SetAlphaBlend.Call(obj, GoBoolToDBool(value))
}

func Form_GetAlphaBlendValue(obj uintptr) uint8 {
    ret, _, _ := form_GetAlphaBlendValue.Call(obj)
    return uint8(ret)
}

func Form_SetAlphaBlendValue(obj uintptr, value uint8) {
   form_SetAlphaBlendValue.Call(obj, uintptr(value))
}

func Form_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := form_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Form_SetAnchors(obj uintptr, value TAnchors) {
   form_SetAnchors.Call(obj, uintptr(value))
}

func Form_GetAutoScroll(obj uintptr) bool {
    ret, _, _ := form_GetAutoScroll.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetAutoScroll(obj uintptr, value bool) {
   form_SetAutoScroll.Call(obj, GoBoolToDBool(value))
}

func Form_GetAutoSize(obj uintptr) bool {
    ret, _, _ := form_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetAutoSize(obj uintptr, value bool) {
   form_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Form_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := form_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Form_SetBiDiMode(obj uintptr, value TBiDiMode) {
   form_SetBiDiMode.Call(obj, uintptr(value))
}

func Form_GetBorderIcons(obj uintptr) TBorderIcons {
    ret, _, _ := form_GetBorderIcons.Call(obj)
    return TBorderIcons(ret)
}

func Form_SetBorderIcons(obj uintptr, value TBorderIcons) {
   form_SetBorderIcons.Call(obj, uintptr(value))
}

func Form_GetBorderStyle(obj uintptr) TFormBorderStyle {
    ret, _, _ := form_GetBorderStyle.Call(obj)
    return TFormBorderStyle(ret)
}

func Form_SetBorderStyle(obj uintptr, value TFormBorderStyle) {
   form_SetBorderStyle.Call(obj, uintptr(value))
}

func Form_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := form_GetBorderWidth.Call(obj)
    return int32(ret)
}

func Form_SetBorderWidth(obj uintptr, value int32) {
   form_SetBorderWidth.Call(obj, uintptr(value))
}

func Form_GetCaption(obj uintptr) string {
    ret, _, _ := form_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func Form_SetCaption(obj uintptr, value string) {
   form_SetCaption.Call(obj, GoStrToDStr(value))
}

func Form_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := form_GetClientHeight.Call(obj)
    return int32(ret)
}

func Form_SetClientHeight(obj uintptr, value int32) {
   form_SetClientHeight.Call(obj, uintptr(value))
}

func Form_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := form_GetClientWidth.Call(obj)
    return int32(ret)
}

func Form_SetClientWidth(obj uintptr, value int32) {
   form_SetClientWidth.Call(obj, uintptr(value))
}

func Form_GetColor(obj uintptr) TColor {
    ret, _, _ := form_GetColor.Call(obj)
    return TColor(ret)
}

func Form_SetColor(obj uintptr, value TColor) {
   form_SetColor.Call(obj, uintptr(value))
}

func Form_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := form_GetConstraints.Call(obj)
    return ret
}

func Form_SetConstraints(obj uintptr, value uintptr) {
   form_SetConstraints.Call(obj, value)
}

func Form_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := form_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetUseDockManager(obj uintptr, value bool) {
   form_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Form_GetDefaultMonitor(obj uintptr) TDefaultMonitor {
    ret, _, _ := form_GetDefaultMonitor.Call(obj)
    return TDefaultMonitor(ret)
}

func Form_SetDefaultMonitor(obj uintptr, value TDefaultMonitor) {
   form_SetDefaultMonitor.Call(obj, uintptr(value))
}

func Form_GetDockSite(obj uintptr) bool {
    ret, _, _ := form_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetDockSite(obj uintptr, value bool) {
   form_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Form_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := form_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetDoubleBuffered(obj uintptr, value bool) {
   form_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Form_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := form_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Form_SetDragKind(obj uintptr, value TDragKind) {
   form_SetDragKind.Call(obj, uintptr(value))
}

func Form_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := form_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Form_SetDragMode(obj uintptr, value TDragMode) {
   form_SetDragMode.Call(obj, uintptr(value))
}

func Form_GetEnabled(obj uintptr) bool {
    ret, _, _ := form_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetEnabled(obj uintptr, value bool) {
   form_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Form_GetParentFont(obj uintptr) bool {
    ret, _, _ := form_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetParentFont(obj uintptr, value bool) {
   form_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Form_GetFont(obj uintptr) uintptr {
    ret, _, _ := form_GetFont.Call(obj)
    return ret
}

func Form_SetFont(obj uintptr, value uintptr) {
   form_SetFont.Call(obj, value)
}

func Form_GetFormStyle(obj uintptr) TFormStyle {
    ret, _, _ := form_GetFormStyle.Call(obj)
    return TFormStyle(ret)
}

func Form_SetFormStyle(obj uintptr, value TFormStyle) {
   form_SetFormStyle.Call(obj, uintptr(value))
}

func Form_GetHeight(obj uintptr) int32 {
    ret, _, _ := form_GetHeight.Call(obj)
    return int32(ret)
}

func Form_SetHeight(obj uintptr, value int32) {
   form_SetHeight.Call(obj, uintptr(value))
}

func Form_GetHorzScrollBar(obj uintptr) uintptr {
    ret, _, _ := form_GetHorzScrollBar.Call(obj)
    return ret
}

func Form_SetHorzScrollBar(obj uintptr, value uintptr) {
   form_SetHorzScrollBar.Call(obj, value)
}

func Form_GetIcon(obj uintptr) uintptr {
    ret, _, _ := form_GetIcon.Call(obj)
    return ret
}

func Form_SetIcon(obj uintptr, value uintptr) {
   form_SetIcon.Call(obj, value)
}

func Form_GetKeyPreview(obj uintptr) bool {
    ret, _, _ := form_GetKeyPreview.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetKeyPreview(obj uintptr, value bool) {
   form_SetKeyPreview.Call(obj, GoBoolToDBool(value))
}

func Form_GetMenu(obj uintptr) uintptr {
    ret, _, _ := form_GetMenu.Call(obj)
    return ret
}

func Form_SetMenu(obj uintptr, value uintptr) {
   form_SetMenu.Call(obj, value)
}

func Form_GetPixelsPerInch(obj uintptr) int32 {
    ret, _, _ := form_GetPixelsPerInch.Call(obj)
    return int32(ret)
}

func Form_SetPixelsPerInch(obj uintptr, value int32) {
   form_SetPixelsPerInch.Call(obj, uintptr(value))
}

func Form_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := form_GetPopupMenu.Call(obj)
    return ret
}

func Form_SetPopupMenu(obj uintptr, value uintptr) {
   form_SetPopupMenu.Call(obj, value)
}

func Form_GetPosition(obj uintptr) TPosition {
    ret, _, _ := form_GetPosition.Call(obj)
    return TPosition(ret)
}

func Form_SetPosition(obj uintptr, value TPosition) {
   form_SetPosition.Call(obj, uintptr(value))
}

func Form_GetScaled(obj uintptr) bool {
    ret, _, _ := form_GetScaled.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetScaled(obj uintptr, value bool) {
   form_SetScaled.Call(obj, GoBoolToDBool(value))
}

func Form_GetShowHint(obj uintptr) bool {
    ret, _, _ := form_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetShowHint(obj uintptr, value bool) {
   form_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Form_GetVertScrollBar(obj uintptr) uintptr {
    ret, _, _ := form_GetVertScrollBar.Call(obj)
    return ret
}

func Form_SetVertScrollBar(obj uintptr, value uintptr) {
   form_SetVertScrollBar.Call(obj, value)
}

func Form_GetVisible(obj uintptr) bool {
    ret, _, _ := form_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetVisible(obj uintptr, value bool) {
   form_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Form_GetWidth(obj uintptr) int32 {
    ret, _, _ := form_GetWidth.Call(obj)
    return int32(ret)
}

func Form_SetWidth(obj uintptr, value int32) {
   form_SetWidth.Call(obj, uintptr(value))
}

func Form_GetWindowState(obj uintptr) TWindowState {
    ret, _, _ := form_GetWindowState.Call(obj)
    return TWindowState(ret)
}

func Form_SetWindowState(obj uintptr, value TWindowState) {
   form_SetWindowState.Call(obj, uintptr(value))
}

func Form_SetOnAlignPosition(obj uintptr, fn interface{}) {
    form_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func Form_SetOnClick(obj uintptr, fn interface{}) {
    form_SetOnClick.Call(obj, addEventToMap(fn))
}

func Form_SetOnClose(obj uintptr, fn interface{}) {
    form_SetOnClose.Call(obj, addEventToMap(fn))
}

func Form_SetOnCloseQuery(obj uintptr, fn interface{}) {
    form_SetOnCloseQuery.Call(obj, addEventToMap(fn))
}

func Form_SetOnContextPopup(obj uintptr, fn interface{}) {
    form_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Form_SetOnDblClick(obj uintptr, fn interface{}) {
    form_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Form_SetOnDockDrop(obj uintptr, fn interface{}) {
    form_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func Form_SetOnDragDrop(obj uintptr, fn interface{}) {
    form_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Form_SetOnDragOver(obj uintptr, fn interface{}) {
    form_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Form_SetOnEndDock(obj uintptr, fn interface{}) {
    form_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func Form_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    form_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func Form_SetOnHide(obj uintptr, fn interface{}) {
    form_SetOnHide.Call(obj, addEventToMap(fn))
}

func Form_SetOnHelp(obj uintptr, fn interface{}) {
    form_SetOnHelp.Call(obj, addEventToMap(fn))
}

func Form_SetOnKeyDown(obj uintptr, fn interface{}) {
    form_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func Form_SetOnKeyPress(obj uintptr, fn interface{}) {
    form_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func Form_SetOnKeyUp(obj uintptr, fn interface{}) {
    form_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseDown(obj uintptr, fn interface{}) {
    form_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseEnter(obj uintptr, fn interface{}) {
    form_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseLeave(obj uintptr, fn interface{}) {
    form_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseMove(obj uintptr, fn interface{}) {
    form_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseUp(obj uintptr, fn interface{}) {
    form_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseWheel(obj uintptr, fn interface{}) {
    form_SetOnMouseWheel.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    form_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func Form_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    form_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func Form_SetOnPaint(obj uintptr, fn interface{}) {
    form_SetOnPaint.Call(obj, addEventToMap(fn))
}

func Form_SetOnResize(obj uintptr, fn interface{}) {
    form_SetOnResize.Call(obj, addEventToMap(fn))
}

func Form_SetOnShortCut(obj uintptr, fn interface{}) {
    form_SetOnShortCut.Call(obj, addEventToMap(fn))
}

func Form_SetOnShow(obj uintptr, fn interface{}) {
    form_SetOnShow.Call(obj, addEventToMap(fn))
}

func Form_SetOnStartDock(obj uintptr, fn interface{}) {
    form_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func Form_SetOnUnDock(obj uintptr, fn interface{}) {
    form_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func Form_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := form_GetCanvas.Call(obj)
    return ret
}

func Form_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := form_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func Form_SetModalResult(obj uintptr, value TModalResult) {
   form_SetModalResult.Call(obj, uintptr(value))
}

func Form_GetMonitor(obj uintptr) uintptr {
    ret, _, _ := form_GetMonitor.Call(obj)
    return ret
}

func Form_GetLeft(obj uintptr) int32 {
    ret, _, _ := form_GetLeft.Call(obj)
    return int32(ret)
}

func Form_SetLeft(obj uintptr, value int32) {
   form_SetLeft.Call(obj, uintptr(value))
}

func Form_GetTop(obj uintptr) int32 {
    ret, _, _ := form_GetTop.Call(obj)
    return int32(ret)
}

func Form_SetTop(obj uintptr, value int32) {
   form_SetTop.Call(obj, uintptr(value))
}

func Form_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := form_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Form_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := form_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := form_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Form_GetBrush(obj uintptr) uintptr {
    ret, _, _ := form_GetBrush.Call(obj)
    return ret
}

func Form_GetControlCount(obj uintptr) int32 {
    ret, _, _ := form_GetControlCount.Call(obj)
    return int32(ret)
}

func Form_GetHandle(obj uintptr) HWND {
    ret, _, _ := form_GetHandle.Call(obj)
    return HWND(ret)
}

func Form_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := form_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetParentDoubleBuffered(obj uintptr, value bool) {
   form_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Form_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := form_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Form_SetParentWindow(obj uintptr, value HWND) {
   form_SetParentWindow.Call(obj, uintptr(value))
}

func Form_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := form_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Form_SetTabOrder(obj uintptr, value TTabOrder) {
   form_SetTabOrder.Call(obj, uintptr(value))
}

func Form_GetTabStop(obj uintptr) bool {
    ret, _, _ := form_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_SetTabStop(obj uintptr, value bool) {
   form_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Form_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    form_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_SetBoundsRect(obj uintptr, value TRect) {
   form_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Form_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    form_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_GetClientRect(obj uintptr) TRect {
    var ret TRect
    form_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Form_GetControlState(obj uintptr) TControlState {
    ret, _, _ := form_GetControlState.Call(obj)
    return TControlState(ret)
}

func Form_SetControlState(obj uintptr, value TControlState) {
   form_SetControlState.Call(obj, uintptr(value))
}

func Form_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := form_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Form_SetControlStyle(obj uintptr, value TControlStyle) {
   form_SetControlStyle.Call(obj, uintptr(value))
}

func Form_GetFloating(obj uintptr) bool {
    ret, _, _ := form_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Form_GetParent(obj uintptr) uintptr {
    ret, _, _ := form_GetParent.Call(obj)
    return ret
}

func Form_SetParent(obj uintptr, value uintptr) {
   form_SetParent.Call(obj, value)
}

func Form_GetCursor(obj uintptr) TCursor {
    ret, _, _ := form_GetCursor.Call(obj)
    return TCursor(ret)
}

func Form_SetCursor(obj uintptr, value TCursor) {
   form_SetCursor.Call(obj, uintptr(value))
}

func Form_GetHint(obj uintptr) string {
    ret, _, _ := form_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Form_SetHint(obj uintptr, value string) {
   form_SetHint.Call(obj, GoStrToDStr(value))
}

func Form_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := form_GetComponentCount.Call(obj)
    return int32(ret)
}

func Form_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := form_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Form_SetComponentIndex(obj uintptr, value int32) {
   form_SetComponentIndex.Call(obj, uintptr(value))
}

func Form_GetOwner(obj uintptr) uintptr {
    ret, _, _ := form_GetOwner.Call(obj)
    return ret
}

func Form_GetName(obj uintptr) string {
    ret, _, _ := form_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Form_SetName(obj uintptr, value string) {
   form_SetName.Call(obj, GoStrToDStr(value))
}

func Form_GetTag(obj uintptr) int {
    ret, _, _ := form_GetTag.Call(obj)
    return int(ret)
}

func Form_SetTag(obj uintptr, value int) {
   form_SetTag.Call(obj, uintptr(value))
}

func Form_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := form_GetAnchorSideLeft.Call(obj)
    return ret
}

func Form_SetAnchorSideLeft(obj uintptr, value uintptr) {
   form_SetAnchorSideLeft.Call(obj, value)
}

func Form_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := form_GetAnchorSideTop.Call(obj)
    return ret
}

func Form_SetAnchorSideTop(obj uintptr, value uintptr) {
   form_SetAnchorSideTop.Call(obj, value)
}

func Form_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := form_GetAnchorSideRight.Call(obj)
    return ret
}

func Form_SetAnchorSideRight(obj uintptr, value uintptr) {
   form_SetAnchorSideRight.Call(obj, value)
}

func Form_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := form_GetAnchorSideBottom.Call(obj)
    return ret
}

func Form_SetAnchorSideBottom(obj uintptr, value uintptr) {
   form_SetAnchorSideBottom.Call(obj, value)
}

func Form_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := form_GetChildSizing.Call(obj)
    return ret
}

func Form_SetChildSizing(obj uintptr, value uintptr) {
   form_SetChildSizing.Call(obj, value)
}

func Form_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := form_GetBorderSpacing.Call(obj)
    return ret
}

func Form_SetBorderSpacing(obj uintptr, value uintptr) {
   form_SetBorderSpacing.Call(obj, value)
}

func Form_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := form_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Form_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := form_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Form_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := form_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Form_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := form_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Form_StaticClassType() TClass {
    r, _, _:= form_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TButton ---------------------------

func Button_Create(obj uintptr) uintptr {
    ret, _, _ := button_Create.Call(obj)
    return ret
}

func Button_Free(obj uintptr) {
    button_Free.Call(obj)
}

func Button_Click(obj uintptr)  {
    button_Click.Call(obj)
}

func Button_CanFocus(obj uintptr) bool {
    ret, _, _ := button_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := button_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Button_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := button_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Button_DisableAlign(obj uintptr)  {
    button_DisableAlign.Call(obj)
}

func Button_EnableAlign(obj uintptr)  {
    button_EnableAlign.Call(obj)
}

func Button_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := button_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Button_FlipChildren(obj uintptr, AllLevels bool)  {
    button_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Button_Focused(obj uintptr) bool {
    ret, _, _ := button_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_HandleAllocated(obj uintptr) bool {
    ret, _, _ := button_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_InsertControl(obj uintptr, AControl uintptr)  {
    button_InsertControl.Call(obj, AControl )
}

func Button_Invalidate(obj uintptr)  {
    button_Invalidate.Call(obj)
}

func Button_RemoveControl(obj uintptr, AControl uintptr)  {
    button_RemoveControl.Call(obj, AControl )
}

func Button_Realign(obj uintptr)  {
    button_Realign.Call(obj)
}

func Button_Repaint(obj uintptr)  {
    button_Repaint.Call(obj)
}

func Button_ScaleBy(obj uintptr, M int32, D int32)  {
    button_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Button_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    button_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Button_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    button_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Button_SetFocus(obj uintptr)  {
    button_SetFocus.Call(obj)
}

func Button_Update(obj uintptr)  {
    button_Update.Call(obj)
}

func Button_BringToFront(obj uintptr)  {
    button_BringToFront.Call(obj)
}

func Button_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    button_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    button_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_Dragging(obj uintptr) bool {
    ret, _, _ := button_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_HasParent(obj uintptr) bool {
    ret, _, _ := button_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_Hide(obj uintptr)  {
    button_Hide.Call(obj)
}

func Button_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := button_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Button_Refresh(obj uintptr)  {
    button_Refresh.Call(obj)
}

func Button_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    button_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    button_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_SendToBack(obj uintptr)  {
    button_SendToBack.Call(obj)
}

func Button_Show(obj uintptr)  {
    button_Show.Call(obj)
}

func Button_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := button_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Button_GetTextLen(obj uintptr) int32 {
    ret, _, _ := button_GetTextLen.Call(obj)
    return int32(ret)
}

func Button_SetTextBuf(obj uintptr, Buffer string)  {
    button_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Button_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := button_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Button_GetNamePath(obj uintptr) string {
    ret, _, _ := button_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Button_Assign(obj uintptr, Source uintptr)  {
    button_Assign.Call(obj, Source )
}

func Button_ClassType(obj uintptr) TClass {
    ret, _, _ := button_ClassType.Call(obj)
    return TClass(ret)
}

func Button_ClassName(obj uintptr) string {
    ret, _, _ := button_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Button_InstanceSize(obj uintptr) int32 {
    ret, _, _ := button_InstanceSize.Call(obj)
    return int32(ret)
}

func Button_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := button_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Button_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := button_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Button_GetHashCode(obj uintptr) int32 {
    ret, _, _ := button_GetHashCode.Call(obj)
    return int32(ret)
}

func Button_ToString(obj uintptr) string {
    ret, _, _ := button_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Button_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    button_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Button_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    button_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Button_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    button_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Button_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    button_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Button_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    button_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Button_AnchorClient(obj uintptr, ASpace int32)  {
    button_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Button_GetAction(obj uintptr) uintptr {
    ret, _, _ := button_GetAction.Call(obj)
    return ret
}

func Button_SetAction(obj uintptr, value uintptr) {
   button_SetAction.Call(obj, value)
}

func Button_GetAlign(obj uintptr) TAlign {
    ret, _, _ := button_GetAlign.Call(obj)
    return TAlign(ret)
}

func Button_SetAlign(obj uintptr, value TAlign) {
   button_SetAlign.Call(obj, uintptr(value))
}

func Button_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := button_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Button_SetAnchors(obj uintptr, value TAnchors) {
   button_SetAnchors.Call(obj, uintptr(value))
}

func Button_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := button_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Button_SetBiDiMode(obj uintptr, value TBiDiMode) {
   button_SetBiDiMode.Call(obj, uintptr(value))
}

func Button_GetCancel(obj uintptr) bool {
    ret, _, _ := button_GetCancel.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetCancel(obj uintptr, value bool) {
   button_SetCancel.Call(obj, GoBoolToDBool(value))
}

func Button_GetCaption(obj uintptr) string {
    ret, _, _ := button_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func Button_SetCaption(obj uintptr, value string) {
   button_SetCaption.Call(obj, GoStrToDStr(value))
}

func Button_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := button_GetConstraints.Call(obj)
    return ret
}

func Button_SetConstraints(obj uintptr, value uintptr) {
   button_SetConstraints.Call(obj, value)
}

func Button_GetDefault(obj uintptr) bool {
    ret, _, _ := button_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetDefault(obj uintptr, value bool) {
   button_SetDefault.Call(obj, GoBoolToDBool(value))
}

func Button_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := button_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetDoubleBuffered(obj uintptr, value bool) {
   button_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Button_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := button_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Button_SetDragCursor(obj uintptr, value TCursor) {
   button_SetDragCursor.Call(obj, uintptr(value))
}

func Button_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := button_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Button_SetDragKind(obj uintptr, value TDragKind) {
   button_SetDragKind.Call(obj, uintptr(value))
}

func Button_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := button_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Button_SetDragMode(obj uintptr, value TDragMode) {
   button_SetDragMode.Call(obj, uintptr(value))
}

func Button_GetEnabled(obj uintptr) bool {
    ret, _, _ := button_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetEnabled(obj uintptr, value bool) {
   button_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Button_GetFont(obj uintptr) uintptr {
    ret, _, _ := button_GetFont.Call(obj)
    return ret
}

func Button_SetFont(obj uintptr, value uintptr) {
   button_SetFont.Call(obj, value)
}

func Button_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := button_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func Button_SetModalResult(obj uintptr, value TModalResult) {
   button_SetModalResult.Call(obj, uintptr(value))
}

func Button_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := button_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetParentDoubleBuffered(obj uintptr, value bool) {
   button_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Button_GetParentFont(obj uintptr) bool {
    ret, _, _ := button_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetParentFont(obj uintptr, value bool) {
   button_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Button_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := button_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetParentShowHint(obj uintptr, value bool) {
   button_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Button_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := button_GetPopupMenu.Call(obj)
    return ret
}

func Button_SetPopupMenu(obj uintptr, value uintptr) {
   button_SetPopupMenu.Call(obj, value)
}

func Button_GetShowHint(obj uintptr) bool {
    ret, _, _ := button_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetShowHint(obj uintptr, value bool) {
   button_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Button_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := button_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Button_SetTabOrder(obj uintptr, value TTabOrder) {
   button_SetTabOrder.Call(obj, uintptr(value))
}

func Button_GetTabStop(obj uintptr) bool {
    ret, _, _ := button_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetTabStop(obj uintptr, value bool) {
   button_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Button_GetVisible(obj uintptr) bool {
    ret, _, _ := button_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetVisible(obj uintptr, value bool) {
   button_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Button_SetOnClick(obj uintptr, fn interface{}) {
    button_SetOnClick.Call(obj, addEventToMap(fn))
}

func Button_SetOnContextPopup(obj uintptr, fn interface{}) {
    button_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Button_SetOnDragDrop(obj uintptr, fn interface{}) {
    button_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Button_SetOnDragOver(obj uintptr, fn interface{}) {
    button_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Button_SetOnEndDrag(obj uintptr, fn interface{}) {
    button_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Button_SetOnEnter(obj uintptr, fn interface{}) {
    button_SetOnEnter.Call(obj, addEventToMap(fn))
}

func Button_SetOnExit(obj uintptr, fn interface{}) {
    button_SetOnExit.Call(obj, addEventToMap(fn))
}

func Button_SetOnKeyDown(obj uintptr, fn interface{}) {
    button_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func Button_SetOnKeyPress(obj uintptr, fn interface{}) {
    button_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func Button_SetOnKeyUp(obj uintptr, fn interface{}) {
    button_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func Button_SetOnMouseDown(obj uintptr, fn interface{}) {
    button_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Button_SetOnMouseEnter(obj uintptr, fn interface{}) {
    button_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Button_SetOnMouseLeave(obj uintptr, fn interface{}) {
    button_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Button_SetOnMouseMove(obj uintptr, fn interface{}) {
    button_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Button_SetOnMouseUp(obj uintptr, fn interface{}) {
    button_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Button_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := button_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Button_GetDockSite(obj uintptr) bool {
    ret, _, _ := button_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetDockSite(obj uintptr, value bool) {
   button_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Button_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := button_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := button_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Button_GetBrush(obj uintptr) uintptr {
    ret, _, _ := button_GetBrush.Call(obj)
    return ret
}

func Button_GetControlCount(obj uintptr) int32 {
    ret, _, _ := button_GetControlCount.Call(obj)
    return int32(ret)
}

func Button_GetHandle(obj uintptr) HWND {
    ret, _, _ := button_GetHandle.Call(obj)
    return HWND(ret)
}

func Button_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := button_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Button_SetParentWindow(obj uintptr, value HWND) {
   button_SetParentWindow.Call(obj, uintptr(value))
}

func Button_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := button_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_SetUseDockManager(obj uintptr, value bool) {
   button_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Button_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    button_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_SetBoundsRect(obj uintptr, value TRect) {
   button_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Button_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := button_GetClientHeight.Call(obj)
    return int32(ret)
}

func Button_SetClientHeight(obj uintptr, value int32) {
   button_SetClientHeight.Call(obj, uintptr(value))
}

func Button_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    button_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_GetClientRect(obj uintptr) TRect {
    var ret TRect
    button_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Button_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := button_GetClientWidth.Call(obj)
    return int32(ret)
}

func Button_SetClientWidth(obj uintptr, value int32) {
   button_SetClientWidth.Call(obj, uintptr(value))
}

func Button_GetControlState(obj uintptr) TControlState {
    ret, _, _ := button_GetControlState.Call(obj)
    return TControlState(ret)
}

func Button_SetControlState(obj uintptr, value TControlState) {
   button_SetControlState.Call(obj, uintptr(value))
}

func Button_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := button_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Button_SetControlStyle(obj uintptr, value TControlStyle) {
   button_SetControlStyle.Call(obj, uintptr(value))
}

func Button_GetFloating(obj uintptr) bool {
    ret, _, _ := button_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Button_GetParent(obj uintptr) uintptr {
    ret, _, _ := button_GetParent.Call(obj)
    return ret
}

func Button_SetParent(obj uintptr, value uintptr) {
   button_SetParent.Call(obj, value)
}

func Button_GetLeft(obj uintptr) int32 {
    ret, _, _ := button_GetLeft.Call(obj)
    return int32(ret)
}

func Button_SetLeft(obj uintptr, value int32) {
   button_SetLeft.Call(obj, uintptr(value))
}

func Button_GetTop(obj uintptr) int32 {
    ret, _, _ := button_GetTop.Call(obj)
    return int32(ret)
}

func Button_SetTop(obj uintptr, value int32) {
   button_SetTop.Call(obj, uintptr(value))
}

func Button_GetWidth(obj uintptr) int32 {
    ret, _, _ := button_GetWidth.Call(obj)
    return int32(ret)
}

func Button_SetWidth(obj uintptr, value int32) {
   button_SetWidth.Call(obj, uintptr(value))
}

func Button_GetHeight(obj uintptr) int32 {
    ret, _, _ := button_GetHeight.Call(obj)
    return int32(ret)
}

func Button_SetHeight(obj uintptr, value int32) {
   button_SetHeight.Call(obj, uintptr(value))
}

func Button_GetCursor(obj uintptr) TCursor {
    ret, _, _ := button_GetCursor.Call(obj)
    return TCursor(ret)
}

func Button_SetCursor(obj uintptr, value TCursor) {
   button_SetCursor.Call(obj, uintptr(value))
}

func Button_GetHint(obj uintptr) string {
    ret, _, _ := button_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Button_SetHint(obj uintptr, value string) {
   button_SetHint.Call(obj, GoStrToDStr(value))
}

func Button_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := button_GetComponentCount.Call(obj)
    return int32(ret)
}

func Button_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := button_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Button_SetComponentIndex(obj uintptr, value int32) {
   button_SetComponentIndex.Call(obj, uintptr(value))
}

func Button_GetOwner(obj uintptr) uintptr {
    ret, _, _ := button_GetOwner.Call(obj)
    return ret
}

func Button_GetName(obj uintptr) string {
    ret, _, _ := button_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Button_SetName(obj uintptr, value string) {
   button_SetName.Call(obj, GoStrToDStr(value))
}

func Button_GetTag(obj uintptr) int {
    ret, _, _ := button_GetTag.Call(obj)
    return int(ret)
}

func Button_SetTag(obj uintptr, value int) {
   button_SetTag.Call(obj, uintptr(value))
}

func Button_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := button_GetAnchorSideLeft.Call(obj)
    return ret
}

func Button_SetAnchorSideLeft(obj uintptr, value uintptr) {
   button_SetAnchorSideLeft.Call(obj, value)
}

func Button_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := button_GetAnchorSideTop.Call(obj)
    return ret
}

func Button_SetAnchorSideTop(obj uintptr, value uintptr) {
   button_SetAnchorSideTop.Call(obj, value)
}

func Button_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := button_GetAnchorSideRight.Call(obj)
    return ret
}

func Button_SetAnchorSideRight(obj uintptr, value uintptr) {
   button_SetAnchorSideRight.Call(obj, value)
}

func Button_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := button_GetAnchorSideBottom.Call(obj)
    return ret
}

func Button_SetAnchorSideBottom(obj uintptr, value uintptr) {
   button_SetAnchorSideBottom.Call(obj, value)
}

func Button_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := button_GetChildSizing.Call(obj)
    return ret
}

func Button_SetChildSizing(obj uintptr, value uintptr) {
   button_SetChildSizing.Call(obj, value)
}

func Button_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := button_GetBorderSpacing.Call(obj)
    return ret
}

func Button_SetBorderSpacing(obj uintptr, value uintptr) {
   button_SetBorderSpacing.Call(obj, value)
}

func Button_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := button_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Button_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := button_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Button_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := button_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Button_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := button_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Button_StaticClassType() TClass {
    r, _, _:= button_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TEdit ---------------------------

func Edit_Create(obj uintptr) uintptr {
    ret, _, _ := edit_Create.Call(obj)
    return ret
}

func Edit_Free(obj uintptr) {
    edit_Free.Call(obj)
}

func Edit_Clear(obj uintptr)  {
    edit_Clear.Call(obj)
}

func Edit_ClearSelection(obj uintptr)  {
    edit_ClearSelection.Call(obj)
}

func Edit_CopyToClipboard(obj uintptr)  {
    edit_CopyToClipboard.Call(obj)
}

func Edit_CutToClipboard(obj uintptr)  {
    edit_CutToClipboard.Call(obj)
}

func Edit_PasteFromClipboard(obj uintptr)  {
    edit_PasteFromClipboard.Call(obj)
}

func Edit_Undo(obj uintptr)  {
    edit_Undo.Call(obj)
}

func Edit_SelectAll(obj uintptr)  {
    edit_SelectAll.Call(obj)
}

func Edit_CanFocus(obj uintptr) bool {
    ret, _, _ := edit_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := edit_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Edit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := edit_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Edit_DisableAlign(obj uintptr)  {
    edit_DisableAlign.Call(obj)
}

func Edit_EnableAlign(obj uintptr)  {
    edit_EnableAlign.Call(obj)
}

func Edit_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := edit_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Edit_FlipChildren(obj uintptr, AllLevels bool)  {
    edit_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Edit_Focused(obj uintptr) bool {
    ret, _, _ := edit_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_HandleAllocated(obj uintptr) bool {
    ret, _, _ := edit_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_InsertControl(obj uintptr, AControl uintptr)  {
    edit_InsertControl.Call(obj, AControl )
}

func Edit_Invalidate(obj uintptr)  {
    edit_Invalidate.Call(obj)
}

func Edit_RemoveControl(obj uintptr, AControl uintptr)  {
    edit_RemoveControl.Call(obj, AControl )
}

func Edit_Realign(obj uintptr)  {
    edit_Realign.Call(obj)
}

func Edit_Repaint(obj uintptr)  {
    edit_Repaint.Call(obj)
}

func Edit_ScaleBy(obj uintptr, M int32, D int32)  {
    edit_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Edit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    edit_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Edit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    edit_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Edit_SetFocus(obj uintptr)  {
    edit_SetFocus.Call(obj)
}

func Edit_Update(obj uintptr)  {
    edit_Update.Call(obj)
}

func Edit_BringToFront(obj uintptr)  {
    edit_BringToFront.Call(obj)
}

func Edit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    edit_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    edit_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_Dragging(obj uintptr) bool {
    ret, _, _ := edit_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_HasParent(obj uintptr) bool {
    ret, _, _ := edit_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_Hide(obj uintptr)  {
    edit_Hide.Call(obj)
}

func Edit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := edit_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Edit_Refresh(obj uintptr)  {
    edit_Refresh.Call(obj)
}

func Edit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    edit_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    edit_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_SendToBack(obj uintptr)  {
    edit_SendToBack.Call(obj)
}

func Edit_Show(obj uintptr)  {
    edit_Show.Call(obj)
}

func Edit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := edit_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Edit_GetTextLen(obj uintptr) int32 {
    ret, _, _ := edit_GetTextLen.Call(obj)
    return int32(ret)
}

func Edit_SetTextBuf(obj uintptr, Buffer string)  {
    edit_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Edit_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := edit_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Edit_GetNamePath(obj uintptr) string {
    ret, _, _ := edit_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_Assign(obj uintptr, Source uintptr)  {
    edit_Assign.Call(obj, Source )
}

func Edit_ClassType(obj uintptr) TClass {
    ret, _, _ := edit_ClassType.Call(obj)
    return TClass(ret)
}

func Edit_ClassName(obj uintptr) string {
    ret, _, _ := edit_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_InstanceSize(obj uintptr) int32 {
    ret, _, _ := edit_InstanceSize.Call(obj)
    return int32(ret)
}

func Edit_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := edit_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Edit_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := edit_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Edit_GetHashCode(obj uintptr) int32 {
    ret, _, _ := edit_GetHashCode.Call(obj)
    return int32(ret)
}

func Edit_ToString(obj uintptr) string {
    ret, _, _ := edit_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    edit_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Edit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    edit_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Edit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    edit_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Edit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    edit_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Edit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    edit_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Edit_AnchorClient(obj uintptr, ASpace int32)  {
    edit_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Edit_GetAlign(obj uintptr) TAlign {
    ret, _, _ := edit_GetAlign.Call(obj)
    return TAlign(ret)
}

func Edit_SetAlign(obj uintptr, value TAlign) {
   edit_SetAlign.Call(obj, uintptr(value))
}

func Edit_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := edit_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func Edit_SetAlignment(obj uintptr, value TAlignment) {
   edit_SetAlignment.Call(obj, uintptr(value))
}

func Edit_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := edit_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Edit_SetAnchors(obj uintptr, value TAnchors) {
   edit_SetAnchors.Call(obj, uintptr(value))
}

func Edit_GetAutoSelect(obj uintptr) bool {
    ret, _, _ := edit_GetAutoSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetAutoSelect(obj uintptr, value bool) {
   edit_SetAutoSelect.Call(obj, GoBoolToDBool(value))
}

func Edit_GetAutoSize(obj uintptr) bool {
    ret, _, _ := edit_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetAutoSize(obj uintptr, value bool) {
   edit_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Edit_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := edit_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Edit_SetBiDiMode(obj uintptr, value TBiDiMode) {
   edit_SetBiDiMode.Call(obj, uintptr(value))
}

func Edit_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := edit_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func Edit_SetBorderStyle(obj uintptr, value TBorderStyle) {
   edit_SetBorderStyle.Call(obj, uintptr(value))
}

func Edit_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := edit_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func Edit_SetCharCase(obj uintptr, value TEditCharCase) {
   edit_SetCharCase.Call(obj, uintptr(value))
}

func Edit_GetColor(obj uintptr) TColor {
    ret, _, _ := edit_GetColor.Call(obj)
    return TColor(ret)
}

func Edit_SetColor(obj uintptr, value TColor) {
   edit_SetColor.Call(obj, uintptr(value))
}

func Edit_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := edit_GetConstraints.Call(obj)
    return ret
}

func Edit_SetConstraints(obj uintptr, value uintptr) {
   edit_SetConstraints.Call(obj, value)
}

func Edit_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := edit_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetDoubleBuffered(obj uintptr, value bool) {
   edit_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Edit_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := edit_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Edit_SetDragCursor(obj uintptr, value TCursor) {
   edit_SetDragCursor.Call(obj, uintptr(value))
}

func Edit_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := edit_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Edit_SetDragKind(obj uintptr, value TDragKind) {
   edit_SetDragKind.Call(obj, uintptr(value))
}

func Edit_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := edit_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Edit_SetDragMode(obj uintptr, value TDragMode) {
   edit_SetDragMode.Call(obj, uintptr(value))
}

func Edit_GetEnabled(obj uintptr) bool {
    ret, _, _ := edit_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetEnabled(obj uintptr, value bool) {
   edit_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Edit_GetFont(obj uintptr) uintptr {
    ret, _, _ := edit_GetFont.Call(obj)
    return ret
}

func Edit_SetFont(obj uintptr, value uintptr) {
   edit_SetFont.Call(obj, value)
}

func Edit_GetHideSelection(obj uintptr) bool {
    ret, _, _ := edit_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetHideSelection(obj uintptr, value bool) {
   edit_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func Edit_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := edit_GetMaxLength.Call(obj)
    return int32(ret)
}

func Edit_SetMaxLength(obj uintptr, value int32) {
   edit_SetMaxLength.Call(obj, uintptr(value))
}

func Edit_GetNumbersOnly(obj uintptr) bool {
    ret, _, _ := edit_GetNumbersOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetNumbersOnly(obj uintptr, value bool) {
   edit_SetNumbersOnly.Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentColor(obj uintptr) bool {
    ret, _, _ := edit_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetParentColor(obj uintptr, value bool) {
   edit_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := edit_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetParentDoubleBuffered(obj uintptr, value bool) {
   edit_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentFont(obj uintptr) bool {
    ret, _, _ := edit_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetParentFont(obj uintptr, value bool) {
   edit_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Edit_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := edit_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetParentShowHint(obj uintptr, value bool) {
   edit_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Edit_GetPasswordChar(obj uintptr) uint16 {
    ret, _, _ := edit_GetPasswordChar.Call(obj)
    return uint16(ret)
}

func Edit_SetPasswordChar(obj uintptr, value uint16) {
   edit_SetPasswordChar.Call(obj, uintptr(value))
}

func Edit_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := edit_GetPopupMenu.Call(obj)
    return ret
}

func Edit_SetPopupMenu(obj uintptr, value uintptr) {
   edit_SetPopupMenu.Call(obj, value)
}

func Edit_GetReadOnly(obj uintptr) bool {
    ret, _, _ := edit_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetReadOnly(obj uintptr, value bool) {
   edit_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func Edit_GetShowHint(obj uintptr) bool {
    ret, _, _ := edit_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetShowHint(obj uintptr, value bool) {
   edit_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Edit_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := edit_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Edit_SetTabOrder(obj uintptr, value TTabOrder) {
   edit_SetTabOrder.Call(obj, uintptr(value))
}

func Edit_GetTabStop(obj uintptr) bool {
    ret, _, _ := edit_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetTabStop(obj uintptr, value bool) {
   edit_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Edit_GetText(obj uintptr) string {
    ret, _, _ := edit_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_SetText(obj uintptr, value string) {
   edit_SetText.Call(obj, GoStrToDStr(value))
}

func Edit_GetTextHint(obj uintptr) string {
    ret, _, _ := edit_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_SetTextHint(obj uintptr, value string) {
   edit_SetTextHint.Call(obj, GoStrToDStr(value))
}

func Edit_GetVisible(obj uintptr) bool {
    ret, _, _ := edit_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetVisible(obj uintptr, value bool) {
   edit_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Edit_SetOnChange(obj uintptr, fn interface{}) {
    edit_SetOnChange.Call(obj, addEventToMap(fn))
}

func Edit_SetOnClick(obj uintptr, fn interface{}) {
    edit_SetOnClick.Call(obj, addEventToMap(fn))
}

func Edit_SetOnContextPopup(obj uintptr, fn interface{}) {
    edit_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Edit_SetOnDblClick(obj uintptr, fn interface{}) {
    edit_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Edit_SetOnDragDrop(obj uintptr, fn interface{}) {
    edit_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Edit_SetOnDragOver(obj uintptr, fn interface{}) {
    edit_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Edit_SetOnEndDrag(obj uintptr, fn interface{}) {
    edit_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Edit_SetOnEnter(obj uintptr, fn interface{}) {
    edit_SetOnEnter.Call(obj, addEventToMap(fn))
}

func Edit_SetOnExit(obj uintptr, fn interface{}) {
    edit_SetOnExit.Call(obj, addEventToMap(fn))
}

func Edit_SetOnKeyDown(obj uintptr, fn interface{}) {
    edit_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func Edit_SetOnKeyPress(obj uintptr, fn interface{}) {
    edit_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func Edit_SetOnKeyUp(obj uintptr, fn interface{}) {
    edit_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func Edit_SetOnMouseDown(obj uintptr, fn interface{}) {
    edit_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Edit_SetOnMouseEnter(obj uintptr, fn interface{}) {
    edit_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Edit_SetOnMouseLeave(obj uintptr, fn interface{}) {
    edit_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Edit_SetOnMouseMove(obj uintptr, fn interface{}) {
    edit_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Edit_SetOnMouseUp(obj uintptr, fn interface{}) {
    edit_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Edit_GetCanUndo(obj uintptr) bool {
    ret, _, _ := edit_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_GetModified(obj uintptr) bool {
    ret, _, _ := edit_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetModified(obj uintptr, value bool) {
   edit_SetModified.Call(obj, GoBoolToDBool(value))
}

func Edit_GetSelLength(obj uintptr) int32 {
    ret, _, _ := edit_GetSelLength.Call(obj)
    return int32(ret)
}

func Edit_SetSelLength(obj uintptr, value int32) {
   edit_SetSelLength.Call(obj, uintptr(value))
}

func Edit_GetSelStart(obj uintptr) int32 {
    ret, _, _ := edit_GetSelStart.Call(obj)
    return int32(ret)
}

func Edit_SetSelStart(obj uintptr, value int32) {
   edit_SetSelStart.Call(obj, uintptr(value))
}

func Edit_GetSelText(obj uintptr) string {
    ret, _, _ := edit_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_SetSelText(obj uintptr, value string) {
   edit_SetSelText.Call(obj, GoStrToDStr(value))
}

func Edit_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := edit_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Edit_GetDockSite(obj uintptr) bool {
    ret, _, _ := edit_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetDockSite(obj uintptr, value bool) {
   edit_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Edit_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := edit_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := edit_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Edit_GetBrush(obj uintptr) uintptr {
    ret, _, _ := edit_GetBrush.Call(obj)
    return ret
}

func Edit_GetControlCount(obj uintptr) int32 {
    ret, _, _ := edit_GetControlCount.Call(obj)
    return int32(ret)
}

func Edit_GetHandle(obj uintptr) HWND {
    ret, _, _ := edit_GetHandle.Call(obj)
    return HWND(ret)
}

func Edit_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := edit_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Edit_SetParentWindow(obj uintptr, value HWND) {
   edit_SetParentWindow.Call(obj, uintptr(value))
}

func Edit_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := edit_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_SetUseDockManager(obj uintptr, value bool) {
   edit_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Edit_GetAction(obj uintptr) uintptr {
    ret, _, _ := edit_GetAction.Call(obj)
    return ret
}

func Edit_SetAction(obj uintptr, value uintptr) {
   edit_SetAction.Call(obj, value)
}

func Edit_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    edit_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_SetBoundsRect(obj uintptr, value TRect) {
   edit_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Edit_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := edit_GetClientHeight.Call(obj)
    return int32(ret)
}

func Edit_SetClientHeight(obj uintptr, value int32) {
   edit_SetClientHeight.Call(obj, uintptr(value))
}

func Edit_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    edit_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_GetClientRect(obj uintptr) TRect {
    var ret TRect
    edit_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Edit_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := edit_GetClientWidth.Call(obj)
    return int32(ret)
}

func Edit_SetClientWidth(obj uintptr, value int32) {
   edit_SetClientWidth.Call(obj, uintptr(value))
}

func Edit_GetControlState(obj uintptr) TControlState {
    ret, _, _ := edit_GetControlState.Call(obj)
    return TControlState(ret)
}

func Edit_SetControlState(obj uintptr, value TControlState) {
   edit_SetControlState.Call(obj, uintptr(value))
}

func Edit_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := edit_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Edit_SetControlStyle(obj uintptr, value TControlStyle) {
   edit_SetControlStyle.Call(obj, uintptr(value))
}

func Edit_GetFloating(obj uintptr) bool {
    ret, _, _ := edit_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Edit_GetParent(obj uintptr) uintptr {
    ret, _, _ := edit_GetParent.Call(obj)
    return ret
}

func Edit_SetParent(obj uintptr, value uintptr) {
   edit_SetParent.Call(obj, value)
}

func Edit_GetLeft(obj uintptr) int32 {
    ret, _, _ := edit_GetLeft.Call(obj)
    return int32(ret)
}

func Edit_SetLeft(obj uintptr, value int32) {
   edit_SetLeft.Call(obj, uintptr(value))
}

func Edit_GetTop(obj uintptr) int32 {
    ret, _, _ := edit_GetTop.Call(obj)
    return int32(ret)
}

func Edit_SetTop(obj uintptr, value int32) {
   edit_SetTop.Call(obj, uintptr(value))
}

func Edit_GetWidth(obj uintptr) int32 {
    ret, _, _ := edit_GetWidth.Call(obj)
    return int32(ret)
}

func Edit_SetWidth(obj uintptr, value int32) {
   edit_SetWidth.Call(obj, uintptr(value))
}

func Edit_GetHeight(obj uintptr) int32 {
    ret, _, _ := edit_GetHeight.Call(obj)
    return int32(ret)
}

func Edit_SetHeight(obj uintptr, value int32) {
   edit_SetHeight.Call(obj, uintptr(value))
}

func Edit_GetCursor(obj uintptr) TCursor {
    ret, _, _ := edit_GetCursor.Call(obj)
    return TCursor(ret)
}

func Edit_SetCursor(obj uintptr, value TCursor) {
   edit_SetCursor.Call(obj, uintptr(value))
}

func Edit_GetHint(obj uintptr) string {
    ret, _, _ := edit_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_SetHint(obj uintptr, value string) {
   edit_SetHint.Call(obj, GoStrToDStr(value))
}

func Edit_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := edit_GetComponentCount.Call(obj)
    return int32(ret)
}

func Edit_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := edit_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Edit_SetComponentIndex(obj uintptr, value int32) {
   edit_SetComponentIndex.Call(obj, uintptr(value))
}

func Edit_GetOwner(obj uintptr) uintptr {
    ret, _, _ := edit_GetOwner.Call(obj)
    return ret
}

func Edit_GetName(obj uintptr) string {
    ret, _, _ := edit_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Edit_SetName(obj uintptr, value string) {
   edit_SetName.Call(obj, GoStrToDStr(value))
}

func Edit_GetTag(obj uintptr) int {
    ret, _, _ := edit_GetTag.Call(obj)
    return int(ret)
}

func Edit_SetTag(obj uintptr, value int) {
   edit_SetTag.Call(obj, uintptr(value))
}

func Edit_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := edit_GetAnchorSideLeft.Call(obj)
    return ret
}

func Edit_SetAnchorSideLeft(obj uintptr, value uintptr) {
   edit_SetAnchorSideLeft.Call(obj, value)
}

func Edit_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := edit_GetAnchorSideTop.Call(obj)
    return ret
}

func Edit_SetAnchorSideTop(obj uintptr, value uintptr) {
   edit_SetAnchorSideTop.Call(obj, value)
}

func Edit_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := edit_GetAnchorSideRight.Call(obj)
    return ret
}

func Edit_SetAnchorSideRight(obj uintptr, value uintptr) {
   edit_SetAnchorSideRight.Call(obj, value)
}

func Edit_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := edit_GetAnchorSideBottom.Call(obj)
    return ret
}

func Edit_SetAnchorSideBottom(obj uintptr, value uintptr) {
   edit_SetAnchorSideBottom.Call(obj, value)
}

func Edit_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := edit_GetChildSizing.Call(obj)
    return ret
}

func Edit_SetChildSizing(obj uintptr, value uintptr) {
   edit_SetChildSizing.Call(obj, value)
}

func Edit_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := edit_GetBorderSpacing.Call(obj)
    return ret
}

func Edit_SetBorderSpacing(obj uintptr, value uintptr) {
   edit_SetBorderSpacing.Call(obj, value)
}

func Edit_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := edit_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Edit_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := edit_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Edit_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := edit_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Edit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := edit_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Edit_StaticClassType() TClass {
    r, _, _:= edit_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMainMenu ---------------------------

func MainMenu_Create(obj uintptr) uintptr {
    ret, _, _ := mainMenu_Create.Call(obj)
    return ret
}

func MainMenu_Free(obj uintptr) {
    mainMenu_Free.Call(obj)
}

func MainMenu_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := mainMenu_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func MainMenu_GetNamePath(obj uintptr) string {
    ret, _, _ := mainMenu_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func MainMenu_HasParent(obj uintptr) bool {
    ret, _, _ := mainMenu_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func MainMenu_Assign(obj uintptr, Source uintptr)  {
    mainMenu_Assign.Call(obj, Source )
}

func MainMenu_ClassType(obj uintptr) TClass {
    ret, _, _ := mainMenu_ClassType.Call(obj)
    return TClass(ret)
}

func MainMenu_ClassName(obj uintptr) string {
    ret, _, _ := mainMenu_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MainMenu_InstanceSize(obj uintptr) int32 {
    ret, _, _ := mainMenu_InstanceSize.Call(obj)
    return int32(ret)
}

func MainMenu_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := mainMenu_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MainMenu_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := mainMenu_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MainMenu_GetHashCode(obj uintptr) int32 {
    ret, _, _ := mainMenu_GetHashCode.Call(obj)
    return int32(ret)
}

func MainMenu_ToString(obj uintptr) string {
    ret, _, _ := mainMenu_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MainMenu_GetImagesWidth(obj uintptr) int32 {
    ret, _, _ := mainMenu_GetImagesWidth.Call(obj)
    return int32(ret)
}

func MainMenu_SetImagesWidth(obj uintptr, value int32) {
   mainMenu_SetImagesWidth.Call(obj, uintptr(value))
}

func MainMenu_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := mainMenu_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func MainMenu_SetBiDiMode(obj uintptr, value TBiDiMode) {
   mainMenu_SetBiDiMode.Call(obj, uintptr(value))
}

func MainMenu_GetImages(obj uintptr) uintptr {
    ret, _, _ := mainMenu_GetImages.Call(obj)
    return ret
}

func MainMenu_SetImages(obj uintptr, value uintptr) {
   mainMenu_SetImages.Call(obj, value)
}

func MainMenu_GetOwnerDraw(obj uintptr) bool {
    ret, _, _ := mainMenu_GetOwnerDraw.Call(obj)
    return DBoolToGoBool(ret)
}

func MainMenu_SetOwnerDraw(obj uintptr, value bool) {
   mainMenu_SetOwnerDraw.Call(obj, GoBoolToDBool(value))
}

func MainMenu_SetOnChange(obj uintptr, fn interface{}) {
    mainMenu_SetOnChange.Call(obj, addEventToMap(fn))
}

func MainMenu_GetHandle(obj uintptr) HMENU {
    ret, _, _ := mainMenu_GetHandle.Call(obj)
    return HMENU(ret)
}

func MainMenu_GetItems(obj uintptr) uintptr {
    ret, _, _ := mainMenu_GetItems.Call(obj)
    return ret
}

func MainMenu_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := mainMenu_GetComponentCount.Call(obj)
    return int32(ret)
}

func MainMenu_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := mainMenu_GetComponentIndex.Call(obj)
    return int32(ret)
}

func MainMenu_SetComponentIndex(obj uintptr, value int32) {
   mainMenu_SetComponentIndex.Call(obj, uintptr(value))
}

func MainMenu_GetOwner(obj uintptr) uintptr {
    ret, _, _ := mainMenu_GetOwner.Call(obj)
    return ret
}

func MainMenu_GetName(obj uintptr) string {
    ret, _, _ := mainMenu_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func MainMenu_SetName(obj uintptr, value string) {
   mainMenu_SetName.Call(obj, GoStrToDStr(value))
}

func MainMenu_GetTag(obj uintptr) int {
    ret, _, _ := mainMenu_GetTag.Call(obj)
    return int(ret)
}

func MainMenu_SetTag(obj uintptr, value int) {
   mainMenu_SetTag.Call(obj, uintptr(value))
}

func MainMenu_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := mainMenu_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func MainMenu_StaticClassType() TClass {
    r, _, _:= mainMenu_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPopupMenu ---------------------------

func PopupMenu_Create(obj uintptr) uintptr {
    ret, _, _ := popupMenu_Create.Call(obj)
    return ret
}

func PopupMenu_Free(obj uintptr) {
    popupMenu_Free.Call(obj)
}

func PopupMenu_CloseMenu(obj uintptr)  {
    popupMenu_CloseMenu.Call(obj)
}

func PopupMenu_Popup(obj uintptr, X int32, Y int32)  {
    popupMenu_Popup.Call(obj, uintptr(X) , uintptr(Y) )
}

func PopupMenu_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := popupMenu_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PopupMenu_GetNamePath(obj uintptr) string {
    ret, _, _ := popupMenu_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PopupMenu_HasParent(obj uintptr) bool {
    ret, _, _ := popupMenu_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PopupMenu_Assign(obj uintptr, Source uintptr)  {
    popupMenu_Assign.Call(obj, Source )
}

func PopupMenu_ClassType(obj uintptr) TClass {
    ret, _, _ := popupMenu_ClassType.Call(obj)
    return TClass(ret)
}

func PopupMenu_ClassName(obj uintptr) string {
    ret, _, _ := popupMenu_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PopupMenu_InstanceSize(obj uintptr) int32 {
    ret, _, _ := popupMenu_InstanceSize.Call(obj)
    return int32(ret)
}

func PopupMenu_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := popupMenu_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PopupMenu_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := popupMenu_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PopupMenu_GetHashCode(obj uintptr) int32 {
    ret, _, _ := popupMenu_GetHashCode.Call(obj)
    return int32(ret)
}

func PopupMenu_ToString(obj uintptr) string {
    ret, _, _ := popupMenu_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PopupMenu_GetImagesWidth(obj uintptr) int32 {
    ret, _, _ := popupMenu_GetImagesWidth.Call(obj)
    return int32(ret)
}

func PopupMenu_SetImagesWidth(obj uintptr, value int32) {
   popupMenu_SetImagesWidth.Call(obj, uintptr(value))
}

func PopupMenu_GetPopupComponent(obj uintptr) uintptr {
    ret, _, _ := popupMenu_GetPopupComponent.Call(obj)
    return ret
}

func PopupMenu_SetPopupComponent(obj uintptr, value uintptr) {
   popupMenu_SetPopupComponent.Call(obj, value)
}

func PopupMenu_GetPopupPoint(obj uintptr) TPoint {
    var ret TPoint
    popupMenu_GetPopupPoint.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PopupMenu_GetAlignment(obj uintptr) TPopupAlignment {
    ret, _, _ := popupMenu_GetAlignment.Call(obj)
    return TPopupAlignment(ret)
}

func PopupMenu_SetAlignment(obj uintptr, value TPopupAlignment) {
   popupMenu_SetAlignment.Call(obj, uintptr(value))
}

func PopupMenu_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := popupMenu_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func PopupMenu_SetBiDiMode(obj uintptr, value TBiDiMode) {
   popupMenu_SetBiDiMode.Call(obj, uintptr(value))
}

func PopupMenu_GetImages(obj uintptr) uintptr {
    ret, _, _ := popupMenu_GetImages.Call(obj)
    return ret
}

func PopupMenu_SetImages(obj uintptr, value uintptr) {
   popupMenu_SetImages.Call(obj, value)
}

func PopupMenu_GetOwnerDraw(obj uintptr) bool {
    ret, _, _ := popupMenu_GetOwnerDraw.Call(obj)
    return DBoolToGoBool(ret)
}

func PopupMenu_SetOwnerDraw(obj uintptr, value bool) {
   popupMenu_SetOwnerDraw.Call(obj, GoBoolToDBool(value))
}

func PopupMenu_SetOnPopup(obj uintptr, fn interface{}) {
    popupMenu_SetOnPopup.Call(obj, addEventToMap(fn))
}

func PopupMenu_GetHandle(obj uintptr) HMENU {
    ret, _, _ := popupMenu_GetHandle.Call(obj)
    return HMENU(ret)
}

func PopupMenu_GetItems(obj uintptr) uintptr {
    ret, _, _ := popupMenu_GetItems.Call(obj)
    return ret
}

func PopupMenu_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := popupMenu_GetComponentCount.Call(obj)
    return int32(ret)
}

func PopupMenu_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := popupMenu_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PopupMenu_SetComponentIndex(obj uintptr, value int32) {
   popupMenu_SetComponentIndex.Call(obj, uintptr(value))
}

func PopupMenu_GetOwner(obj uintptr) uintptr {
    ret, _, _ := popupMenu_GetOwner.Call(obj)
    return ret
}

func PopupMenu_GetName(obj uintptr) string {
    ret, _, _ := popupMenu_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PopupMenu_SetName(obj uintptr, value string) {
   popupMenu_SetName.Call(obj, GoStrToDStr(value))
}

func PopupMenu_GetTag(obj uintptr) int {
    ret, _, _ := popupMenu_GetTag.Call(obj)
    return int(ret)
}

func PopupMenu_SetTag(obj uintptr, value int) {
   popupMenu_SetTag.Call(obj, uintptr(value))
}

func PopupMenu_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := popupMenu_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PopupMenu_StaticClassType() TClass {
    r, _, _:= popupMenu_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMemo ---------------------------

func Memo_Create(obj uintptr) uintptr {
    ret, _, _ := memo_Create.Call(obj)
    return ret
}

func Memo_Free(obj uintptr) {
    memo_Free.Call(obj)
}

func Memo_Clear(obj uintptr)  {
    memo_Clear.Call(obj)
}

func Memo_ClearSelection(obj uintptr)  {
    memo_ClearSelection.Call(obj)
}

func Memo_CopyToClipboard(obj uintptr)  {
    memo_CopyToClipboard.Call(obj)
}

func Memo_CutToClipboard(obj uintptr)  {
    memo_CutToClipboard.Call(obj)
}

func Memo_PasteFromClipboard(obj uintptr)  {
    memo_PasteFromClipboard.Call(obj)
}

func Memo_Undo(obj uintptr)  {
    memo_Undo.Call(obj)
}

func Memo_SelectAll(obj uintptr)  {
    memo_SelectAll.Call(obj)
}

func Memo_CanFocus(obj uintptr) bool {
    ret, _, _ := memo_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := memo_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Memo_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := memo_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Memo_DisableAlign(obj uintptr)  {
    memo_DisableAlign.Call(obj)
}

func Memo_EnableAlign(obj uintptr)  {
    memo_EnableAlign.Call(obj)
}

func Memo_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := memo_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Memo_FlipChildren(obj uintptr, AllLevels bool)  {
    memo_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Memo_Focused(obj uintptr) bool {
    ret, _, _ := memo_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_HandleAllocated(obj uintptr) bool {
    ret, _, _ := memo_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_InsertControl(obj uintptr, AControl uintptr)  {
    memo_InsertControl.Call(obj, AControl )
}

func Memo_Invalidate(obj uintptr)  {
    memo_Invalidate.Call(obj)
}

func Memo_RemoveControl(obj uintptr, AControl uintptr)  {
    memo_RemoveControl.Call(obj, AControl )
}

func Memo_Realign(obj uintptr)  {
    memo_Realign.Call(obj)
}

func Memo_Repaint(obj uintptr)  {
    memo_Repaint.Call(obj)
}

func Memo_ScaleBy(obj uintptr, M int32, D int32)  {
    memo_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Memo_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    memo_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Memo_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    memo_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Memo_SetFocus(obj uintptr)  {
    memo_SetFocus.Call(obj)
}

func Memo_Update(obj uintptr)  {
    memo_Update.Call(obj)
}

func Memo_BringToFront(obj uintptr)  {
    memo_BringToFront.Call(obj)
}

func Memo_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    memo_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    memo_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_Dragging(obj uintptr) bool {
    ret, _, _ := memo_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_HasParent(obj uintptr) bool {
    ret, _, _ := memo_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_Hide(obj uintptr)  {
    memo_Hide.Call(obj)
}

func Memo_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := memo_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Memo_Refresh(obj uintptr)  {
    memo_Refresh.Call(obj)
}

func Memo_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    memo_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    memo_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_SendToBack(obj uintptr)  {
    memo_SendToBack.Call(obj)
}

func Memo_Show(obj uintptr)  {
    memo_Show.Call(obj)
}

func Memo_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := memo_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Memo_GetTextLen(obj uintptr) int32 {
    ret, _, _ := memo_GetTextLen.Call(obj)
    return int32(ret)
}

func Memo_SetTextBuf(obj uintptr, Buffer string)  {
    memo_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Memo_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := memo_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Memo_GetNamePath(obj uintptr) string {
    ret, _, _ := memo_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_Assign(obj uintptr, Source uintptr)  {
    memo_Assign.Call(obj, Source )
}

func Memo_ClassType(obj uintptr) TClass {
    ret, _, _ := memo_ClassType.Call(obj)
    return TClass(ret)
}

func Memo_ClassName(obj uintptr) string {
    ret, _, _ := memo_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_InstanceSize(obj uintptr) int32 {
    ret, _, _ := memo_InstanceSize.Call(obj)
    return int32(ret)
}

func Memo_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := memo_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Memo_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := memo_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Memo_GetHashCode(obj uintptr) int32 {
    ret, _, _ := memo_GetHashCode.Call(obj)
    return int32(ret)
}

func Memo_ToString(obj uintptr) string {
    ret, _, _ := memo_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    memo_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Memo_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    memo_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Memo_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    memo_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Memo_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    memo_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Memo_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    memo_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Memo_AnchorClient(obj uintptr, ASpace int32)  {
    memo_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Memo_GetAlign(obj uintptr) TAlign {
    ret, _, _ := memo_GetAlign.Call(obj)
    return TAlign(ret)
}

func Memo_SetAlign(obj uintptr, value TAlign) {
   memo_SetAlign.Call(obj, uintptr(value))
}

func Memo_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := memo_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func Memo_SetAlignment(obj uintptr, value TAlignment) {
   memo_SetAlignment.Call(obj, uintptr(value))
}

func Memo_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := memo_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Memo_SetAnchors(obj uintptr, value TAnchors) {
   memo_SetAnchors.Call(obj, uintptr(value))
}

func Memo_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := memo_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Memo_SetBiDiMode(obj uintptr, value TBiDiMode) {
   memo_SetBiDiMode.Call(obj, uintptr(value))
}

func Memo_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := memo_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func Memo_SetBorderStyle(obj uintptr, value TBorderStyle) {
   memo_SetBorderStyle.Call(obj, uintptr(value))
}

func Memo_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := memo_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func Memo_SetCharCase(obj uintptr, value TEditCharCase) {
   memo_SetCharCase.Call(obj, uintptr(value))
}

func Memo_GetColor(obj uintptr) TColor {
    ret, _, _ := memo_GetColor.Call(obj)
    return TColor(ret)
}

func Memo_SetColor(obj uintptr, value TColor) {
   memo_SetColor.Call(obj, uintptr(value))
}

func Memo_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := memo_GetConstraints.Call(obj)
    return ret
}

func Memo_SetConstraints(obj uintptr, value uintptr) {
   memo_SetConstraints.Call(obj, value)
}

func Memo_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := memo_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetDoubleBuffered(obj uintptr, value bool) {
   memo_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Memo_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := memo_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Memo_SetDragCursor(obj uintptr, value TCursor) {
   memo_SetDragCursor.Call(obj, uintptr(value))
}

func Memo_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := memo_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Memo_SetDragKind(obj uintptr, value TDragKind) {
   memo_SetDragKind.Call(obj, uintptr(value))
}

func Memo_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := memo_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Memo_SetDragMode(obj uintptr, value TDragMode) {
   memo_SetDragMode.Call(obj, uintptr(value))
}

func Memo_GetEnabled(obj uintptr) bool {
    ret, _, _ := memo_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetEnabled(obj uintptr, value bool) {
   memo_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Memo_GetFont(obj uintptr) uintptr {
    ret, _, _ := memo_GetFont.Call(obj)
    return ret
}

func Memo_SetFont(obj uintptr, value uintptr) {
   memo_SetFont.Call(obj, value)
}

func Memo_GetHideSelection(obj uintptr) bool {
    ret, _, _ := memo_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetHideSelection(obj uintptr, value bool) {
   memo_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func Memo_GetLines(obj uintptr) uintptr {
    ret, _, _ := memo_GetLines.Call(obj)
    return ret
}

func Memo_SetLines(obj uintptr, value uintptr) {
   memo_SetLines.Call(obj, value)
}

func Memo_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := memo_GetMaxLength.Call(obj)
    return int32(ret)
}

func Memo_SetMaxLength(obj uintptr, value int32) {
   memo_SetMaxLength.Call(obj, uintptr(value))
}

func Memo_GetParentColor(obj uintptr) bool {
    ret, _, _ := memo_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetParentColor(obj uintptr, value bool) {
   memo_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := memo_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetParentDoubleBuffered(obj uintptr, value bool) {
   memo_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentFont(obj uintptr) bool {
    ret, _, _ := memo_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetParentFont(obj uintptr, value bool) {
   memo_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Memo_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := memo_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetParentShowHint(obj uintptr, value bool) {
   memo_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Memo_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := memo_GetPopupMenu.Call(obj)
    return ret
}

func Memo_SetPopupMenu(obj uintptr, value uintptr) {
   memo_SetPopupMenu.Call(obj, value)
}

func Memo_GetReadOnly(obj uintptr) bool {
    ret, _, _ := memo_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetReadOnly(obj uintptr, value bool) {
   memo_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func Memo_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := memo_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func Memo_SetScrollBars(obj uintptr, value TScrollStyle) {
   memo_SetScrollBars.Call(obj, uintptr(value))
}

func Memo_GetShowHint(obj uintptr) bool {
    ret, _, _ := memo_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetShowHint(obj uintptr, value bool) {
   memo_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Memo_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := memo_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Memo_SetTabOrder(obj uintptr, value TTabOrder) {
   memo_SetTabOrder.Call(obj, uintptr(value))
}

func Memo_GetTabStop(obj uintptr) bool {
    ret, _, _ := memo_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetTabStop(obj uintptr, value bool) {
   memo_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Memo_GetVisible(obj uintptr) bool {
    ret, _, _ := memo_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetVisible(obj uintptr, value bool) {
   memo_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Memo_GetWantReturns(obj uintptr) bool {
    ret, _, _ := memo_GetWantReturns.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetWantReturns(obj uintptr, value bool) {
   memo_SetWantReturns.Call(obj, GoBoolToDBool(value))
}

func Memo_GetWantTabs(obj uintptr) bool {
    ret, _, _ := memo_GetWantTabs.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetWantTabs(obj uintptr, value bool) {
   memo_SetWantTabs.Call(obj, GoBoolToDBool(value))
}

func Memo_GetWordWrap(obj uintptr) bool {
    ret, _, _ := memo_GetWordWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetWordWrap(obj uintptr, value bool) {
   memo_SetWordWrap.Call(obj, GoBoolToDBool(value))
}

func Memo_SetOnChange(obj uintptr, fn interface{}) {
    memo_SetOnChange.Call(obj, addEventToMap(fn))
}

func Memo_SetOnClick(obj uintptr, fn interface{}) {
    memo_SetOnClick.Call(obj, addEventToMap(fn))
}

func Memo_SetOnContextPopup(obj uintptr, fn interface{}) {
    memo_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Memo_SetOnDblClick(obj uintptr, fn interface{}) {
    memo_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Memo_SetOnDragDrop(obj uintptr, fn interface{}) {
    memo_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Memo_SetOnDragOver(obj uintptr, fn interface{}) {
    memo_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Memo_SetOnEndDrag(obj uintptr, fn interface{}) {
    memo_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Memo_SetOnEnter(obj uintptr, fn interface{}) {
    memo_SetOnEnter.Call(obj, addEventToMap(fn))
}

func Memo_SetOnExit(obj uintptr, fn interface{}) {
    memo_SetOnExit.Call(obj, addEventToMap(fn))
}

func Memo_SetOnKeyDown(obj uintptr, fn interface{}) {
    memo_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func Memo_SetOnKeyPress(obj uintptr, fn interface{}) {
    memo_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func Memo_SetOnKeyUp(obj uintptr, fn interface{}) {
    memo_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func Memo_SetOnMouseDown(obj uintptr, fn interface{}) {
    memo_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Memo_SetOnMouseEnter(obj uintptr, fn interface{}) {
    memo_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Memo_SetOnMouseLeave(obj uintptr, fn interface{}) {
    memo_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Memo_SetOnMouseMove(obj uintptr, fn interface{}) {
    memo_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Memo_SetOnMouseUp(obj uintptr, fn interface{}) {
    memo_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Memo_GetCaretPos(obj uintptr) TPoint {
    var ret TPoint
    memo_GetCaretPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_SetCaretPos(obj uintptr, value TPoint) {
   memo_SetCaretPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Memo_GetCanUndo(obj uintptr) bool {
    ret, _, _ := memo_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_GetModified(obj uintptr) bool {
    ret, _, _ := memo_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetModified(obj uintptr, value bool) {
   memo_SetModified.Call(obj, GoBoolToDBool(value))
}

func Memo_GetSelLength(obj uintptr) int32 {
    ret, _, _ := memo_GetSelLength.Call(obj)
    return int32(ret)
}

func Memo_SetSelLength(obj uintptr, value int32) {
   memo_SetSelLength.Call(obj, uintptr(value))
}

func Memo_GetSelStart(obj uintptr) int32 {
    ret, _, _ := memo_GetSelStart.Call(obj)
    return int32(ret)
}

func Memo_SetSelStart(obj uintptr, value int32) {
   memo_SetSelStart.Call(obj, uintptr(value))
}

func Memo_GetSelText(obj uintptr) string {
    ret, _, _ := memo_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_SetSelText(obj uintptr, value string) {
   memo_SetSelText.Call(obj, GoStrToDStr(value))
}

func Memo_GetText(obj uintptr) string {
    ret, _, _ := memo_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_SetText(obj uintptr, value string) {
   memo_SetText.Call(obj, GoStrToDStr(value))
}

func Memo_GetTextHint(obj uintptr) string {
    ret, _, _ := memo_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_SetTextHint(obj uintptr, value string) {
   memo_SetTextHint.Call(obj, GoStrToDStr(value))
}

func Memo_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := memo_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Memo_GetDockSite(obj uintptr) bool {
    ret, _, _ := memo_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetDockSite(obj uintptr, value bool) {
   memo_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Memo_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := memo_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := memo_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Memo_GetBrush(obj uintptr) uintptr {
    ret, _, _ := memo_GetBrush.Call(obj)
    return ret
}

func Memo_GetControlCount(obj uintptr) int32 {
    ret, _, _ := memo_GetControlCount.Call(obj)
    return int32(ret)
}

func Memo_GetHandle(obj uintptr) HWND {
    ret, _, _ := memo_GetHandle.Call(obj)
    return HWND(ret)
}

func Memo_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := memo_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Memo_SetParentWindow(obj uintptr, value HWND) {
   memo_SetParentWindow.Call(obj, uintptr(value))
}

func Memo_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := memo_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_SetUseDockManager(obj uintptr, value bool) {
   memo_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Memo_GetAction(obj uintptr) uintptr {
    ret, _, _ := memo_GetAction.Call(obj)
    return ret
}

func Memo_SetAction(obj uintptr, value uintptr) {
   memo_SetAction.Call(obj, value)
}

func Memo_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    memo_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_SetBoundsRect(obj uintptr, value TRect) {
   memo_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Memo_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := memo_GetClientHeight.Call(obj)
    return int32(ret)
}

func Memo_SetClientHeight(obj uintptr, value int32) {
   memo_SetClientHeight.Call(obj, uintptr(value))
}

func Memo_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    memo_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_GetClientRect(obj uintptr) TRect {
    var ret TRect
    memo_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Memo_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := memo_GetClientWidth.Call(obj)
    return int32(ret)
}

func Memo_SetClientWidth(obj uintptr, value int32) {
   memo_SetClientWidth.Call(obj, uintptr(value))
}

func Memo_GetControlState(obj uintptr) TControlState {
    ret, _, _ := memo_GetControlState.Call(obj)
    return TControlState(ret)
}

func Memo_SetControlState(obj uintptr, value TControlState) {
   memo_SetControlState.Call(obj, uintptr(value))
}

func Memo_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := memo_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Memo_SetControlStyle(obj uintptr, value TControlStyle) {
   memo_SetControlStyle.Call(obj, uintptr(value))
}

func Memo_GetFloating(obj uintptr) bool {
    ret, _, _ := memo_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Memo_GetParent(obj uintptr) uintptr {
    ret, _, _ := memo_GetParent.Call(obj)
    return ret
}

func Memo_SetParent(obj uintptr, value uintptr) {
   memo_SetParent.Call(obj, value)
}

func Memo_GetLeft(obj uintptr) int32 {
    ret, _, _ := memo_GetLeft.Call(obj)
    return int32(ret)
}

func Memo_SetLeft(obj uintptr, value int32) {
   memo_SetLeft.Call(obj, uintptr(value))
}

func Memo_GetTop(obj uintptr) int32 {
    ret, _, _ := memo_GetTop.Call(obj)
    return int32(ret)
}

func Memo_SetTop(obj uintptr, value int32) {
   memo_SetTop.Call(obj, uintptr(value))
}

func Memo_GetWidth(obj uintptr) int32 {
    ret, _, _ := memo_GetWidth.Call(obj)
    return int32(ret)
}

func Memo_SetWidth(obj uintptr, value int32) {
   memo_SetWidth.Call(obj, uintptr(value))
}

func Memo_GetHeight(obj uintptr) int32 {
    ret, _, _ := memo_GetHeight.Call(obj)
    return int32(ret)
}

func Memo_SetHeight(obj uintptr, value int32) {
   memo_SetHeight.Call(obj, uintptr(value))
}

func Memo_GetCursor(obj uintptr) TCursor {
    ret, _, _ := memo_GetCursor.Call(obj)
    return TCursor(ret)
}

func Memo_SetCursor(obj uintptr, value TCursor) {
   memo_SetCursor.Call(obj, uintptr(value))
}

func Memo_GetHint(obj uintptr) string {
    ret, _, _ := memo_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_SetHint(obj uintptr, value string) {
   memo_SetHint.Call(obj, GoStrToDStr(value))
}

func Memo_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := memo_GetComponentCount.Call(obj)
    return int32(ret)
}

func Memo_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := memo_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Memo_SetComponentIndex(obj uintptr, value int32) {
   memo_SetComponentIndex.Call(obj, uintptr(value))
}

func Memo_GetOwner(obj uintptr) uintptr {
    ret, _, _ := memo_GetOwner.Call(obj)
    return ret
}

func Memo_GetName(obj uintptr) string {
    ret, _, _ := memo_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Memo_SetName(obj uintptr, value string) {
   memo_SetName.Call(obj, GoStrToDStr(value))
}

func Memo_GetTag(obj uintptr) int {
    ret, _, _ := memo_GetTag.Call(obj)
    return int(ret)
}

func Memo_SetTag(obj uintptr, value int) {
   memo_SetTag.Call(obj, uintptr(value))
}

func Memo_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := memo_GetAnchorSideLeft.Call(obj)
    return ret
}

func Memo_SetAnchorSideLeft(obj uintptr, value uintptr) {
   memo_SetAnchorSideLeft.Call(obj, value)
}

func Memo_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := memo_GetAnchorSideTop.Call(obj)
    return ret
}

func Memo_SetAnchorSideTop(obj uintptr, value uintptr) {
   memo_SetAnchorSideTop.Call(obj, value)
}

func Memo_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := memo_GetAnchorSideRight.Call(obj)
    return ret
}

func Memo_SetAnchorSideRight(obj uintptr, value uintptr) {
   memo_SetAnchorSideRight.Call(obj, value)
}

func Memo_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := memo_GetAnchorSideBottom.Call(obj)
    return ret
}

func Memo_SetAnchorSideBottom(obj uintptr, value uintptr) {
   memo_SetAnchorSideBottom.Call(obj, value)
}

func Memo_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := memo_GetChildSizing.Call(obj)
    return ret
}

func Memo_SetChildSizing(obj uintptr, value uintptr) {
   memo_SetChildSizing.Call(obj, value)
}

func Memo_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := memo_GetBorderSpacing.Call(obj)
    return ret
}

func Memo_SetBorderSpacing(obj uintptr, value uintptr) {
   memo_SetBorderSpacing.Call(obj, value)
}

func Memo_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := memo_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Memo_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := memo_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Memo_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := memo_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Memo_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := memo_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Memo_StaticClassType() TClass {
    r, _, _:= memo_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCheckBox ---------------------------

func CheckBox_Create(obj uintptr) uintptr {
    ret, _, _ := checkBox_Create.Call(obj)
    return ret
}

func CheckBox_Free(obj uintptr) {
    checkBox_Free.Call(obj)
}

func CheckBox_CanFocus(obj uintptr) bool {
    ret, _, _ := checkBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := checkBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func CheckBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := checkBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func CheckBox_DisableAlign(obj uintptr)  {
    checkBox_DisableAlign.Call(obj)
}

func CheckBox_EnableAlign(obj uintptr)  {
    checkBox_EnableAlign.Call(obj)
}

func CheckBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := checkBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func CheckBox_FlipChildren(obj uintptr, AllLevels bool)  {
    checkBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func CheckBox_Focused(obj uintptr) bool {
    ret, _, _ := checkBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := checkBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_InsertControl(obj uintptr, AControl uintptr)  {
    checkBox_InsertControl.Call(obj, AControl )
}

func CheckBox_Invalidate(obj uintptr)  {
    checkBox_Invalidate.Call(obj)
}

func CheckBox_RemoveControl(obj uintptr, AControl uintptr)  {
    checkBox_RemoveControl.Call(obj, AControl )
}

func CheckBox_Realign(obj uintptr)  {
    checkBox_Realign.Call(obj)
}

func CheckBox_Repaint(obj uintptr)  {
    checkBox_Repaint.Call(obj)
}

func CheckBox_ScaleBy(obj uintptr, M int32, D int32)  {
    checkBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func CheckBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    checkBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func CheckBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    checkBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func CheckBox_SetFocus(obj uintptr)  {
    checkBox_SetFocus.Call(obj)
}

func CheckBox_Update(obj uintptr)  {
    checkBox_Update.Call(obj)
}

func CheckBox_BringToFront(obj uintptr)  {
    checkBox_BringToFront.Call(obj)
}

func CheckBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    checkBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    checkBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_Dragging(obj uintptr) bool {
    ret, _, _ := checkBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_HasParent(obj uintptr) bool {
    ret, _, _ := checkBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_Hide(obj uintptr)  {
    checkBox_Hide.Call(obj)
}

func CheckBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := checkBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func CheckBox_Refresh(obj uintptr)  {
    checkBox_Refresh.Call(obj)
}

func CheckBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    checkBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    checkBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_SendToBack(obj uintptr)  {
    checkBox_SendToBack.Call(obj)
}

func CheckBox_Show(obj uintptr)  {
    checkBox_Show.Call(obj)
}

func CheckBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := checkBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func CheckBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := checkBox_GetTextLen.Call(obj)
    return int32(ret)
}

func CheckBox_SetTextBuf(obj uintptr, Buffer string)  {
    checkBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func CheckBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := checkBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func CheckBox_GetNamePath(obj uintptr) string {
    ret, _, _ := checkBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_Assign(obj uintptr, Source uintptr)  {
    checkBox_Assign.Call(obj, Source )
}

func CheckBox_ClassType(obj uintptr) TClass {
    ret, _, _ := checkBox_ClassType.Call(obj)
    return TClass(ret)
}

func CheckBox_ClassName(obj uintptr) string {
    ret, _, _ := checkBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := checkBox_InstanceSize.Call(obj)
    return int32(ret)
}

func CheckBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := checkBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CheckBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := checkBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CheckBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := checkBox_GetHashCode.Call(obj)
    return int32(ret)
}

func CheckBox_ToString(obj uintptr) string {
    ret, _, _ := checkBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    checkBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CheckBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    checkBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CheckBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    checkBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func CheckBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    checkBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func CheckBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    checkBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func CheckBox_AnchorClient(obj uintptr, ASpace int32)  {
    checkBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func CheckBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetAction.Call(obj)
    return ret
}

func CheckBox_SetAction(obj uintptr, value uintptr) {
   checkBox_SetAction.Call(obj, value)
}

func CheckBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := checkBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func CheckBox_SetAlign(obj uintptr, value TAlign) {
   checkBox_SetAlign.Call(obj, uintptr(value))
}

func CheckBox_GetAlignment(obj uintptr) TLeftRight {
    ret, _, _ := checkBox_GetAlignment.Call(obj)
    return TLeftRight(ret)
}

func CheckBox_SetAlignment(obj uintptr, value TLeftRight) {
   checkBox_SetAlignment.Call(obj, uintptr(value))
}

func CheckBox_GetAllowGrayed(obj uintptr) bool {
    ret, _, _ := checkBox_GetAllowGrayed.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetAllowGrayed(obj uintptr, value bool) {
   checkBox_SetAllowGrayed.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := checkBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func CheckBox_SetAnchors(obj uintptr, value TAnchors) {
   checkBox_SetAnchors.Call(obj, uintptr(value))
}

func CheckBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := checkBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func CheckBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   checkBox_SetBiDiMode.Call(obj, uintptr(value))
}

func CheckBox_GetCaption(obj uintptr) string {
    ret, _, _ := checkBox_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_SetCaption(obj uintptr, value string) {
   checkBox_SetCaption.Call(obj, GoStrToDStr(value))
}

func CheckBox_GetChecked(obj uintptr) bool {
    ret, _, _ := checkBox_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetChecked(obj uintptr, value bool) {
   checkBox_SetChecked.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetColor(obj uintptr) TColor {
    ret, _, _ := checkBox_GetColor.Call(obj)
    return TColor(ret)
}

func CheckBox_SetColor(obj uintptr, value TColor) {
   checkBox_SetColor.Call(obj, uintptr(value))
}

func CheckBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetConstraints.Call(obj)
    return ret
}

func CheckBox_SetConstraints(obj uintptr, value uintptr) {
   checkBox_SetConstraints.Call(obj, value)
}

func CheckBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := checkBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetDoubleBuffered(obj uintptr, value bool) {
   checkBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := checkBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func CheckBox_SetDragCursor(obj uintptr, value TCursor) {
   checkBox_SetDragCursor.Call(obj, uintptr(value))
}

func CheckBox_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := checkBox_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func CheckBox_SetDragKind(obj uintptr, value TDragKind) {
   checkBox_SetDragKind.Call(obj, uintptr(value))
}

func CheckBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := checkBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func CheckBox_SetDragMode(obj uintptr, value TDragMode) {
   checkBox_SetDragMode.Call(obj, uintptr(value))
}

func CheckBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := checkBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetEnabled(obj uintptr, value bool) {
   checkBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetFont.Call(obj)
    return ret
}

func CheckBox_SetFont(obj uintptr, value uintptr) {
   checkBox_SetFont.Call(obj, value)
}

func CheckBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := checkBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetParentColor(obj uintptr, value bool) {
   checkBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := checkBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   checkBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := checkBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetParentFont(obj uintptr, value bool) {
   checkBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := checkBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetParentShowHint(obj uintptr, value bool) {
   checkBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetPopupMenu.Call(obj)
    return ret
}

func CheckBox_SetPopupMenu(obj uintptr, value uintptr) {
   checkBox_SetPopupMenu.Call(obj, value)
}

func CheckBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := checkBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetShowHint(obj uintptr, value bool) {
   checkBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetState(obj uintptr) TCheckBoxState {
    ret, _, _ := checkBox_GetState.Call(obj)
    return TCheckBoxState(ret)
}

func CheckBox_SetState(obj uintptr, value TCheckBoxState) {
   checkBox_SetState.Call(obj, uintptr(value))
}

func CheckBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := checkBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func CheckBox_SetTabOrder(obj uintptr, value TTabOrder) {
   checkBox_SetTabOrder.Call(obj, uintptr(value))
}

func CheckBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := checkBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetTabStop(obj uintptr, value bool) {
   checkBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetVisible(obj uintptr) bool {
    ret, _, _ := checkBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetVisible(obj uintptr, value bool) {
   checkBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func CheckBox_SetOnClick(obj uintptr, fn interface{}) {
    checkBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    checkBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    checkBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnDragOver(obj uintptr, fn interface{}) {
    checkBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    checkBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnEnter(obj uintptr, fn interface{}) {
    checkBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnExit(obj uintptr, fn interface{}) {
    checkBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    checkBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    checkBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    checkBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    checkBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    checkBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    checkBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    checkBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func CheckBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    checkBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func CheckBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := checkBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func CheckBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := checkBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetDockSite(obj uintptr, value bool) {
   checkBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := checkBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := checkBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func CheckBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetBrush.Call(obj)
    return ret
}

func CheckBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := checkBox_GetControlCount.Call(obj)
    return int32(ret)
}

func CheckBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := checkBox_GetHandle.Call(obj)
    return HWND(ret)
}

func CheckBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := checkBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func CheckBox_SetParentWindow(obj uintptr, value HWND) {
   checkBox_SetParentWindow.Call(obj, uintptr(value))
}

func CheckBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := checkBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_SetUseDockManager(obj uintptr, value bool) {
   checkBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func CheckBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    checkBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_SetBoundsRect(obj uintptr, value TRect) {
   checkBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CheckBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := checkBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func CheckBox_SetClientHeight(obj uintptr, value int32) {
   checkBox_SetClientHeight.Call(obj, uintptr(value))
}

func CheckBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    checkBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    checkBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := checkBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func CheckBox_SetClientWidth(obj uintptr, value int32) {
   checkBox_SetClientWidth.Call(obj, uintptr(value))
}

func CheckBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := checkBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func CheckBox_SetControlState(obj uintptr, value TControlState) {
   checkBox_SetControlState.Call(obj, uintptr(value))
}

func CheckBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := checkBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func CheckBox_SetControlStyle(obj uintptr, value TControlStyle) {
   checkBox_SetControlStyle.Call(obj, uintptr(value))
}

func CheckBox_GetFloating(obj uintptr) bool {
    ret, _, _ := checkBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetParent.Call(obj)
    return ret
}

func CheckBox_SetParent(obj uintptr, value uintptr) {
   checkBox_SetParent.Call(obj, value)
}

func CheckBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := checkBox_GetLeft.Call(obj)
    return int32(ret)
}

func CheckBox_SetLeft(obj uintptr, value int32) {
   checkBox_SetLeft.Call(obj, uintptr(value))
}

func CheckBox_GetTop(obj uintptr) int32 {
    ret, _, _ := checkBox_GetTop.Call(obj)
    return int32(ret)
}

func CheckBox_SetTop(obj uintptr, value int32) {
   checkBox_SetTop.Call(obj, uintptr(value))
}

func CheckBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := checkBox_GetWidth.Call(obj)
    return int32(ret)
}

func CheckBox_SetWidth(obj uintptr, value int32) {
   checkBox_SetWidth.Call(obj, uintptr(value))
}

func CheckBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := checkBox_GetHeight.Call(obj)
    return int32(ret)
}

func CheckBox_SetHeight(obj uintptr, value int32) {
   checkBox_SetHeight.Call(obj, uintptr(value))
}

func CheckBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := checkBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func CheckBox_SetCursor(obj uintptr, value TCursor) {
   checkBox_SetCursor.Call(obj, uintptr(value))
}

func CheckBox_GetHint(obj uintptr) string {
    ret, _, _ := checkBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_SetHint(obj uintptr, value string) {
   checkBox_SetHint.Call(obj, GoStrToDStr(value))
}

func CheckBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := checkBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func CheckBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := checkBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func CheckBox_SetComponentIndex(obj uintptr, value int32) {
   checkBox_SetComponentIndex.Call(obj, uintptr(value))
}

func CheckBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetOwner.Call(obj)
    return ret
}

func CheckBox_GetName(obj uintptr) string {
    ret, _, _ := checkBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func CheckBox_SetName(obj uintptr, value string) {
   checkBox_SetName.Call(obj, GoStrToDStr(value))
}

func CheckBox_GetTag(obj uintptr) int {
    ret, _, _ := checkBox_GetTag.Call(obj)
    return int(ret)
}

func CheckBox_SetTag(obj uintptr, value int) {
   checkBox_SetTag.Call(obj, uintptr(value))
}

func CheckBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func CheckBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   checkBox_SetAnchorSideLeft.Call(obj, value)
}

func CheckBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetAnchorSideTop.Call(obj)
    return ret
}

func CheckBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   checkBox_SetAnchorSideTop.Call(obj, value)
}

func CheckBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetAnchorSideRight.Call(obj)
    return ret
}

func CheckBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   checkBox_SetAnchorSideRight.Call(obj, value)
}

func CheckBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func CheckBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   checkBox_SetAnchorSideBottom.Call(obj, value)
}

func CheckBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetChildSizing.Call(obj)
    return ret
}

func CheckBox_SetChildSizing(obj uintptr, value uintptr) {
   checkBox_SetChildSizing.Call(obj, value)
}

func CheckBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := checkBox_GetBorderSpacing.Call(obj)
    return ret
}

func CheckBox_SetBorderSpacing(obj uintptr, value uintptr) {
   checkBox_SetBorderSpacing.Call(obj, value)
}

func CheckBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := checkBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func CheckBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := checkBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func CheckBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := checkBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func CheckBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := checkBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func CheckBox_StaticClassType() TClass {
    r, _, _:= checkBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TRadioButton ---------------------------

func RadioButton_Create(obj uintptr) uintptr {
    ret, _, _ := radioButton_Create.Call(obj)
    return ret
}

func RadioButton_Free(obj uintptr) {
    radioButton_Free.Call(obj)
}

func RadioButton_CanFocus(obj uintptr) bool {
    ret, _, _ := radioButton_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := radioButton_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func RadioButton_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := radioButton_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func RadioButton_DisableAlign(obj uintptr)  {
    radioButton_DisableAlign.Call(obj)
}

func RadioButton_EnableAlign(obj uintptr)  {
    radioButton_EnableAlign.Call(obj)
}

func RadioButton_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := radioButton_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func RadioButton_FlipChildren(obj uintptr, AllLevels bool)  {
    radioButton_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func RadioButton_Focused(obj uintptr) bool {
    ret, _, _ := radioButton_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_HandleAllocated(obj uintptr) bool {
    ret, _, _ := radioButton_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_InsertControl(obj uintptr, AControl uintptr)  {
    radioButton_InsertControl.Call(obj, AControl )
}

func RadioButton_Invalidate(obj uintptr)  {
    radioButton_Invalidate.Call(obj)
}

func RadioButton_RemoveControl(obj uintptr, AControl uintptr)  {
    radioButton_RemoveControl.Call(obj, AControl )
}

func RadioButton_Realign(obj uintptr)  {
    radioButton_Realign.Call(obj)
}

func RadioButton_Repaint(obj uintptr)  {
    radioButton_Repaint.Call(obj)
}

func RadioButton_ScaleBy(obj uintptr, M int32, D int32)  {
    radioButton_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func RadioButton_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    radioButton_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func RadioButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    radioButton_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func RadioButton_SetFocus(obj uintptr)  {
    radioButton_SetFocus.Call(obj)
}

func RadioButton_Update(obj uintptr)  {
    radioButton_Update.Call(obj)
}

func RadioButton_BringToFront(obj uintptr)  {
    radioButton_BringToFront.Call(obj)
}

func RadioButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    radioButton_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    radioButton_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_Dragging(obj uintptr) bool {
    ret, _, _ := radioButton_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_HasParent(obj uintptr) bool {
    ret, _, _ := radioButton_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_Hide(obj uintptr)  {
    radioButton_Hide.Call(obj)
}

func RadioButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := radioButton_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func RadioButton_Refresh(obj uintptr)  {
    radioButton_Refresh.Call(obj)
}

func RadioButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    radioButton_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    radioButton_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_SendToBack(obj uintptr)  {
    radioButton_SendToBack.Call(obj)
}

func RadioButton_Show(obj uintptr)  {
    radioButton_Show.Call(obj)
}

func RadioButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := radioButton_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func RadioButton_GetTextLen(obj uintptr) int32 {
    ret, _, _ := radioButton_GetTextLen.Call(obj)
    return int32(ret)
}

func RadioButton_SetTextBuf(obj uintptr, Buffer string)  {
    radioButton_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func RadioButton_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := radioButton_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func RadioButton_GetNamePath(obj uintptr) string {
    ret, _, _ := radioButton_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_Assign(obj uintptr, Source uintptr)  {
    radioButton_Assign.Call(obj, Source )
}

func RadioButton_ClassType(obj uintptr) TClass {
    ret, _, _ := radioButton_ClassType.Call(obj)
    return TClass(ret)
}

func RadioButton_ClassName(obj uintptr) string {
    ret, _, _ := radioButton_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_InstanceSize(obj uintptr) int32 {
    ret, _, _ := radioButton_InstanceSize.Call(obj)
    return int32(ret)
}

func RadioButton_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := radioButton_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func RadioButton_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := radioButton_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func RadioButton_GetHashCode(obj uintptr) int32 {
    ret, _, _ := radioButton_GetHashCode.Call(obj)
    return int32(ret)
}

func RadioButton_ToString(obj uintptr) string {
    ret, _, _ := radioButton_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    radioButton_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RadioButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    radioButton_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RadioButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    radioButton_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func RadioButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    radioButton_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func RadioButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    radioButton_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func RadioButton_AnchorClient(obj uintptr, ASpace int32)  {
    radioButton_AnchorClient.Call(obj, uintptr(ASpace) )
}

func RadioButton_GetAction(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetAction.Call(obj)
    return ret
}

func RadioButton_SetAction(obj uintptr, value uintptr) {
   radioButton_SetAction.Call(obj, value)
}

func RadioButton_GetAlign(obj uintptr) TAlign {
    ret, _, _ := radioButton_GetAlign.Call(obj)
    return TAlign(ret)
}

func RadioButton_SetAlign(obj uintptr, value TAlign) {
   radioButton_SetAlign.Call(obj, uintptr(value))
}

func RadioButton_GetAlignment(obj uintptr) TLeftRight {
    ret, _, _ := radioButton_GetAlignment.Call(obj)
    return TLeftRight(ret)
}

func RadioButton_SetAlignment(obj uintptr, value TLeftRight) {
   radioButton_SetAlignment.Call(obj, uintptr(value))
}

func RadioButton_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := radioButton_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func RadioButton_SetAnchors(obj uintptr, value TAnchors) {
   radioButton_SetAnchors.Call(obj, uintptr(value))
}

func RadioButton_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := radioButton_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func RadioButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
   radioButton_SetBiDiMode.Call(obj, uintptr(value))
}

func RadioButton_GetCaption(obj uintptr) string {
    ret, _, _ := radioButton_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_SetCaption(obj uintptr, value string) {
   radioButton_SetCaption.Call(obj, GoStrToDStr(value))
}

func RadioButton_GetChecked(obj uintptr) bool {
    ret, _, _ := radioButton_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetChecked(obj uintptr, value bool) {
   radioButton_SetChecked.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetColor(obj uintptr) TColor {
    ret, _, _ := radioButton_GetColor.Call(obj)
    return TColor(ret)
}

func RadioButton_SetColor(obj uintptr, value TColor) {
   radioButton_SetColor.Call(obj, uintptr(value))
}

func RadioButton_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetConstraints.Call(obj)
    return ret
}

func RadioButton_SetConstraints(obj uintptr, value uintptr) {
   radioButton_SetConstraints.Call(obj, value)
}

func RadioButton_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := radioButton_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetDoubleBuffered(obj uintptr, value bool) {
   radioButton_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := radioButton_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func RadioButton_SetDragCursor(obj uintptr, value TCursor) {
   radioButton_SetDragCursor.Call(obj, uintptr(value))
}

func RadioButton_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := radioButton_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func RadioButton_SetDragKind(obj uintptr, value TDragKind) {
   radioButton_SetDragKind.Call(obj, uintptr(value))
}

func RadioButton_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := radioButton_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func RadioButton_SetDragMode(obj uintptr, value TDragMode) {
   radioButton_SetDragMode.Call(obj, uintptr(value))
}

func RadioButton_GetEnabled(obj uintptr) bool {
    ret, _, _ := radioButton_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetEnabled(obj uintptr, value bool) {
   radioButton_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetFont(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetFont.Call(obj)
    return ret
}

func RadioButton_SetFont(obj uintptr, value uintptr) {
   radioButton_SetFont.Call(obj, value)
}

func RadioButton_GetParentColor(obj uintptr) bool {
    ret, _, _ := radioButton_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetParentColor(obj uintptr, value bool) {
   radioButton_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := radioButton_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetParentDoubleBuffered(obj uintptr, value bool) {
   radioButton_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentFont(obj uintptr) bool {
    ret, _, _ := radioButton_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetParentFont(obj uintptr, value bool) {
   radioButton_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := radioButton_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetParentShowHint(obj uintptr, value bool) {
   radioButton_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetPopupMenu.Call(obj)
    return ret
}

func RadioButton_SetPopupMenu(obj uintptr, value uintptr) {
   radioButton_SetPopupMenu.Call(obj, value)
}

func RadioButton_GetShowHint(obj uintptr) bool {
    ret, _, _ := radioButton_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetShowHint(obj uintptr, value bool) {
   radioButton_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := radioButton_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func RadioButton_SetTabOrder(obj uintptr, value TTabOrder) {
   radioButton_SetTabOrder.Call(obj, uintptr(value))
}

func RadioButton_GetTabStop(obj uintptr) bool {
    ret, _, _ := radioButton_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetTabStop(obj uintptr, value bool) {
   radioButton_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetVisible(obj uintptr) bool {
    ret, _, _ := radioButton_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetVisible(obj uintptr, value bool) {
   radioButton_SetVisible.Call(obj, GoBoolToDBool(value))
}

func RadioButton_SetOnClick(obj uintptr, fn interface{}) {
    radioButton_SetOnClick.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnContextPopup(obj uintptr, fn interface{}) {
    radioButton_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnDragDrop(obj uintptr, fn interface{}) {
    radioButton_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnDragOver(obj uintptr, fn interface{}) {
    radioButton_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnEndDrag(obj uintptr, fn interface{}) {
    radioButton_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnEnter(obj uintptr, fn interface{}) {
    radioButton_SetOnEnter.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnExit(obj uintptr, fn interface{}) {
    radioButton_SetOnExit.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnKeyDown(obj uintptr, fn interface{}) {
    radioButton_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnKeyPress(obj uintptr, fn interface{}) {
    radioButton_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnKeyUp(obj uintptr, fn interface{}) {
    radioButton_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnMouseDown(obj uintptr, fn interface{}) {
    radioButton_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
    radioButton_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
    radioButton_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnMouseMove(obj uintptr, fn interface{}) {
    radioButton_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func RadioButton_SetOnMouseUp(obj uintptr, fn interface{}) {
    radioButton_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func RadioButton_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := radioButton_GetDockClientCount.Call(obj)
    return int32(ret)
}

func RadioButton_GetDockSite(obj uintptr) bool {
    ret, _, _ := radioButton_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetDockSite(obj uintptr, value bool) {
   radioButton_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := radioButton_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := radioButton_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func RadioButton_GetBrush(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetBrush.Call(obj)
    return ret
}

func RadioButton_GetControlCount(obj uintptr) int32 {
    ret, _, _ := radioButton_GetControlCount.Call(obj)
    return int32(ret)
}

func RadioButton_GetHandle(obj uintptr) HWND {
    ret, _, _ := radioButton_GetHandle.Call(obj)
    return HWND(ret)
}

func RadioButton_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := radioButton_GetParentWindow.Call(obj)
    return HWND(ret)
}

func RadioButton_SetParentWindow(obj uintptr, value HWND) {
   radioButton_SetParentWindow.Call(obj, uintptr(value))
}

func RadioButton_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := radioButton_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_SetUseDockManager(obj uintptr, value bool) {
   radioButton_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func RadioButton_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    radioButton_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_SetBoundsRect(obj uintptr, value TRect) {
   radioButton_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RadioButton_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := radioButton_GetClientHeight.Call(obj)
    return int32(ret)
}

func RadioButton_SetClientHeight(obj uintptr, value int32) {
   radioButton_SetClientHeight.Call(obj, uintptr(value))
}

func RadioButton_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    radioButton_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_GetClientRect(obj uintptr) TRect {
    var ret TRect
    radioButton_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioButton_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := radioButton_GetClientWidth.Call(obj)
    return int32(ret)
}

func RadioButton_SetClientWidth(obj uintptr, value int32) {
   radioButton_SetClientWidth.Call(obj, uintptr(value))
}

func RadioButton_GetControlState(obj uintptr) TControlState {
    ret, _, _ := radioButton_GetControlState.Call(obj)
    return TControlState(ret)
}

func RadioButton_SetControlState(obj uintptr, value TControlState) {
   radioButton_SetControlState.Call(obj, uintptr(value))
}

func RadioButton_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := radioButton_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func RadioButton_SetControlStyle(obj uintptr, value TControlStyle) {
   radioButton_SetControlStyle.Call(obj, uintptr(value))
}

func RadioButton_GetFloating(obj uintptr) bool {
    ret, _, _ := radioButton_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioButton_GetParent(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetParent.Call(obj)
    return ret
}

func RadioButton_SetParent(obj uintptr, value uintptr) {
   radioButton_SetParent.Call(obj, value)
}

func RadioButton_GetLeft(obj uintptr) int32 {
    ret, _, _ := radioButton_GetLeft.Call(obj)
    return int32(ret)
}

func RadioButton_SetLeft(obj uintptr, value int32) {
   radioButton_SetLeft.Call(obj, uintptr(value))
}

func RadioButton_GetTop(obj uintptr) int32 {
    ret, _, _ := radioButton_GetTop.Call(obj)
    return int32(ret)
}

func RadioButton_SetTop(obj uintptr, value int32) {
   radioButton_SetTop.Call(obj, uintptr(value))
}

func RadioButton_GetWidth(obj uintptr) int32 {
    ret, _, _ := radioButton_GetWidth.Call(obj)
    return int32(ret)
}

func RadioButton_SetWidth(obj uintptr, value int32) {
   radioButton_SetWidth.Call(obj, uintptr(value))
}

func RadioButton_GetHeight(obj uintptr) int32 {
    ret, _, _ := radioButton_GetHeight.Call(obj)
    return int32(ret)
}

func RadioButton_SetHeight(obj uintptr, value int32) {
   radioButton_SetHeight.Call(obj, uintptr(value))
}

func RadioButton_GetCursor(obj uintptr) TCursor {
    ret, _, _ := radioButton_GetCursor.Call(obj)
    return TCursor(ret)
}

func RadioButton_SetCursor(obj uintptr, value TCursor) {
   radioButton_SetCursor.Call(obj, uintptr(value))
}

func RadioButton_GetHint(obj uintptr) string {
    ret, _, _ := radioButton_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_SetHint(obj uintptr, value string) {
   radioButton_SetHint.Call(obj, GoStrToDStr(value))
}

func RadioButton_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := radioButton_GetComponentCount.Call(obj)
    return int32(ret)
}

func RadioButton_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := radioButton_GetComponentIndex.Call(obj)
    return int32(ret)
}

func RadioButton_SetComponentIndex(obj uintptr, value int32) {
   radioButton_SetComponentIndex.Call(obj, uintptr(value))
}

func RadioButton_GetOwner(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetOwner.Call(obj)
    return ret
}

func RadioButton_GetName(obj uintptr) string {
    ret, _, _ := radioButton_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func RadioButton_SetName(obj uintptr, value string) {
   radioButton_SetName.Call(obj, GoStrToDStr(value))
}

func RadioButton_GetTag(obj uintptr) int {
    ret, _, _ := radioButton_GetTag.Call(obj)
    return int(ret)
}

func RadioButton_SetTag(obj uintptr, value int) {
   radioButton_SetTag.Call(obj, uintptr(value))
}

func RadioButton_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetAnchorSideLeft.Call(obj)
    return ret
}

func RadioButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
   radioButton_SetAnchorSideLeft.Call(obj, value)
}

func RadioButton_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetAnchorSideTop.Call(obj)
    return ret
}

func RadioButton_SetAnchorSideTop(obj uintptr, value uintptr) {
   radioButton_SetAnchorSideTop.Call(obj, value)
}

func RadioButton_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetAnchorSideRight.Call(obj)
    return ret
}

func RadioButton_SetAnchorSideRight(obj uintptr, value uintptr) {
   radioButton_SetAnchorSideRight.Call(obj, value)
}

func RadioButton_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetAnchorSideBottom.Call(obj)
    return ret
}

func RadioButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
   radioButton_SetAnchorSideBottom.Call(obj, value)
}

func RadioButton_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetChildSizing.Call(obj)
    return ret
}

func RadioButton_SetChildSizing(obj uintptr, value uintptr) {
   radioButton_SetChildSizing.Call(obj, value)
}

func RadioButton_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := radioButton_GetBorderSpacing.Call(obj)
    return ret
}

func RadioButton_SetBorderSpacing(obj uintptr, value uintptr) {
   radioButton_SetBorderSpacing.Call(obj, value)
}

func RadioButton_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := radioButton_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func RadioButton_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := radioButton_GetControls.Call(obj, uintptr(Index))
    return ret
}

func RadioButton_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := radioButton_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func RadioButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := radioButton_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func RadioButton_StaticClassType() TClass {
    r, _, _:= radioButton_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TGroupBox ---------------------------

func GroupBox_Create(obj uintptr) uintptr {
    ret, _, _ := groupBox_Create.Call(obj)
    return ret
}

func GroupBox_Free(obj uintptr) {
    groupBox_Free.Call(obj)
}

func GroupBox_CanFocus(obj uintptr) bool {
    ret, _, _ := groupBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := groupBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func GroupBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := groupBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func GroupBox_DisableAlign(obj uintptr)  {
    groupBox_DisableAlign.Call(obj)
}

func GroupBox_EnableAlign(obj uintptr)  {
    groupBox_EnableAlign.Call(obj)
}

func GroupBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := groupBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func GroupBox_FlipChildren(obj uintptr, AllLevels bool)  {
    groupBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func GroupBox_Focused(obj uintptr) bool {
    ret, _, _ := groupBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := groupBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_InsertControl(obj uintptr, AControl uintptr)  {
    groupBox_InsertControl.Call(obj, AControl )
}

func GroupBox_Invalidate(obj uintptr)  {
    groupBox_Invalidate.Call(obj)
}

func GroupBox_RemoveControl(obj uintptr, AControl uintptr)  {
    groupBox_RemoveControl.Call(obj, AControl )
}

func GroupBox_Realign(obj uintptr)  {
    groupBox_Realign.Call(obj)
}

func GroupBox_Repaint(obj uintptr)  {
    groupBox_Repaint.Call(obj)
}

func GroupBox_ScaleBy(obj uintptr, M int32, D int32)  {
    groupBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func GroupBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    groupBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func GroupBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    groupBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func GroupBox_SetFocus(obj uintptr)  {
    groupBox_SetFocus.Call(obj)
}

func GroupBox_Update(obj uintptr)  {
    groupBox_Update.Call(obj)
}

func GroupBox_BringToFront(obj uintptr)  {
    groupBox_BringToFront.Call(obj)
}

func GroupBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    groupBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    groupBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_Dragging(obj uintptr) bool {
    ret, _, _ := groupBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_HasParent(obj uintptr) bool {
    ret, _, _ := groupBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_Hide(obj uintptr)  {
    groupBox_Hide.Call(obj)
}

func GroupBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := groupBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func GroupBox_Refresh(obj uintptr)  {
    groupBox_Refresh.Call(obj)
}

func GroupBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    groupBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    groupBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_SendToBack(obj uintptr)  {
    groupBox_SendToBack.Call(obj)
}

func GroupBox_Show(obj uintptr)  {
    groupBox_Show.Call(obj)
}

func GroupBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := groupBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func GroupBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := groupBox_GetTextLen.Call(obj)
    return int32(ret)
}

func GroupBox_SetTextBuf(obj uintptr, Buffer string)  {
    groupBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func GroupBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := groupBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func GroupBox_GetNamePath(obj uintptr) string {
    ret, _, _ := groupBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_Assign(obj uintptr, Source uintptr)  {
    groupBox_Assign.Call(obj, Source )
}

func GroupBox_ClassType(obj uintptr) TClass {
    ret, _, _ := groupBox_ClassType.Call(obj)
    return TClass(ret)
}

func GroupBox_ClassName(obj uintptr) string {
    ret, _, _ := groupBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := groupBox_InstanceSize.Call(obj)
    return int32(ret)
}

func GroupBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := groupBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func GroupBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := groupBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func GroupBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := groupBox_GetHashCode.Call(obj)
    return int32(ret)
}

func GroupBox_ToString(obj uintptr) string {
    ret, _, _ := groupBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    groupBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func GroupBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    groupBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func GroupBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    groupBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func GroupBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    groupBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func GroupBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    groupBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func GroupBox_AnchorClient(obj uintptr, ASpace int32)  {
    groupBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func GroupBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := groupBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func GroupBox_SetAlign(obj uintptr, value TAlign) {
   groupBox_SetAlign.Call(obj, uintptr(value))
}

func GroupBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := groupBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func GroupBox_SetAnchors(obj uintptr, value TAnchors) {
   groupBox_SetAnchors.Call(obj, uintptr(value))
}

func GroupBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := groupBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func GroupBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   groupBox_SetBiDiMode.Call(obj, uintptr(value))
}

func GroupBox_GetCaption(obj uintptr) string {
    ret, _, _ := groupBox_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_SetCaption(obj uintptr, value string) {
   groupBox_SetCaption.Call(obj, GoStrToDStr(value))
}

func GroupBox_GetColor(obj uintptr) TColor {
    ret, _, _ := groupBox_GetColor.Call(obj)
    return TColor(ret)
}

func GroupBox_SetColor(obj uintptr, value TColor) {
   groupBox_SetColor.Call(obj, uintptr(value))
}

func GroupBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetConstraints.Call(obj)
    return ret
}

func GroupBox_SetConstraints(obj uintptr, value uintptr) {
   groupBox_SetConstraints.Call(obj, value)
}

func GroupBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := groupBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetDockSite(obj uintptr, value bool) {
   groupBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := groupBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetDoubleBuffered(obj uintptr, value bool) {
   groupBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := groupBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func GroupBox_SetDragCursor(obj uintptr, value TCursor) {
   groupBox_SetDragCursor.Call(obj, uintptr(value))
}

func GroupBox_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := groupBox_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func GroupBox_SetDragKind(obj uintptr, value TDragKind) {
   groupBox_SetDragKind.Call(obj, uintptr(value))
}

func GroupBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := groupBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func GroupBox_SetDragMode(obj uintptr, value TDragMode) {
   groupBox_SetDragMode.Call(obj, uintptr(value))
}

func GroupBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := groupBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetEnabled(obj uintptr, value bool) {
   groupBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetFont.Call(obj)
    return ret
}

func GroupBox_SetFont(obj uintptr, value uintptr) {
   groupBox_SetFont.Call(obj, value)
}

func GroupBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := groupBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetParentColor(obj uintptr, value bool) {
   groupBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := groupBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   groupBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := groupBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetParentFont(obj uintptr, value bool) {
   groupBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := groupBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetParentShowHint(obj uintptr, value bool) {
   groupBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetPopupMenu.Call(obj)
    return ret
}

func GroupBox_SetPopupMenu(obj uintptr, value uintptr) {
   groupBox_SetPopupMenu.Call(obj, value)
}

func GroupBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := groupBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetShowHint(obj uintptr, value bool) {
   groupBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := groupBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func GroupBox_SetTabOrder(obj uintptr, value TTabOrder) {
   groupBox_SetTabOrder.Call(obj, uintptr(value))
}

func GroupBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := groupBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetTabStop(obj uintptr, value bool) {
   groupBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetVisible(obj uintptr) bool {
    ret, _, _ := groupBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetVisible(obj uintptr, value bool) {
   groupBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func GroupBox_SetOnAlignPosition(obj uintptr, fn interface{}) {
    groupBox_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnClick(obj uintptr, fn interface{}) {
    groupBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    groupBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnDblClick(obj uintptr, fn interface{}) {
    groupBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    groupBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnDockDrop(obj uintptr, fn interface{}) {
    groupBox_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnDragOver(obj uintptr, fn interface{}) {
    groupBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnEndDock(obj uintptr, fn interface{}) {
    groupBox_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    groupBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnEnter(obj uintptr, fn interface{}) {
    groupBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnExit(obj uintptr, fn interface{}) {
    groupBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    groupBox_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    groupBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    groupBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    groupBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    groupBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    groupBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnStartDock(obj uintptr, fn interface{}) {
    groupBox_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func GroupBox_SetOnUnDock(obj uintptr, fn interface{}) {
    groupBox_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func GroupBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := groupBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func GroupBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := groupBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := groupBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func GroupBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetBrush.Call(obj)
    return ret
}

func GroupBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := groupBox_GetControlCount.Call(obj)
    return int32(ret)
}

func GroupBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := groupBox_GetHandle.Call(obj)
    return HWND(ret)
}

func GroupBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := groupBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func GroupBox_SetParentWindow(obj uintptr, value HWND) {
   groupBox_SetParentWindow.Call(obj, uintptr(value))
}

func GroupBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := groupBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_SetUseDockManager(obj uintptr, value bool) {
   groupBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func GroupBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetAction.Call(obj)
    return ret
}

func GroupBox_SetAction(obj uintptr, value uintptr) {
   groupBox_SetAction.Call(obj, value)
}

func GroupBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    groupBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_SetBoundsRect(obj uintptr, value TRect) {
   groupBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func GroupBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := groupBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func GroupBox_SetClientHeight(obj uintptr, value int32) {
   groupBox_SetClientHeight.Call(obj, uintptr(value))
}

func GroupBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    groupBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    groupBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func GroupBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := groupBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func GroupBox_SetClientWidth(obj uintptr, value int32) {
   groupBox_SetClientWidth.Call(obj, uintptr(value))
}

func GroupBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := groupBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func GroupBox_SetControlState(obj uintptr, value TControlState) {
   groupBox_SetControlState.Call(obj, uintptr(value))
}

func GroupBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := groupBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func GroupBox_SetControlStyle(obj uintptr, value TControlStyle) {
   groupBox_SetControlStyle.Call(obj, uintptr(value))
}

func GroupBox_GetFloating(obj uintptr) bool {
    ret, _, _ := groupBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func GroupBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetParent.Call(obj)
    return ret
}

func GroupBox_SetParent(obj uintptr, value uintptr) {
   groupBox_SetParent.Call(obj, value)
}

func GroupBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := groupBox_GetLeft.Call(obj)
    return int32(ret)
}

func GroupBox_SetLeft(obj uintptr, value int32) {
   groupBox_SetLeft.Call(obj, uintptr(value))
}

func GroupBox_GetTop(obj uintptr) int32 {
    ret, _, _ := groupBox_GetTop.Call(obj)
    return int32(ret)
}

func GroupBox_SetTop(obj uintptr, value int32) {
   groupBox_SetTop.Call(obj, uintptr(value))
}

func GroupBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := groupBox_GetWidth.Call(obj)
    return int32(ret)
}

func GroupBox_SetWidth(obj uintptr, value int32) {
   groupBox_SetWidth.Call(obj, uintptr(value))
}

func GroupBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := groupBox_GetHeight.Call(obj)
    return int32(ret)
}

func GroupBox_SetHeight(obj uintptr, value int32) {
   groupBox_SetHeight.Call(obj, uintptr(value))
}

func GroupBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := groupBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func GroupBox_SetCursor(obj uintptr, value TCursor) {
   groupBox_SetCursor.Call(obj, uintptr(value))
}

func GroupBox_GetHint(obj uintptr) string {
    ret, _, _ := groupBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_SetHint(obj uintptr, value string) {
   groupBox_SetHint.Call(obj, GoStrToDStr(value))
}

func GroupBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := groupBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func GroupBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := groupBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func GroupBox_SetComponentIndex(obj uintptr, value int32) {
   groupBox_SetComponentIndex.Call(obj, uintptr(value))
}

func GroupBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetOwner.Call(obj)
    return ret
}

func GroupBox_GetName(obj uintptr) string {
    ret, _, _ := groupBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func GroupBox_SetName(obj uintptr, value string) {
   groupBox_SetName.Call(obj, GoStrToDStr(value))
}

func GroupBox_GetTag(obj uintptr) int {
    ret, _, _ := groupBox_GetTag.Call(obj)
    return int(ret)
}

func GroupBox_SetTag(obj uintptr, value int) {
   groupBox_SetTag.Call(obj, uintptr(value))
}

func GroupBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func GroupBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   groupBox_SetAnchorSideLeft.Call(obj, value)
}

func GroupBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetAnchorSideTop.Call(obj)
    return ret
}

func GroupBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   groupBox_SetAnchorSideTop.Call(obj, value)
}

func GroupBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetAnchorSideRight.Call(obj)
    return ret
}

func GroupBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   groupBox_SetAnchorSideRight.Call(obj, value)
}

func GroupBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func GroupBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   groupBox_SetAnchorSideBottom.Call(obj, value)
}

func GroupBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetChildSizing.Call(obj)
    return ret
}

func GroupBox_SetChildSizing(obj uintptr, value uintptr) {
   groupBox_SetChildSizing.Call(obj, value)
}

func GroupBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := groupBox_GetBorderSpacing.Call(obj)
    return ret
}

func GroupBox_SetBorderSpacing(obj uintptr, value uintptr) {
   groupBox_SetBorderSpacing.Call(obj, value)
}

func GroupBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := groupBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func GroupBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := groupBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func GroupBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := groupBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func GroupBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := groupBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func GroupBox_StaticClassType() TClass {
    r, _, _:= groupBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TLabel ---------------------------

func Label_Create(obj uintptr) uintptr {
    ret, _, _ := label_Create.Call(obj)
    return ret
}

func Label_Free(obj uintptr) {
    label_Free.Call(obj)
}

func Label_BringToFront(obj uintptr)  {
    label_BringToFront.Call(obj)
}

func Label_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    label_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    label_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_Dragging(obj uintptr) bool {
    ret, _, _ := label_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_HasParent(obj uintptr) bool {
    ret, _, _ := label_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_Hide(obj uintptr)  {
    label_Hide.Call(obj)
}

func Label_Invalidate(obj uintptr)  {
    label_Invalidate.Call(obj)
}

func Label_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := label_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Label_Refresh(obj uintptr)  {
    label_Refresh.Call(obj)
}

func Label_Repaint(obj uintptr)  {
    label_Repaint.Call(obj)
}

func Label_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    label_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    label_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_SendToBack(obj uintptr)  {
    label_SendToBack.Call(obj)
}

func Label_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    label_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Label_Show(obj uintptr)  {
    label_Show.Call(obj)
}

func Label_Update(obj uintptr)  {
    label_Update.Call(obj)
}

func Label_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := label_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Label_GetTextLen(obj uintptr) int32 {
    ret, _, _ := label_GetTextLen.Call(obj)
    return int32(ret)
}

func Label_SetTextBuf(obj uintptr, Buffer string)  {
    label_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Label_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := label_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Label_GetNamePath(obj uintptr) string {
    ret, _, _ := label_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Label_Assign(obj uintptr, Source uintptr)  {
    label_Assign.Call(obj, Source )
}

func Label_ClassType(obj uintptr) TClass {
    ret, _, _ := label_ClassType.Call(obj)
    return TClass(ret)
}

func Label_ClassName(obj uintptr) string {
    ret, _, _ := label_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Label_InstanceSize(obj uintptr) int32 {
    ret, _, _ := label_InstanceSize.Call(obj)
    return int32(ret)
}

func Label_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := label_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Label_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := label_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Label_GetHashCode(obj uintptr) int32 {
    ret, _, _ := label_GetHashCode.Call(obj)
    return int32(ret)
}

func Label_ToString(obj uintptr) string {
    ret, _, _ := label_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Label_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    label_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Label_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    label_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Label_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    label_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Label_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    label_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Label_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    label_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Label_AnchorClient(obj uintptr, ASpace int32)  {
    label_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Label_GetOptimalFill(obj uintptr) bool {
    ret, _, _ := label_GetOptimalFill.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetOptimalFill(obj uintptr, value bool) {
   label_SetOptimalFill.Call(obj, GoBoolToDBool(value))
}

func Label_GetAlign(obj uintptr) TAlign {
    ret, _, _ := label_GetAlign.Call(obj)
    return TAlign(ret)
}

func Label_SetAlign(obj uintptr, value TAlign) {
   label_SetAlign.Call(obj, uintptr(value))
}

func Label_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := label_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func Label_SetAlignment(obj uintptr, value TAlignment) {
   label_SetAlignment.Call(obj, uintptr(value))
}

func Label_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := label_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Label_SetAnchors(obj uintptr, value TAnchors) {
   label_SetAnchors.Call(obj, uintptr(value))
}

func Label_GetAutoSize(obj uintptr) bool {
    ret, _, _ := label_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetAutoSize(obj uintptr, value bool) {
   label_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Label_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := label_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Label_SetBiDiMode(obj uintptr, value TBiDiMode) {
   label_SetBiDiMode.Call(obj, uintptr(value))
}

func Label_GetCaption(obj uintptr) string {
    ret, _, _ := label_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func Label_SetCaption(obj uintptr, value string) {
   label_SetCaption.Call(obj, GoStrToDStr(value))
}

func Label_GetColor(obj uintptr) TColor {
    ret, _, _ := label_GetColor.Call(obj)
    return TColor(ret)
}

func Label_SetColor(obj uintptr, value TColor) {
   label_SetColor.Call(obj, uintptr(value))
}

func Label_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := label_GetConstraints.Call(obj)
    return ret
}

func Label_SetConstraints(obj uintptr, value uintptr) {
   label_SetConstraints.Call(obj, value)
}

func Label_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := label_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Label_SetDragCursor(obj uintptr, value TCursor) {
   label_SetDragCursor.Call(obj, uintptr(value))
}

func Label_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := label_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Label_SetDragKind(obj uintptr, value TDragKind) {
   label_SetDragKind.Call(obj, uintptr(value))
}

func Label_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := label_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Label_SetDragMode(obj uintptr, value TDragMode) {
   label_SetDragMode.Call(obj, uintptr(value))
}

func Label_GetEnabled(obj uintptr) bool {
    ret, _, _ := label_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetEnabled(obj uintptr, value bool) {
   label_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Label_GetFont(obj uintptr) uintptr {
    ret, _, _ := label_GetFont.Call(obj)
    return ret
}

func Label_SetFont(obj uintptr, value uintptr) {
   label_SetFont.Call(obj, value)
}

func Label_GetParentColor(obj uintptr) bool {
    ret, _, _ := label_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetParentColor(obj uintptr, value bool) {
   label_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Label_GetParentFont(obj uintptr) bool {
    ret, _, _ := label_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetParentFont(obj uintptr, value bool) {
   label_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Label_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := label_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetParentShowHint(obj uintptr, value bool) {
   label_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Label_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := label_GetPopupMenu.Call(obj)
    return ret
}

func Label_SetPopupMenu(obj uintptr, value uintptr) {
   label_SetPopupMenu.Call(obj, value)
}

func Label_GetShowAccelChar(obj uintptr) bool {
    ret, _, _ := label_GetShowAccelChar.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetShowAccelChar(obj uintptr, value bool) {
   label_SetShowAccelChar.Call(obj, GoBoolToDBool(value))
}

func Label_GetShowHint(obj uintptr) bool {
    ret, _, _ := label_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetShowHint(obj uintptr, value bool) {
   label_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Label_GetTransparent(obj uintptr) bool {
    ret, _, _ := label_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetTransparent(obj uintptr, value bool) {
   label_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func Label_GetLayout(obj uintptr) TTextLayout {
    ret, _, _ := label_GetLayout.Call(obj)
    return TTextLayout(ret)
}

func Label_SetLayout(obj uintptr, value TTextLayout) {
   label_SetLayout.Call(obj, uintptr(value))
}

func Label_GetVisible(obj uintptr) bool {
    ret, _, _ := label_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetVisible(obj uintptr, value bool) {
   label_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Label_GetWordWrap(obj uintptr) bool {
    ret, _, _ := label_GetWordWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_SetWordWrap(obj uintptr, value bool) {
   label_SetWordWrap.Call(obj, GoBoolToDBool(value))
}

func Label_SetOnClick(obj uintptr, fn interface{}) {
    label_SetOnClick.Call(obj, addEventToMap(fn))
}

func Label_SetOnContextPopup(obj uintptr, fn interface{}) {
    label_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Label_SetOnDblClick(obj uintptr, fn interface{}) {
    label_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Label_SetOnDragDrop(obj uintptr, fn interface{}) {
    label_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Label_SetOnDragOver(obj uintptr, fn interface{}) {
    label_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Label_SetOnEndDrag(obj uintptr, fn interface{}) {
    label_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Label_SetOnMouseDown(obj uintptr, fn interface{}) {
    label_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Label_SetOnMouseMove(obj uintptr, fn interface{}) {
    label_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Label_SetOnMouseUp(obj uintptr, fn interface{}) {
    label_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Label_SetOnMouseEnter(obj uintptr, fn interface{}) {
    label_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Label_SetOnMouseLeave(obj uintptr, fn interface{}) {
    label_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Label_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := label_GetCanvas.Call(obj)
    return ret
}

func Label_GetAction(obj uintptr) uintptr {
    ret, _, _ := label_GetAction.Call(obj)
    return ret
}

func Label_SetAction(obj uintptr, value uintptr) {
   label_SetAction.Call(obj, value)
}

func Label_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    label_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_SetBoundsRect(obj uintptr, value TRect) {
   label_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Label_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := label_GetClientHeight.Call(obj)
    return int32(ret)
}

func Label_SetClientHeight(obj uintptr, value int32) {
   label_SetClientHeight.Call(obj, uintptr(value))
}

func Label_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    label_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_GetClientRect(obj uintptr) TRect {
    var ret TRect
    label_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Label_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := label_GetClientWidth.Call(obj)
    return int32(ret)
}

func Label_SetClientWidth(obj uintptr, value int32) {
   label_SetClientWidth.Call(obj, uintptr(value))
}

func Label_GetControlState(obj uintptr) TControlState {
    ret, _, _ := label_GetControlState.Call(obj)
    return TControlState(ret)
}

func Label_SetControlState(obj uintptr, value TControlState) {
   label_SetControlState.Call(obj, uintptr(value))
}

func Label_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := label_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Label_SetControlStyle(obj uintptr, value TControlStyle) {
   label_SetControlStyle.Call(obj, uintptr(value))
}

func Label_GetFloating(obj uintptr) bool {
    ret, _, _ := label_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Label_GetParent(obj uintptr) uintptr {
    ret, _, _ := label_GetParent.Call(obj)
    return ret
}

func Label_SetParent(obj uintptr, value uintptr) {
   label_SetParent.Call(obj, value)
}

func Label_GetLeft(obj uintptr) int32 {
    ret, _, _ := label_GetLeft.Call(obj)
    return int32(ret)
}

func Label_SetLeft(obj uintptr, value int32) {
   label_SetLeft.Call(obj, uintptr(value))
}

func Label_GetTop(obj uintptr) int32 {
    ret, _, _ := label_GetTop.Call(obj)
    return int32(ret)
}

func Label_SetTop(obj uintptr, value int32) {
   label_SetTop.Call(obj, uintptr(value))
}

func Label_GetWidth(obj uintptr) int32 {
    ret, _, _ := label_GetWidth.Call(obj)
    return int32(ret)
}

func Label_SetWidth(obj uintptr, value int32) {
   label_SetWidth.Call(obj, uintptr(value))
}

func Label_GetHeight(obj uintptr) int32 {
    ret, _, _ := label_GetHeight.Call(obj)
    return int32(ret)
}

func Label_SetHeight(obj uintptr, value int32) {
   label_SetHeight.Call(obj, uintptr(value))
}

func Label_GetCursor(obj uintptr) TCursor {
    ret, _, _ := label_GetCursor.Call(obj)
    return TCursor(ret)
}

func Label_SetCursor(obj uintptr, value TCursor) {
   label_SetCursor.Call(obj, uintptr(value))
}

func Label_GetHint(obj uintptr) string {
    ret, _, _ := label_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Label_SetHint(obj uintptr, value string) {
   label_SetHint.Call(obj, GoStrToDStr(value))
}

func Label_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := label_GetComponentCount.Call(obj)
    return int32(ret)
}

func Label_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := label_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Label_SetComponentIndex(obj uintptr, value int32) {
   label_SetComponentIndex.Call(obj, uintptr(value))
}

func Label_GetOwner(obj uintptr) uintptr {
    ret, _, _ := label_GetOwner.Call(obj)
    return ret
}

func Label_GetName(obj uintptr) string {
    ret, _, _ := label_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Label_SetName(obj uintptr, value string) {
   label_SetName.Call(obj, GoStrToDStr(value))
}

func Label_GetTag(obj uintptr) int {
    ret, _, _ := label_GetTag.Call(obj)
    return int(ret)
}

func Label_SetTag(obj uintptr, value int) {
   label_SetTag.Call(obj, uintptr(value))
}

func Label_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := label_GetAnchorSideLeft.Call(obj)
    return ret
}

func Label_SetAnchorSideLeft(obj uintptr, value uintptr) {
   label_SetAnchorSideLeft.Call(obj, value)
}

func Label_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := label_GetAnchorSideTop.Call(obj)
    return ret
}

func Label_SetAnchorSideTop(obj uintptr, value uintptr) {
   label_SetAnchorSideTop.Call(obj, value)
}

func Label_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := label_GetAnchorSideRight.Call(obj)
    return ret
}

func Label_SetAnchorSideRight(obj uintptr, value uintptr) {
   label_SetAnchorSideRight.Call(obj, value)
}

func Label_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := label_GetAnchorSideBottom.Call(obj)
    return ret
}

func Label_SetAnchorSideBottom(obj uintptr, value uintptr) {
   label_SetAnchorSideBottom.Call(obj, value)
}

func Label_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := label_GetBorderSpacing.Call(obj)
    return ret
}

func Label_SetBorderSpacing(obj uintptr, value uintptr) {
   label_SetBorderSpacing.Call(obj, value)
}

func Label_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := label_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Label_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := label_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Label_StaticClassType() TClass {
    r, _, _:= label_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListBox ---------------------------

func ListBox_Create(obj uintptr) uintptr {
    ret, _, _ := listBox_Create.Call(obj)
    return ret
}

func ListBox_Free(obj uintptr) {
    listBox_Free.Call(obj)
}

func ListBox_AddItem(obj uintptr, Item string, AObject uintptr)  {
    listBox_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ListBox_Clear(obj uintptr)  {
    listBox_Clear.Call(obj)
}

func ListBox_ClearSelection(obj uintptr)  {
    listBox_ClearSelection.Call(obj)
}

func ListBox_DeleteSelected(obj uintptr)  {
    listBox_DeleteSelected.Call(obj)
}

func ListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
    ret, _, _ := listBox_ItemAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing) )
    return int32(ret)
}

func ListBox_ItemRect(obj uintptr, Index int32) TRect {
    var ret TRect
    listBox_ItemRect.Call(obj, uintptr(Index) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_SelectAll(obj uintptr)  {
    listBox_SelectAll.Call(obj)
}

func ListBox_CanFocus(obj uintptr) bool {
    ret, _, _ := listBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := listBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := listBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ListBox_DisableAlign(obj uintptr)  {
    listBox_DisableAlign.Call(obj)
}

func ListBox_EnableAlign(obj uintptr)  {
    listBox_EnableAlign.Call(obj)
}

func ListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := listBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ListBox_FlipChildren(obj uintptr, AllLevels bool)  {
    listBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ListBox_Focused(obj uintptr) bool {
    ret, _, _ := listBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := listBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_InsertControl(obj uintptr, AControl uintptr)  {
    listBox_InsertControl.Call(obj, AControl )
}

func ListBox_Invalidate(obj uintptr)  {
    listBox_Invalidate.Call(obj)
}

func ListBox_RemoveControl(obj uintptr, AControl uintptr)  {
    listBox_RemoveControl.Call(obj, AControl )
}

func ListBox_Realign(obj uintptr)  {
    listBox_Realign.Call(obj)
}

func ListBox_Repaint(obj uintptr)  {
    listBox_Repaint.Call(obj)
}

func ListBox_ScaleBy(obj uintptr, M int32, D int32)  {
    listBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    listBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    listBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ListBox_SetFocus(obj uintptr)  {
    listBox_SetFocus.Call(obj)
}

func ListBox_Update(obj uintptr)  {
    listBox_Update.Call(obj)
}

func ListBox_BringToFront(obj uintptr)  {
    listBox_BringToFront.Call(obj)
}

func ListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    listBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    listBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_Dragging(obj uintptr) bool {
    ret, _, _ := listBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_HasParent(obj uintptr) bool {
    ret, _, _ := listBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_Hide(obj uintptr)  {
    listBox_Hide.Call(obj)
}

func ListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := listBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ListBox_Refresh(obj uintptr)  {
    listBox_Refresh.Call(obj)
}

func ListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    listBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    listBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_SendToBack(obj uintptr)  {
    listBox_SendToBack.Call(obj)
}

func ListBox_Show(obj uintptr)  {
    listBox_Show.Call(obj)
}

func ListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := listBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ListBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := listBox_GetTextLen.Call(obj)
    return int32(ret)
}

func ListBox_SetTextBuf(obj uintptr, Buffer string)  {
    listBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ListBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := listBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ListBox_GetNamePath(obj uintptr) string {
    ret, _, _ := listBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListBox_Assign(obj uintptr, Source uintptr)  {
    listBox_Assign.Call(obj, Source )
}

func ListBox_ClassType(obj uintptr) TClass {
    ret, _, _ := listBox_ClassType.Call(obj)
    return TClass(ret)
}

func ListBox_ClassName(obj uintptr) string {
    ret, _, _ := listBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listBox_InstanceSize.Call(obj)
    return int32(ret)
}

func ListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listBox_GetHashCode.Call(obj)
    return int32(ret)
}

func ListBox_ToString(obj uintptr) string {
    ret, _, _ := listBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    listBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    listBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    listBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    listBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    listBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ListBox_AnchorClient(obj uintptr, ASpace int32)  {
    listBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ListBox_GetClickOnSelChange(obj uintptr) bool {
    ret, _, _ := listBox_GetClickOnSelChange.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetClickOnSelChange(obj uintptr, value bool) {
   listBox_SetClickOnSelChange.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetOptions(obj uintptr) TListBoxOptions {
    ret, _, _ := listBox_GetOptions.Call(obj)
    return TListBoxOptions(ret)
}

func ListBox_SetOptions(obj uintptr, value TListBoxOptions) {
   listBox_SetOptions.Call(obj, uintptr(value))
}

func ListBox_GetTopIndex(obj uintptr) int32 {
    ret, _, _ := listBox_GetTopIndex.Call(obj)
    return int32(ret)
}

func ListBox_SetTopIndex(obj uintptr, value int32) {
   listBox_SetTopIndex.Call(obj, uintptr(value))
}

func ListBox_GetStyle(obj uintptr) TListBoxStyle {
    ret, _, _ := listBox_GetStyle.Call(obj)
    return TListBoxStyle(ret)
}

func ListBox_SetStyle(obj uintptr, value TListBoxStyle) {
   listBox_SetStyle.Call(obj, uintptr(value))
}

func ListBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := listBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func ListBox_SetAlign(obj uintptr, value TAlign) {
   listBox_SetAlign.Call(obj, uintptr(value))
}

func ListBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := listBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ListBox_SetAnchors(obj uintptr, value TAnchors) {
   listBox_SetAnchors.Call(obj, uintptr(value))
}

func ListBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := listBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   listBox_SetBiDiMode.Call(obj, uintptr(value))
}

func ListBox_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := listBox_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func ListBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
   listBox_SetBorderStyle.Call(obj, uintptr(value))
}

func ListBox_GetColor(obj uintptr) TColor {
    ret, _, _ := listBox_GetColor.Call(obj)
    return TColor(ret)
}

func ListBox_SetColor(obj uintptr, value TColor) {
   listBox_SetColor.Call(obj, uintptr(value))
}

func ListBox_GetColumns(obj uintptr) int32 {
    ret, _, _ := listBox_GetColumns.Call(obj)
    return int32(ret)
}

func ListBox_SetColumns(obj uintptr, value int32) {
   listBox_SetColumns.Call(obj, uintptr(value))
}

func ListBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := listBox_GetConstraints.Call(obj)
    return ret
}

func ListBox_SetConstraints(obj uintptr, value uintptr) {
   listBox_SetConstraints.Call(obj, value)
}

func ListBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := listBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetDoubleBuffered(obj uintptr, value bool) {
   listBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := listBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ListBox_SetDragCursor(obj uintptr, value TCursor) {
   listBox_SetDragCursor.Call(obj, uintptr(value))
}

func ListBox_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := listBox_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ListBox_SetDragKind(obj uintptr, value TDragKind) {
   listBox_SetDragKind.Call(obj, uintptr(value))
}

func ListBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := listBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ListBox_SetDragMode(obj uintptr, value TDragMode) {
   listBox_SetDragMode.Call(obj, uintptr(value))
}

func ListBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := listBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetEnabled(obj uintptr, value bool) {
   listBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := listBox_GetFont.Call(obj)
    return ret
}

func ListBox_SetFont(obj uintptr, value uintptr) {
   listBox_SetFont.Call(obj, value)
}

func ListBox_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := listBox_GetItemHeight.Call(obj)
    return int32(ret)
}

func ListBox_SetItemHeight(obj uintptr, value int32) {
   listBox_SetItemHeight.Call(obj, uintptr(value))
}

func ListBox_GetItems(obj uintptr) uintptr {
    ret, _, _ := listBox_GetItems.Call(obj)
    return ret
}

func ListBox_SetItems(obj uintptr, value uintptr) {
   listBox_SetItems.Call(obj, value)
}

func ListBox_GetMultiSelect(obj uintptr) bool {
    ret, _, _ := listBox_GetMultiSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetMultiSelect(obj uintptr, value bool) {
   listBox_SetMultiSelect.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := listBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetParentColor(obj uintptr, value bool) {
   listBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := listBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   listBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := listBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetParentFont(obj uintptr, value bool) {
   listBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := listBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetParentShowHint(obj uintptr, value bool) {
   listBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := listBox_GetPopupMenu.Call(obj)
    return ret
}

func ListBox_SetPopupMenu(obj uintptr, value uintptr) {
   listBox_SetPopupMenu.Call(obj, value)
}

func ListBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := listBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetShowHint(obj uintptr, value bool) {
   listBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetSorted(obj uintptr) bool {
    ret, _, _ := listBox_GetSorted.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetSorted(obj uintptr, value bool) {
   listBox_SetSorted.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := listBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ListBox_SetTabOrder(obj uintptr, value TTabOrder) {
   listBox_SetTabOrder.Call(obj, uintptr(value))
}

func ListBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := listBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetTabStop(obj uintptr, value bool) {
   listBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetVisible(obj uintptr) bool {
    ret, _, _ := listBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetVisible(obj uintptr, value bool) {
   listBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ListBox_SetOnClick(obj uintptr, fn interface{}) {
    listBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    listBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnDblClick(obj uintptr, fn interface{}) {
    listBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    listBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnDragOver(obj uintptr, fn interface{}) {
    listBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnDrawItem(obj uintptr, fn interface{}) {
    listBox_SetOnDrawItem.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    listBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnEnter(obj uintptr, fn interface{}) {
    listBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnExit(obj uintptr, fn interface{}) {
    listBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    listBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    listBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    listBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
    listBox_SetOnMeasureItem.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    listBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    listBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    listBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    listBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    listBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ListBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := listBox_GetCanvas.Call(obj)
    return ret
}

func ListBox_GetCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetCount.Call(obj)
    return int32(ret)
}

func ListBox_GetSelCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetSelCount.Call(obj)
    return int32(ret)
}

func ListBox_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := listBox_GetItemIndex.Call(obj)
    return int32(ret)
}

func ListBox_SetItemIndex(obj uintptr, value int32) {
   listBox_SetItemIndex.Call(obj, uintptr(value))
}

func ListBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ListBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := listBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetDockSite(obj uintptr, value bool) {
   listBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := listBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ListBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := listBox_GetBrush.Call(obj)
    return ret
}

func ListBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetControlCount.Call(obj)
    return int32(ret)
}

func ListBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := listBox_GetHandle.Call(obj)
    return HWND(ret)
}

func ListBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := listBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ListBox_SetParentWindow(obj uintptr, value HWND) {
   listBox_SetParentWindow.Call(obj, uintptr(value))
}

func ListBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := listBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_SetUseDockManager(obj uintptr, value bool) {
   listBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ListBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := listBox_GetAction.Call(obj)
    return ret
}

func ListBox_SetAction(obj uintptr, value uintptr) {
   listBox_SetAction.Call(obj, value)
}

func ListBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    listBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_SetBoundsRect(obj uintptr, value TRect) {
   listBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := listBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func ListBox_SetClientHeight(obj uintptr, value int32) {
   listBox_SetClientHeight.Call(obj, uintptr(value))
}

func ListBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    listBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    listBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := listBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func ListBox_SetClientWidth(obj uintptr, value int32) {
   listBox_SetClientWidth.Call(obj, uintptr(value))
}

func ListBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := listBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func ListBox_SetControlState(obj uintptr, value TControlState) {
   listBox_SetControlState.Call(obj, uintptr(value))
}

func ListBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := listBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ListBox_SetControlStyle(obj uintptr, value TControlStyle) {
   listBox_SetControlStyle.Call(obj, uintptr(value))
}

func ListBox_GetFloating(obj uintptr) bool {
    ret, _, _ := listBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ListBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := listBox_GetParent.Call(obj)
    return ret
}

func ListBox_SetParent(obj uintptr, value uintptr) {
   listBox_SetParent.Call(obj, value)
}

func ListBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := listBox_GetLeft.Call(obj)
    return int32(ret)
}

func ListBox_SetLeft(obj uintptr, value int32) {
   listBox_SetLeft.Call(obj, uintptr(value))
}

func ListBox_GetTop(obj uintptr) int32 {
    ret, _, _ := listBox_GetTop.Call(obj)
    return int32(ret)
}

func ListBox_SetTop(obj uintptr, value int32) {
   listBox_SetTop.Call(obj, uintptr(value))
}

func ListBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := listBox_GetWidth.Call(obj)
    return int32(ret)
}

func ListBox_SetWidth(obj uintptr, value int32) {
   listBox_SetWidth.Call(obj, uintptr(value))
}

func ListBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := listBox_GetHeight.Call(obj)
    return int32(ret)
}

func ListBox_SetHeight(obj uintptr, value int32) {
   listBox_SetHeight.Call(obj, uintptr(value))
}

func ListBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := listBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func ListBox_SetCursor(obj uintptr, value TCursor) {
   listBox_SetCursor.Call(obj, uintptr(value))
}

func ListBox_GetHint(obj uintptr) string {
    ret, _, _ := listBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ListBox_SetHint(obj uintptr, value string) {
   listBox_SetHint.Call(obj, GoStrToDStr(value))
}

func ListBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := listBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func ListBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := listBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ListBox_SetComponentIndex(obj uintptr, value int32) {
   listBox_SetComponentIndex.Call(obj, uintptr(value))
}

func ListBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := listBox_GetOwner.Call(obj)
    return ret
}

func ListBox_GetName(obj uintptr) string {
    ret, _, _ := listBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ListBox_SetName(obj uintptr, value string) {
   listBox_SetName.Call(obj, GoStrToDStr(value))
}

func ListBox_GetTag(obj uintptr) int {
    ret, _, _ := listBox_GetTag.Call(obj)
    return int(ret)
}

func ListBox_SetTag(obj uintptr, value int) {
   listBox_SetTag.Call(obj, uintptr(value))
}

func ListBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := listBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func ListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   listBox_SetAnchorSideLeft.Call(obj, value)
}

func ListBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := listBox_GetAnchorSideTop.Call(obj)
    return ret
}

func ListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   listBox_SetAnchorSideTop.Call(obj, value)
}

func ListBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := listBox_GetAnchorSideRight.Call(obj)
    return ret
}

func ListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   listBox_SetAnchorSideRight.Call(obj, value)
}

func ListBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := listBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func ListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   listBox_SetAnchorSideBottom.Call(obj, value)
}

func ListBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := listBox_GetChildSizing.Call(obj)
    return ret
}

func ListBox_SetChildSizing(obj uintptr, value uintptr) {
   listBox_SetChildSizing.Call(obj, value)
}

func ListBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := listBox_GetBorderSpacing.Call(obj)
    return ret
}

func ListBox_SetBorderSpacing(obj uintptr, value uintptr) {
   listBox_SetBorderSpacing.Call(obj, value)
}

func ListBox_GetSelected(obj uintptr, Index int32) bool {
    ret, _, _ := listBox_GetSelected.Call(obj, uintptr(Index))
    return DBoolToGoBool(ret)
}

func ListBox_SetSelected(obj uintptr, Index int32, value bool) {
   listBox_SetSelected.Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func ListBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := listBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ListBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := listBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := listBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := listBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ListBox_StaticClassType() TClass {
    r, _, _:= listBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TComboBox ---------------------------

func ComboBox_Create(obj uintptr) uintptr {
    ret, _, _ := comboBox_Create.Call(obj)
    return ret
}

func ComboBox_Free(obj uintptr) {
    comboBox_Free.Call(obj)
}

func ComboBox_AddItem(obj uintptr, Item string, AObject uintptr)  {
    comboBox_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ComboBox_Clear(obj uintptr)  {
    comboBox_Clear.Call(obj)
}

func ComboBox_ClearSelection(obj uintptr)  {
    comboBox_ClearSelection.Call(obj)
}

func ComboBox_DeleteSelected(obj uintptr)  {
    comboBox_DeleteSelected.Call(obj)
}

func ComboBox_Focused(obj uintptr) bool {
    ret, _, _ := comboBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SelectAll(obj uintptr)  {
    comboBox_SelectAll.Call(obj)
}

func ComboBox_CanFocus(obj uintptr) bool {
    ret, _, _ := comboBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := comboBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ComboBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := comboBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ComboBox_DisableAlign(obj uintptr)  {
    comboBox_DisableAlign.Call(obj)
}

func ComboBox_EnableAlign(obj uintptr)  {
    comboBox_EnableAlign.Call(obj)
}

func ComboBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := comboBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ComboBox_FlipChildren(obj uintptr, AllLevels bool)  {
    comboBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ComboBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := comboBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_InsertControl(obj uintptr, AControl uintptr)  {
    comboBox_InsertControl.Call(obj, AControl )
}

func ComboBox_Invalidate(obj uintptr)  {
    comboBox_Invalidate.Call(obj)
}

func ComboBox_RemoveControl(obj uintptr, AControl uintptr)  {
    comboBox_RemoveControl.Call(obj, AControl )
}

func ComboBox_Realign(obj uintptr)  {
    comboBox_Realign.Call(obj)
}

func ComboBox_Repaint(obj uintptr)  {
    comboBox_Repaint.Call(obj)
}

func ComboBox_ScaleBy(obj uintptr, M int32, D int32)  {
    comboBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ComboBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    comboBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ComboBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    comboBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ComboBox_SetFocus(obj uintptr)  {
    comboBox_SetFocus.Call(obj)
}

func ComboBox_Update(obj uintptr)  {
    comboBox_Update.Call(obj)
}

func ComboBox_BringToFront(obj uintptr)  {
    comboBox_BringToFront.Call(obj)
}

func ComboBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    comboBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    comboBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_Dragging(obj uintptr) bool {
    ret, _, _ := comboBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_HasParent(obj uintptr) bool {
    ret, _, _ := comboBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_Hide(obj uintptr)  {
    comboBox_Hide.Call(obj)
}

func ComboBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := comboBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ComboBox_Refresh(obj uintptr)  {
    comboBox_Refresh.Call(obj)
}

func ComboBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    comboBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    comboBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_SendToBack(obj uintptr)  {
    comboBox_SendToBack.Call(obj)
}

func ComboBox_Show(obj uintptr)  {
    comboBox_Show.Call(obj)
}

func ComboBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := comboBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ComboBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := comboBox_GetTextLen.Call(obj)
    return int32(ret)
}

func ComboBox_SetTextBuf(obj uintptr, Buffer string)  {
    comboBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ComboBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := comboBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ComboBox_GetNamePath(obj uintptr) string {
    ret, _, _ := comboBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_Assign(obj uintptr, Source uintptr)  {
    comboBox_Assign.Call(obj, Source )
}

func ComboBox_ClassType(obj uintptr) TClass {
    ret, _, _ := comboBox_ClassType.Call(obj)
    return TClass(ret)
}

func ComboBox_ClassName(obj uintptr) string {
    ret, _, _ := comboBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := comboBox_InstanceSize.Call(obj)
    return int32(ret)
}

func ComboBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := comboBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ComboBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := comboBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ComboBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := comboBox_GetHashCode.Call(obj)
    return int32(ret)
}

func ComboBox_ToString(obj uintptr) string {
    ret, _, _ := comboBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    comboBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ComboBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    comboBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ComboBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    comboBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ComboBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    comboBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ComboBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    comboBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ComboBox_AnchorClient(obj uintptr, ASpace int32)  {
    comboBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ComboBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := comboBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func ComboBox_SetAlign(obj uintptr, value TAlign) {
   comboBox_SetAlign.Call(obj, uintptr(value))
}

func ComboBox_GetAutoComplete(obj uintptr) bool {
    ret, _, _ := comboBox_GetAutoComplete.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetAutoComplete(obj uintptr, value bool) {
   comboBox_SetAutoComplete.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetAutoDropDown(obj uintptr) bool {
    ret, _, _ := comboBox_GetAutoDropDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetAutoDropDown(obj uintptr, value bool) {
   comboBox_SetAutoDropDown.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetStyle(obj uintptr) TComboBoxStyle {
    ret, _, _ := comboBox_GetStyle.Call(obj)
    return TComboBoxStyle(ret)
}

func ComboBox_SetStyle(obj uintptr, value TComboBoxStyle) {
   comboBox_SetStyle.Call(obj, uintptr(value))
}

func ComboBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := comboBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ComboBox_SetAnchors(obj uintptr, value TAnchors) {
   comboBox_SetAnchors.Call(obj, uintptr(value))
}

func ComboBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := comboBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ComboBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   comboBox_SetBiDiMode.Call(obj, uintptr(value))
}

func ComboBox_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := comboBox_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func ComboBox_SetCharCase(obj uintptr, value TEditCharCase) {
   comboBox_SetCharCase.Call(obj, uintptr(value))
}

func ComboBox_GetColor(obj uintptr) TColor {
    ret, _, _ := comboBox_GetColor.Call(obj)
    return TColor(ret)
}

func ComboBox_SetColor(obj uintptr, value TColor) {
   comboBox_SetColor.Call(obj, uintptr(value))
}

func ComboBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetConstraints.Call(obj)
    return ret
}

func ComboBox_SetConstraints(obj uintptr, value uintptr) {
   comboBox_SetConstraints.Call(obj, value)
}

func ComboBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := comboBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetDoubleBuffered(obj uintptr, value bool) {
   comboBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := comboBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ComboBox_SetDragCursor(obj uintptr, value TCursor) {
   comboBox_SetDragCursor.Call(obj, uintptr(value))
}

func ComboBox_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := comboBox_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ComboBox_SetDragKind(obj uintptr, value TDragKind) {
   comboBox_SetDragKind.Call(obj, uintptr(value))
}

func ComboBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := comboBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ComboBox_SetDragMode(obj uintptr, value TDragMode) {
   comboBox_SetDragMode.Call(obj, uintptr(value))
}

func ComboBox_GetDropDownCount(obj uintptr) int32 {
    ret, _, _ := comboBox_GetDropDownCount.Call(obj)
    return int32(ret)
}

func ComboBox_SetDropDownCount(obj uintptr, value int32) {
   comboBox_SetDropDownCount.Call(obj, uintptr(value))
}

func ComboBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := comboBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetEnabled(obj uintptr, value bool) {
   comboBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetFont.Call(obj)
    return ret
}

func ComboBox_SetFont(obj uintptr, value uintptr) {
   comboBox_SetFont.Call(obj, value)
}

func ComboBox_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := comboBox_GetItemHeight.Call(obj)
    return int32(ret)
}

func ComboBox_SetItemHeight(obj uintptr, value int32) {
   comboBox_SetItemHeight.Call(obj, uintptr(value))
}

func ComboBox_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := comboBox_GetItemIndex.Call(obj)
    return int32(ret)
}

func ComboBox_SetItemIndex(obj uintptr, value int32) {
   comboBox_SetItemIndex.Call(obj, uintptr(value))
}

func ComboBox_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := comboBox_GetMaxLength.Call(obj)
    return int32(ret)
}

func ComboBox_SetMaxLength(obj uintptr, value int32) {
   comboBox_SetMaxLength.Call(obj, uintptr(value))
}

func ComboBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := comboBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetParentColor(obj uintptr, value bool) {
   comboBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := comboBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   comboBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := comboBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetParentFont(obj uintptr, value bool) {
   comboBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := comboBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetParentShowHint(obj uintptr, value bool) {
   comboBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetPopupMenu.Call(obj)
    return ret
}

func ComboBox_SetPopupMenu(obj uintptr, value uintptr) {
   comboBox_SetPopupMenu.Call(obj, value)
}

func ComboBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := comboBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetShowHint(obj uintptr, value bool) {
   comboBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetSorted(obj uintptr) bool {
    ret, _, _ := comboBox_GetSorted.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetSorted(obj uintptr, value bool) {
   comboBox_SetSorted.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := comboBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ComboBox_SetTabOrder(obj uintptr, value TTabOrder) {
   comboBox_SetTabOrder.Call(obj, uintptr(value))
}

func ComboBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := comboBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetTabStop(obj uintptr, value bool) {
   comboBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetText(obj uintptr) string {
    ret, _, _ := comboBox_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_SetText(obj uintptr, value string) {
   comboBox_SetText.Call(obj, GoStrToDStr(value))
}

func ComboBox_GetVisible(obj uintptr) bool {
    ret, _, _ := comboBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetVisible(obj uintptr, value bool) {
   comboBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ComboBox_SetOnChange(obj uintptr, fn interface{}) {
    comboBox_SetOnChange.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnClick(obj uintptr, fn interface{}) {
    comboBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    comboBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnDblClick(obj uintptr, fn interface{}) {
    comboBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    comboBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnDragOver(obj uintptr, fn interface{}) {
    comboBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnDrawItem(obj uintptr, fn interface{}) {
    comboBox_SetOnDrawItem.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    comboBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnEnter(obj uintptr, fn interface{}) {
    comboBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnExit(obj uintptr, fn interface{}) {
    comboBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    comboBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    comboBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    comboBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
    comboBox_SetOnMeasureItem.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    comboBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    comboBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ComboBox_SetOnSelect(obj uintptr, fn interface{}) {
    comboBox_SetOnSelect.Call(obj, addEventToMap(fn))
}

func ComboBox_GetItems(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetItems.Call(obj)
    return ret
}

func ComboBox_SetItems(obj uintptr, value uintptr) {
   comboBox_SetItems.Call(obj, value)
}

func ComboBox_GetSelText(obj uintptr) string {
    ret, _, _ := comboBox_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_SetSelText(obj uintptr, value string) {
   comboBox_SetSelText.Call(obj, GoStrToDStr(value))
}

func ComboBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetCanvas.Call(obj)
    return ret
}

func ComboBox_GetDroppedDown(obj uintptr) bool {
    ret, _, _ := comboBox_GetDroppedDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetDroppedDown(obj uintptr, value bool) {
   comboBox_SetDroppedDown.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetSelLength(obj uintptr) int32 {
    ret, _, _ := comboBox_GetSelLength.Call(obj)
    return int32(ret)
}

func ComboBox_SetSelLength(obj uintptr, value int32) {
   comboBox_SetSelLength.Call(obj, uintptr(value))
}

func ComboBox_GetSelStart(obj uintptr) int32 {
    ret, _, _ := comboBox_GetSelStart.Call(obj)
    return int32(ret)
}

func ComboBox_SetSelStart(obj uintptr, value int32) {
   comboBox_SetSelStart.Call(obj, uintptr(value))
}

func ComboBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := comboBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ComboBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := comboBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetDockSite(obj uintptr, value bool) {
   comboBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := comboBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := comboBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ComboBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetBrush.Call(obj)
    return ret
}

func ComboBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := comboBox_GetControlCount.Call(obj)
    return int32(ret)
}

func ComboBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := comboBox_GetHandle.Call(obj)
    return HWND(ret)
}

func ComboBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := comboBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ComboBox_SetParentWindow(obj uintptr, value HWND) {
   comboBox_SetParentWindow.Call(obj, uintptr(value))
}

func ComboBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := comboBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_SetUseDockManager(obj uintptr, value bool) {
   comboBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ComboBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetAction.Call(obj)
    return ret
}

func ComboBox_SetAction(obj uintptr, value uintptr) {
   comboBox_SetAction.Call(obj, value)
}

func ComboBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    comboBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_SetBoundsRect(obj uintptr, value TRect) {
   comboBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ComboBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := comboBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func ComboBox_SetClientHeight(obj uintptr, value int32) {
   comboBox_SetClientHeight.Call(obj, uintptr(value))
}

func ComboBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    comboBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    comboBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := comboBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func ComboBox_SetClientWidth(obj uintptr, value int32) {
   comboBox_SetClientWidth.Call(obj, uintptr(value))
}

func ComboBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := comboBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func ComboBox_SetControlState(obj uintptr, value TControlState) {
   comboBox_SetControlState.Call(obj, uintptr(value))
}

func ComboBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := comboBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ComboBox_SetControlStyle(obj uintptr, value TControlStyle) {
   comboBox_SetControlStyle.Call(obj, uintptr(value))
}

func ComboBox_GetFloating(obj uintptr) bool {
    ret, _, _ := comboBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetParent.Call(obj)
    return ret
}

func ComboBox_SetParent(obj uintptr, value uintptr) {
   comboBox_SetParent.Call(obj, value)
}

func ComboBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := comboBox_GetLeft.Call(obj)
    return int32(ret)
}

func ComboBox_SetLeft(obj uintptr, value int32) {
   comboBox_SetLeft.Call(obj, uintptr(value))
}

func ComboBox_GetTop(obj uintptr) int32 {
    ret, _, _ := comboBox_GetTop.Call(obj)
    return int32(ret)
}

func ComboBox_SetTop(obj uintptr, value int32) {
   comboBox_SetTop.Call(obj, uintptr(value))
}

func ComboBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := comboBox_GetWidth.Call(obj)
    return int32(ret)
}

func ComboBox_SetWidth(obj uintptr, value int32) {
   comboBox_SetWidth.Call(obj, uintptr(value))
}

func ComboBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := comboBox_GetHeight.Call(obj)
    return int32(ret)
}

func ComboBox_SetHeight(obj uintptr, value int32) {
   comboBox_SetHeight.Call(obj, uintptr(value))
}

func ComboBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := comboBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func ComboBox_SetCursor(obj uintptr, value TCursor) {
   comboBox_SetCursor.Call(obj, uintptr(value))
}

func ComboBox_GetHint(obj uintptr) string {
    ret, _, _ := comboBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_SetHint(obj uintptr, value string) {
   comboBox_SetHint.Call(obj, GoStrToDStr(value))
}

func ComboBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := comboBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func ComboBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := comboBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ComboBox_SetComponentIndex(obj uintptr, value int32) {
   comboBox_SetComponentIndex.Call(obj, uintptr(value))
}

func ComboBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetOwner.Call(obj)
    return ret
}

func ComboBox_GetName(obj uintptr) string {
    ret, _, _ := comboBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBox_SetName(obj uintptr, value string) {
   comboBox_SetName.Call(obj, GoStrToDStr(value))
}

func ComboBox_GetTag(obj uintptr) int {
    ret, _, _ := comboBox_GetTag.Call(obj)
    return int(ret)
}

func ComboBox_SetTag(obj uintptr, value int) {
   comboBox_SetTag.Call(obj, uintptr(value))
}

func ComboBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func ComboBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   comboBox_SetAnchorSideLeft.Call(obj, value)
}

func ComboBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetAnchorSideTop.Call(obj)
    return ret
}

func ComboBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   comboBox_SetAnchorSideTop.Call(obj, value)
}

func ComboBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetAnchorSideRight.Call(obj)
    return ret
}

func ComboBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   comboBox_SetAnchorSideRight.Call(obj, value)
}

func ComboBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func ComboBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   comboBox_SetAnchorSideBottom.Call(obj, value)
}

func ComboBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetChildSizing.Call(obj)
    return ret
}

func ComboBox_SetChildSizing(obj uintptr, value uintptr) {
   comboBox_SetChildSizing.Call(obj, value)
}

func ComboBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := comboBox_GetBorderSpacing.Call(obj)
    return ret
}

func ComboBox_SetBorderSpacing(obj uintptr, value uintptr) {
   comboBox_SetBorderSpacing.Call(obj, value)
}

func ComboBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ComboBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ComboBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := comboBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ComboBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := comboBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ComboBox_StaticClassType() TClass {
    r, _, _:= comboBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPanel ---------------------------

func Panel_Create(obj uintptr) uintptr {
    ret, _, _ := panel_Create.Call(obj)
    return ret
}

func Panel_Free(obj uintptr) {
    panel_Free.Call(obj)
}

func Panel_CanFocus(obj uintptr) bool {
    ret, _, _ := panel_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := panel_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Panel_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := panel_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Panel_DisableAlign(obj uintptr)  {
    panel_DisableAlign.Call(obj)
}

func Panel_EnableAlign(obj uintptr)  {
    panel_EnableAlign.Call(obj)
}

func Panel_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := panel_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Panel_FlipChildren(obj uintptr, AllLevels bool)  {
    panel_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Panel_Focused(obj uintptr) bool {
    ret, _, _ := panel_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_HandleAllocated(obj uintptr) bool {
    ret, _, _ := panel_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_InsertControl(obj uintptr, AControl uintptr)  {
    panel_InsertControl.Call(obj, AControl )
}

func Panel_Invalidate(obj uintptr)  {
    panel_Invalidate.Call(obj)
}

func Panel_RemoveControl(obj uintptr, AControl uintptr)  {
    panel_RemoveControl.Call(obj, AControl )
}

func Panel_Realign(obj uintptr)  {
    panel_Realign.Call(obj)
}

func Panel_Repaint(obj uintptr)  {
    panel_Repaint.Call(obj)
}

func Panel_ScaleBy(obj uintptr, M int32, D int32)  {
    panel_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Panel_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    panel_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Panel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    panel_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Panel_SetFocus(obj uintptr)  {
    panel_SetFocus.Call(obj)
}

func Panel_Update(obj uintptr)  {
    panel_Update.Call(obj)
}

func Panel_BringToFront(obj uintptr)  {
    panel_BringToFront.Call(obj)
}

func Panel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    panel_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    panel_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_Dragging(obj uintptr) bool {
    ret, _, _ := panel_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_HasParent(obj uintptr) bool {
    ret, _, _ := panel_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_Hide(obj uintptr)  {
    panel_Hide.Call(obj)
}

func Panel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := panel_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Panel_Refresh(obj uintptr)  {
    panel_Refresh.Call(obj)
}

func Panel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    panel_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    panel_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_SendToBack(obj uintptr)  {
    panel_SendToBack.Call(obj)
}

func Panel_Show(obj uintptr)  {
    panel_Show.Call(obj)
}

func Panel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := panel_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Panel_GetTextLen(obj uintptr) int32 {
    ret, _, _ := panel_GetTextLen.Call(obj)
    return int32(ret)
}

func Panel_SetTextBuf(obj uintptr, Buffer string)  {
    panel_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Panel_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := panel_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Panel_GetNamePath(obj uintptr) string {
    ret, _, _ := panel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_Assign(obj uintptr, Source uintptr)  {
    panel_Assign.Call(obj, Source )
}

func Panel_ClassType(obj uintptr) TClass {
    ret, _, _ := panel_ClassType.Call(obj)
    return TClass(ret)
}

func Panel_ClassName(obj uintptr) string {
    ret, _, _ := panel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := panel_InstanceSize.Call(obj)
    return int32(ret)
}

func Panel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := panel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Panel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := panel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Panel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := panel_GetHashCode.Call(obj)
    return int32(ret)
}

func Panel_ToString(obj uintptr) string {
    ret, _, _ := panel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    panel_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Panel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    panel_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Panel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    panel_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Panel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    panel_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Panel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    panel_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Panel_AnchorClient(obj uintptr, ASpace int32)  {
    panel_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Panel_GetAlign(obj uintptr) TAlign {
    ret, _, _ := panel_GetAlign.Call(obj)
    return TAlign(ret)
}

func Panel_SetAlign(obj uintptr, value TAlign) {
   panel_SetAlign.Call(obj, uintptr(value))
}

func Panel_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := panel_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func Panel_SetAlignment(obj uintptr, value TAlignment) {
   panel_SetAlignment.Call(obj, uintptr(value))
}

func Panel_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := panel_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Panel_SetAnchors(obj uintptr, value TAnchors) {
   panel_SetAnchors.Call(obj, uintptr(value))
}

func Panel_GetAutoSize(obj uintptr) bool {
    ret, _, _ := panel_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetAutoSize(obj uintptr, value bool) {
   panel_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Panel_GetBevelInner(obj uintptr) TBevelCut {
    ret, _, _ := panel_GetBevelInner.Call(obj)
    return TBevelCut(ret)
}

func Panel_SetBevelInner(obj uintptr, value TBevelCut) {
   panel_SetBevelInner.Call(obj, uintptr(value))
}

func Panel_GetBevelOuter(obj uintptr) TBevelCut {
    ret, _, _ := panel_GetBevelOuter.Call(obj)
    return TBevelCut(ret)
}

func Panel_SetBevelOuter(obj uintptr, value TBevelCut) {
   panel_SetBevelOuter.Call(obj, uintptr(value))
}

func Panel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := panel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Panel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   panel_SetBiDiMode.Call(obj, uintptr(value))
}

func Panel_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := panel_GetBorderWidth.Call(obj)
    return int32(ret)
}

func Panel_SetBorderWidth(obj uintptr, value int32) {
   panel_SetBorderWidth.Call(obj, uintptr(value))
}

func Panel_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := panel_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func Panel_SetBorderStyle(obj uintptr, value TBorderStyle) {
   panel_SetBorderStyle.Call(obj, uintptr(value))
}

func Panel_GetCaption(obj uintptr) string {
    ret, _, _ := panel_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_SetCaption(obj uintptr, value string) {
   panel_SetCaption.Call(obj, GoStrToDStr(value))
}

func Panel_GetColor(obj uintptr) TColor {
    ret, _, _ := panel_GetColor.Call(obj)
    return TColor(ret)
}

func Panel_SetColor(obj uintptr, value TColor) {
   panel_SetColor.Call(obj, uintptr(value))
}

func Panel_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := panel_GetConstraints.Call(obj)
    return ret
}

func Panel_SetConstraints(obj uintptr, value uintptr) {
   panel_SetConstraints.Call(obj, value)
}

func Panel_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := panel_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetUseDockManager(obj uintptr, value bool) {
   panel_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Panel_GetDockSite(obj uintptr) bool {
    ret, _, _ := panel_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetDockSite(obj uintptr, value bool) {
   panel_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Panel_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := panel_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetDoubleBuffered(obj uintptr, value bool) {
   panel_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Panel_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := panel_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Panel_SetDragCursor(obj uintptr, value TCursor) {
   panel_SetDragCursor.Call(obj, uintptr(value))
}

func Panel_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := panel_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Panel_SetDragKind(obj uintptr, value TDragKind) {
   panel_SetDragKind.Call(obj, uintptr(value))
}

func Panel_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := panel_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Panel_SetDragMode(obj uintptr, value TDragMode) {
   panel_SetDragMode.Call(obj, uintptr(value))
}

func Panel_GetEnabled(obj uintptr) bool {
    ret, _, _ := panel_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetEnabled(obj uintptr, value bool) {
   panel_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Panel_GetFullRepaint(obj uintptr) bool {
    ret, _, _ := panel_GetFullRepaint.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetFullRepaint(obj uintptr, value bool) {
   panel_SetFullRepaint.Call(obj, GoBoolToDBool(value))
}

func Panel_GetFont(obj uintptr) uintptr {
    ret, _, _ := panel_GetFont.Call(obj)
    return ret
}

func Panel_SetFont(obj uintptr, value uintptr) {
   panel_SetFont.Call(obj, value)
}

func Panel_GetParentBackground(obj uintptr) bool {
    ret, _, _ := panel_GetParentBackground.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetParentBackground(obj uintptr, value bool) {
   panel_SetParentBackground.Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentColor(obj uintptr) bool {
    ret, _, _ := panel_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetParentColor(obj uintptr, value bool) {
   panel_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := panel_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetParentDoubleBuffered(obj uintptr, value bool) {
   panel_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentFont(obj uintptr) bool {
    ret, _, _ := panel_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetParentFont(obj uintptr, value bool) {
   panel_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Panel_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := panel_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetParentShowHint(obj uintptr, value bool) {
   panel_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Panel_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := panel_GetPopupMenu.Call(obj)
    return ret
}

func Panel_SetPopupMenu(obj uintptr, value uintptr) {
   panel_SetPopupMenu.Call(obj, value)
}

func Panel_GetShowHint(obj uintptr) bool {
    ret, _, _ := panel_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetShowHint(obj uintptr, value bool) {
   panel_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Panel_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := panel_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Panel_SetTabOrder(obj uintptr, value TTabOrder) {
   panel_SetTabOrder.Call(obj, uintptr(value))
}

func Panel_GetTabStop(obj uintptr) bool {
    ret, _, _ := panel_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetTabStop(obj uintptr, value bool) {
   panel_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Panel_GetVisible(obj uintptr) bool {
    ret, _, _ := panel_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_SetVisible(obj uintptr, value bool) {
   panel_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Panel_SetOnAlignPosition(obj uintptr, fn interface{}) {
    panel_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func Panel_SetOnClick(obj uintptr, fn interface{}) {
    panel_SetOnClick.Call(obj, addEventToMap(fn))
}

func Panel_SetOnContextPopup(obj uintptr, fn interface{}) {
    panel_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Panel_SetOnDockDrop(obj uintptr, fn interface{}) {
    panel_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func Panel_SetOnDblClick(obj uintptr, fn interface{}) {
    panel_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Panel_SetOnDragDrop(obj uintptr, fn interface{}) {
    panel_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Panel_SetOnDragOver(obj uintptr, fn interface{}) {
    panel_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Panel_SetOnEndDock(obj uintptr, fn interface{}) {
    panel_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func Panel_SetOnEndDrag(obj uintptr, fn interface{}) {
    panel_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Panel_SetOnEnter(obj uintptr, fn interface{}) {
    panel_SetOnEnter.Call(obj, addEventToMap(fn))
}

func Panel_SetOnExit(obj uintptr, fn interface{}) {
    panel_SetOnExit.Call(obj, addEventToMap(fn))
}

func Panel_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    panel_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func Panel_SetOnMouseDown(obj uintptr, fn interface{}) {
    panel_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Panel_SetOnMouseEnter(obj uintptr, fn interface{}) {
    panel_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Panel_SetOnMouseLeave(obj uintptr, fn interface{}) {
    panel_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Panel_SetOnMouseMove(obj uintptr, fn interface{}) {
    panel_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Panel_SetOnMouseUp(obj uintptr, fn interface{}) {
    panel_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Panel_SetOnResize(obj uintptr, fn interface{}) {
    panel_SetOnResize.Call(obj, addEventToMap(fn))
}

func Panel_SetOnStartDock(obj uintptr, fn interface{}) {
    panel_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func Panel_SetOnUnDock(obj uintptr, fn interface{}) {
    panel_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func Panel_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := panel_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Panel_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := panel_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := panel_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Panel_GetBrush(obj uintptr) uintptr {
    ret, _, _ := panel_GetBrush.Call(obj)
    return ret
}

func Panel_GetControlCount(obj uintptr) int32 {
    ret, _, _ := panel_GetControlCount.Call(obj)
    return int32(ret)
}

func Panel_GetHandle(obj uintptr) HWND {
    ret, _, _ := panel_GetHandle.Call(obj)
    return HWND(ret)
}

func Panel_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := panel_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Panel_SetParentWindow(obj uintptr, value HWND) {
   panel_SetParentWindow.Call(obj, uintptr(value))
}

func Panel_GetAction(obj uintptr) uintptr {
    ret, _, _ := panel_GetAction.Call(obj)
    return ret
}

func Panel_SetAction(obj uintptr, value uintptr) {
   panel_SetAction.Call(obj, value)
}

func Panel_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    panel_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_SetBoundsRect(obj uintptr, value TRect) {
   panel_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Panel_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := panel_GetClientHeight.Call(obj)
    return int32(ret)
}

func Panel_SetClientHeight(obj uintptr, value int32) {
   panel_SetClientHeight.Call(obj, uintptr(value))
}

func Panel_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    panel_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_GetClientRect(obj uintptr) TRect {
    var ret TRect
    panel_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Panel_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := panel_GetClientWidth.Call(obj)
    return int32(ret)
}

func Panel_SetClientWidth(obj uintptr, value int32) {
   panel_SetClientWidth.Call(obj, uintptr(value))
}

func Panel_GetControlState(obj uintptr) TControlState {
    ret, _, _ := panel_GetControlState.Call(obj)
    return TControlState(ret)
}

func Panel_SetControlState(obj uintptr, value TControlState) {
   panel_SetControlState.Call(obj, uintptr(value))
}

func Panel_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := panel_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Panel_SetControlStyle(obj uintptr, value TControlStyle) {
   panel_SetControlStyle.Call(obj, uintptr(value))
}

func Panel_GetFloating(obj uintptr) bool {
    ret, _, _ := panel_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Panel_GetParent(obj uintptr) uintptr {
    ret, _, _ := panel_GetParent.Call(obj)
    return ret
}

func Panel_SetParent(obj uintptr, value uintptr) {
   panel_SetParent.Call(obj, value)
}

func Panel_GetLeft(obj uintptr) int32 {
    ret, _, _ := panel_GetLeft.Call(obj)
    return int32(ret)
}

func Panel_SetLeft(obj uintptr, value int32) {
   panel_SetLeft.Call(obj, uintptr(value))
}

func Panel_GetTop(obj uintptr) int32 {
    ret, _, _ := panel_GetTop.Call(obj)
    return int32(ret)
}

func Panel_SetTop(obj uintptr, value int32) {
   panel_SetTop.Call(obj, uintptr(value))
}

func Panel_GetWidth(obj uintptr) int32 {
    ret, _, _ := panel_GetWidth.Call(obj)
    return int32(ret)
}

func Panel_SetWidth(obj uintptr, value int32) {
   panel_SetWidth.Call(obj, uintptr(value))
}

func Panel_GetHeight(obj uintptr) int32 {
    ret, _, _ := panel_GetHeight.Call(obj)
    return int32(ret)
}

func Panel_SetHeight(obj uintptr, value int32) {
   panel_SetHeight.Call(obj, uintptr(value))
}

func Panel_GetCursor(obj uintptr) TCursor {
    ret, _, _ := panel_GetCursor.Call(obj)
    return TCursor(ret)
}

func Panel_SetCursor(obj uintptr, value TCursor) {
   panel_SetCursor.Call(obj, uintptr(value))
}

func Panel_GetHint(obj uintptr) string {
    ret, _, _ := panel_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_SetHint(obj uintptr, value string) {
   panel_SetHint.Call(obj, GoStrToDStr(value))
}

func Panel_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := panel_GetComponentCount.Call(obj)
    return int32(ret)
}

func Panel_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := panel_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Panel_SetComponentIndex(obj uintptr, value int32) {
   panel_SetComponentIndex.Call(obj, uintptr(value))
}

func Panel_GetOwner(obj uintptr) uintptr {
    ret, _, _ := panel_GetOwner.Call(obj)
    return ret
}

func Panel_GetName(obj uintptr) string {
    ret, _, _ := panel_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Panel_SetName(obj uintptr, value string) {
   panel_SetName.Call(obj, GoStrToDStr(value))
}

func Panel_GetTag(obj uintptr) int {
    ret, _, _ := panel_GetTag.Call(obj)
    return int(ret)
}

func Panel_SetTag(obj uintptr, value int) {
   panel_SetTag.Call(obj, uintptr(value))
}

func Panel_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := panel_GetAnchorSideLeft.Call(obj)
    return ret
}

func Panel_SetAnchorSideLeft(obj uintptr, value uintptr) {
   panel_SetAnchorSideLeft.Call(obj, value)
}

func Panel_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := panel_GetAnchorSideTop.Call(obj)
    return ret
}

func Panel_SetAnchorSideTop(obj uintptr, value uintptr) {
   panel_SetAnchorSideTop.Call(obj, value)
}

func Panel_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := panel_GetAnchorSideRight.Call(obj)
    return ret
}

func Panel_SetAnchorSideRight(obj uintptr, value uintptr) {
   panel_SetAnchorSideRight.Call(obj, value)
}

func Panel_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := panel_GetAnchorSideBottom.Call(obj)
    return ret
}

func Panel_SetAnchorSideBottom(obj uintptr, value uintptr) {
   panel_SetAnchorSideBottom.Call(obj, value)
}

func Panel_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := panel_GetChildSizing.Call(obj)
    return ret
}

func Panel_SetChildSizing(obj uintptr, value uintptr) {
   panel_SetChildSizing.Call(obj, value)
}

func Panel_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := panel_GetBorderSpacing.Call(obj)
    return ret
}

func Panel_SetBorderSpacing(obj uintptr, value uintptr) {
   panel_SetBorderSpacing.Call(obj, value)
}

func Panel_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := panel_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Panel_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := panel_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Panel_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := panel_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Panel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := panel_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Panel_StaticClassType() TClass {
    r, _, _:= panel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TImage ---------------------------

func Image_Create(obj uintptr) uintptr {
    ret, _, _ := image_Create.Call(obj)
    return ret
}

func Image_Free(obj uintptr) {
    image_Free.Call(obj)
}

func Image_BringToFront(obj uintptr)  {
    image_BringToFront.Call(obj)
}

func Image_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    image_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    image_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_Dragging(obj uintptr) bool {
    ret, _, _ := image_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_HasParent(obj uintptr) bool {
    ret, _, _ := image_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_Hide(obj uintptr)  {
    image_Hide.Call(obj)
}

func Image_Invalidate(obj uintptr)  {
    image_Invalidate.Call(obj)
}

func Image_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := image_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Image_Refresh(obj uintptr)  {
    image_Refresh.Call(obj)
}

func Image_Repaint(obj uintptr)  {
    image_Repaint.Call(obj)
}

func Image_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    image_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    image_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_SendToBack(obj uintptr)  {
    image_SendToBack.Call(obj)
}

func Image_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    image_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Image_Show(obj uintptr)  {
    image_Show.Call(obj)
}

func Image_Update(obj uintptr)  {
    image_Update.Call(obj)
}

func Image_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := image_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Image_GetTextLen(obj uintptr) int32 {
    ret, _, _ := image_GetTextLen.Call(obj)
    return int32(ret)
}

func Image_SetTextBuf(obj uintptr, Buffer string)  {
    image_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Image_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := image_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Image_GetNamePath(obj uintptr) string {
    ret, _, _ := image_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Image_Assign(obj uintptr, Source uintptr)  {
    image_Assign.Call(obj, Source )
}

func Image_ClassType(obj uintptr) TClass {
    ret, _, _ := image_ClassType.Call(obj)
    return TClass(ret)
}

func Image_ClassName(obj uintptr) string {
    ret, _, _ := image_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Image_InstanceSize(obj uintptr) int32 {
    ret, _, _ := image_InstanceSize.Call(obj)
    return int32(ret)
}

func Image_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := image_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Image_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := image_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Image_GetHashCode(obj uintptr) int32 {
    ret, _, _ := image_GetHashCode.Call(obj)
    return int32(ret)
}

func Image_ToString(obj uintptr) string {
    ret, _, _ := image_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Image_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    image_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Image_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    image_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Image_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    image_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Image_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    image_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Image_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    image_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Image_AnchorClient(obj uintptr, ASpace int32)  {
    image_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Image_GetAntialiasingMode(obj uintptr) TAntialiasingMode {
    ret, _, _ := image_GetAntialiasingMode.Call(obj)
    return TAntialiasingMode(ret)
}

func Image_SetAntialiasingMode(obj uintptr, value TAntialiasingMode) {
   image_SetAntialiasingMode.Call(obj, uintptr(value))
}

func Image_GetKeepOriginXWhenClipped(obj uintptr) bool {
    ret, _, _ := image_GetKeepOriginXWhenClipped.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetKeepOriginXWhenClipped(obj uintptr, value bool) {
   image_SetKeepOriginXWhenClipped.Call(obj, GoBoolToDBool(value))
}

func Image_GetKeepOriginYWhenClipped(obj uintptr) bool {
    ret, _, _ := image_GetKeepOriginYWhenClipped.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetKeepOriginYWhenClipped(obj uintptr, value bool) {
   image_SetKeepOriginYWhenClipped.Call(obj, GoBoolToDBool(value))
}

func Image_GetStretchInEnabled(obj uintptr) bool {
    ret, _, _ := image_GetStretchInEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetStretchInEnabled(obj uintptr, value bool) {
   image_SetStretchInEnabled.Call(obj, GoBoolToDBool(value))
}

func Image_GetStretchOutEnabled(obj uintptr) bool {
    ret, _, _ := image_GetStretchOutEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetStretchOutEnabled(obj uintptr, value bool) {
   image_SetStretchOutEnabled.Call(obj, GoBoolToDBool(value))
}

func Image_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := image_GetCanvas.Call(obj)
    return ret
}

func Image_GetAlign(obj uintptr) TAlign {
    ret, _, _ := image_GetAlign.Call(obj)
    return TAlign(ret)
}

func Image_SetAlign(obj uintptr, value TAlign) {
   image_SetAlign.Call(obj, uintptr(value))
}

func Image_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := image_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Image_SetAnchors(obj uintptr, value TAnchors) {
   image_SetAnchors.Call(obj, uintptr(value))
}

func Image_GetAutoSize(obj uintptr) bool {
    ret, _, _ := image_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetAutoSize(obj uintptr, value bool) {
   image_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Image_GetCenter(obj uintptr) bool {
    ret, _, _ := image_GetCenter.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetCenter(obj uintptr, value bool) {
   image_SetCenter.Call(obj, GoBoolToDBool(value))
}

func Image_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := image_GetConstraints.Call(obj)
    return ret
}

func Image_SetConstraints(obj uintptr, value uintptr) {
   image_SetConstraints.Call(obj, value)
}

func Image_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := image_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Image_SetDragCursor(obj uintptr, value TCursor) {
   image_SetDragCursor.Call(obj, uintptr(value))
}

func Image_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := image_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Image_SetDragMode(obj uintptr, value TDragMode) {
   image_SetDragMode.Call(obj, uintptr(value))
}

func Image_GetEnabled(obj uintptr) bool {
    ret, _, _ := image_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetEnabled(obj uintptr, value bool) {
   image_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Image_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := image_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetParentShowHint(obj uintptr, value bool) {
   image_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Image_GetPicture(obj uintptr) uintptr {
    ret, _, _ := image_GetPicture.Call(obj)
    return ret
}

func Image_SetPicture(obj uintptr, value uintptr) {
   image_SetPicture.Call(obj, value)
}

func Image_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := image_GetPopupMenu.Call(obj)
    return ret
}

func Image_SetPopupMenu(obj uintptr, value uintptr) {
   image_SetPopupMenu.Call(obj, value)
}

func Image_GetProportional(obj uintptr) bool {
    ret, _, _ := image_GetProportional.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetProportional(obj uintptr, value bool) {
   image_SetProportional.Call(obj, GoBoolToDBool(value))
}

func Image_GetShowHint(obj uintptr) bool {
    ret, _, _ := image_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetShowHint(obj uintptr, value bool) {
   image_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Image_GetStretch(obj uintptr) bool {
    ret, _, _ := image_GetStretch.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetStretch(obj uintptr, value bool) {
   image_SetStretch.Call(obj, GoBoolToDBool(value))
}

func Image_GetTransparent(obj uintptr) bool {
    ret, _, _ := image_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetTransparent(obj uintptr, value bool) {
   image_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func Image_GetVisible(obj uintptr) bool {
    ret, _, _ := image_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_SetVisible(obj uintptr, value bool) {
   image_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Image_SetOnClick(obj uintptr, fn interface{}) {
    image_SetOnClick.Call(obj, addEventToMap(fn))
}

func Image_SetOnDblClick(obj uintptr, fn interface{}) {
    image_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Image_SetOnDragDrop(obj uintptr, fn interface{}) {
    image_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Image_SetOnDragOver(obj uintptr, fn interface{}) {
    image_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Image_SetOnEndDrag(obj uintptr, fn interface{}) {
    image_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Image_SetOnMouseDown(obj uintptr, fn interface{}) {
    image_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Image_SetOnMouseEnter(obj uintptr, fn interface{}) {
    image_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Image_SetOnMouseLeave(obj uintptr, fn interface{}) {
    image_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Image_SetOnMouseMove(obj uintptr, fn interface{}) {
    image_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Image_SetOnMouseUp(obj uintptr, fn interface{}) {
    image_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Image_GetAction(obj uintptr) uintptr {
    ret, _, _ := image_GetAction.Call(obj)
    return ret
}

func Image_SetAction(obj uintptr, value uintptr) {
   image_SetAction.Call(obj, value)
}

func Image_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := image_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Image_SetBiDiMode(obj uintptr, value TBiDiMode) {
   image_SetBiDiMode.Call(obj, uintptr(value))
}

func Image_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    image_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_SetBoundsRect(obj uintptr, value TRect) {
   image_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Image_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := image_GetClientHeight.Call(obj)
    return int32(ret)
}

func Image_SetClientHeight(obj uintptr, value int32) {
   image_SetClientHeight.Call(obj, uintptr(value))
}

func Image_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    image_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_GetClientRect(obj uintptr) TRect {
    var ret TRect
    image_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Image_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := image_GetClientWidth.Call(obj)
    return int32(ret)
}

func Image_SetClientWidth(obj uintptr, value int32) {
   image_SetClientWidth.Call(obj, uintptr(value))
}

func Image_GetControlState(obj uintptr) TControlState {
    ret, _, _ := image_GetControlState.Call(obj)
    return TControlState(ret)
}

func Image_SetControlState(obj uintptr, value TControlState) {
   image_SetControlState.Call(obj, uintptr(value))
}

func Image_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := image_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Image_SetControlStyle(obj uintptr, value TControlStyle) {
   image_SetControlStyle.Call(obj, uintptr(value))
}

func Image_GetFloating(obj uintptr) bool {
    ret, _, _ := image_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Image_GetParent(obj uintptr) uintptr {
    ret, _, _ := image_GetParent.Call(obj)
    return ret
}

func Image_SetParent(obj uintptr, value uintptr) {
   image_SetParent.Call(obj, value)
}

func Image_GetLeft(obj uintptr) int32 {
    ret, _, _ := image_GetLeft.Call(obj)
    return int32(ret)
}

func Image_SetLeft(obj uintptr, value int32) {
   image_SetLeft.Call(obj, uintptr(value))
}

func Image_GetTop(obj uintptr) int32 {
    ret, _, _ := image_GetTop.Call(obj)
    return int32(ret)
}

func Image_SetTop(obj uintptr, value int32) {
   image_SetTop.Call(obj, uintptr(value))
}

func Image_GetWidth(obj uintptr) int32 {
    ret, _, _ := image_GetWidth.Call(obj)
    return int32(ret)
}

func Image_SetWidth(obj uintptr, value int32) {
   image_SetWidth.Call(obj, uintptr(value))
}

func Image_GetHeight(obj uintptr) int32 {
    ret, _, _ := image_GetHeight.Call(obj)
    return int32(ret)
}

func Image_SetHeight(obj uintptr, value int32) {
   image_SetHeight.Call(obj, uintptr(value))
}

func Image_GetCursor(obj uintptr) TCursor {
    ret, _, _ := image_GetCursor.Call(obj)
    return TCursor(ret)
}

func Image_SetCursor(obj uintptr, value TCursor) {
   image_SetCursor.Call(obj, uintptr(value))
}

func Image_GetHint(obj uintptr) string {
    ret, _, _ := image_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Image_SetHint(obj uintptr, value string) {
   image_SetHint.Call(obj, GoStrToDStr(value))
}

func Image_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := image_GetComponentCount.Call(obj)
    return int32(ret)
}

func Image_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := image_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Image_SetComponentIndex(obj uintptr, value int32) {
   image_SetComponentIndex.Call(obj, uintptr(value))
}

func Image_GetOwner(obj uintptr) uintptr {
    ret, _, _ := image_GetOwner.Call(obj)
    return ret
}

func Image_GetName(obj uintptr) string {
    ret, _, _ := image_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Image_SetName(obj uintptr, value string) {
   image_SetName.Call(obj, GoStrToDStr(value))
}

func Image_GetTag(obj uintptr) int {
    ret, _, _ := image_GetTag.Call(obj)
    return int(ret)
}

func Image_SetTag(obj uintptr, value int) {
   image_SetTag.Call(obj, uintptr(value))
}

func Image_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := image_GetAnchorSideLeft.Call(obj)
    return ret
}

func Image_SetAnchorSideLeft(obj uintptr, value uintptr) {
   image_SetAnchorSideLeft.Call(obj, value)
}

func Image_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := image_GetAnchorSideTop.Call(obj)
    return ret
}

func Image_SetAnchorSideTop(obj uintptr, value uintptr) {
   image_SetAnchorSideTop.Call(obj, value)
}

func Image_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := image_GetAnchorSideRight.Call(obj)
    return ret
}

func Image_SetAnchorSideRight(obj uintptr, value uintptr) {
   image_SetAnchorSideRight.Call(obj, value)
}

func Image_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := image_GetAnchorSideBottom.Call(obj)
    return ret
}

func Image_SetAnchorSideBottom(obj uintptr, value uintptr) {
   image_SetAnchorSideBottom.Call(obj, value)
}

func Image_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := image_GetBorderSpacing.Call(obj)
    return ret
}

func Image_SetBorderSpacing(obj uintptr, value uintptr) {
   image_SetBorderSpacing.Call(obj, value)
}

func Image_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := image_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Image_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := image_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Image_StaticClassType() TClass {
    r, _, _:= image_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TLinkLabel ---------------------------

func LinkLabel_Create(obj uintptr) uintptr {
    ret, _, _ := linkLabel_Create.Call(obj)
    return ret
}

func LinkLabel_Free(obj uintptr) {
    linkLabel_Free.Call(obj)
}

func LinkLabel_Invalidate(obj uintptr)  {
    linkLabel_Invalidate.Call(obj)
}

func LinkLabel_Repaint(obj uintptr)  {
    linkLabel_Repaint.Call(obj)
}

func LinkLabel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    linkLabel_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func LinkLabel_Update(obj uintptr)  {
    linkLabel_Update.Call(obj)
}

func LinkLabel_BringToFront(obj uintptr)  {
    linkLabel_BringToFront.Call(obj)
}

func LinkLabel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    linkLabel_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    linkLabel_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_Dragging(obj uintptr) bool {
    ret, _, _ := linkLabel_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_HasParent(obj uintptr) bool {
    ret, _, _ := linkLabel_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_Hide(obj uintptr)  {
    linkLabel_Hide.Call(obj)
}

func LinkLabel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := linkLabel_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func LinkLabel_Refresh(obj uintptr)  {
    linkLabel_Refresh.Call(obj)
}

func LinkLabel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    linkLabel_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    linkLabel_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_SendToBack(obj uintptr)  {
    linkLabel_SendToBack.Call(obj)
}

func LinkLabel_Show(obj uintptr)  {
    linkLabel_Show.Call(obj)
}

func LinkLabel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := linkLabel_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func LinkLabel_GetTextLen(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetTextLen.Call(obj)
    return int32(ret)
}

func LinkLabel_SetTextBuf(obj uintptr, Buffer string)  {
    linkLabel_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func LinkLabel_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := linkLabel_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func LinkLabel_GetNamePath(obj uintptr) string {
    ret, _, _ := linkLabel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_Assign(obj uintptr, Source uintptr)  {
    linkLabel_Assign.Call(obj, Source )
}

func LinkLabel_ClassType(obj uintptr) TClass {
    ret, _, _ := linkLabel_ClassType.Call(obj)
    return TClass(ret)
}

func LinkLabel_ClassName(obj uintptr) string {
    ret, _, _ := linkLabel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := linkLabel_InstanceSize.Call(obj)
    return int32(ret)
}

func LinkLabel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := linkLabel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func LinkLabel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := linkLabel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func LinkLabel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetHashCode.Call(obj)
    return int32(ret)
}

func LinkLabel_ToString(obj uintptr) string {
    ret, _, _ := linkLabel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    linkLabel_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func LinkLabel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    linkLabel_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func LinkLabel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    linkLabel_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func LinkLabel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    linkLabel_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func LinkLabel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    linkLabel_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func LinkLabel_AnchorClient(obj uintptr, ASpace int32)  {
    linkLabel_AnchorClient.Call(obj, uintptr(ASpace) )
}

func LinkLabel_GetAlign(obj uintptr) TAlign {
    ret, _, _ := linkLabel_GetAlign.Call(obj)
    return TAlign(ret)
}

func LinkLabel_SetAlign(obj uintptr, value TAlign) {
   linkLabel_SetAlign.Call(obj, uintptr(value))
}

func LinkLabel_GetAlignment(obj uintptr) TLinkAlignment {
    ret, _, _ := linkLabel_GetAlignment.Call(obj)
    return TLinkAlignment(ret)
}

func LinkLabel_SetAlignment(obj uintptr, value TLinkAlignment) {
   linkLabel_SetAlignment.Call(obj, uintptr(value))
}

func LinkLabel_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := linkLabel_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func LinkLabel_SetAnchors(obj uintptr, value TAnchors) {
   linkLabel_SetAnchors.Call(obj, uintptr(value))
}

func LinkLabel_GetAutoSize(obj uintptr) bool {
    ret, _, _ := linkLabel_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetAutoSize(obj uintptr, value bool) {
   linkLabel_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetCaption(obj uintptr) string {
    ret, _, _ := linkLabel_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_SetCaption(obj uintptr, value string) {
   linkLabel_SetCaption.Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetColor(obj uintptr) TColor {
    ret, _, _ := linkLabel_GetColor.Call(obj)
    return TColor(ret)
}

func LinkLabel_SetColor(obj uintptr, value TColor) {
   linkLabel_SetColor.Call(obj, uintptr(value))
}

func LinkLabel_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetConstraints.Call(obj)
    return ret
}

func LinkLabel_SetConstraints(obj uintptr, value uintptr) {
   linkLabel_SetConstraints.Call(obj, value)
}

func LinkLabel_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := linkLabel_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func LinkLabel_SetDragCursor(obj uintptr, value TCursor) {
   linkLabel_SetDragCursor.Call(obj, uintptr(value))
}

func LinkLabel_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := linkLabel_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func LinkLabel_SetDragKind(obj uintptr, value TDragKind) {
   linkLabel_SetDragKind.Call(obj, uintptr(value))
}

func LinkLabel_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := linkLabel_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func LinkLabel_SetDragMode(obj uintptr, value TDragMode) {
   linkLabel_SetDragMode.Call(obj, uintptr(value))
}

func LinkLabel_GetEnabled(obj uintptr) bool {
    ret, _, _ := linkLabel_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetEnabled(obj uintptr, value bool) {
   linkLabel_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetFont(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetFont.Call(obj)
    return ret
}

func LinkLabel_SetFont(obj uintptr, value uintptr) {
   linkLabel_SetFont.Call(obj, value)
}

func LinkLabel_GetParentColor(obj uintptr) bool {
    ret, _, _ := linkLabel_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetParentColor(obj uintptr, value bool) {
   linkLabel_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetParentFont(obj uintptr) bool {
    ret, _, _ := linkLabel_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetParentFont(obj uintptr, value bool) {
   linkLabel_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := linkLabel_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetParentShowHint(obj uintptr, value bool) {
   linkLabel_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetPopupMenu.Call(obj)
    return ret
}

func LinkLabel_SetPopupMenu(obj uintptr, value uintptr) {
   linkLabel_SetPopupMenu.Call(obj, value)
}

func LinkLabel_GetShowHint(obj uintptr) bool {
    ret, _, _ := linkLabel_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetShowHint(obj uintptr, value bool) {
   linkLabel_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_GetVisible(obj uintptr) bool {
    ret, _, _ := linkLabel_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_SetVisible(obj uintptr, value bool) {
   linkLabel_SetVisible.Call(obj, GoBoolToDBool(value))
}

func LinkLabel_SetOnClick(obj uintptr, fn interface{}) {
    linkLabel_SetOnClick.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnContextPopup(obj uintptr, fn interface{}) {
    linkLabel_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnDblClick(obj uintptr, fn interface{}) {
    linkLabel_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnDragDrop(obj uintptr, fn interface{}) {
    linkLabel_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnDragOver(obj uintptr, fn interface{}) {
    linkLabel_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnEndDrag(obj uintptr, fn interface{}) {
    linkLabel_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnMouseDown(obj uintptr, fn interface{}) {
    linkLabel_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnMouseEnter(obj uintptr, fn interface{}) {
    linkLabel_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnMouseLeave(obj uintptr, fn interface{}) {
    linkLabel_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnMouseMove(obj uintptr, fn interface{}) {
    linkLabel_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnMouseUp(obj uintptr, fn interface{}) {
    linkLabel_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func LinkLabel_SetOnLinkClick(obj uintptr, fn interface{}) {
    linkLabel_SetOnLinkClick.Call(obj, addEventToMap(fn))
}

func LinkLabel_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := linkLabel_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_GetAction(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetAction.Call(obj)
    return ret
}

func LinkLabel_SetAction(obj uintptr, value uintptr) {
   linkLabel_SetAction.Call(obj, value)
}

func LinkLabel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := linkLabel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func LinkLabel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   linkLabel_SetBiDiMode.Call(obj, uintptr(value))
}

func LinkLabel_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    linkLabel_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_SetBoundsRect(obj uintptr, value TRect) {
   linkLabel_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func LinkLabel_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetClientHeight.Call(obj)
    return int32(ret)
}

func LinkLabel_SetClientHeight(obj uintptr, value int32) {
   linkLabel_SetClientHeight.Call(obj, uintptr(value))
}

func LinkLabel_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    linkLabel_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_GetClientRect(obj uintptr) TRect {
    var ret TRect
    linkLabel_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LinkLabel_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetClientWidth.Call(obj)
    return int32(ret)
}

func LinkLabel_SetClientWidth(obj uintptr, value int32) {
   linkLabel_SetClientWidth.Call(obj, uintptr(value))
}

func LinkLabel_GetControlState(obj uintptr) TControlState {
    ret, _, _ := linkLabel_GetControlState.Call(obj)
    return TControlState(ret)
}

func LinkLabel_SetControlState(obj uintptr, value TControlState) {
   linkLabel_SetControlState.Call(obj, uintptr(value))
}

func LinkLabel_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := linkLabel_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func LinkLabel_SetControlStyle(obj uintptr, value TControlStyle) {
   linkLabel_SetControlStyle.Call(obj, uintptr(value))
}

func LinkLabel_GetFloating(obj uintptr) bool {
    ret, _, _ := linkLabel_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func LinkLabel_GetParent(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetParent.Call(obj)
    return ret
}

func LinkLabel_SetParent(obj uintptr, value uintptr) {
   linkLabel_SetParent.Call(obj, value)
}

func LinkLabel_GetLeft(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetLeft.Call(obj)
    return int32(ret)
}

func LinkLabel_SetLeft(obj uintptr, value int32) {
   linkLabel_SetLeft.Call(obj, uintptr(value))
}

func LinkLabel_GetTop(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetTop.Call(obj)
    return int32(ret)
}

func LinkLabel_SetTop(obj uintptr, value int32) {
   linkLabel_SetTop.Call(obj, uintptr(value))
}

func LinkLabel_GetWidth(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetWidth.Call(obj)
    return int32(ret)
}

func LinkLabel_SetWidth(obj uintptr, value int32) {
   linkLabel_SetWidth.Call(obj, uintptr(value))
}

func LinkLabel_GetHeight(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetHeight.Call(obj)
    return int32(ret)
}

func LinkLabel_SetHeight(obj uintptr, value int32) {
   linkLabel_SetHeight.Call(obj, uintptr(value))
}

func LinkLabel_GetHint(obj uintptr) string {
    ret, _, _ := linkLabel_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_SetHint(obj uintptr, value string) {
   linkLabel_SetHint.Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetComponentCount.Call(obj)
    return int32(ret)
}

func LinkLabel_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := linkLabel_GetComponentIndex.Call(obj)
    return int32(ret)
}

func LinkLabel_SetComponentIndex(obj uintptr, value int32) {
   linkLabel_SetComponentIndex.Call(obj, uintptr(value))
}

func LinkLabel_GetOwner(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetOwner.Call(obj)
    return ret
}

func LinkLabel_GetName(obj uintptr) string {
    ret, _, _ := linkLabel_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func LinkLabel_SetName(obj uintptr, value string) {
   linkLabel_SetName.Call(obj, GoStrToDStr(value))
}

func LinkLabel_GetTag(obj uintptr) int {
    ret, _, _ := linkLabel_GetTag.Call(obj)
    return int(ret)
}

func LinkLabel_SetTag(obj uintptr, value int) {
   linkLabel_SetTag.Call(obj, uintptr(value))
}

func LinkLabel_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetAnchorSideLeft.Call(obj)
    return ret
}

func LinkLabel_SetAnchorSideLeft(obj uintptr, value uintptr) {
   linkLabel_SetAnchorSideLeft.Call(obj, value)
}

func LinkLabel_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetAnchorSideTop.Call(obj)
    return ret
}

func LinkLabel_SetAnchorSideTop(obj uintptr, value uintptr) {
   linkLabel_SetAnchorSideTop.Call(obj, value)
}

func LinkLabel_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetAnchorSideRight.Call(obj)
    return ret
}

func LinkLabel_SetAnchorSideRight(obj uintptr, value uintptr) {
   linkLabel_SetAnchorSideRight.Call(obj, value)
}

func LinkLabel_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetAnchorSideBottom.Call(obj)
    return ret
}

func LinkLabel_SetAnchorSideBottom(obj uintptr, value uintptr) {
   linkLabel_SetAnchorSideBottom.Call(obj, value)
}

func LinkLabel_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := linkLabel_GetBorderSpacing.Call(obj)
    return ret
}

func LinkLabel_SetBorderSpacing(obj uintptr, value uintptr) {
   linkLabel_SetBorderSpacing.Call(obj, value)
}

func LinkLabel_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := linkLabel_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func LinkLabel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := linkLabel_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func LinkLabel_StaticClassType() TClass {
    r, _, _:= linkLabel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSpeedButton ---------------------------

func SpeedButton_Create(obj uintptr) uintptr {
    ret, _, _ := speedButton_Create.Call(obj)
    return ret
}

func SpeedButton_Free(obj uintptr) {
    speedButton_Free.Call(obj)
}

func SpeedButton_Click(obj uintptr)  {
    speedButton_Click.Call(obj)
}

func SpeedButton_BringToFront(obj uintptr)  {
    speedButton_BringToFront.Call(obj)
}

func SpeedButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    speedButton_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    speedButton_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_Dragging(obj uintptr) bool {
    ret, _, _ := speedButton_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_HasParent(obj uintptr) bool {
    ret, _, _ := speedButton_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_Hide(obj uintptr)  {
    speedButton_Hide.Call(obj)
}

func SpeedButton_Invalidate(obj uintptr)  {
    speedButton_Invalidate.Call(obj)
}

func SpeedButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := speedButton_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func SpeedButton_Refresh(obj uintptr)  {
    speedButton_Refresh.Call(obj)
}

func SpeedButton_Repaint(obj uintptr)  {
    speedButton_Repaint.Call(obj)
}

func SpeedButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    speedButton_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    speedButton_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_SendToBack(obj uintptr)  {
    speedButton_SendToBack.Call(obj)
}

func SpeedButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    speedButton_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func SpeedButton_Show(obj uintptr)  {
    speedButton_Show.Call(obj)
}

func SpeedButton_Update(obj uintptr)  {
    speedButton_Update.Call(obj)
}

func SpeedButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := speedButton_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func SpeedButton_GetTextLen(obj uintptr) int32 {
    ret, _, _ := speedButton_GetTextLen.Call(obj)
    return int32(ret)
}

func SpeedButton_SetTextBuf(obj uintptr, Buffer string)  {
    speedButton_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func SpeedButton_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := speedButton_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func SpeedButton_GetNamePath(obj uintptr) string {
    ret, _, _ := speedButton_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_Assign(obj uintptr, Source uintptr)  {
    speedButton_Assign.Call(obj, Source )
}

func SpeedButton_ClassType(obj uintptr) TClass {
    ret, _, _ := speedButton_ClassType.Call(obj)
    return TClass(ret)
}

func SpeedButton_ClassName(obj uintptr) string {
    ret, _, _ := speedButton_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_InstanceSize(obj uintptr) int32 {
    ret, _, _ := speedButton_InstanceSize.Call(obj)
    return int32(ret)
}

func SpeedButton_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := speedButton_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SpeedButton_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := speedButton_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SpeedButton_GetHashCode(obj uintptr) int32 {
    ret, _, _ := speedButton_GetHashCode.Call(obj)
    return int32(ret)
}

func SpeedButton_ToString(obj uintptr) string {
    ret, _, _ := speedButton_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    speedButton_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func SpeedButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    speedButton_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func SpeedButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    speedButton_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func SpeedButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    speedButton_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func SpeedButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    speedButton_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func SpeedButton_AnchorClient(obj uintptr, ASpace int32)  {
    speedButton_AnchorClient.Call(obj, uintptr(ASpace) )
}

func SpeedButton_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := speedButton_GetImageIndex.Call(obj)
    return int32(ret)
}

func SpeedButton_SetImageIndex(obj uintptr, value int32) {
   speedButton_SetImageIndex.Call(obj, uintptr(value))
}

func SpeedButton_GetImages(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetImages.Call(obj)
    return ret
}

func SpeedButton_SetImages(obj uintptr, value uintptr) {
   speedButton_SetImages.Call(obj, value)
}

func SpeedButton_GetImageWidth(obj uintptr) int32 {
    ret, _, _ := speedButton_GetImageWidth.Call(obj)
    return int32(ret)
}

func SpeedButton_SetImageWidth(obj uintptr, value int32) {
   speedButton_SetImageWidth.Call(obj, uintptr(value))
}

func SpeedButton_GetShowCaption(obj uintptr) bool {
    ret, _, _ := speedButton_GetShowCaption.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetShowCaption(obj uintptr, value bool) {
   speedButton_SetShowCaption.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetAction(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetAction.Call(obj)
    return ret
}

func SpeedButton_SetAction(obj uintptr, value uintptr) {
   speedButton_SetAction.Call(obj, value)
}

func SpeedButton_GetAlign(obj uintptr) TAlign {
    ret, _, _ := speedButton_GetAlign.Call(obj)
    return TAlign(ret)
}

func SpeedButton_SetAlign(obj uintptr, value TAlign) {
   speedButton_SetAlign.Call(obj, uintptr(value))
}

func SpeedButton_GetAllowAllUp(obj uintptr) bool {
    ret, _, _ := speedButton_GetAllowAllUp.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetAllowAllUp(obj uintptr, value bool) {
   speedButton_SetAllowAllUp.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := speedButton_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func SpeedButton_SetAnchors(obj uintptr, value TAnchors) {
   speedButton_SetAnchors.Call(obj, uintptr(value))
}

func SpeedButton_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := speedButton_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func SpeedButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
   speedButton_SetBiDiMode.Call(obj, uintptr(value))
}

func SpeedButton_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetConstraints.Call(obj)
    return ret
}

func SpeedButton_SetConstraints(obj uintptr, value uintptr) {
   speedButton_SetConstraints.Call(obj, value)
}

func SpeedButton_GetGroupIndex(obj uintptr) int32 {
    ret, _, _ := speedButton_GetGroupIndex.Call(obj)
    return int32(ret)
}

func SpeedButton_SetGroupIndex(obj uintptr, value int32) {
   speedButton_SetGroupIndex.Call(obj, uintptr(value))
}

func SpeedButton_GetDown(obj uintptr) bool {
    ret, _, _ := speedButton_GetDown.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetDown(obj uintptr, value bool) {
   speedButton_SetDown.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetCaption(obj uintptr) string {
    ret, _, _ := speedButton_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_SetCaption(obj uintptr, value string) {
   speedButton_SetCaption.Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetEnabled(obj uintptr) bool {
    ret, _, _ := speedButton_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetEnabled(obj uintptr, value bool) {
   speedButton_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetFlat(obj uintptr) bool {
    ret, _, _ := speedButton_GetFlat.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetFlat(obj uintptr, value bool) {
   speedButton_SetFlat.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetFont(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetFont.Call(obj)
    return ret
}

func SpeedButton_SetFont(obj uintptr, value uintptr) {
   speedButton_SetFont.Call(obj, value)
}

func SpeedButton_GetGlyph(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetGlyph.Call(obj)
    return ret
}

func SpeedButton_SetGlyph(obj uintptr, value uintptr) {
   speedButton_SetGlyph.Call(obj, value)
}

func SpeedButton_GetLayout(obj uintptr) TButtonLayout {
    ret, _, _ := speedButton_GetLayout.Call(obj)
    return TButtonLayout(ret)
}

func SpeedButton_SetLayout(obj uintptr, value TButtonLayout) {
   speedButton_SetLayout.Call(obj, uintptr(value))
}

func SpeedButton_GetNumGlyphs(obj uintptr) TNumGlyphs {
    ret, _, _ := speedButton_GetNumGlyphs.Call(obj)
    return TNumGlyphs(ret)
}

func SpeedButton_SetNumGlyphs(obj uintptr, value TNumGlyphs) {
   speedButton_SetNumGlyphs.Call(obj, uintptr(value))
}

func SpeedButton_GetParentFont(obj uintptr) bool {
    ret, _, _ := speedButton_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetParentFont(obj uintptr, value bool) {
   speedButton_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := speedButton_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetParentShowHint(obj uintptr, value bool) {
   speedButton_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetPopupMenu.Call(obj)
    return ret
}

func SpeedButton_SetPopupMenu(obj uintptr, value uintptr) {
   speedButton_SetPopupMenu.Call(obj, value)
}

func SpeedButton_GetShowHint(obj uintptr) bool {
    ret, _, _ := speedButton_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetShowHint(obj uintptr, value bool) {
   speedButton_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetSpacing(obj uintptr) int32 {
    ret, _, _ := speedButton_GetSpacing.Call(obj)
    return int32(ret)
}

func SpeedButton_SetSpacing(obj uintptr, value int32) {
   speedButton_SetSpacing.Call(obj, uintptr(value))
}

func SpeedButton_GetTransparent(obj uintptr) bool {
    ret, _, _ := speedButton_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetTransparent(obj uintptr, value bool) {
   speedButton_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_GetVisible(obj uintptr) bool {
    ret, _, _ := speedButton_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_SetVisible(obj uintptr, value bool) {
   speedButton_SetVisible.Call(obj, GoBoolToDBool(value))
}

func SpeedButton_SetOnClick(obj uintptr, fn interface{}) {
    speedButton_SetOnClick.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnDblClick(obj uintptr, fn interface{}) {
    speedButton_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnMouseDown(obj uintptr, fn interface{}) {
    speedButton_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
    speedButton_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
    speedButton_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnMouseMove(obj uintptr, fn interface{}) {
    speedButton_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func SpeedButton_SetOnMouseUp(obj uintptr, fn interface{}) {
    speedButton_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func SpeedButton_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    speedButton_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_SetBoundsRect(obj uintptr, value TRect) {
   speedButton_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func SpeedButton_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := speedButton_GetClientHeight.Call(obj)
    return int32(ret)
}

func SpeedButton_SetClientHeight(obj uintptr, value int32) {
   speedButton_SetClientHeight.Call(obj, uintptr(value))
}

func SpeedButton_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    speedButton_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_GetClientRect(obj uintptr) TRect {
    var ret TRect
    speedButton_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpeedButton_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := speedButton_GetClientWidth.Call(obj)
    return int32(ret)
}

func SpeedButton_SetClientWidth(obj uintptr, value int32) {
   speedButton_SetClientWidth.Call(obj, uintptr(value))
}

func SpeedButton_GetControlState(obj uintptr) TControlState {
    ret, _, _ := speedButton_GetControlState.Call(obj)
    return TControlState(ret)
}

func SpeedButton_SetControlState(obj uintptr, value TControlState) {
   speedButton_SetControlState.Call(obj, uintptr(value))
}

func SpeedButton_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := speedButton_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func SpeedButton_SetControlStyle(obj uintptr, value TControlStyle) {
   speedButton_SetControlStyle.Call(obj, uintptr(value))
}

func SpeedButton_GetFloating(obj uintptr) bool {
    ret, _, _ := speedButton_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func SpeedButton_GetParent(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetParent.Call(obj)
    return ret
}

func SpeedButton_SetParent(obj uintptr, value uintptr) {
   speedButton_SetParent.Call(obj, value)
}

func SpeedButton_GetLeft(obj uintptr) int32 {
    ret, _, _ := speedButton_GetLeft.Call(obj)
    return int32(ret)
}

func SpeedButton_SetLeft(obj uintptr, value int32) {
   speedButton_SetLeft.Call(obj, uintptr(value))
}

func SpeedButton_GetTop(obj uintptr) int32 {
    ret, _, _ := speedButton_GetTop.Call(obj)
    return int32(ret)
}

func SpeedButton_SetTop(obj uintptr, value int32) {
   speedButton_SetTop.Call(obj, uintptr(value))
}

func SpeedButton_GetWidth(obj uintptr) int32 {
    ret, _, _ := speedButton_GetWidth.Call(obj)
    return int32(ret)
}

func SpeedButton_SetWidth(obj uintptr, value int32) {
   speedButton_SetWidth.Call(obj, uintptr(value))
}

func SpeedButton_GetHeight(obj uintptr) int32 {
    ret, _, _ := speedButton_GetHeight.Call(obj)
    return int32(ret)
}

func SpeedButton_SetHeight(obj uintptr, value int32) {
   speedButton_SetHeight.Call(obj, uintptr(value))
}

func SpeedButton_GetCursor(obj uintptr) TCursor {
    ret, _, _ := speedButton_GetCursor.Call(obj)
    return TCursor(ret)
}

func SpeedButton_SetCursor(obj uintptr, value TCursor) {
   speedButton_SetCursor.Call(obj, uintptr(value))
}

func SpeedButton_GetHint(obj uintptr) string {
    ret, _, _ := speedButton_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_SetHint(obj uintptr, value string) {
   speedButton_SetHint.Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := speedButton_GetComponentCount.Call(obj)
    return int32(ret)
}

func SpeedButton_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := speedButton_GetComponentIndex.Call(obj)
    return int32(ret)
}

func SpeedButton_SetComponentIndex(obj uintptr, value int32) {
   speedButton_SetComponentIndex.Call(obj, uintptr(value))
}

func SpeedButton_GetOwner(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetOwner.Call(obj)
    return ret
}

func SpeedButton_GetName(obj uintptr) string {
    ret, _, _ := speedButton_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func SpeedButton_SetName(obj uintptr, value string) {
   speedButton_SetName.Call(obj, GoStrToDStr(value))
}

func SpeedButton_GetTag(obj uintptr) int {
    ret, _, _ := speedButton_GetTag.Call(obj)
    return int(ret)
}

func SpeedButton_SetTag(obj uintptr, value int) {
   speedButton_SetTag.Call(obj, uintptr(value))
}

func SpeedButton_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetAnchorSideLeft.Call(obj)
    return ret
}

func SpeedButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
   speedButton_SetAnchorSideLeft.Call(obj, value)
}

func SpeedButton_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetAnchorSideTop.Call(obj)
    return ret
}

func SpeedButton_SetAnchorSideTop(obj uintptr, value uintptr) {
   speedButton_SetAnchorSideTop.Call(obj, value)
}

func SpeedButton_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetAnchorSideRight.Call(obj)
    return ret
}

func SpeedButton_SetAnchorSideRight(obj uintptr, value uintptr) {
   speedButton_SetAnchorSideRight.Call(obj, value)
}

func SpeedButton_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetAnchorSideBottom.Call(obj)
    return ret
}

func SpeedButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
   speedButton_SetAnchorSideBottom.Call(obj, value)
}

func SpeedButton_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := speedButton_GetBorderSpacing.Call(obj)
    return ret
}

func SpeedButton_SetBorderSpacing(obj uintptr, value uintptr) {
   speedButton_SetBorderSpacing.Call(obj, value)
}

func SpeedButton_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := speedButton_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func SpeedButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := speedButton_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func SpeedButton_StaticClassType() TClass {
    r, _, _:= speedButton_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSplitter ---------------------------

func Splitter_Create(obj uintptr) uintptr {
    ret, _, _ := splitter_Create.Call(obj)
    return ret
}

func Splitter_Free(obj uintptr) {
    splitter_Free.Call(obj)
}

func Splitter_BringToFront(obj uintptr)  {
    splitter_BringToFront.Call(obj)
}

func Splitter_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    splitter_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    splitter_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_Dragging(obj uintptr) bool {
    ret, _, _ := splitter_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_HasParent(obj uintptr) bool {
    ret, _, _ := splitter_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_Hide(obj uintptr)  {
    splitter_Hide.Call(obj)
}

func Splitter_Invalidate(obj uintptr)  {
    splitter_Invalidate.Call(obj)
}

func Splitter_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := splitter_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Splitter_Refresh(obj uintptr)  {
    splitter_Refresh.Call(obj)
}

func Splitter_Repaint(obj uintptr)  {
    splitter_Repaint.Call(obj)
}

func Splitter_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    splitter_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    splitter_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_SendToBack(obj uintptr)  {
    splitter_SendToBack.Call(obj)
}

func Splitter_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    splitter_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Splitter_Show(obj uintptr)  {
    splitter_Show.Call(obj)
}

func Splitter_Update(obj uintptr)  {
    splitter_Update.Call(obj)
}

func Splitter_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := splitter_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Splitter_GetTextLen(obj uintptr) int32 {
    ret, _, _ := splitter_GetTextLen.Call(obj)
    return int32(ret)
}

func Splitter_SetTextBuf(obj uintptr, Buffer string)  {
    splitter_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Splitter_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := splitter_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Splitter_GetNamePath(obj uintptr) string {
    ret, _, _ := splitter_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Splitter_Assign(obj uintptr, Source uintptr)  {
    splitter_Assign.Call(obj, Source )
}

func Splitter_ClassType(obj uintptr) TClass {
    ret, _, _ := splitter_ClassType.Call(obj)
    return TClass(ret)
}

func Splitter_ClassName(obj uintptr) string {
    ret, _, _ := splitter_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Splitter_InstanceSize(obj uintptr) int32 {
    ret, _, _ := splitter_InstanceSize.Call(obj)
    return int32(ret)
}

func Splitter_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := splitter_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Splitter_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := splitter_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Splitter_GetHashCode(obj uintptr) int32 {
    ret, _, _ := splitter_GetHashCode.Call(obj)
    return int32(ret)
}

func Splitter_ToString(obj uintptr) string {
    ret, _, _ := splitter_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Splitter_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    splitter_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Splitter_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    splitter_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Splitter_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    splitter_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Splitter_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    splitter_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Splitter_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    splitter_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Splitter_AnchorClient(obj uintptr, ASpace int32)  {
    splitter_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Splitter_GetResizeAnchor(obj uintptr) TAnchorKind {
    ret, _, _ := splitter_GetResizeAnchor.Call(obj)
    return TAnchorKind(ret)
}

func Splitter_SetResizeAnchor(obj uintptr, value TAnchorKind) {
   splitter_SetResizeAnchor.Call(obj, uintptr(value))
}

func Splitter_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := splitter_GetCanvas.Call(obj)
    return ret
}

func Splitter_GetAlign(obj uintptr) TAlign {
    ret, _, _ := splitter_GetAlign.Call(obj)
    return TAlign(ret)
}

func Splitter_SetAlign(obj uintptr, value TAlign) {
   splitter_SetAlign.Call(obj, uintptr(value))
}

func Splitter_GetColor(obj uintptr) TColor {
    ret, _, _ := splitter_GetColor.Call(obj)
    return TColor(ret)
}

func Splitter_SetColor(obj uintptr, value TColor) {
   splitter_SetColor.Call(obj, uintptr(value))
}

func Splitter_GetCursor(obj uintptr) TCursor {
    ret, _, _ := splitter_GetCursor.Call(obj)
    return TCursor(ret)
}

func Splitter_SetCursor(obj uintptr, value TCursor) {
   splitter_SetCursor.Call(obj, uintptr(value))
}

func Splitter_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := splitter_GetConstraints.Call(obj)
    return ret
}

func Splitter_SetConstraints(obj uintptr, value uintptr) {
   splitter_SetConstraints.Call(obj, value)
}

func Splitter_GetParentColor(obj uintptr) bool {
    ret, _, _ := splitter_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_SetParentColor(obj uintptr, value bool) {
   splitter_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Splitter_GetVisible(obj uintptr) bool {
    ret, _, _ := splitter_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_SetVisible(obj uintptr, value bool) {
   splitter_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Splitter_GetWidth(obj uintptr) int32 {
    ret, _, _ := splitter_GetWidth.Call(obj)
    return int32(ret)
}

func Splitter_SetWidth(obj uintptr, value int32) {
   splitter_SetWidth.Call(obj, uintptr(value))
}

func Splitter_SetOnPaint(obj uintptr, fn interface{}) {
    splitter_SetOnPaint.Call(obj, addEventToMap(fn))
}

func Splitter_GetEnabled(obj uintptr) bool {
    ret, _, _ := splitter_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_SetEnabled(obj uintptr, value bool) {
   splitter_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Splitter_GetAction(obj uintptr) uintptr {
    ret, _, _ := splitter_GetAction.Call(obj)
    return ret
}

func Splitter_SetAction(obj uintptr, value uintptr) {
   splitter_SetAction.Call(obj, value)
}

func Splitter_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := splitter_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Splitter_SetAnchors(obj uintptr, value TAnchors) {
   splitter_SetAnchors.Call(obj, uintptr(value))
}

func Splitter_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := splitter_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Splitter_SetBiDiMode(obj uintptr, value TBiDiMode) {
   splitter_SetBiDiMode.Call(obj, uintptr(value))
}

func Splitter_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    splitter_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_SetBoundsRect(obj uintptr, value TRect) {
   splitter_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Splitter_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := splitter_GetClientHeight.Call(obj)
    return int32(ret)
}

func Splitter_SetClientHeight(obj uintptr, value int32) {
   splitter_SetClientHeight.Call(obj, uintptr(value))
}

func Splitter_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    splitter_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_GetClientRect(obj uintptr) TRect {
    var ret TRect
    splitter_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Splitter_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := splitter_GetClientWidth.Call(obj)
    return int32(ret)
}

func Splitter_SetClientWidth(obj uintptr, value int32) {
   splitter_SetClientWidth.Call(obj, uintptr(value))
}

func Splitter_GetControlState(obj uintptr) TControlState {
    ret, _, _ := splitter_GetControlState.Call(obj)
    return TControlState(ret)
}

func Splitter_SetControlState(obj uintptr, value TControlState) {
   splitter_SetControlState.Call(obj, uintptr(value))
}

func Splitter_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := splitter_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Splitter_SetControlStyle(obj uintptr, value TControlStyle) {
   splitter_SetControlStyle.Call(obj, uintptr(value))
}

func Splitter_GetFloating(obj uintptr) bool {
    ret, _, _ := splitter_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_GetShowHint(obj uintptr) bool {
    ret, _, _ := splitter_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Splitter_SetShowHint(obj uintptr, value bool) {
   splitter_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Splitter_GetParent(obj uintptr) uintptr {
    ret, _, _ := splitter_GetParent.Call(obj)
    return ret
}

func Splitter_SetParent(obj uintptr, value uintptr) {
   splitter_SetParent.Call(obj, value)
}

func Splitter_GetLeft(obj uintptr) int32 {
    ret, _, _ := splitter_GetLeft.Call(obj)
    return int32(ret)
}

func Splitter_SetLeft(obj uintptr, value int32) {
   splitter_SetLeft.Call(obj, uintptr(value))
}

func Splitter_GetTop(obj uintptr) int32 {
    ret, _, _ := splitter_GetTop.Call(obj)
    return int32(ret)
}

func Splitter_SetTop(obj uintptr, value int32) {
   splitter_SetTop.Call(obj, uintptr(value))
}

func Splitter_GetHeight(obj uintptr) int32 {
    ret, _, _ := splitter_GetHeight.Call(obj)
    return int32(ret)
}

func Splitter_SetHeight(obj uintptr, value int32) {
   splitter_SetHeight.Call(obj, uintptr(value))
}

func Splitter_GetHint(obj uintptr) string {
    ret, _, _ := splitter_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Splitter_SetHint(obj uintptr, value string) {
   splitter_SetHint.Call(obj, GoStrToDStr(value))
}

func Splitter_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := splitter_GetComponentCount.Call(obj)
    return int32(ret)
}

func Splitter_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := splitter_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Splitter_SetComponentIndex(obj uintptr, value int32) {
   splitter_SetComponentIndex.Call(obj, uintptr(value))
}

func Splitter_GetOwner(obj uintptr) uintptr {
    ret, _, _ := splitter_GetOwner.Call(obj)
    return ret
}

func Splitter_GetName(obj uintptr) string {
    ret, _, _ := splitter_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Splitter_SetName(obj uintptr, value string) {
   splitter_SetName.Call(obj, GoStrToDStr(value))
}

func Splitter_GetTag(obj uintptr) int {
    ret, _, _ := splitter_GetTag.Call(obj)
    return int(ret)
}

func Splitter_SetTag(obj uintptr, value int) {
   splitter_SetTag.Call(obj, uintptr(value))
}

func Splitter_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := splitter_GetAnchorSideLeft.Call(obj)
    return ret
}

func Splitter_SetAnchorSideLeft(obj uintptr, value uintptr) {
   splitter_SetAnchorSideLeft.Call(obj, value)
}

func Splitter_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := splitter_GetAnchorSideTop.Call(obj)
    return ret
}

func Splitter_SetAnchorSideTop(obj uintptr, value uintptr) {
   splitter_SetAnchorSideTop.Call(obj, value)
}

func Splitter_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := splitter_GetAnchorSideRight.Call(obj)
    return ret
}

func Splitter_SetAnchorSideRight(obj uintptr, value uintptr) {
   splitter_SetAnchorSideRight.Call(obj, value)
}

func Splitter_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := splitter_GetAnchorSideBottom.Call(obj)
    return ret
}

func Splitter_SetAnchorSideBottom(obj uintptr, value uintptr) {
   splitter_SetAnchorSideBottom.Call(obj, value)
}

func Splitter_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := splitter_GetBorderSpacing.Call(obj)
    return ret
}

func Splitter_SetBorderSpacing(obj uintptr, value uintptr) {
   splitter_SetBorderSpacing.Call(obj, value)
}

func Splitter_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := splitter_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Splitter_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := splitter_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Splitter_StaticClassType() TClass {
    r, _, _:= splitter_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TRadioGroup ---------------------------

func RadioGroup_Create(obj uintptr) uintptr {
    ret, _, _ := radioGroup_Create.Call(obj)
    return ret
}

func RadioGroup_Free(obj uintptr) {
    radioGroup_Free.Call(obj)
}

func RadioGroup_FlipChildren(obj uintptr, AllLevels bool)  {
    radioGroup_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func RadioGroup_CanFocus(obj uintptr) bool {
    ret, _, _ := radioGroup_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := radioGroup_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func RadioGroup_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := radioGroup_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func RadioGroup_DisableAlign(obj uintptr)  {
    radioGroup_DisableAlign.Call(obj)
}

func RadioGroup_EnableAlign(obj uintptr)  {
    radioGroup_EnableAlign.Call(obj)
}

func RadioGroup_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := radioGroup_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func RadioGroup_Focused(obj uintptr) bool {
    ret, _, _ := radioGroup_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_HandleAllocated(obj uintptr) bool {
    ret, _, _ := radioGroup_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_InsertControl(obj uintptr, AControl uintptr)  {
    radioGroup_InsertControl.Call(obj, AControl )
}

func RadioGroup_Invalidate(obj uintptr)  {
    radioGroup_Invalidate.Call(obj)
}

func RadioGroup_RemoveControl(obj uintptr, AControl uintptr)  {
    radioGroup_RemoveControl.Call(obj, AControl )
}

func RadioGroup_Realign(obj uintptr)  {
    radioGroup_Realign.Call(obj)
}

func RadioGroup_Repaint(obj uintptr)  {
    radioGroup_Repaint.Call(obj)
}

func RadioGroup_ScaleBy(obj uintptr, M int32, D int32)  {
    radioGroup_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func RadioGroup_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    radioGroup_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func RadioGroup_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    radioGroup_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func RadioGroup_SetFocus(obj uintptr)  {
    radioGroup_SetFocus.Call(obj)
}

func RadioGroup_Update(obj uintptr)  {
    radioGroup_Update.Call(obj)
}

func RadioGroup_BringToFront(obj uintptr)  {
    radioGroup_BringToFront.Call(obj)
}

func RadioGroup_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    radioGroup_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    radioGroup_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_Dragging(obj uintptr) bool {
    ret, _, _ := radioGroup_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_HasParent(obj uintptr) bool {
    ret, _, _ := radioGroup_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_Hide(obj uintptr)  {
    radioGroup_Hide.Call(obj)
}

func RadioGroup_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := radioGroup_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func RadioGroup_Refresh(obj uintptr)  {
    radioGroup_Refresh.Call(obj)
}

func RadioGroup_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    radioGroup_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    radioGroup_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_SendToBack(obj uintptr)  {
    radioGroup_SendToBack.Call(obj)
}

func RadioGroup_Show(obj uintptr)  {
    radioGroup_Show.Call(obj)
}

func RadioGroup_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := radioGroup_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func RadioGroup_GetTextLen(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetTextLen.Call(obj)
    return int32(ret)
}

func RadioGroup_SetTextBuf(obj uintptr, Buffer string)  {
    radioGroup_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func RadioGroup_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := radioGroup_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func RadioGroup_GetNamePath(obj uintptr) string {
    ret, _, _ := radioGroup_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_Assign(obj uintptr, Source uintptr)  {
    radioGroup_Assign.Call(obj, Source )
}

func RadioGroup_ClassType(obj uintptr) TClass {
    ret, _, _ := radioGroup_ClassType.Call(obj)
    return TClass(ret)
}

func RadioGroup_ClassName(obj uintptr) string {
    ret, _, _ := radioGroup_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_InstanceSize(obj uintptr) int32 {
    ret, _, _ := radioGroup_InstanceSize.Call(obj)
    return int32(ret)
}

func RadioGroup_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := radioGroup_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func RadioGroup_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := radioGroup_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func RadioGroup_GetHashCode(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetHashCode.Call(obj)
    return int32(ret)
}

func RadioGroup_ToString(obj uintptr) string {
    ret, _, _ := radioGroup_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    radioGroup_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RadioGroup_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    radioGroup_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RadioGroup_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    radioGroup_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func RadioGroup_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    radioGroup_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func RadioGroup_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    radioGroup_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func RadioGroup_AnchorClient(obj uintptr, ASpace int32)  {
    radioGroup_AnchorClient.Call(obj, uintptr(ASpace) )
}

func RadioGroup_GetAlign(obj uintptr) TAlign {
    ret, _, _ := radioGroup_GetAlign.Call(obj)
    return TAlign(ret)
}

func RadioGroup_SetAlign(obj uintptr, value TAlign) {
   radioGroup_SetAlign.Call(obj, uintptr(value))
}

func RadioGroup_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := radioGroup_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func RadioGroup_SetAnchors(obj uintptr, value TAnchors) {
   radioGroup_SetAnchors.Call(obj, uintptr(value))
}

func RadioGroup_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := radioGroup_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func RadioGroup_SetBiDiMode(obj uintptr, value TBiDiMode) {
   radioGroup_SetBiDiMode.Call(obj, uintptr(value))
}

func RadioGroup_GetCaption(obj uintptr) string {
    ret, _, _ := radioGroup_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_SetCaption(obj uintptr, value string) {
   radioGroup_SetCaption.Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetColor(obj uintptr) TColor {
    ret, _, _ := radioGroup_GetColor.Call(obj)
    return TColor(ret)
}

func RadioGroup_SetColor(obj uintptr, value TColor) {
   radioGroup_SetColor.Call(obj, uintptr(value))
}

func RadioGroup_GetColumns(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetColumns.Call(obj)
    return int32(ret)
}

func RadioGroup_SetColumns(obj uintptr, value int32) {
   radioGroup_SetColumns.Call(obj, uintptr(value))
}

func RadioGroup_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := radioGroup_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetDoubleBuffered(obj uintptr, value bool) {
   radioGroup_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := radioGroup_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func RadioGroup_SetDragCursor(obj uintptr, value TCursor) {
   radioGroup_SetDragCursor.Call(obj, uintptr(value))
}

func RadioGroup_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := radioGroup_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func RadioGroup_SetDragMode(obj uintptr, value TDragMode) {
   radioGroup_SetDragMode.Call(obj, uintptr(value))
}

func RadioGroup_GetEnabled(obj uintptr) bool {
    ret, _, _ := radioGroup_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetEnabled(obj uintptr, value bool) {
   radioGroup_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetFont(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetFont.Call(obj)
    return ret
}

func RadioGroup_SetFont(obj uintptr, value uintptr) {
   radioGroup_SetFont.Call(obj, value)
}

func RadioGroup_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetItemIndex.Call(obj)
    return int32(ret)
}

func RadioGroup_SetItemIndex(obj uintptr, value int32) {
   radioGroup_SetItemIndex.Call(obj, uintptr(value))
}

func RadioGroup_GetItems(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetItems.Call(obj)
    return ret
}

func RadioGroup_SetItems(obj uintptr, value uintptr) {
   radioGroup_SetItems.Call(obj, value)
}

func RadioGroup_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetConstraints.Call(obj)
    return ret
}

func RadioGroup_SetConstraints(obj uintptr, value uintptr) {
   radioGroup_SetConstraints.Call(obj, value)
}

func RadioGroup_GetParentColor(obj uintptr) bool {
    ret, _, _ := radioGroup_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetParentColor(obj uintptr, value bool) {
   radioGroup_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := radioGroup_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetParentDoubleBuffered(obj uintptr, value bool) {
   radioGroup_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentFont(obj uintptr) bool {
    ret, _, _ := radioGroup_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetParentFont(obj uintptr, value bool) {
   radioGroup_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := radioGroup_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetParentShowHint(obj uintptr, value bool) {
   radioGroup_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetPopupMenu.Call(obj)
    return ret
}

func RadioGroup_SetPopupMenu(obj uintptr, value uintptr) {
   radioGroup_SetPopupMenu.Call(obj, value)
}

func RadioGroup_GetShowHint(obj uintptr) bool {
    ret, _, _ := radioGroup_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetShowHint(obj uintptr, value bool) {
   radioGroup_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := radioGroup_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func RadioGroup_SetTabOrder(obj uintptr, value TTabOrder) {
   radioGroup_SetTabOrder.Call(obj, uintptr(value))
}

func RadioGroup_GetTabStop(obj uintptr) bool {
    ret, _, _ := radioGroup_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetTabStop(obj uintptr, value bool) {
   radioGroup_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetVisible(obj uintptr) bool {
    ret, _, _ := radioGroup_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetVisible(obj uintptr, value bool) {
   radioGroup_SetVisible.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_SetOnClick(obj uintptr, fn interface{}) {
    radioGroup_SetOnClick.Call(obj, addEventToMap(fn))
}

func RadioGroup_SetOnDragDrop(obj uintptr, fn interface{}) {
    radioGroup_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func RadioGroup_SetOnDragOver(obj uintptr, fn interface{}) {
    radioGroup_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func RadioGroup_SetOnEndDrag(obj uintptr, fn interface{}) {
    radioGroup_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func RadioGroup_SetOnEnter(obj uintptr, fn interface{}) {
    radioGroup_SetOnEnter.Call(obj, addEventToMap(fn))
}

func RadioGroup_SetOnExit(obj uintptr, fn interface{}) {
    radioGroup_SetOnExit.Call(obj, addEventToMap(fn))
}

func RadioGroup_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetDockClientCount.Call(obj)
    return int32(ret)
}

func RadioGroup_GetDockSite(obj uintptr) bool {
    ret, _, _ := radioGroup_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetDockSite(obj uintptr, value bool) {
   radioGroup_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := radioGroup_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func RadioGroup_GetBrush(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetBrush.Call(obj)
    return ret
}

func RadioGroup_GetControlCount(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetControlCount.Call(obj)
    return int32(ret)
}

func RadioGroup_GetHandle(obj uintptr) HWND {
    ret, _, _ := radioGroup_GetHandle.Call(obj)
    return HWND(ret)
}

func RadioGroup_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := radioGroup_GetParentWindow.Call(obj)
    return HWND(ret)
}

func RadioGroup_SetParentWindow(obj uintptr, value HWND) {
   radioGroup_SetParentWindow.Call(obj, uintptr(value))
}

func RadioGroup_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := radioGroup_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_SetUseDockManager(obj uintptr, value bool) {
   radioGroup_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func RadioGroup_GetAction(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetAction.Call(obj)
    return ret
}

func RadioGroup_SetAction(obj uintptr, value uintptr) {
   radioGroup_SetAction.Call(obj, value)
}

func RadioGroup_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    radioGroup_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_SetBoundsRect(obj uintptr, value TRect) {
   radioGroup_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RadioGroup_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetClientHeight.Call(obj)
    return int32(ret)
}

func RadioGroup_SetClientHeight(obj uintptr, value int32) {
   radioGroup_SetClientHeight.Call(obj, uintptr(value))
}

func RadioGroup_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    radioGroup_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_GetClientRect(obj uintptr) TRect {
    var ret TRect
    radioGroup_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RadioGroup_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetClientWidth.Call(obj)
    return int32(ret)
}

func RadioGroup_SetClientWidth(obj uintptr, value int32) {
   radioGroup_SetClientWidth.Call(obj, uintptr(value))
}

func RadioGroup_GetControlState(obj uintptr) TControlState {
    ret, _, _ := radioGroup_GetControlState.Call(obj)
    return TControlState(ret)
}

func RadioGroup_SetControlState(obj uintptr, value TControlState) {
   radioGroup_SetControlState.Call(obj, uintptr(value))
}

func RadioGroup_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := radioGroup_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func RadioGroup_SetControlStyle(obj uintptr, value TControlStyle) {
   radioGroup_SetControlStyle.Call(obj, uintptr(value))
}

func RadioGroup_GetFloating(obj uintptr) bool {
    ret, _, _ := radioGroup_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func RadioGroup_GetParent(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetParent.Call(obj)
    return ret
}

func RadioGroup_SetParent(obj uintptr, value uintptr) {
   radioGroup_SetParent.Call(obj, value)
}

func RadioGroup_GetLeft(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetLeft.Call(obj)
    return int32(ret)
}

func RadioGroup_SetLeft(obj uintptr, value int32) {
   radioGroup_SetLeft.Call(obj, uintptr(value))
}

func RadioGroup_GetTop(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetTop.Call(obj)
    return int32(ret)
}

func RadioGroup_SetTop(obj uintptr, value int32) {
   radioGroup_SetTop.Call(obj, uintptr(value))
}

func RadioGroup_GetWidth(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetWidth.Call(obj)
    return int32(ret)
}

func RadioGroup_SetWidth(obj uintptr, value int32) {
   radioGroup_SetWidth.Call(obj, uintptr(value))
}

func RadioGroup_GetHeight(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetHeight.Call(obj)
    return int32(ret)
}

func RadioGroup_SetHeight(obj uintptr, value int32) {
   radioGroup_SetHeight.Call(obj, uintptr(value))
}

func RadioGroup_GetCursor(obj uintptr) TCursor {
    ret, _, _ := radioGroup_GetCursor.Call(obj)
    return TCursor(ret)
}

func RadioGroup_SetCursor(obj uintptr, value TCursor) {
   radioGroup_SetCursor.Call(obj, uintptr(value))
}

func RadioGroup_GetHint(obj uintptr) string {
    ret, _, _ := radioGroup_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_SetHint(obj uintptr, value string) {
   radioGroup_SetHint.Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetComponentCount.Call(obj)
    return int32(ret)
}

func RadioGroup_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := radioGroup_GetComponentIndex.Call(obj)
    return int32(ret)
}

func RadioGroup_SetComponentIndex(obj uintptr, value int32) {
   radioGroup_SetComponentIndex.Call(obj, uintptr(value))
}

func RadioGroup_GetOwner(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetOwner.Call(obj)
    return ret
}

func RadioGroup_GetName(obj uintptr) string {
    ret, _, _ := radioGroup_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func RadioGroup_SetName(obj uintptr, value string) {
   radioGroup_SetName.Call(obj, GoStrToDStr(value))
}

func RadioGroup_GetTag(obj uintptr) int {
    ret, _, _ := radioGroup_GetTag.Call(obj)
    return int(ret)
}

func RadioGroup_SetTag(obj uintptr, value int) {
   radioGroup_SetTag.Call(obj, uintptr(value))
}

func RadioGroup_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetAnchorSideLeft.Call(obj)
    return ret
}

func RadioGroup_SetAnchorSideLeft(obj uintptr, value uintptr) {
   radioGroup_SetAnchorSideLeft.Call(obj, value)
}

func RadioGroup_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetAnchorSideTop.Call(obj)
    return ret
}

func RadioGroup_SetAnchorSideTop(obj uintptr, value uintptr) {
   radioGroup_SetAnchorSideTop.Call(obj, value)
}

func RadioGroup_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetAnchorSideRight.Call(obj)
    return ret
}

func RadioGroup_SetAnchorSideRight(obj uintptr, value uintptr) {
   radioGroup_SetAnchorSideRight.Call(obj, value)
}

func RadioGroup_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetAnchorSideBottom.Call(obj)
    return ret
}

func RadioGroup_SetAnchorSideBottom(obj uintptr, value uintptr) {
   radioGroup_SetAnchorSideBottom.Call(obj, value)
}

func RadioGroup_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetChildSizing.Call(obj)
    return ret
}

func RadioGroup_SetChildSizing(obj uintptr, value uintptr) {
   radioGroup_SetChildSizing.Call(obj, value)
}

func RadioGroup_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := radioGroup_GetBorderSpacing.Call(obj)
    return ret
}

func RadioGroup_SetBorderSpacing(obj uintptr, value uintptr) {
   radioGroup_SetBorderSpacing.Call(obj, value)
}

func RadioGroup_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := radioGroup_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func RadioGroup_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := radioGroup_GetControls.Call(obj, uintptr(Index))
    return ret
}

func RadioGroup_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := radioGroup_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func RadioGroup_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := radioGroup_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func RadioGroup_StaticClassType() TClass {
    r, _, _:= radioGroup_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStaticText ---------------------------

func StaticText_Create(obj uintptr) uintptr {
    ret, _, _ := staticText_Create.Call(obj)
    return ret
}

func StaticText_Free(obj uintptr) {
    staticText_Free.Call(obj)
}

func StaticText_CanFocus(obj uintptr) bool {
    ret, _, _ := staticText_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := staticText_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func StaticText_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := staticText_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func StaticText_DisableAlign(obj uintptr)  {
    staticText_DisableAlign.Call(obj)
}

func StaticText_EnableAlign(obj uintptr)  {
    staticText_EnableAlign.Call(obj)
}

func StaticText_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := staticText_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func StaticText_FlipChildren(obj uintptr, AllLevels bool)  {
    staticText_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func StaticText_Focused(obj uintptr) bool {
    ret, _, _ := staticText_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_HandleAllocated(obj uintptr) bool {
    ret, _, _ := staticText_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_InsertControl(obj uintptr, AControl uintptr)  {
    staticText_InsertControl.Call(obj, AControl )
}

func StaticText_Invalidate(obj uintptr)  {
    staticText_Invalidate.Call(obj)
}

func StaticText_RemoveControl(obj uintptr, AControl uintptr)  {
    staticText_RemoveControl.Call(obj, AControl )
}

func StaticText_Realign(obj uintptr)  {
    staticText_Realign.Call(obj)
}

func StaticText_Repaint(obj uintptr)  {
    staticText_Repaint.Call(obj)
}

func StaticText_ScaleBy(obj uintptr, M int32, D int32)  {
    staticText_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func StaticText_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    staticText_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func StaticText_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    staticText_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func StaticText_SetFocus(obj uintptr)  {
    staticText_SetFocus.Call(obj)
}

func StaticText_Update(obj uintptr)  {
    staticText_Update.Call(obj)
}

func StaticText_BringToFront(obj uintptr)  {
    staticText_BringToFront.Call(obj)
}

func StaticText_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    staticText_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    staticText_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_Dragging(obj uintptr) bool {
    ret, _, _ := staticText_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_HasParent(obj uintptr) bool {
    ret, _, _ := staticText_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_Hide(obj uintptr)  {
    staticText_Hide.Call(obj)
}

func StaticText_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := staticText_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func StaticText_Refresh(obj uintptr)  {
    staticText_Refresh.Call(obj)
}

func StaticText_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    staticText_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    staticText_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_SendToBack(obj uintptr)  {
    staticText_SendToBack.Call(obj)
}

func StaticText_Show(obj uintptr)  {
    staticText_Show.Call(obj)
}

func StaticText_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := staticText_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func StaticText_GetTextLen(obj uintptr) int32 {
    ret, _, _ := staticText_GetTextLen.Call(obj)
    return int32(ret)
}

func StaticText_SetTextBuf(obj uintptr, Buffer string)  {
    staticText_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func StaticText_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := staticText_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func StaticText_GetNamePath(obj uintptr) string {
    ret, _, _ := staticText_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_Assign(obj uintptr, Source uintptr)  {
    staticText_Assign.Call(obj, Source )
}

func StaticText_ClassType(obj uintptr) TClass {
    ret, _, _ := staticText_ClassType.Call(obj)
    return TClass(ret)
}

func StaticText_ClassName(obj uintptr) string {
    ret, _, _ := staticText_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_InstanceSize(obj uintptr) int32 {
    ret, _, _ := staticText_InstanceSize.Call(obj)
    return int32(ret)
}

func StaticText_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := staticText_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StaticText_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := staticText_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func StaticText_GetHashCode(obj uintptr) int32 {
    ret, _, _ := staticText_GetHashCode.Call(obj)
    return int32(ret)
}

func StaticText_ToString(obj uintptr) string {
    ret, _, _ := staticText_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    staticText_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StaticText_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    staticText_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StaticText_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    staticText_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func StaticText_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    staticText_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func StaticText_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    staticText_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func StaticText_AnchorClient(obj uintptr, ASpace int32)  {
    staticText_AnchorClient.Call(obj, uintptr(ASpace) )
}

func StaticText_GetAlign(obj uintptr) TAlign {
    ret, _, _ := staticText_GetAlign.Call(obj)
    return TAlign(ret)
}

func StaticText_SetAlign(obj uintptr, value TAlign) {
   staticText_SetAlign.Call(obj, uintptr(value))
}

func StaticText_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := staticText_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func StaticText_SetAlignment(obj uintptr, value TAlignment) {
   staticText_SetAlignment.Call(obj, uintptr(value))
}

func StaticText_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := staticText_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func StaticText_SetAnchors(obj uintptr, value TAnchors) {
   staticText_SetAnchors.Call(obj, uintptr(value))
}

func StaticText_GetAutoSize(obj uintptr) bool {
    ret, _, _ := staticText_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetAutoSize(obj uintptr, value bool) {
   staticText_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := staticText_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func StaticText_SetBiDiMode(obj uintptr, value TBiDiMode) {
   staticText_SetBiDiMode.Call(obj, uintptr(value))
}

func StaticText_GetBorderStyle(obj uintptr) TStaticBorderStyle {
    ret, _, _ := staticText_GetBorderStyle.Call(obj)
    return TStaticBorderStyle(ret)
}

func StaticText_SetBorderStyle(obj uintptr, value TStaticBorderStyle) {
   staticText_SetBorderStyle.Call(obj, uintptr(value))
}

func StaticText_GetCaption(obj uintptr) string {
    ret, _, _ := staticText_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_SetCaption(obj uintptr, value string) {
   staticText_SetCaption.Call(obj, GoStrToDStr(value))
}

func StaticText_GetColor(obj uintptr) TColor {
    ret, _, _ := staticText_GetColor.Call(obj)
    return TColor(ret)
}

func StaticText_SetColor(obj uintptr, value TColor) {
   staticText_SetColor.Call(obj, uintptr(value))
}

func StaticText_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := staticText_GetConstraints.Call(obj)
    return ret
}

func StaticText_SetConstraints(obj uintptr, value uintptr) {
   staticText_SetConstraints.Call(obj, value)
}

func StaticText_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := staticText_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetDoubleBuffered(obj uintptr, value bool) {
   staticText_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := staticText_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func StaticText_SetDragCursor(obj uintptr, value TCursor) {
   staticText_SetDragCursor.Call(obj, uintptr(value))
}

func StaticText_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := staticText_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func StaticText_SetDragKind(obj uintptr, value TDragKind) {
   staticText_SetDragKind.Call(obj, uintptr(value))
}

func StaticText_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := staticText_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func StaticText_SetDragMode(obj uintptr, value TDragMode) {
   staticText_SetDragMode.Call(obj, uintptr(value))
}

func StaticText_GetEnabled(obj uintptr) bool {
    ret, _, _ := staticText_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetEnabled(obj uintptr, value bool) {
   staticText_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetFont(obj uintptr) uintptr {
    ret, _, _ := staticText_GetFont.Call(obj)
    return ret
}

func StaticText_SetFont(obj uintptr, value uintptr) {
   staticText_SetFont.Call(obj, value)
}

func StaticText_GetParentColor(obj uintptr) bool {
    ret, _, _ := staticText_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetParentColor(obj uintptr, value bool) {
   staticText_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := staticText_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetParentDoubleBuffered(obj uintptr, value bool) {
   staticText_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentFont(obj uintptr) bool {
    ret, _, _ := staticText_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetParentFont(obj uintptr, value bool) {
   staticText_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := staticText_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetParentShowHint(obj uintptr, value bool) {
   staticText_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := staticText_GetPopupMenu.Call(obj)
    return ret
}

func StaticText_SetPopupMenu(obj uintptr, value uintptr) {
   staticText_SetPopupMenu.Call(obj, value)
}

func StaticText_GetShowAccelChar(obj uintptr) bool {
    ret, _, _ := staticText_GetShowAccelChar.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetShowAccelChar(obj uintptr, value bool) {
   staticText_SetShowAccelChar.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetShowHint(obj uintptr) bool {
    ret, _, _ := staticText_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetShowHint(obj uintptr, value bool) {
   staticText_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := staticText_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func StaticText_SetTabOrder(obj uintptr, value TTabOrder) {
   staticText_SetTabOrder.Call(obj, uintptr(value))
}

func StaticText_GetTabStop(obj uintptr) bool {
    ret, _, _ := staticText_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetTabStop(obj uintptr, value bool) {
   staticText_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetTransparent(obj uintptr) bool {
    ret, _, _ := staticText_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetTransparent(obj uintptr, value bool) {
   staticText_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetVisible(obj uintptr) bool {
    ret, _, _ := staticText_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetVisible(obj uintptr, value bool) {
   staticText_SetVisible.Call(obj, GoBoolToDBool(value))
}

func StaticText_SetOnClick(obj uintptr, fn interface{}) {
    staticText_SetOnClick.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnContextPopup(obj uintptr, fn interface{}) {
    staticText_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnDblClick(obj uintptr, fn interface{}) {
    staticText_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnDragDrop(obj uintptr, fn interface{}) {
    staticText_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnDragOver(obj uintptr, fn interface{}) {
    staticText_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnEndDrag(obj uintptr, fn interface{}) {
    staticText_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnMouseDown(obj uintptr, fn interface{}) {
    staticText_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnMouseEnter(obj uintptr, fn interface{}) {
    staticText_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnMouseLeave(obj uintptr, fn interface{}) {
    staticText_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnMouseMove(obj uintptr, fn interface{}) {
    staticText_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func StaticText_SetOnMouseUp(obj uintptr, fn interface{}) {
    staticText_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func StaticText_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := staticText_GetDockClientCount.Call(obj)
    return int32(ret)
}

func StaticText_GetDockSite(obj uintptr) bool {
    ret, _, _ := staticText_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetDockSite(obj uintptr, value bool) {
   staticText_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := staticText_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := staticText_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func StaticText_GetBrush(obj uintptr) uintptr {
    ret, _, _ := staticText_GetBrush.Call(obj)
    return ret
}

func StaticText_GetControlCount(obj uintptr) int32 {
    ret, _, _ := staticText_GetControlCount.Call(obj)
    return int32(ret)
}

func StaticText_GetHandle(obj uintptr) HWND {
    ret, _, _ := staticText_GetHandle.Call(obj)
    return HWND(ret)
}

func StaticText_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := staticText_GetParentWindow.Call(obj)
    return HWND(ret)
}

func StaticText_SetParentWindow(obj uintptr, value HWND) {
   staticText_SetParentWindow.Call(obj, uintptr(value))
}

func StaticText_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := staticText_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_SetUseDockManager(obj uintptr, value bool) {
   staticText_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func StaticText_GetAction(obj uintptr) uintptr {
    ret, _, _ := staticText_GetAction.Call(obj)
    return ret
}

func StaticText_SetAction(obj uintptr, value uintptr) {
   staticText_SetAction.Call(obj, value)
}

func StaticText_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    staticText_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_SetBoundsRect(obj uintptr, value TRect) {
   staticText_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StaticText_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := staticText_GetClientHeight.Call(obj)
    return int32(ret)
}

func StaticText_SetClientHeight(obj uintptr, value int32) {
   staticText_SetClientHeight.Call(obj, uintptr(value))
}

func StaticText_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    staticText_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_GetClientRect(obj uintptr) TRect {
    var ret TRect
    staticText_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StaticText_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := staticText_GetClientWidth.Call(obj)
    return int32(ret)
}

func StaticText_SetClientWidth(obj uintptr, value int32) {
   staticText_SetClientWidth.Call(obj, uintptr(value))
}

func StaticText_GetControlState(obj uintptr) TControlState {
    ret, _, _ := staticText_GetControlState.Call(obj)
    return TControlState(ret)
}

func StaticText_SetControlState(obj uintptr, value TControlState) {
   staticText_SetControlState.Call(obj, uintptr(value))
}

func StaticText_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := staticText_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func StaticText_SetControlStyle(obj uintptr, value TControlStyle) {
   staticText_SetControlStyle.Call(obj, uintptr(value))
}

func StaticText_GetFloating(obj uintptr) bool {
    ret, _, _ := staticText_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func StaticText_GetParent(obj uintptr) uintptr {
    ret, _, _ := staticText_GetParent.Call(obj)
    return ret
}

func StaticText_SetParent(obj uintptr, value uintptr) {
   staticText_SetParent.Call(obj, value)
}

func StaticText_GetLeft(obj uintptr) int32 {
    ret, _, _ := staticText_GetLeft.Call(obj)
    return int32(ret)
}

func StaticText_SetLeft(obj uintptr, value int32) {
   staticText_SetLeft.Call(obj, uintptr(value))
}

func StaticText_GetTop(obj uintptr) int32 {
    ret, _, _ := staticText_GetTop.Call(obj)
    return int32(ret)
}

func StaticText_SetTop(obj uintptr, value int32) {
   staticText_SetTop.Call(obj, uintptr(value))
}

func StaticText_GetWidth(obj uintptr) int32 {
    ret, _, _ := staticText_GetWidth.Call(obj)
    return int32(ret)
}

func StaticText_SetWidth(obj uintptr, value int32) {
   staticText_SetWidth.Call(obj, uintptr(value))
}

func StaticText_GetHeight(obj uintptr) int32 {
    ret, _, _ := staticText_GetHeight.Call(obj)
    return int32(ret)
}

func StaticText_SetHeight(obj uintptr, value int32) {
   staticText_SetHeight.Call(obj, uintptr(value))
}

func StaticText_GetCursor(obj uintptr) TCursor {
    ret, _, _ := staticText_GetCursor.Call(obj)
    return TCursor(ret)
}

func StaticText_SetCursor(obj uintptr, value TCursor) {
   staticText_SetCursor.Call(obj, uintptr(value))
}

func StaticText_GetHint(obj uintptr) string {
    ret, _, _ := staticText_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_SetHint(obj uintptr, value string) {
   staticText_SetHint.Call(obj, GoStrToDStr(value))
}

func StaticText_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := staticText_GetComponentCount.Call(obj)
    return int32(ret)
}

func StaticText_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := staticText_GetComponentIndex.Call(obj)
    return int32(ret)
}

func StaticText_SetComponentIndex(obj uintptr, value int32) {
   staticText_SetComponentIndex.Call(obj, uintptr(value))
}

func StaticText_GetOwner(obj uintptr) uintptr {
    ret, _, _ := staticText_GetOwner.Call(obj)
    return ret
}

func StaticText_GetName(obj uintptr) string {
    ret, _, _ := staticText_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func StaticText_SetName(obj uintptr, value string) {
   staticText_SetName.Call(obj, GoStrToDStr(value))
}

func StaticText_GetTag(obj uintptr) int {
    ret, _, _ := staticText_GetTag.Call(obj)
    return int(ret)
}

func StaticText_SetTag(obj uintptr, value int) {
   staticText_SetTag.Call(obj, uintptr(value))
}

func StaticText_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := staticText_GetAnchorSideLeft.Call(obj)
    return ret
}

func StaticText_SetAnchorSideLeft(obj uintptr, value uintptr) {
   staticText_SetAnchorSideLeft.Call(obj, value)
}

func StaticText_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := staticText_GetAnchorSideTop.Call(obj)
    return ret
}

func StaticText_SetAnchorSideTop(obj uintptr, value uintptr) {
   staticText_SetAnchorSideTop.Call(obj, value)
}

func StaticText_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := staticText_GetAnchorSideRight.Call(obj)
    return ret
}

func StaticText_SetAnchorSideRight(obj uintptr, value uintptr) {
   staticText_SetAnchorSideRight.Call(obj, value)
}

func StaticText_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := staticText_GetAnchorSideBottom.Call(obj)
    return ret
}

func StaticText_SetAnchorSideBottom(obj uintptr, value uintptr) {
   staticText_SetAnchorSideBottom.Call(obj, value)
}

func StaticText_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := staticText_GetChildSizing.Call(obj)
    return ret
}

func StaticText_SetChildSizing(obj uintptr, value uintptr) {
   staticText_SetChildSizing.Call(obj, value)
}

func StaticText_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := staticText_GetBorderSpacing.Call(obj)
    return ret
}

func StaticText_SetBorderSpacing(obj uintptr, value uintptr) {
   staticText_SetBorderSpacing.Call(obj, value)
}

func StaticText_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := staticText_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func StaticText_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := staticText_GetControls.Call(obj, uintptr(Index))
    return ret
}

func StaticText_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := staticText_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func StaticText_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := staticText_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func StaticText_StaticClassType() TClass {
    r, _, _:= staticText_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TColorBox ---------------------------

func ColorBox_Create(obj uintptr) uintptr {
    ret, _, _ := colorBox_Create.Call(obj)
    return ret
}

func ColorBox_Free(obj uintptr) {
    colorBox_Free.Call(obj)
}

func ColorBox_AddItem(obj uintptr, Item string, AObject uintptr)  {
    colorBox_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ColorBox_Clear(obj uintptr)  {
    colorBox_Clear.Call(obj)
}

func ColorBox_ClearSelection(obj uintptr)  {
    colorBox_ClearSelection.Call(obj)
}

func ColorBox_DeleteSelected(obj uintptr)  {
    colorBox_DeleteSelected.Call(obj)
}

func ColorBox_Focused(obj uintptr) bool {
    ret, _, _ := colorBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SelectAll(obj uintptr)  {
    colorBox_SelectAll.Call(obj)
}

func ColorBox_CanFocus(obj uintptr) bool {
    ret, _, _ := colorBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := colorBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ColorBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := colorBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ColorBox_DisableAlign(obj uintptr)  {
    colorBox_DisableAlign.Call(obj)
}

func ColorBox_EnableAlign(obj uintptr)  {
    colorBox_EnableAlign.Call(obj)
}

func ColorBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := colorBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ColorBox_FlipChildren(obj uintptr, AllLevels bool)  {
    colorBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ColorBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := colorBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_InsertControl(obj uintptr, AControl uintptr)  {
    colorBox_InsertControl.Call(obj, AControl )
}

func ColorBox_Invalidate(obj uintptr)  {
    colorBox_Invalidate.Call(obj)
}

func ColorBox_RemoveControl(obj uintptr, AControl uintptr)  {
    colorBox_RemoveControl.Call(obj, AControl )
}

func ColorBox_Realign(obj uintptr)  {
    colorBox_Realign.Call(obj)
}

func ColorBox_Repaint(obj uintptr)  {
    colorBox_Repaint.Call(obj)
}

func ColorBox_ScaleBy(obj uintptr, M int32, D int32)  {
    colorBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ColorBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    colorBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ColorBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    colorBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ColorBox_SetFocus(obj uintptr)  {
    colorBox_SetFocus.Call(obj)
}

func ColorBox_Update(obj uintptr)  {
    colorBox_Update.Call(obj)
}

func ColorBox_BringToFront(obj uintptr)  {
    colorBox_BringToFront.Call(obj)
}

func ColorBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    colorBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    colorBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_Dragging(obj uintptr) bool {
    ret, _, _ := colorBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_HasParent(obj uintptr) bool {
    ret, _, _ := colorBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_Hide(obj uintptr)  {
    colorBox_Hide.Call(obj)
}

func ColorBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := colorBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ColorBox_Refresh(obj uintptr)  {
    colorBox_Refresh.Call(obj)
}

func ColorBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    colorBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    colorBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_SendToBack(obj uintptr)  {
    colorBox_SendToBack.Call(obj)
}

func ColorBox_Show(obj uintptr)  {
    colorBox_Show.Call(obj)
}

func ColorBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := colorBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ColorBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := colorBox_GetTextLen.Call(obj)
    return int32(ret)
}

func ColorBox_SetTextBuf(obj uintptr, Buffer string)  {
    colorBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ColorBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := colorBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ColorBox_GetNamePath(obj uintptr) string {
    ret, _, _ := colorBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_Assign(obj uintptr, Source uintptr)  {
    colorBox_Assign.Call(obj, Source )
}

func ColorBox_ClassType(obj uintptr) TClass {
    ret, _, _ := colorBox_ClassType.Call(obj)
    return TClass(ret)
}

func ColorBox_ClassName(obj uintptr) string {
    ret, _, _ := colorBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := colorBox_InstanceSize.Call(obj)
    return int32(ret)
}

func ColorBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := colorBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ColorBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := colorBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ColorBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := colorBox_GetHashCode.Call(obj)
    return int32(ret)
}

func ColorBox_ToString(obj uintptr) string {
    ret, _, _ := colorBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    colorBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ColorBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    colorBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ColorBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    colorBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ColorBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    colorBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ColorBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    colorBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ColorBox_AnchorClient(obj uintptr, ASpace int32)  {
    colorBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ColorBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := colorBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func ColorBox_SetAlign(obj uintptr, value TAlign) {
   colorBox_SetAlign.Call(obj, uintptr(value))
}

func ColorBox_GetAutoComplete(obj uintptr) bool {
    ret, _, _ := colorBox_GetAutoComplete.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetAutoComplete(obj uintptr, value bool) {
   colorBox_SetAutoComplete.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetAutoDropDown(obj uintptr) bool {
    ret, _, _ := colorBox_GetAutoDropDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetAutoDropDown(obj uintptr, value bool) {
   colorBox_SetAutoDropDown.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetDefaultColorColor(obj uintptr) TColor {
    ret, _, _ := colorBox_GetDefaultColorColor.Call(obj)
    return TColor(ret)
}

func ColorBox_SetDefaultColorColor(obj uintptr, value TColor) {
   colorBox_SetDefaultColorColor.Call(obj, uintptr(value))
}

func ColorBox_GetNoneColorColor(obj uintptr) TColor {
    ret, _, _ := colorBox_GetNoneColorColor.Call(obj)
    return TColor(ret)
}

func ColorBox_SetNoneColorColor(obj uintptr, value TColor) {
   colorBox_SetNoneColorColor.Call(obj, uintptr(value))
}

func ColorBox_GetSelected(obj uintptr) TColor {
    ret, _, _ := colorBox_GetSelected.Call(obj)
    return TColor(ret)
}

func ColorBox_SetSelected(obj uintptr, value TColor) {
   colorBox_SetSelected.Call(obj, uintptr(value))
}

func ColorBox_GetStyle(obj uintptr) TColorBoxStyle {
    ret, _, _ := colorBox_GetStyle.Call(obj)
    return TColorBoxStyle(ret)
}

func ColorBox_SetStyle(obj uintptr, value TColorBoxStyle) {
   colorBox_SetStyle.Call(obj, uintptr(value))
}

func ColorBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := colorBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ColorBox_SetAnchors(obj uintptr, value TAnchors) {
   colorBox_SetAnchors.Call(obj, uintptr(value))
}

func ColorBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := colorBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ColorBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   colorBox_SetBiDiMode.Call(obj, uintptr(value))
}

func ColorBox_GetColor(obj uintptr) TColor {
    ret, _, _ := colorBox_GetColor.Call(obj)
    return TColor(ret)
}

func ColorBox_SetColor(obj uintptr, value TColor) {
   colorBox_SetColor.Call(obj, uintptr(value))
}

func ColorBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetConstraints.Call(obj)
    return ret
}

func ColorBox_SetConstraints(obj uintptr, value uintptr) {
   colorBox_SetConstraints.Call(obj, value)
}

func ColorBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := colorBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetDoubleBuffered(obj uintptr, value bool) {
   colorBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetDropDownCount(obj uintptr) int32 {
    ret, _, _ := colorBox_GetDropDownCount.Call(obj)
    return int32(ret)
}

func ColorBox_SetDropDownCount(obj uintptr, value int32) {
   colorBox_SetDropDownCount.Call(obj, uintptr(value))
}

func ColorBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := colorBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetEnabled(obj uintptr, value bool) {
   colorBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetFont.Call(obj)
    return ret
}

func ColorBox_SetFont(obj uintptr, value uintptr) {
   colorBox_SetFont.Call(obj, value)
}

func ColorBox_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := colorBox_GetItemHeight.Call(obj)
    return int32(ret)
}

func ColorBox_SetItemHeight(obj uintptr, value int32) {
   colorBox_SetItemHeight.Call(obj, uintptr(value))
}

func ColorBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := colorBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetParentColor(obj uintptr, value bool) {
   colorBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := colorBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   colorBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := colorBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetParentFont(obj uintptr, value bool) {
   colorBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := colorBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetParentShowHint(obj uintptr, value bool) {
   colorBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetPopupMenu.Call(obj)
    return ret
}

func ColorBox_SetPopupMenu(obj uintptr, value uintptr) {
   colorBox_SetPopupMenu.Call(obj, value)
}

func ColorBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := colorBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetShowHint(obj uintptr, value bool) {
   colorBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := colorBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ColorBox_SetTabOrder(obj uintptr, value TTabOrder) {
   colorBox_SetTabOrder.Call(obj, uintptr(value))
}

func ColorBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := colorBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetTabStop(obj uintptr, value bool) {
   colorBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetVisible(obj uintptr) bool {
    ret, _, _ := colorBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetVisible(obj uintptr, value bool) {
   colorBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ColorBox_SetOnChange(obj uintptr, fn interface{}) {
    colorBox_SetOnChange.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnClick(obj uintptr, fn interface{}) {
    colorBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    colorBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    colorBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnDragOver(obj uintptr, fn interface{}) {
    colorBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    colorBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnEnter(obj uintptr, fn interface{}) {
    colorBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnExit(obj uintptr, fn interface{}) {
    colorBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    colorBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    colorBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    colorBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    colorBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    colorBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ColorBox_SetOnSelect(obj uintptr, fn interface{}) {
    colorBox_SetOnSelect.Call(obj, addEventToMap(fn))
}

func ColorBox_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := colorBox_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func ColorBox_SetCharCase(obj uintptr, value TEditCharCase) {
   colorBox_SetCharCase.Call(obj, uintptr(value))
}

func ColorBox_GetSelText(obj uintptr) string {
    ret, _, _ := colorBox_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_SetSelText(obj uintptr, value string) {
   colorBox_SetSelText.Call(obj, GoStrToDStr(value))
}

func ColorBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetCanvas.Call(obj)
    return ret
}

func ColorBox_GetDroppedDown(obj uintptr) bool {
    ret, _, _ := colorBox_GetDroppedDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetDroppedDown(obj uintptr, value bool) {
   colorBox_SetDroppedDown.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetItems(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetItems.Call(obj)
    return ret
}

func ColorBox_SetItems(obj uintptr, value uintptr) {
   colorBox_SetItems.Call(obj, value)
}

func ColorBox_GetSelLength(obj uintptr) int32 {
    ret, _, _ := colorBox_GetSelLength.Call(obj)
    return int32(ret)
}

func ColorBox_SetSelLength(obj uintptr, value int32) {
   colorBox_SetSelLength.Call(obj, uintptr(value))
}

func ColorBox_GetSelStart(obj uintptr) int32 {
    ret, _, _ := colorBox_GetSelStart.Call(obj)
    return int32(ret)
}

func ColorBox_SetSelStart(obj uintptr, value int32) {
   colorBox_SetSelStart.Call(obj, uintptr(value))
}

func ColorBox_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := colorBox_GetItemIndex.Call(obj)
    return int32(ret)
}

func ColorBox_SetItemIndex(obj uintptr, value int32) {
   colorBox_SetItemIndex.Call(obj, uintptr(value))
}

func ColorBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := colorBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ColorBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := colorBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetDockSite(obj uintptr, value bool) {
   colorBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := colorBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := colorBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ColorBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetBrush.Call(obj)
    return ret
}

func ColorBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := colorBox_GetControlCount.Call(obj)
    return int32(ret)
}

func ColorBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := colorBox_GetHandle.Call(obj)
    return HWND(ret)
}

func ColorBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := colorBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ColorBox_SetParentWindow(obj uintptr, value HWND) {
   colorBox_SetParentWindow.Call(obj, uintptr(value))
}

func ColorBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := colorBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_SetUseDockManager(obj uintptr, value bool) {
   colorBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ColorBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetAction.Call(obj)
    return ret
}

func ColorBox_SetAction(obj uintptr, value uintptr) {
   colorBox_SetAction.Call(obj, value)
}

func ColorBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    colorBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_SetBoundsRect(obj uintptr, value TRect) {
   colorBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ColorBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := colorBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func ColorBox_SetClientHeight(obj uintptr, value int32) {
   colorBox_SetClientHeight.Call(obj, uintptr(value))
}

func ColorBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    colorBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    colorBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := colorBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func ColorBox_SetClientWidth(obj uintptr, value int32) {
   colorBox_SetClientWidth.Call(obj, uintptr(value))
}

func ColorBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := colorBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func ColorBox_SetControlState(obj uintptr, value TControlState) {
   colorBox_SetControlState.Call(obj, uintptr(value))
}

func ColorBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := colorBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ColorBox_SetControlStyle(obj uintptr, value TControlStyle) {
   colorBox_SetControlStyle.Call(obj, uintptr(value))
}

func ColorBox_GetFloating(obj uintptr) bool {
    ret, _, _ := colorBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetParent.Call(obj)
    return ret
}

func ColorBox_SetParent(obj uintptr, value uintptr) {
   colorBox_SetParent.Call(obj, value)
}

func ColorBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := colorBox_GetLeft.Call(obj)
    return int32(ret)
}

func ColorBox_SetLeft(obj uintptr, value int32) {
   colorBox_SetLeft.Call(obj, uintptr(value))
}

func ColorBox_GetTop(obj uintptr) int32 {
    ret, _, _ := colorBox_GetTop.Call(obj)
    return int32(ret)
}

func ColorBox_SetTop(obj uintptr, value int32) {
   colorBox_SetTop.Call(obj, uintptr(value))
}

func ColorBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := colorBox_GetWidth.Call(obj)
    return int32(ret)
}

func ColorBox_SetWidth(obj uintptr, value int32) {
   colorBox_SetWidth.Call(obj, uintptr(value))
}

func ColorBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := colorBox_GetHeight.Call(obj)
    return int32(ret)
}

func ColorBox_SetHeight(obj uintptr, value int32) {
   colorBox_SetHeight.Call(obj, uintptr(value))
}

func ColorBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := colorBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func ColorBox_SetCursor(obj uintptr, value TCursor) {
   colorBox_SetCursor.Call(obj, uintptr(value))
}

func ColorBox_GetHint(obj uintptr) string {
    ret, _, _ := colorBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_SetHint(obj uintptr, value string) {
   colorBox_SetHint.Call(obj, GoStrToDStr(value))
}

func ColorBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := colorBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func ColorBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := colorBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ColorBox_SetComponentIndex(obj uintptr, value int32) {
   colorBox_SetComponentIndex.Call(obj, uintptr(value))
}

func ColorBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetOwner.Call(obj)
    return ret
}

func ColorBox_GetName(obj uintptr) string {
    ret, _, _ := colorBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorBox_SetName(obj uintptr, value string) {
   colorBox_SetName.Call(obj, GoStrToDStr(value))
}

func ColorBox_GetTag(obj uintptr) int {
    ret, _, _ := colorBox_GetTag.Call(obj)
    return int(ret)
}

func ColorBox_SetTag(obj uintptr, value int) {
   colorBox_SetTag.Call(obj, uintptr(value))
}

func ColorBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func ColorBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   colorBox_SetAnchorSideLeft.Call(obj, value)
}

func ColorBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetAnchorSideTop.Call(obj)
    return ret
}

func ColorBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   colorBox_SetAnchorSideTop.Call(obj, value)
}

func ColorBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetAnchorSideRight.Call(obj)
    return ret
}

func ColorBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   colorBox_SetAnchorSideRight.Call(obj, value)
}

func ColorBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func ColorBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   colorBox_SetAnchorSideBottom.Call(obj, value)
}

func ColorBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetChildSizing.Call(obj)
    return ret
}

func ColorBox_SetChildSizing(obj uintptr, value uintptr) {
   colorBox_SetChildSizing.Call(obj, value)
}

func ColorBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := colorBox_GetBorderSpacing.Call(obj)
    return ret
}

func ColorBox_SetBorderSpacing(obj uintptr, value uintptr) {
   colorBox_SetBorderSpacing.Call(obj, value)
}

func ColorBox_GetColors(obj uintptr, Index int32) TColor {
    ret, _, _ := colorBox_GetColors.Call(obj, uintptr(Index))
    return TColor(ret)
}

func ColorBox_GetColorNames(obj uintptr, Index int32) string {
    ret, _, _ := colorBox_GetColorNames.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func ColorBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := colorBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ColorBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := colorBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ColorBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := colorBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ColorBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := colorBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ColorBox_StaticClassType() TClass {
    r, _, _:= colorBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TColorListBox ---------------------------

func ColorListBox_Create(obj uintptr) uintptr {
    ret, _, _ := colorListBox_Create.Call(obj)
    return ret
}

func ColorListBox_Free(obj uintptr) {
    colorListBox_Free.Call(obj)
}

func ColorListBox_AddItem(obj uintptr, Item string, AObject uintptr)  {
    colorListBox_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ColorListBox_Clear(obj uintptr)  {
    colorListBox_Clear.Call(obj)
}

func ColorListBox_ClearSelection(obj uintptr)  {
    colorListBox_ClearSelection.Call(obj)
}

func ColorListBox_DeleteSelected(obj uintptr)  {
    colorListBox_DeleteSelected.Call(obj)
}

func ColorListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
    ret, _, _ := colorListBox_ItemAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing) )
    return int32(ret)
}

func ColorListBox_ItemRect(obj uintptr, Index int32) TRect {
    var ret TRect
    colorListBox_ItemRect.Call(obj, uintptr(Index) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_SelectAll(obj uintptr)  {
    colorListBox_SelectAll.Call(obj)
}

func ColorListBox_CanFocus(obj uintptr) bool {
    ret, _, _ := colorListBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := colorListBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ColorListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := colorListBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ColorListBox_DisableAlign(obj uintptr)  {
    colorListBox_DisableAlign.Call(obj)
}

func ColorListBox_EnableAlign(obj uintptr)  {
    colorListBox_EnableAlign.Call(obj)
}

func ColorListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := colorListBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ColorListBox_FlipChildren(obj uintptr, AllLevels bool)  {
    colorListBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ColorListBox_Focused(obj uintptr) bool {
    ret, _, _ := colorListBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := colorListBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_InsertControl(obj uintptr, AControl uintptr)  {
    colorListBox_InsertControl.Call(obj, AControl )
}

func ColorListBox_Invalidate(obj uintptr)  {
    colorListBox_Invalidate.Call(obj)
}

func ColorListBox_RemoveControl(obj uintptr, AControl uintptr)  {
    colorListBox_RemoveControl.Call(obj, AControl )
}

func ColorListBox_Realign(obj uintptr)  {
    colorListBox_Realign.Call(obj)
}

func ColorListBox_Repaint(obj uintptr)  {
    colorListBox_Repaint.Call(obj)
}

func ColorListBox_ScaleBy(obj uintptr, M int32, D int32)  {
    colorListBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ColorListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    colorListBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ColorListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    colorListBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ColorListBox_SetFocus(obj uintptr)  {
    colorListBox_SetFocus.Call(obj)
}

func ColorListBox_Update(obj uintptr)  {
    colorListBox_Update.Call(obj)
}

func ColorListBox_BringToFront(obj uintptr)  {
    colorListBox_BringToFront.Call(obj)
}

func ColorListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    colorListBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    colorListBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_Dragging(obj uintptr) bool {
    ret, _, _ := colorListBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_HasParent(obj uintptr) bool {
    ret, _, _ := colorListBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_Hide(obj uintptr)  {
    colorListBox_Hide.Call(obj)
}

func ColorListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := colorListBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ColorListBox_Refresh(obj uintptr)  {
    colorListBox_Refresh.Call(obj)
}

func ColorListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    colorListBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    colorListBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_SendToBack(obj uintptr)  {
    colorListBox_SendToBack.Call(obj)
}

func ColorListBox_Show(obj uintptr)  {
    colorListBox_Show.Call(obj)
}

func ColorListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := colorListBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ColorListBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetTextLen.Call(obj)
    return int32(ret)
}

func ColorListBox_SetTextBuf(obj uintptr, Buffer string)  {
    colorListBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ColorListBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := colorListBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ColorListBox_GetNamePath(obj uintptr) string {
    ret, _, _ := colorListBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ColorListBox_Assign(obj uintptr, Source uintptr)  {
    colorListBox_Assign.Call(obj, Source )
}

func ColorListBox_ClassType(obj uintptr) TClass {
    ret, _, _ := colorListBox_ClassType.Call(obj)
    return TClass(ret)
}

func ColorListBox_ClassName(obj uintptr) string {
    ret, _, _ := colorListBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorListBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := colorListBox_InstanceSize.Call(obj)
    return int32(ret)
}

func ColorListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := colorListBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ColorListBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := colorListBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ColorListBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetHashCode.Call(obj)
    return int32(ret)
}

func ColorListBox_ToString(obj uintptr) string {
    ret, _, _ := colorListBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ColorListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    colorListBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ColorListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    colorListBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ColorListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    colorListBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ColorListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    colorListBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ColorListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    colorListBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ColorListBox_AnchorClient(obj uintptr, ASpace int32)  {
    colorListBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ColorListBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := colorListBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func ColorListBox_SetAlign(obj uintptr, value TAlign) {
   colorListBox_SetAlign.Call(obj, uintptr(value))
}

func ColorListBox_GetDefaultColorColor(obj uintptr) TColor {
    ret, _, _ := colorListBox_GetDefaultColorColor.Call(obj)
    return TColor(ret)
}

func ColorListBox_SetDefaultColorColor(obj uintptr, value TColor) {
   colorListBox_SetDefaultColorColor.Call(obj, uintptr(value))
}

func ColorListBox_GetNoneColorColor(obj uintptr) TColor {
    ret, _, _ := colorListBox_GetNoneColorColor.Call(obj)
    return TColor(ret)
}

func ColorListBox_SetNoneColorColor(obj uintptr, value TColor) {
   colorListBox_SetNoneColorColor.Call(obj, uintptr(value))
}

func ColorListBox_GetSelected(obj uintptr) TColor {
    ret, _, _ := colorListBox_GetSelected.Call(obj)
    return TColor(ret)
}

func ColorListBox_SetSelected(obj uintptr, value TColor) {
   colorListBox_SetSelected.Call(obj, uintptr(value))
}

func ColorListBox_GetStyle(obj uintptr) TColorBoxStyle {
    ret, _, _ := colorListBox_GetStyle.Call(obj)
    return TColorBoxStyle(ret)
}

func ColorListBox_SetStyle(obj uintptr, value TColorBoxStyle) {
   colorListBox_SetStyle.Call(obj, uintptr(value))
}

func ColorListBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := colorListBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ColorListBox_SetAnchors(obj uintptr, value TAnchors) {
   colorListBox_SetAnchors.Call(obj, uintptr(value))
}

func ColorListBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := colorListBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ColorListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   colorListBox_SetBiDiMode.Call(obj, uintptr(value))
}

func ColorListBox_GetColor(obj uintptr) TColor {
    ret, _, _ := colorListBox_GetColor.Call(obj)
    return TColor(ret)
}

func ColorListBox_SetColor(obj uintptr, value TColor) {
   colorListBox_SetColor.Call(obj, uintptr(value))
}

func ColorListBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetConstraints.Call(obj)
    return ret
}

func ColorListBox_SetConstraints(obj uintptr, value uintptr) {
   colorListBox_SetConstraints.Call(obj, value)
}

func ColorListBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := colorListBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetDoubleBuffered(obj uintptr, value bool) {
   colorListBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := colorListBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetEnabled(obj uintptr, value bool) {
   colorListBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetFont.Call(obj)
    return ret
}

func ColorListBox_SetFont(obj uintptr, value uintptr) {
   colorListBox_SetFont.Call(obj, value)
}

func ColorListBox_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetItemHeight.Call(obj)
    return int32(ret)
}

func ColorListBox_SetItemHeight(obj uintptr, value int32) {
   colorListBox_SetItemHeight.Call(obj, uintptr(value))
}

func ColorListBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := colorListBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetParentColor(obj uintptr, value bool) {
   colorListBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := colorListBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   colorListBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := colorListBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetParentFont(obj uintptr, value bool) {
   colorListBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := colorListBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetParentShowHint(obj uintptr, value bool) {
   colorListBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetPopupMenu.Call(obj)
    return ret
}

func ColorListBox_SetPopupMenu(obj uintptr, value uintptr) {
   colorListBox_SetPopupMenu.Call(obj, value)
}

func ColorListBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := colorListBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetShowHint(obj uintptr, value bool) {
   colorListBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := colorListBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ColorListBox_SetTabOrder(obj uintptr, value TTabOrder) {
   colorListBox_SetTabOrder.Call(obj, uintptr(value))
}

func ColorListBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := colorListBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetTabStop(obj uintptr, value bool) {
   colorListBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetVisible(obj uintptr) bool {
    ret, _, _ := colorListBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetVisible(obj uintptr, value bool) {
   colorListBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_SetOnClick(obj uintptr, fn interface{}) {
    colorListBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    colorListBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnDblClick(obj uintptr, fn interface{}) {
    colorListBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    colorListBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnDragOver(obj uintptr, fn interface{}) {
    colorListBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    colorListBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnEnter(obj uintptr, fn interface{}) {
    colorListBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnExit(obj uintptr, fn interface{}) {
    colorListBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    colorListBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    colorListBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    colorListBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    colorListBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    colorListBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    colorListBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    colorListBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ColorListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    colorListBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ColorListBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetCanvas.Call(obj)
    return ret
}

func ColorListBox_GetCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetItems(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetItems.Call(obj)
    return ret
}

func ColorListBox_SetItems(obj uintptr, value uintptr) {
   colorListBox_SetItems.Call(obj, value)
}

func ColorListBox_GetTopIndex(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetTopIndex.Call(obj)
    return int32(ret)
}

func ColorListBox_SetTopIndex(obj uintptr, value int32) {
   colorListBox_SetTopIndex.Call(obj, uintptr(value))
}

func ColorListBox_GetMultiSelect(obj uintptr) bool {
    ret, _, _ := colorListBox_GetMultiSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetMultiSelect(obj uintptr, value bool) {
   colorListBox_SetMultiSelect.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetSelCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetSelCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetItemIndex.Call(obj)
    return int32(ret)
}

func ColorListBox_SetItemIndex(obj uintptr, value int32) {
   colorListBox_SetItemIndex.Call(obj, uintptr(value))
}

func ColorListBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := colorListBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetDockSite(obj uintptr, value bool) {
   colorListBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := colorListBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetBrush.Call(obj)
    return ret
}

func ColorListBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetControlCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := colorListBox_GetHandle.Call(obj)
    return HWND(ret)
}

func ColorListBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := colorListBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ColorListBox_SetParentWindow(obj uintptr, value HWND) {
   colorListBox_SetParentWindow.Call(obj, uintptr(value))
}

func ColorListBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := colorListBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_SetUseDockManager(obj uintptr, value bool) {
   colorListBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ColorListBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetAction.Call(obj)
    return ret
}

func ColorListBox_SetAction(obj uintptr, value uintptr) {
   colorListBox_SetAction.Call(obj, value)
}

func ColorListBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    colorListBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_SetBoundsRect(obj uintptr, value TRect) {
   colorListBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ColorListBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func ColorListBox_SetClientHeight(obj uintptr, value int32) {
   colorListBox_SetClientHeight.Call(obj, uintptr(value))
}

func ColorListBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    colorListBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    colorListBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ColorListBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func ColorListBox_SetClientWidth(obj uintptr, value int32) {
   colorListBox_SetClientWidth.Call(obj, uintptr(value))
}

func ColorListBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := colorListBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func ColorListBox_SetControlState(obj uintptr, value TControlState) {
   colorListBox_SetControlState.Call(obj, uintptr(value))
}

func ColorListBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := colorListBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ColorListBox_SetControlStyle(obj uintptr, value TControlStyle) {
   colorListBox_SetControlStyle.Call(obj, uintptr(value))
}

func ColorListBox_GetFloating(obj uintptr) bool {
    ret, _, _ := colorListBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorListBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetParent.Call(obj)
    return ret
}

func ColorListBox_SetParent(obj uintptr, value uintptr) {
   colorListBox_SetParent.Call(obj, value)
}

func ColorListBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetLeft.Call(obj)
    return int32(ret)
}

func ColorListBox_SetLeft(obj uintptr, value int32) {
   colorListBox_SetLeft.Call(obj, uintptr(value))
}

func ColorListBox_GetTop(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetTop.Call(obj)
    return int32(ret)
}

func ColorListBox_SetTop(obj uintptr, value int32) {
   colorListBox_SetTop.Call(obj, uintptr(value))
}

func ColorListBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetWidth.Call(obj)
    return int32(ret)
}

func ColorListBox_SetWidth(obj uintptr, value int32) {
   colorListBox_SetWidth.Call(obj, uintptr(value))
}

func ColorListBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetHeight.Call(obj)
    return int32(ret)
}

func ColorListBox_SetHeight(obj uintptr, value int32) {
   colorListBox_SetHeight.Call(obj, uintptr(value))
}

func ColorListBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := colorListBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func ColorListBox_SetCursor(obj uintptr, value TCursor) {
   colorListBox_SetCursor.Call(obj, uintptr(value))
}

func ColorListBox_GetHint(obj uintptr) string {
    ret, _, _ := colorListBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ColorListBox_SetHint(obj uintptr, value string) {
   colorListBox_SetHint.Call(obj, GoStrToDStr(value))
}

func ColorListBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func ColorListBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := colorListBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ColorListBox_SetComponentIndex(obj uintptr, value int32) {
   colorListBox_SetComponentIndex.Call(obj, uintptr(value))
}

func ColorListBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetOwner.Call(obj)
    return ret
}

func ColorListBox_GetName(obj uintptr) string {
    ret, _, _ := colorListBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorListBox_SetName(obj uintptr, value string) {
   colorListBox_SetName.Call(obj, GoStrToDStr(value))
}

func ColorListBox_GetTag(obj uintptr) int {
    ret, _, _ := colorListBox_GetTag.Call(obj)
    return int(ret)
}

func ColorListBox_SetTag(obj uintptr, value int) {
   colorListBox_SetTag.Call(obj, uintptr(value))
}

func ColorListBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func ColorListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   colorListBox_SetAnchorSideLeft.Call(obj, value)
}

func ColorListBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetAnchorSideTop.Call(obj)
    return ret
}

func ColorListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   colorListBox_SetAnchorSideTop.Call(obj, value)
}

func ColorListBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetAnchorSideRight.Call(obj)
    return ret
}

func ColorListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   colorListBox_SetAnchorSideRight.Call(obj, value)
}

func ColorListBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func ColorListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   colorListBox_SetAnchorSideBottom.Call(obj, value)
}

func ColorListBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetChildSizing.Call(obj)
    return ret
}

func ColorListBox_SetChildSizing(obj uintptr, value uintptr) {
   colorListBox_SetChildSizing.Call(obj, value)
}

func ColorListBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := colorListBox_GetBorderSpacing.Call(obj)
    return ret
}

func ColorListBox_SetBorderSpacing(obj uintptr, value uintptr) {
   colorListBox_SetBorderSpacing.Call(obj, value)
}

func ColorListBox_GetColors(obj uintptr, Index int32) TColor {
    ret, _, _ := colorListBox_GetColors.Call(obj, uintptr(Index))
    return TColor(ret)
}

func ColorListBox_GetColorNames(obj uintptr, Index int32) string {
    ret, _, _ := colorListBox_GetColorNames.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func ColorListBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := colorListBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ColorListBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := colorListBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ColorListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := colorListBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ColorListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := colorListBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ColorListBox_StaticClassType() TClass {
    r, _, _:= colorListBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTrayIcon ---------------------------

func TrayIcon_Create(obj uintptr) uintptr {
    ret, _, _ := trayIcon_Create.Call(obj)
    return ret
}

func TrayIcon_Free(obj uintptr) {
    trayIcon_Free.Call(obj)
}

func TrayIcon_ShowBalloonHint(obj uintptr)  {
    trayIcon_ShowBalloonHint.Call(obj)
}

func TrayIcon_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := trayIcon_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func TrayIcon_GetNamePath(obj uintptr) string {
    ret, _, _ := trayIcon_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_HasParent(obj uintptr) bool {
    ret, _, _ := trayIcon_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func TrayIcon_Assign(obj uintptr, Source uintptr)  {
    trayIcon_Assign.Call(obj, Source )
}

func TrayIcon_ClassType(obj uintptr) TClass {
    ret, _, _ := trayIcon_ClassType.Call(obj)
    return TClass(ret)
}

func TrayIcon_ClassName(obj uintptr) string {
    ret, _, _ := trayIcon_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_InstanceSize(obj uintptr) int32 {
    ret, _, _ := trayIcon_InstanceSize.Call(obj)
    return int32(ret)
}

func TrayIcon_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := trayIcon_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TrayIcon_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := trayIcon_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TrayIcon_GetHashCode(obj uintptr) int32 {
    ret, _, _ := trayIcon_GetHashCode.Call(obj)
    return int32(ret)
}

func TrayIcon_ToString(obj uintptr) string {
    ret, _, _ := trayIcon_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_GetAnimateInterval(obj uintptr) uint32 {
    ret, _, _ := trayIcon_GetAnimateInterval.Call(obj)
    return uint32(ret)
}

func TrayIcon_SetAnimateInterval(obj uintptr, value uint32) {
   trayIcon_SetAnimateInterval.Call(obj, uintptr(value))
}

func TrayIcon_GetHint(obj uintptr) string {
    ret, _, _ := trayIcon_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_SetHint(obj uintptr, value string) {
   trayIcon_SetHint.Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonHint(obj uintptr) string {
    ret, _, _ := trayIcon_GetBalloonHint.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_SetBalloonHint(obj uintptr, value string) {
   trayIcon_SetBalloonHint.Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonTitle(obj uintptr) string {
    ret, _, _ := trayIcon_GetBalloonTitle.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_SetBalloonTitle(obj uintptr, value string) {
   trayIcon_SetBalloonTitle.Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetBalloonTimeout(obj uintptr) int32 {
    ret, _, _ := trayIcon_GetBalloonTimeout.Call(obj)
    return int32(ret)
}

func TrayIcon_SetBalloonTimeout(obj uintptr, value int32) {
   trayIcon_SetBalloonTimeout.Call(obj, uintptr(value))
}

func TrayIcon_GetBalloonFlags(obj uintptr) TBalloonFlags {
    ret, _, _ := trayIcon_GetBalloonFlags.Call(obj)
    return TBalloonFlags(ret)
}

func TrayIcon_SetBalloonFlags(obj uintptr, value TBalloonFlags) {
   trayIcon_SetBalloonFlags.Call(obj, uintptr(value))
}

func TrayIcon_GetIcon(obj uintptr) uintptr {
    ret, _, _ := trayIcon_GetIcon.Call(obj)
    return ret
}

func TrayIcon_SetIcon(obj uintptr, value uintptr) {
   trayIcon_SetIcon.Call(obj, value)
}

func TrayIcon_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := trayIcon_GetPopupMenu.Call(obj)
    return ret
}

func TrayIcon_SetPopupMenu(obj uintptr, value uintptr) {
   trayIcon_SetPopupMenu.Call(obj, value)
}

func TrayIcon_GetVisible(obj uintptr) bool {
    ret, _, _ := trayIcon_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TrayIcon_SetVisible(obj uintptr, value bool) {
   trayIcon_SetVisible.Call(obj, GoBoolToDBool(value))
}

func TrayIcon_SetOnClick(obj uintptr, fn interface{}) {
    trayIcon_SetOnClick.Call(obj, addEventToMap(fn))
}

func TrayIcon_SetOnDblClick(obj uintptr, fn interface{}) {
    trayIcon_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func TrayIcon_SetOnMouseMove(obj uintptr, fn interface{}) {
    trayIcon_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func TrayIcon_SetOnMouseUp(obj uintptr, fn interface{}) {
    trayIcon_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func TrayIcon_SetOnMouseDown(obj uintptr, fn interface{}) {
    trayIcon_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func TrayIcon_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := trayIcon_GetComponentCount.Call(obj)
    return int32(ret)
}

func TrayIcon_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := trayIcon_GetComponentIndex.Call(obj)
    return int32(ret)
}

func TrayIcon_SetComponentIndex(obj uintptr, value int32) {
   trayIcon_SetComponentIndex.Call(obj, uintptr(value))
}

func TrayIcon_GetOwner(obj uintptr) uintptr {
    ret, _, _ := trayIcon_GetOwner.Call(obj)
    return ret
}

func TrayIcon_GetName(obj uintptr) string {
    ret, _, _ := trayIcon_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TrayIcon_SetName(obj uintptr, value string) {
   trayIcon_SetName.Call(obj, GoStrToDStr(value))
}

func TrayIcon_GetTag(obj uintptr) int {
    ret, _, _ := trayIcon_GetTag.Call(obj)
    return int(ret)
}

func TrayIcon_SetTag(obj uintptr, value int) {
   trayIcon_SetTag.Call(obj, uintptr(value))
}

func TrayIcon_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := trayIcon_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func TrayIcon_StaticClassType() TClass {
    r, _, _:= trayIcon_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TOpenDialog ---------------------------

func OpenDialog_Create(obj uintptr) uintptr {
    ret, _, _ := openDialog_Create.Call(obj)
    return ret
}

func OpenDialog_Free(obj uintptr) {
    openDialog_Free.Call(obj)
}

func OpenDialog_Execute(obj uintptr) bool {
    ret, _, _ := openDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func OpenDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := openDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func OpenDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := openDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_HasParent(obj uintptr) bool {
    ret, _, _ := openDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func OpenDialog_Assign(obj uintptr, Source uintptr)  {
    openDialog_Assign.Call(obj, Source )
}

func OpenDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := openDialog_ClassType.Call(obj)
    return TClass(ret)
}

func OpenDialog_ClassName(obj uintptr) string {
    ret, _, _ := openDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := openDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func OpenDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := openDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func OpenDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := openDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func OpenDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := openDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func OpenDialog_ToString(obj uintptr) string {
    ret, _, _ := openDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_GetFiles(obj uintptr) uintptr {
    ret, _, _ := openDialog_GetFiles.Call(obj)
    return ret
}

func OpenDialog_GetDefaultExt(obj uintptr) string {
    ret, _, _ := openDialog_GetDefaultExt.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetDefaultExt(obj uintptr, value string) {
   openDialog_SetDefaultExt.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFileName(obj uintptr) string {
    ret, _, _ := openDialog_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetFileName(obj uintptr, value string) {
   openDialog_SetFileName.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFilter(obj uintptr) string {
    ret, _, _ := openDialog_GetFilter.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetFilter(obj uintptr, value string) {
   openDialog_SetFilter.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetFilterIndex(obj uintptr) int32 {
    ret, _, _ := openDialog_GetFilterIndex.Call(obj)
    return int32(ret)
}

func OpenDialog_SetFilterIndex(obj uintptr, value int32) {
   openDialog_SetFilterIndex.Call(obj, uintptr(value))
}

func OpenDialog_GetInitialDir(obj uintptr) string {
    ret, _, _ := openDialog_GetInitialDir.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetInitialDir(obj uintptr, value string) {
   openDialog_SetInitialDir.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetOptions(obj uintptr) TOpenOptions {
    ret, _, _ := openDialog_GetOptions.Call(obj)
    return TOpenOptions(ret)
}

func OpenDialog_SetOptions(obj uintptr, value TOpenOptions) {
   openDialog_SetOptions.Call(obj, uintptr(value))
}

func OpenDialog_GetTitle(obj uintptr) string {
    ret, _, _ := openDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetTitle(obj uintptr, value string) {
   openDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := openDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func OpenDialog_SetOnClose(obj uintptr, fn interface{}) {
    openDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func OpenDialog_SetOnShow(obj uintptr, fn interface{}) {
    openDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func OpenDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := openDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func OpenDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := openDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func OpenDialog_SetComponentIndex(obj uintptr, value int32) {
   openDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func OpenDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := openDialog_GetOwner.Call(obj)
    return ret
}

func OpenDialog_GetName(obj uintptr) string {
    ret, _, _ := openDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenDialog_SetName(obj uintptr, value string) {
   openDialog_SetName.Call(obj, GoStrToDStr(value))
}

func OpenDialog_GetTag(obj uintptr) int {
    ret, _, _ := openDialog_GetTag.Call(obj)
    return int(ret)
}

func OpenDialog_SetTag(obj uintptr, value int) {
   openDialog_SetTag.Call(obj, uintptr(value))
}

func OpenDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := openDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func OpenDialog_StaticClassType() TClass {
    r, _, _:= openDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSaveDialog ---------------------------

func SaveDialog_Create(obj uintptr) uintptr {
    ret, _, _ := saveDialog_Create.Call(obj)
    return ret
}

func SaveDialog_Free(obj uintptr) {
    saveDialog_Free.Call(obj)
}

func SaveDialog_Execute(obj uintptr) bool {
    ret, _, _ := saveDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func SaveDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := saveDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func SaveDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := saveDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_HasParent(obj uintptr) bool {
    ret, _, _ := saveDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func SaveDialog_Assign(obj uintptr, Source uintptr)  {
    saveDialog_Assign.Call(obj, Source )
}

func SaveDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := saveDialog_ClassType.Call(obj)
    return TClass(ret)
}

func SaveDialog_ClassName(obj uintptr) string {
    ret, _, _ := saveDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := saveDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func SaveDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := saveDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SaveDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := saveDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SaveDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := saveDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func SaveDialog_ToString(obj uintptr) string {
    ret, _, _ := saveDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_GetFiles(obj uintptr) uintptr {
    ret, _, _ := saveDialog_GetFiles.Call(obj)
    return ret
}

func SaveDialog_GetDefaultExt(obj uintptr) string {
    ret, _, _ := saveDialog_GetDefaultExt.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetDefaultExt(obj uintptr, value string) {
   saveDialog_SetDefaultExt.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFileName(obj uintptr) string {
    ret, _, _ := saveDialog_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetFileName(obj uintptr, value string) {
   saveDialog_SetFileName.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFilter(obj uintptr) string {
    ret, _, _ := saveDialog_GetFilter.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetFilter(obj uintptr, value string) {
   saveDialog_SetFilter.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetFilterIndex(obj uintptr) int32 {
    ret, _, _ := saveDialog_GetFilterIndex.Call(obj)
    return int32(ret)
}

func SaveDialog_SetFilterIndex(obj uintptr, value int32) {
   saveDialog_SetFilterIndex.Call(obj, uintptr(value))
}

func SaveDialog_GetInitialDir(obj uintptr) string {
    ret, _, _ := saveDialog_GetInitialDir.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetInitialDir(obj uintptr, value string) {
   saveDialog_SetInitialDir.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetOptions(obj uintptr) TOpenOptions {
    ret, _, _ := saveDialog_GetOptions.Call(obj)
    return TOpenOptions(ret)
}

func SaveDialog_SetOptions(obj uintptr, value TOpenOptions) {
   saveDialog_SetOptions.Call(obj, uintptr(value))
}

func SaveDialog_GetTitle(obj uintptr) string {
    ret, _, _ := saveDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetTitle(obj uintptr, value string) {
   saveDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := saveDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func SaveDialog_SetOnClose(obj uintptr, fn interface{}) {
    saveDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func SaveDialog_SetOnShow(obj uintptr, fn interface{}) {
    saveDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func SaveDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := saveDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func SaveDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := saveDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func SaveDialog_SetComponentIndex(obj uintptr, value int32) {
   saveDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func SaveDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := saveDialog_GetOwner.Call(obj)
    return ret
}

func SaveDialog_GetName(obj uintptr) string {
    ret, _, _ := saveDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func SaveDialog_SetName(obj uintptr, value string) {
   saveDialog_SetName.Call(obj, GoStrToDStr(value))
}

func SaveDialog_GetTag(obj uintptr) int {
    ret, _, _ := saveDialog_GetTag.Call(obj)
    return int(ret)
}

func SaveDialog_SetTag(obj uintptr, value int) {
   saveDialog_SetTag.Call(obj, uintptr(value))
}

func SaveDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := saveDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func SaveDialog_StaticClassType() TClass {
    r, _, _:= saveDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TColorDialog ---------------------------

func ColorDialog_Create(obj uintptr) uintptr {
    ret, _, _ := colorDialog_Create.Call(obj)
    return ret
}

func ColorDialog_Free(obj uintptr) {
    colorDialog_Free.Call(obj)
}

func ColorDialog_Execute(obj uintptr) bool {
    ret, _, _ := colorDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := colorDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ColorDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := colorDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ColorDialog_HasParent(obj uintptr) bool {
    ret, _, _ := colorDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ColorDialog_Assign(obj uintptr, Source uintptr)  {
    colorDialog_Assign.Call(obj, Source )
}

func ColorDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := colorDialog_ClassType.Call(obj)
    return TClass(ret)
}

func ColorDialog_ClassName(obj uintptr) string {
    ret, _, _ := colorDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := colorDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func ColorDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := colorDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ColorDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := colorDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ColorDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := colorDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func ColorDialog_ToString(obj uintptr) string {
    ret, _, _ := colorDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ColorDialog_GetColor(obj uintptr) TColor {
    ret, _, _ := colorDialog_GetColor.Call(obj)
    return TColor(ret)
}

func ColorDialog_SetColor(obj uintptr, value TColor) {
   colorDialog_SetColor.Call(obj, uintptr(value))
}

func ColorDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := colorDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func ColorDialog_SetOnClose(obj uintptr, fn interface{}) {
    colorDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func ColorDialog_SetOnShow(obj uintptr, fn interface{}) {
    colorDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func ColorDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := colorDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func ColorDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := colorDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ColorDialog_SetComponentIndex(obj uintptr, value int32) {
   colorDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func ColorDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := colorDialog_GetOwner.Call(obj)
    return ret
}

func ColorDialog_GetName(obj uintptr) string {
    ret, _, _ := colorDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ColorDialog_SetName(obj uintptr, value string) {
   colorDialog_SetName.Call(obj, GoStrToDStr(value))
}

func ColorDialog_GetTag(obj uintptr) int {
    ret, _, _ := colorDialog_GetTag.Call(obj)
    return int(ret)
}

func ColorDialog_SetTag(obj uintptr, value int) {
   colorDialog_SetTag.Call(obj, uintptr(value))
}

func ColorDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := colorDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ColorDialog_StaticClassType() TClass {
    r, _, _:= colorDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TFontDialog ---------------------------

func FontDialog_Create(obj uintptr) uintptr {
    ret, _, _ := fontDialog_Create.Call(obj)
    return ret
}

func FontDialog_Free(obj uintptr) {
    fontDialog_Free.Call(obj)
}

func FontDialog_Execute(obj uintptr) bool {
    ret, _, _ := fontDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func FontDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := fontDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func FontDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := fontDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func FontDialog_HasParent(obj uintptr) bool {
    ret, _, _ := fontDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func FontDialog_Assign(obj uintptr, Source uintptr)  {
    fontDialog_Assign.Call(obj, Source )
}

func FontDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := fontDialog_ClassType.Call(obj)
    return TClass(ret)
}

func FontDialog_ClassName(obj uintptr) string {
    ret, _, _ := fontDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func FontDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := fontDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func FontDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := fontDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func FontDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := fontDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func FontDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := fontDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func FontDialog_ToString(obj uintptr) string {
    ret, _, _ := fontDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func FontDialog_GetFont(obj uintptr) uintptr {
    ret, _, _ := fontDialog_GetFont.Call(obj)
    return ret
}

func FontDialog_SetFont(obj uintptr, value uintptr) {
   fontDialog_SetFont.Call(obj, value)
}

func FontDialog_GetOptions(obj uintptr) TFontDialogOptions {
    ret, _, _ := fontDialog_GetOptions.Call(obj)
    return TFontDialogOptions(ret)
}

func FontDialog_SetOptions(obj uintptr, value TFontDialogOptions) {
   fontDialog_SetOptions.Call(obj, uintptr(value))
}

func FontDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := fontDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func FontDialog_SetOnClose(obj uintptr, fn interface{}) {
    fontDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func FontDialog_SetOnShow(obj uintptr, fn interface{}) {
    fontDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func FontDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := fontDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func FontDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := fontDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func FontDialog_SetComponentIndex(obj uintptr, value int32) {
   fontDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func FontDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := fontDialog_GetOwner.Call(obj)
    return ret
}

func FontDialog_GetName(obj uintptr) string {
    ret, _, _ := fontDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func FontDialog_SetName(obj uintptr, value string) {
   fontDialog_SetName.Call(obj, GoStrToDStr(value))
}

func FontDialog_GetTag(obj uintptr) int {
    ret, _, _ := fontDialog_GetTag.Call(obj)
    return int(ret)
}

func FontDialog_SetTag(obj uintptr, value int) {
   fontDialog_SetTag.Call(obj, uintptr(value))
}

func FontDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := fontDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func FontDialog_StaticClassType() TClass {
    r, _, _:= fontDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPrintDialog ---------------------------

func PrintDialog_Create(obj uintptr) uintptr {
    ret, _, _ := printDialog_Create.Call(obj)
    return ret
}

func PrintDialog_Free(obj uintptr) {
    printDialog_Free.Call(obj)
}

func PrintDialog_Execute(obj uintptr) bool {
    ret, _, _ := printDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func PrintDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := printDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PrintDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := printDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PrintDialog_HasParent(obj uintptr) bool {
    ret, _, _ := printDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PrintDialog_Assign(obj uintptr, Source uintptr)  {
    printDialog_Assign.Call(obj, Source )
}

func PrintDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := printDialog_ClassType.Call(obj)
    return TClass(ret)
}

func PrintDialog_ClassName(obj uintptr) string {
    ret, _, _ := printDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PrintDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := printDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func PrintDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := printDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PrintDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := printDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PrintDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := printDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func PrintDialog_ToString(obj uintptr) string {
    ret, _, _ := printDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PrintDialog_GetCollate(obj uintptr) bool {
    ret, _, _ := printDialog_GetCollate.Call(obj)
    return DBoolToGoBool(ret)
}

func PrintDialog_SetCollate(obj uintptr, value bool) {
   printDialog_SetCollate.Call(obj, GoBoolToDBool(value))
}

func PrintDialog_GetCopies(obj uintptr) int32 {
    ret, _, _ := printDialog_GetCopies.Call(obj)
    return int32(ret)
}

func PrintDialog_SetCopies(obj uintptr, value int32) {
   printDialog_SetCopies.Call(obj, uintptr(value))
}

func PrintDialog_GetFromPage(obj uintptr) int32 {
    ret, _, _ := printDialog_GetFromPage.Call(obj)
    return int32(ret)
}

func PrintDialog_SetFromPage(obj uintptr, value int32) {
   printDialog_SetFromPage.Call(obj, uintptr(value))
}

func PrintDialog_GetMinPage(obj uintptr) int32 {
    ret, _, _ := printDialog_GetMinPage.Call(obj)
    return int32(ret)
}

func PrintDialog_SetMinPage(obj uintptr, value int32) {
   printDialog_SetMinPage.Call(obj, uintptr(value))
}

func PrintDialog_GetMaxPage(obj uintptr) int32 {
    ret, _, _ := printDialog_GetMaxPage.Call(obj)
    return int32(ret)
}

func PrintDialog_SetMaxPage(obj uintptr, value int32) {
   printDialog_SetMaxPage.Call(obj, uintptr(value))
}

func PrintDialog_GetOptions(obj uintptr) TPrintDialogOptions {
    ret, _, _ := printDialog_GetOptions.Call(obj)
    return TPrintDialogOptions(ret)
}

func PrintDialog_SetOptions(obj uintptr, value TPrintDialogOptions) {
   printDialog_SetOptions.Call(obj, uintptr(value))
}

func PrintDialog_GetPrintToFile(obj uintptr) bool {
    ret, _, _ := printDialog_GetPrintToFile.Call(obj)
    return DBoolToGoBool(ret)
}

func PrintDialog_SetPrintToFile(obj uintptr, value bool) {
   printDialog_SetPrintToFile.Call(obj, GoBoolToDBool(value))
}

func PrintDialog_GetPrintRange(obj uintptr) TPrintRange {
    ret, _, _ := printDialog_GetPrintRange.Call(obj)
    return TPrintRange(ret)
}

func PrintDialog_SetPrintRange(obj uintptr, value TPrintRange) {
   printDialog_SetPrintRange.Call(obj, uintptr(value))
}

func PrintDialog_GetToPage(obj uintptr) int32 {
    ret, _, _ := printDialog_GetToPage.Call(obj)
    return int32(ret)
}

func PrintDialog_SetToPage(obj uintptr, value int32) {
   printDialog_SetToPage.Call(obj, uintptr(value))
}

func PrintDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := printDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func PrintDialog_SetOnClose(obj uintptr, fn interface{}) {
    printDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func PrintDialog_SetOnShow(obj uintptr, fn interface{}) {
    printDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func PrintDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := printDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func PrintDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := printDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PrintDialog_SetComponentIndex(obj uintptr, value int32) {
   printDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func PrintDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := printDialog_GetOwner.Call(obj)
    return ret
}

func PrintDialog_GetName(obj uintptr) string {
    ret, _, _ := printDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PrintDialog_SetName(obj uintptr, value string) {
   printDialog_SetName.Call(obj, GoStrToDStr(value))
}

func PrintDialog_GetTag(obj uintptr) int {
    ret, _, _ := printDialog_GetTag.Call(obj)
    return int(ret)
}

func PrintDialog_SetTag(obj uintptr, value int) {
   printDialog_SetTag.Call(obj, uintptr(value))
}

func PrintDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := printDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PrintDialog_StaticClassType() TClass {
    r, _, _:= printDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TOpenPictureDialog ---------------------------

func OpenPictureDialog_Create(obj uintptr) uintptr {
    ret, _, _ := openPictureDialog_Create.Call(obj)
    return ret
}

func OpenPictureDialog_Free(obj uintptr) {
    openPictureDialog_Free.Call(obj)
}

func OpenPictureDialog_Execute(obj uintptr) bool {
    ret, _, _ := openPictureDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func OpenPictureDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := openPictureDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func OpenPictureDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_HasParent(obj uintptr) bool {
    ret, _, _ := openPictureDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func OpenPictureDialog_Assign(obj uintptr, Source uintptr)  {
    openPictureDialog_Assign.Call(obj, Source )
}

func OpenPictureDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := openPictureDialog_ClassType.Call(obj)
    return TClass(ret)
}

func OpenPictureDialog_ClassName(obj uintptr) string {
    ret, _, _ := openPictureDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := openPictureDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func OpenPictureDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := openPictureDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func OpenPictureDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := openPictureDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func OpenPictureDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := openPictureDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func OpenPictureDialog_ToString(obj uintptr) string {
    ret, _, _ := openPictureDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_GetFilter(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetFilter.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetFilter(obj uintptr, value string) {
   openPictureDialog_SetFilter.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFiles(obj uintptr) uintptr {
    ret, _, _ := openPictureDialog_GetFiles.Call(obj)
    return ret
}

func OpenPictureDialog_GetDefaultExt(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetDefaultExt.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetDefaultExt(obj uintptr, value string) {
   openPictureDialog_SetDefaultExt.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFileName(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetFileName(obj uintptr, value string) {
   openPictureDialog_SetFileName.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetFilterIndex(obj uintptr) int32 {
    ret, _, _ := openPictureDialog_GetFilterIndex.Call(obj)
    return int32(ret)
}

func OpenPictureDialog_SetFilterIndex(obj uintptr, value int32) {
   openPictureDialog_SetFilterIndex.Call(obj, uintptr(value))
}

func OpenPictureDialog_GetInitialDir(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetInitialDir.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetInitialDir(obj uintptr, value string) {
   openPictureDialog_SetInitialDir.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetOptions(obj uintptr) TOpenOptions {
    ret, _, _ := openPictureDialog_GetOptions.Call(obj)
    return TOpenOptions(ret)
}

func OpenPictureDialog_SetOptions(obj uintptr, value TOpenOptions) {
   openPictureDialog_SetOptions.Call(obj, uintptr(value))
}

func OpenPictureDialog_GetTitle(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetTitle(obj uintptr, value string) {
   openPictureDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := openPictureDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func OpenPictureDialog_SetOnClose(obj uintptr, fn interface{}) {
    openPictureDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func OpenPictureDialog_SetOnShow(obj uintptr, fn interface{}) {
    openPictureDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func OpenPictureDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := openPictureDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func OpenPictureDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := openPictureDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func OpenPictureDialog_SetComponentIndex(obj uintptr, value int32) {
   openPictureDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func OpenPictureDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := openPictureDialog_GetOwner.Call(obj)
    return ret
}

func OpenPictureDialog_GetName(obj uintptr) string {
    ret, _, _ := openPictureDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func OpenPictureDialog_SetName(obj uintptr, value string) {
   openPictureDialog_SetName.Call(obj, GoStrToDStr(value))
}

func OpenPictureDialog_GetTag(obj uintptr) int {
    ret, _, _ := openPictureDialog_GetTag.Call(obj)
    return int(ret)
}

func OpenPictureDialog_SetTag(obj uintptr, value int) {
   openPictureDialog_SetTag.Call(obj, uintptr(value))
}

func OpenPictureDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := openPictureDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func OpenPictureDialog_StaticClassType() TClass {
    r, _, _:= openPictureDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSavePictureDialog ---------------------------

func SavePictureDialog_Create(obj uintptr) uintptr {
    ret, _, _ := savePictureDialog_Create.Call(obj)
    return ret
}

func SavePictureDialog_Free(obj uintptr) {
    savePictureDialog_Free.Call(obj)
}

func SavePictureDialog_Execute(obj uintptr) bool {
    ret, _, _ := savePictureDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func SavePictureDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := savePictureDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func SavePictureDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_HasParent(obj uintptr) bool {
    ret, _, _ := savePictureDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func SavePictureDialog_Assign(obj uintptr, Source uintptr)  {
    savePictureDialog_Assign.Call(obj, Source )
}

func SavePictureDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := savePictureDialog_ClassType.Call(obj)
    return TClass(ret)
}

func SavePictureDialog_ClassName(obj uintptr) string {
    ret, _, _ := savePictureDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := savePictureDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func SavePictureDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := savePictureDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SavePictureDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := savePictureDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SavePictureDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := savePictureDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func SavePictureDialog_ToString(obj uintptr) string {
    ret, _, _ := savePictureDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_GetFilter(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetFilter.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetFilter(obj uintptr, value string) {
   savePictureDialog_SetFilter.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFiles(obj uintptr) uintptr {
    ret, _, _ := savePictureDialog_GetFiles.Call(obj)
    return ret
}

func SavePictureDialog_GetDefaultExt(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetDefaultExt.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetDefaultExt(obj uintptr, value string) {
   savePictureDialog_SetDefaultExt.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFileName(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetFileName(obj uintptr, value string) {
   savePictureDialog_SetFileName.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetFilterIndex(obj uintptr) int32 {
    ret, _, _ := savePictureDialog_GetFilterIndex.Call(obj)
    return int32(ret)
}

func SavePictureDialog_SetFilterIndex(obj uintptr, value int32) {
   savePictureDialog_SetFilterIndex.Call(obj, uintptr(value))
}

func SavePictureDialog_GetInitialDir(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetInitialDir.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetInitialDir(obj uintptr, value string) {
   savePictureDialog_SetInitialDir.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetOptions(obj uintptr) TOpenOptions {
    ret, _, _ := savePictureDialog_GetOptions.Call(obj)
    return TOpenOptions(ret)
}

func SavePictureDialog_SetOptions(obj uintptr, value TOpenOptions) {
   savePictureDialog_SetOptions.Call(obj, uintptr(value))
}

func SavePictureDialog_GetTitle(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetTitle(obj uintptr, value string) {
   savePictureDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := savePictureDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func SavePictureDialog_SetOnClose(obj uintptr, fn interface{}) {
    savePictureDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func SavePictureDialog_SetOnShow(obj uintptr, fn interface{}) {
    savePictureDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func SavePictureDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := savePictureDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func SavePictureDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := savePictureDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func SavePictureDialog_SetComponentIndex(obj uintptr, value int32) {
   savePictureDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func SavePictureDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := savePictureDialog_GetOwner.Call(obj)
    return ret
}

func SavePictureDialog_GetName(obj uintptr) string {
    ret, _, _ := savePictureDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func SavePictureDialog_SetName(obj uintptr, value string) {
   savePictureDialog_SetName.Call(obj, GoStrToDStr(value))
}

func SavePictureDialog_GetTag(obj uintptr) int {
    ret, _, _ := savePictureDialog_GetTag.Call(obj)
    return int(ret)
}

func SavePictureDialog_SetTag(obj uintptr, value int) {
   savePictureDialog_SetTag.Call(obj, uintptr(value))
}

func SavePictureDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := savePictureDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func SavePictureDialog_StaticClassType() TClass {
    r, _, _:= savePictureDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSelectDirectoryDialog ---------------------------

func SelectDirectoryDialog_Create(obj uintptr) uintptr {
    ret, _, _ := selectDirectoryDialog_Create.Call(obj)
    return ret
}

func SelectDirectoryDialog_Free(obj uintptr) {
    selectDirectoryDialog_Free.Call(obj)
}

func SelectDirectoryDialog_Execute(obj uintptr) bool {
    ret, _, _ := selectDirectoryDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := selectDirectoryDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func SelectDirectoryDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_HasParent(obj uintptr) bool {
    ret, _, _ := selectDirectoryDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_Assign(obj uintptr, Source uintptr)  {
    selectDirectoryDialog_Assign.Call(obj, Source )
}

func SelectDirectoryDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := selectDirectoryDialog_ClassType.Call(obj)
    return TClass(ret)
}

func SelectDirectoryDialog_ClassName(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := selectDirectoryDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func SelectDirectoryDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := selectDirectoryDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := selectDirectoryDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SelectDirectoryDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := selectDirectoryDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func SelectDirectoryDialog_ToString(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_GetFiles(obj uintptr) uintptr {
    ret, _, _ := selectDirectoryDialog_GetFiles.Call(obj)
    return ret
}

func SelectDirectoryDialog_GetDefaultExt(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetDefaultExt.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetDefaultExt(obj uintptr, value string) {
   selectDirectoryDialog_SetDefaultExt.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFileName(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetFileName(obj uintptr, value string) {
   selectDirectoryDialog_SetFileName.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFilter(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetFilter.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetFilter(obj uintptr, value string) {
   selectDirectoryDialog_SetFilter.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetFilterIndex(obj uintptr) int32 {
    ret, _, _ := selectDirectoryDialog_GetFilterIndex.Call(obj)
    return int32(ret)
}

func SelectDirectoryDialog_SetFilterIndex(obj uintptr, value int32) {
   selectDirectoryDialog_SetFilterIndex.Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetInitialDir(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetInitialDir.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetInitialDir(obj uintptr, value string) {
   selectDirectoryDialog_SetInitialDir.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetOptions(obj uintptr) TOpenOptions {
    ret, _, _ := selectDirectoryDialog_GetOptions.Call(obj)
    return TOpenOptions(ret)
}

func SelectDirectoryDialog_SetOptions(obj uintptr, value TOpenOptions) {
   selectDirectoryDialog_SetOptions.Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetTitle(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetTitle(obj uintptr, value string) {
   selectDirectoryDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := selectDirectoryDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func SelectDirectoryDialog_SetOnClose(obj uintptr, fn interface{}) {
    selectDirectoryDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func SelectDirectoryDialog_SetOnShow(obj uintptr, fn interface{}) {
    selectDirectoryDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func SelectDirectoryDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := selectDirectoryDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func SelectDirectoryDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := selectDirectoryDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func SelectDirectoryDialog_SetComponentIndex(obj uintptr, value int32) {
   selectDirectoryDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := selectDirectoryDialog_GetOwner.Call(obj)
    return ret
}

func SelectDirectoryDialog_GetName(obj uintptr) string {
    ret, _, _ := selectDirectoryDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func SelectDirectoryDialog_SetName(obj uintptr, value string) {
   selectDirectoryDialog_SetName.Call(obj, GoStrToDStr(value))
}

func SelectDirectoryDialog_GetTag(obj uintptr) int {
    ret, _, _ := selectDirectoryDialog_GetTag.Call(obj)
    return int(ret)
}

func SelectDirectoryDialog_SetTag(obj uintptr, value int) {
   selectDirectoryDialog_SetTag.Call(obj, uintptr(value))
}

func SelectDirectoryDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := selectDirectoryDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func SelectDirectoryDialog_StaticClassType() TClass {
    r, _, _:= selectDirectoryDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TRichEdit ---------------------------

func RichEdit_Create(obj uintptr) uintptr {
    ret, _, _ := richEdit_Create.Call(obj)
    return ret
}

func RichEdit_Free(obj uintptr) {
    richEdit_Free.Call(obj)
}

func RichEdit_Clear(obj uintptr)  {
    richEdit_Clear.Call(obj)
}

func RichEdit_FindText(obj uintptr, SearchStr string, StartPos int32, Length int32, Options TSearchTypes) int32 {
    ret, _, _ := richEdit_FindText.Call(obj, GoStrToDStr(SearchStr) , uintptr(StartPos) , uintptr(Length) , uintptr(Options) )
    return int32(ret)
}

func RichEdit_ClearSelection(obj uintptr)  {
    richEdit_ClearSelection.Call(obj)
}

func RichEdit_CopyToClipboard(obj uintptr)  {
    richEdit_CopyToClipboard.Call(obj)
}

func RichEdit_CutToClipboard(obj uintptr)  {
    richEdit_CutToClipboard.Call(obj)
}

func RichEdit_PasteFromClipboard(obj uintptr)  {
    richEdit_PasteFromClipboard.Call(obj)
}

func RichEdit_Undo(obj uintptr)  {
    richEdit_Undo.Call(obj)
}

func RichEdit_SelectAll(obj uintptr)  {
    richEdit_SelectAll.Call(obj)
}

func RichEdit_CanFocus(obj uintptr) bool {
    ret, _, _ := richEdit_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := richEdit_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func RichEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := richEdit_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func RichEdit_DisableAlign(obj uintptr)  {
    richEdit_DisableAlign.Call(obj)
}

func RichEdit_EnableAlign(obj uintptr)  {
    richEdit_EnableAlign.Call(obj)
}

func RichEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := richEdit_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func RichEdit_FlipChildren(obj uintptr, AllLevels bool)  {
    richEdit_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func RichEdit_Focused(obj uintptr) bool {
    ret, _, _ := richEdit_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_HandleAllocated(obj uintptr) bool {
    ret, _, _ := richEdit_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_InsertControl(obj uintptr, AControl uintptr)  {
    richEdit_InsertControl.Call(obj, AControl )
}

func RichEdit_Invalidate(obj uintptr)  {
    richEdit_Invalidate.Call(obj)
}

func RichEdit_RemoveControl(obj uintptr, AControl uintptr)  {
    richEdit_RemoveControl.Call(obj, AControl )
}

func RichEdit_Realign(obj uintptr)  {
    richEdit_Realign.Call(obj)
}

func RichEdit_Repaint(obj uintptr)  {
    richEdit_Repaint.Call(obj)
}

func RichEdit_ScaleBy(obj uintptr, M int32, D int32)  {
    richEdit_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func RichEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    richEdit_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func RichEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    richEdit_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func RichEdit_SetFocus(obj uintptr)  {
    richEdit_SetFocus.Call(obj)
}

func RichEdit_Update(obj uintptr)  {
    richEdit_Update.Call(obj)
}

func RichEdit_BringToFront(obj uintptr)  {
    richEdit_BringToFront.Call(obj)
}

func RichEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    richEdit_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    richEdit_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_Dragging(obj uintptr) bool {
    ret, _, _ := richEdit_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_HasParent(obj uintptr) bool {
    ret, _, _ := richEdit_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_Hide(obj uintptr)  {
    richEdit_Hide.Call(obj)
}

func RichEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := richEdit_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func RichEdit_Refresh(obj uintptr)  {
    richEdit_Refresh.Call(obj)
}

func RichEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    richEdit_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    richEdit_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_SendToBack(obj uintptr)  {
    richEdit_SendToBack.Call(obj)
}

func RichEdit_Show(obj uintptr)  {
    richEdit_Show.Call(obj)
}

func RichEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := richEdit_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func RichEdit_GetTextLen(obj uintptr) int32 {
    ret, _, _ := richEdit_GetTextLen.Call(obj)
    return int32(ret)
}

func RichEdit_SetTextBuf(obj uintptr, Buffer string)  {
    richEdit_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func RichEdit_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := richEdit_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func RichEdit_GetNamePath(obj uintptr) string {
    ret, _, _ := richEdit_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_Assign(obj uintptr, Source uintptr)  {
    richEdit_Assign.Call(obj, Source )
}

func RichEdit_ClassType(obj uintptr) TClass {
    ret, _, _ := richEdit_ClassType.Call(obj)
    return TClass(ret)
}

func RichEdit_ClassName(obj uintptr) string {
    ret, _, _ := richEdit_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_InstanceSize(obj uintptr) int32 {
    ret, _, _ := richEdit_InstanceSize.Call(obj)
    return int32(ret)
}

func RichEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := richEdit_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func RichEdit_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := richEdit_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func RichEdit_GetHashCode(obj uintptr) int32 {
    ret, _, _ := richEdit_GetHashCode.Call(obj)
    return int32(ret)
}

func RichEdit_ToString(obj uintptr) string {
    ret, _, _ := richEdit_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    richEdit_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RichEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    richEdit_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func RichEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    richEdit_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func RichEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    richEdit_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func RichEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    richEdit_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func RichEdit_AnchorClient(obj uintptr, ASpace int32)  {
    richEdit_AnchorClient.Call(obj, uintptr(ASpace) )
}

func RichEdit_GetAlign(obj uintptr) TAlign {
    ret, _, _ := richEdit_GetAlign.Call(obj)
    return TAlign(ret)
}

func RichEdit_SetAlign(obj uintptr, value TAlign) {
   richEdit_SetAlign.Call(obj, uintptr(value))
}

func RichEdit_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := richEdit_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func RichEdit_SetAlignment(obj uintptr, value TAlignment) {
   richEdit_SetAlignment.Call(obj, uintptr(value))
}

func RichEdit_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := richEdit_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func RichEdit_SetAnchors(obj uintptr, value TAnchors) {
   richEdit_SetAnchors.Call(obj, uintptr(value))
}

func RichEdit_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := richEdit_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func RichEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
   richEdit_SetBiDiMode.Call(obj, uintptr(value))
}

func RichEdit_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := richEdit_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func RichEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
   richEdit_SetBorderStyle.Call(obj, uintptr(value))
}

func RichEdit_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := richEdit_GetBorderWidth.Call(obj)
    return int32(ret)
}

func RichEdit_SetBorderWidth(obj uintptr, value int32) {
   richEdit_SetBorderWidth.Call(obj, uintptr(value))
}

func RichEdit_GetColor(obj uintptr) TColor {
    ret, _, _ := richEdit_GetColor.Call(obj)
    return TColor(ret)
}

func RichEdit_SetColor(obj uintptr, value TColor) {
   richEdit_SetColor.Call(obj, uintptr(value))
}

func RichEdit_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := richEdit_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func RichEdit_SetDragCursor(obj uintptr, value TCursor) {
   richEdit_SetDragCursor.Call(obj, uintptr(value))
}

func RichEdit_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := richEdit_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func RichEdit_SetDragKind(obj uintptr, value TDragKind) {
   richEdit_SetDragKind.Call(obj, uintptr(value))
}

func RichEdit_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := richEdit_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func RichEdit_SetDragMode(obj uintptr, value TDragMode) {
   richEdit_SetDragMode.Call(obj, uintptr(value))
}

func RichEdit_GetEnabled(obj uintptr) bool {
    ret, _, _ := richEdit_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetEnabled(obj uintptr, value bool) {
   richEdit_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetFont(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetFont.Call(obj)
    return ret
}

func RichEdit_SetFont(obj uintptr, value uintptr) {
   richEdit_SetFont.Call(obj, value)
}

func RichEdit_GetHideSelection(obj uintptr) bool {
    ret, _, _ := richEdit_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetHideSelection(obj uintptr, value bool) {
   richEdit_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetConstraints.Call(obj)
    return ret
}

func RichEdit_SetConstraints(obj uintptr, value uintptr) {
   richEdit_SetConstraints.Call(obj, value)
}

func RichEdit_GetLines(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetLines.Call(obj)
    return ret
}

func RichEdit_SetLines(obj uintptr, value uintptr) {
   richEdit_SetLines.Call(obj, value)
}

func RichEdit_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := richEdit_GetMaxLength.Call(obj)
    return int32(ret)
}

func RichEdit_SetMaxLength(obj uintptr, value int32) {
   richEdit_SetMaxLength.Call(obj, uintptr(value))
}

func RichEdit_GetParentColor(obj uintptr) bool {
    ret, _, _ := richEdit_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetParentColor(obj uintptr, value bool) {
   richEdit_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentFont(obj uintptr) bool {
    ret, _, _ := richEdit_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetParentFont(obj uintptr, value bool) {
   richEdit_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := richEdit_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetParentShowHint(obj uintptr, value bool) {
   richEdit_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetPopupMenu.Call(obj)
    return ret
}

func RichEdit_SetPopupMenu(obj uintptr, value uintptr) {
   richEdit_SetPopupMenu.Call(obj, value)
}

func RichEdit_GetReadOnly(obj uintptr) bool {
    ret, _, _ := richEdit_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetReadOnly(obj uintptr, value bool) {
   richEdit_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := richEdit_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func RichEdit_SetScrollBars(obj uintptr, value TScrollStyle) {
   richEdit_SetScrollBars.Call(obj, uintptr(value))
}

func RichEdit_GetShowHint(obj uintptr) bool {
    ret, _, _ := richEdit_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetShowHint(obj uintptr, value bool) {
   richEdit_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := richEdit_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func RichEdit_SetTabOrder(obj uintptr, value TTabOrder) {
   richEdit_SetTabOrder.Call(obj, uintptr(value))
}

func RichEdit_GetTabStop(obj uintptr) bool {
    ret, _, _ := richEdit_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetTabStop(obj uintptr, value bool) {
   richEdit_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetVisible(obj uintptr) bool {
    ret, _, _ := richEdit_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetVisible(obj uintptr, value bool) {
   richEdit_SetVisible.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWantTabs(obj uintptr) bool {
    ret, _, _ := richEdit_GetWantTabs.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetWantTabs(obj uintptr, value bool) {
   richEdit_SetWantTabs.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWantReturns(obj uintptr) bool {
    ret, _, _ := richEdit_GetWantReturns.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetWantReturns(obj uintptr, value bool) {
   richEdit_SetWantReturns.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetWordWrap(obj uintptr) bool {
    ret, _, _ := richEdit_GetWordWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetWordWrap(obj uintptr, value bool) {
   richEdit_SetWordWrap.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetZoom(obj uintptr) int32 {
    ret, _, _ := richEdit_GetZoom.Call(obj)
    return int32(ret)
}

func RichEdit_SetZoom(obj uintptr, value int32) {
   richEdit_SetZoom.Call(obj, uintptr(value))
}

func RichEdit_SetOnChange(obj uintptr, fn interface{}) {
    richEdit_SetOnChange.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnClick(obj uintptr, fn interface{}) {
    richEdit_SetOnClick.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnContextPopup(obj uintptr, fn interface{}) {
    richEdit_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnDblClick(obj uintptr, fn interface{}) {
    richEdit_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
    richEdit_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnDragOver(obj uintptr, fn interface{}) {
    richEdit_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
    richEdit_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnEnter(obj uintptr, fn interface{}) {
    richEdit_SetOnEnter.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnExit(obj uintptr, fn interface{}) {
    richEdit_SetOnExit.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
    richEdit_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
    richEdit_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
    richEdit_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseWheel(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseWheel.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func RichEdit_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    richEdit_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func RichEdit_GetDefAttributes(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetDefAttributes.Call(obj)
    return ret
}

func RichEdit_SetDefAttributes(obj uintptr, value uintptr) {
   richEdit_SetDefAttributes.Call(obj, value)
}

func RichEdit_GetSelAttributes(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetSelAttributes.Call(obj)
    return ret
}

func RichEdit_SetSelAttributes(obj uintptr, value uintptr) {
   richEdit_SetSelAttributes.Call(obj, value)
}

func RichEdit_GetParagraph(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetParagraph.Call(obj)
    return ret
}

func RichEdit_GetCaretPos(obj uintptr) TPoint {
    var ret TPoint
    richEdit_GetCaretPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_SetCaretPos(obj uintptr, value TPoint) {
   richEdit_SetCaretPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RichEdit_GetCanUndo(obj uintptr) bool {
    ret, _, _ := richEdit_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_GetModified(obj uintptr) bool {
    ret, _, _ := richEdit_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetModified(obj uintptr, value bool) {
   richEdit_SetModified.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetSelLength(obj uintptr) int32 {
    ret, _, _ := richEdit_GetSelLength.Call(obj)
    return int32(ret)
}

func RichEdit_SetSelLength(obj uintptr, value int32) {
   richEdit_SetSelLength.Call(obj, uintptr(value))
}

func RichEdit_GetSelStart(obj uintptr) int32 {
    ret, _, _ := richEdit_GetSelStart.Call(obj)
    return int32(ret)
}

func RichEdit_SetSelStart(obj uintptr, value int32) {
   richEdit_SetSelStart.Call(obj, uintptr(value))
}

func RichEdit_GetSelText(obj uintptr) string {
    ret, _, _ := richEdit_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_SetSelText(obj uintptr, value string) {
   richEdit_SetSelText.Call(obj, GoStrToDStr(value))
}

func RichEdit_GetText(obj uintptr) string {
    ret, _, _ := richEdit_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_SetText(obj uintptr, value string) {
   richEdit_SetText.Call(obj, GoStrToDStr(value))
}

func RichEdit_GetTextHint(obj uintptr) string {
    ret, _, _ := richEdit_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_SetTextHint(obj uintptr, value string) {
   richEdit_SetTextHint.Call(obj, GoStrToDStr(value))
}

func RichEdit_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := richEdit_GetDockClientCount.Call(obj)
    return int32(ret)
}

func RichEdit_GetDockSite(obj uintptr) bool {
    ret, _, _ := richEdit_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetDockSite(obj uintptr, value bool) {
   richEdit_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := richEdit_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetDoubleBuffered(obj uintptr, value bool) {
   richEdit_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := richEdit_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := richEdit_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func RichEdit_GetBrush(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetBrush.Call(obj)
    return ret
}

func RichEdit_GetControlCount(obj uintptr) int32 {
    ret, _, _ := richEdit_GetControlCount.Call(obj)
    return int32(ret)
}

func RichEdit_GetHandle(obj uintptr) HWND {
    ret, _, _ := richEdit_GetHandle.Call(obj)
    return HWND(ret)
}

func RichEdit_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := richEdit_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
   richEdit_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := richEdit_GetParentWindow.Call(obj)
    return HWND(ret)
}

func RichEdit_SetParentWindow(obj uintptr, value HWND) {
   richEdit_SetParentWindow.Call(obj, uintptr(value))
}

func RichEdit_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := richEdit_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_SetUseDockManager(obj uintptr, value bool) {
   richEdit_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func RichEdit_GetAction(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetAction.Call(obj)
    return ret
}

func RichEdit_SetAction(obj uintptr, value uintptr) {
   richEdit_SetAction.Call(obj, value)
}

func RichEdit_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    richEdit_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_SetBoundsRect(obj uintptr, value TRect) {
   richEdit_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func RichEdit_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := richEdit_GetClientHeight.Call(obj)
    return int32(ret)
}

func RichEdit_SetClientHeight(obj uintptr, value int32) {
   richEdit_SetClientHeight.Call(obj, uintptr(value))
}

func RichEdit_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    richEdit_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_GetClientRect(obj uintptr) TRect {
    var ret TRect
    richEdit_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func RichEdit_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := richEdit_GetClientWidth.Call(obj)
    return int32(ret)
}

func RichEdit_SetClientWidth(obj uintptr, value int32) {
   richEdit_SetClientWidth.Call(obj, uintptr(value))
}

func RichEdit_GetControlState(obj uintptr) TControlState {
    ret, _, _ := richEdit_GetControlState.Call(obj)
    return TControlState(ret)
}

func RichEdit_SetControlState(obj uintptr, value TControlState) {
   richEdit_SetControlState.Call(obj, uintptr(value))
}

func RichEdit_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := richEdit_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func RichEdit_SetControlStyle(obj uintptr, value TControlStyle) {
   richEdit_SetControlStyle.Call(obj, uintptr(value))
}

func RichEdit_GetFloating(obj uintptr) bool {
    ret, _, _ := richEdit_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func RichEdit_GetParent(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetParent.Call(obj)
    return ret
}

func RichEdit_SetParent(obj uintptr, value uintptr) {
   richEdit_SetParent.Call(obj, value)
}

func RichEdit_GetLeft(obj uintptr) int32 {
    ret, _, _ := richEdit_GetLeft.Call(obj)
    return int32(ret)
}

func RichEdit_SetLeft(obj uintptr, value int32) {
   richEdit_SetLeft.Call(obj, uintptr(value))
}

func RichEdit_GetTop(obj uintptr) int32 {
    ret, _, _ := richEdit_GetTop.Call(obj)
    return int32(ret)
}

func RichEdit_SetTop(obj uintptr, value int32) {
   richEdit_SetTop.Call(obj, uintptr(value))
}

func RichEdit_GetWidth(obj uintptr) int32 {
    ret, _, _ := richEdit_GetWidth.Call(obj)
    return int32(ret)
}

func RichEdit_SetWidth(obj uintptr, value int32) {
   richEdit_SetWidth.Call(obj, uintptr(value))
}

func RichEdit_GetHeight(obj uintptr) int32 {
    ret, _, _ := richEdit_GetHeight.Call(obj)
    return int32(ret)
}

func RichEdit_SetHeight(obj uintptr, value int32) {
   richEdit_SetHeight.Call(obj, uintptr(value))
}

func RichEdit_GetCursor(obj uintptr) TCursor {
    ret, _, _ := richEdit_GetCursor.Call(obj)
    return TCursor(ret)
}

func RichEdit_SetCursor(obj uintptr, value TCursor) {
   richEdit_SetCursor.Call(obj, uintptr(value))
}

func RichEdit_GetHint(obj uintptr) string {
    ret, _, _ := richEdit_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_SetHint(obj uintptr, value string) {
   richEdit_SetHint.Call(obj, GoStrToDStr(value))
}

func RichEdit_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := richEdit_GetComponentCount.Call(obj)
    return int32(ret)
}

func RichEdit_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := richEdit_GetComponentIndex.Call(obj)
    return int32(ret)
}

func RichEdit_SetComponentIndex(obj uintptr, value int32) {
   richEdit_SetComponentIndex.Call(obj, uintptr(value))
}

func RichEdit_GetOwner(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetOwner.Call(obj)
    return ret
}

func RichEdit_GetName(obj uintptr) string {
    ret, _, _ := richEdit_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func RichEdit_SetName(obj uintptr, value string) {
   richEdit_SetName.Call(obj, GoStrToDStr(value))
}

func RichEdit_GetTag(obj uintptr) int {
    ret, _, _ := richEdit_GetTag.Call(obj)
    return int(ret)
}

func RichEdit_SetTag(obj uintptr, value int) {
   richEdit_SetTag.Call(obj, uintptr(value))
}

func RichEdit_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetAnchorSideLeft.Call(obj)
    return ret
}

func RichEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
   richEdit_SetAnchorSideLeft.Call(obj, value)
}

func RichEdit_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetAnchorSideTop.Call(obj)
    return ret
}

func RichEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
   richEdit_SetAnchorSideTop.Call(obj, value)
}

func RichEdit_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetAnchorSideRight.Call(obj)
    return ret
}

func RichEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
   richEdit_SetAnchorSideRight.Call(obj, value)
}

func RichEdit_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetAnchorSideBottom.Call(obj)
    return ret
}

func RichEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
   richEdit_SetAnchorSideBottom.Call(obj, value)
}

func RichEdit_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetChildSizing.Call(obj)
    return ret
}

func RichEdit_SetChildSizing(obj uintptr, value uintptr) {
   richEdit_SetChildSizing.Call(obj, value)
}

func RichEdit_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := richEdit_GetBorderSpacing.Call(obj)
    return ret
}

func RichEdit_SetBorderSpacing(obj uintptr, value uintptr) {
   richEdit_SetBorderSpacing.Call(obj, value)
}

func RichEdit_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := richEdit_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func RichEdit_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := richEdit_GetControls.Call(obj, uintptr(Index))
    return ret
}

func RichEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := richEdit_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func RichEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := richEdit_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func RichEdit_StaticClassType() TClass {
    r, _, _:= richEdit_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTrackBar ---------------------------

func TrackBar_Create(obj uintptr) uintptr {
    ret, _, _ := trackBar_Create.Call(obj)
    return ret
}

func TrackBar_Free(obj uintptr) {
    trackBar_Free.Call(obj)
}

func TrackBar_SetTick(obj uintptr, Value int32)  {
    trackBar_SetTick.Call(obj, uintptr(Value) )
}

func TrackBar_CanFocus(obj uintptr) bool {
    ret, _, _ := trackBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := trackBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func TrackBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := trackBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func TrackBar_DisableAlign(obj uintptr)  {
    trackBar_DisableAlign.Call(obj)
}

func TrackBar_EnableAlign(obj uintptr)  {
    trackBar_EnableAlign.Call(obj)
}

func TrackBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := trackBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func TrackBar_FlipChildren(obj uintptr, AllLevels bool)  {
    trackBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func TrackBar_Focused(obj uintptr) bool {
    ret, _, _ := trackBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := trackBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_InsertControl(obj uintptr, AControl uintptr)  {
    trackBar_InsertControl.Call(obj, AControl )
}

func TrackBar_Invalidate(obj uintptr)  {
    trackBar_Invalidate.Call(obj)
}

func TrackBar_RemoveControl(obj uintptr, AControl uintptr)  {
    trackBar_RemoveControl.Call(obj, AControl )
}

func TrackBar_Realign(obj uintptr)  {
    trackBar_Realign.Call(obj)
}

func TrackBar_Repaint(obj uintptr)  {
    trackBar_Repaint.Call(obj)
}

func TrackBar_ScaleBy(obj uintptr, M int32, D int32)  {
    trackBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func TrackBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    trackBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func TrackBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    trackBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func TrackBar_SetFocus(obj uintptr)  {
    trackBar_SetFocus.Call(obj)
}

func TrackBar_Update(obj uintptr)  {
    trackBar_Update.Call(obj)
}

func TrackBar_BringToFront(obj uintptr)  {
    trackBar_BringToFront.Call(obj)
}

func TrackBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    trackBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    trackBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_Dragging(obj uintptr) bool {
    ret, _, _ := trackBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_HasParent(obj uintptr) bool {
    ret, _, _ := trackBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_Hide(obj uintptr)  {
    trackBar_Hide.Call(obj)
}

func TrackBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := trackBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func TrackBar_Refresh(obj uintptr)  {
    trackBar_Refresh.Call(obj)
}

func TrackBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    trackBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    trackBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_SendToBack(obj uintptr)  {
    trackBar_SendToBack.Call(obj)
}

func TrackBar_Show(obj uintptr)  {
    trackBar_Show.Call(obj)
}

func TrackBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := trackBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func TrackBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := trackBar_GetTextLen.Call(obj)
    return int32(ret)
}

func TrackBar_SetTextBuf(obj uintptr, Buffer string)  {
    trackBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func TrackBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := trackBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func TrackBar_GetNamePath(obj uintptr) string {
    ret, _, _ := trackBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TrackBar_Assign(obj uintptr, Source uintptr)  {
    trackBar_Assign.Call(obj, Source )
}

func TrackBar_ClassType(obj uintptr) TClass {
    ret, _, _ := trackBar_ClassType.Call(obj)
    return TClass(ret)
}

func TrackBar_ClassName(obj uintptr) string {
    ret, _, _ := trackBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TrackBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := trackBar_InstanceSize.Call(obj)
    return int32(ret)
}

func TrackBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := trackBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TrackBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := trackBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TrackBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := trackBar_GetHashCode.Call(obj)
    return int32(ret)
}

func TrackBar_ToString(obj uintptr) string {
    ret, _, _ := trackBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TrackBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    trackBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TrackBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    trackBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TrackBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    trackBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func TrackBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    trackBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func TrackBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    trackBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func TrackBar_AnchorClient(obj uintptr, ASpace int32)  {
    trackBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func TrackBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := trackBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func TrackBar_SetAlign(obj uintptr, value TAlign) {
   trackBar_SetAlign.Call(obj, uintptr(value))
}

func TrackBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := trackBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func TrackBar_SetAnchors(obj uintptr, value TAnchors) {
   trackBar_SetAnchors.Call(obj, uintptr(value))
}

func TrackBar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := trackBar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func TrackBar_SetBorderWidth(obj uintptr, value int32) {
   trackBar_SetBorderWidth.Call(obj, uintptr(value))
}

func TrackBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := trackBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetDoubleBuffered(obj uintptr, value bool) {
   trackBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := trackBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func TrackBar_SetDragCursor(obj uintptr, value TCursor) {
   trackBar_SetDragCursor.Call(obj, uintptr(value))
}

func TrackBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := trackBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func TrackBar_SetDragMode(obj uintptr, value TDragMode) {
   trackBar_SetDragMode.Call(obj, uintptr(value))
}

func TrackBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := trackBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetEnabled(obj uintptr, value bool) {
   trackBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetConstraints.Call(obj)
    return ret
}

func TrackBar_SetConstraints(obj uintptr, value uintptr) {
   trackBar_SetConstraints.Call(obj, value)
}

func TrackBar_GetLineSize(obj uintptr) int32 {
    ret, _, _ := trackBar_GetLineSize.Call(obj)
    return int32(ret)
}

func TrackBar_SetLineSize(obj uintptr, value int32) {
   trackBar_SetLineSize.Call(obj, uintptr(value))
}

func TrackBar_GetMax(obj uintptr) int32 {
    ret, _, _ := trackBar_GetMax.Call(obj)
    return int32(ret)
}

func TrackBar_SetMax(obj uintptr, value int32) {
   trackBar_SetMax.Call(obj, uintptr(value))
}

func TrackBar_GetMin(obj uintptr) int32 {
    ret, _, _ := trackBar_GetMin.Call(obj)
    return int32(ret)
}

func TrackBar_SetMin(obj uintptr, value int32) {
   trackBar_SetMin.Call(obj, uintptr(value))
}

func TrackBar_GetOrientation(obj uintptr) TTrackBarOrientation {
    ret, _, _ := trackBar_GetOrientation.Call(obj)
    return TTrackBarOrientation(ret)
}

func TrackBar_SetOrientation(obj uintptr, value TTrackBarOrientation) {
   trackBar_SetOrientation.Call(obj, uintptr(value))
}

func TrackBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := trackBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   trackBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := trackBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetParentShowHint(obj uintptr, value bool) {
   trackBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetPageSize(obj uintptr) int32 {
    ret, _, _ := trackBar_GetPageSize.Call(obj)
    return int32(ret)
}

func TrackBar_SetPageSize(obj uintptr, value int32) {
   trackBar_SetPageSize.Call(obj, uintptr(value))
}

func TrackBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetPopupMenu.Call(obj)
    return ret
}

func TrackBar_SetPopupMenu(obj uintptr, value uintptr) {
   trackBar_SetPopupMenu.Call(obj, value)
}

func TrackBar_GetFrequency(obj uintptr) int32 {
    ret, _, _ := trackBar_GetFrequency.Call(obj)
    return int32(ret)
}

func TrackBar_SetFrequency(obj uintptr, value int32) {
   trackBar_SetFrequency.Call(obj, uintptr(value))
}

func TrackBar_GetPosition(obj uintptr) int32 {
    ret, _, _ := trackBar_GetPosition.Call(obj)
    return int32(ret)
}

func TrackBar_SetPosition(obj uintptr, value int32) {
   trackBar_SetPosition.Call(obj, uintptr(value))
}

func TrackBar_GetSelEnd(obj uintptr) int32 {
    ret, _, _ := trackBar_GetSelEnd.Call(obj)
    return int32(ret)
}

func TrackBar_SetSelEnd(obj uintptr, value int32) {
   trackBar_SetSelEnd.Call(obj, uintptr(value))
}

func TrackBar_GetSelStart(obj uintptr) int32 {
    ret, _, _ := trackBar_GetSelStart.Call(obj)
    return int32(ret)
}

func TrackBar_SetSelStart(obj uintptr, value int32) {
   trackBar_SetSelStart.Call(obj, uintptr(value))
}

func TrackBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := trackBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetShowHint(obj uintptr, value bool) {
   trackBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetShowSelRange(obj uintptr) bool {
    ret, _, _ := trackBar_GetShowSelRange.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetShowSelRange(obj uintptr, value bool) {
   trackBar_SetShowSelRange.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := trackBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func TrackBar_SetTabOrder(obj uintptr, value TTabOrder) {
   trackBar_SetTabOrder.Call(obj, uintptr(value))
}

func TrackBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := trackBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetTabStop(obj uintptr, value bool) {
   trackBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetTickMarks(obj uintptr) TTickMark {
    ret, _, _ := trackBar_GetTickMarks.Call(obj)
    return TTickMark(ret)
}

func TrackBar_SetTickMarks(obj uintptr, value TTickMark) {
   trackBar_SetTickMarks.Call(obj, uintptr(value))
}

func TrackBar_GetTickStyle(obj uintptr) TTickStyle {
    ret, _, _ := trackBar_GetTickStyle.Call(obj)
    return TTickStyle(ret)
}

func TrackBar_SetTickStyle(obj uintptr, value TTickStyle) {
   trackBar_SetTickStyle.Call(obj, uintptr(value))
}

func TrackBar_GetVisible(obj uintptr) bool {
    ret, _, _ := trackBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetVisible(obj uintptr, value bool) {
   trackBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func TrackBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    trackBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnChange(obj uintptr, fn interface{}) {
    trackBar_SetOnChange.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    trackBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnDragOver(obj uintptr, fn interface{}) {
    trackBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    trackBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnEnter(obj uintptr, fn interface{}) {
    trackBar_SetOnEnter.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnExit(obj uintptr, fn interface{}) {
    trackBar_SetOnExit.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnKeyDown(obj uintptr, fn interface{}) {
    trackBar_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnKeyPress(obj uintptr, fn interface{}) {
    trackBar_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func TrackBar_SetOnKeyUp(obj uintptr, fn interface{}) {
    trackBar_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func TrackBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := trackBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func TrackBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := trackBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetDockSite(obj uintptr, value bool) {
   trackBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := trackBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := trackBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func TrackBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetBrush.Call(obj)
    return ret
}

func TrackBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := trackBar_GetControlCount.Call(obj)
    return int32(ret)
}

func TrackBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := trackBar_GetHandle.Call(obj)
    return HWND(ret)
}

func TrackBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := trackBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func TrackBar_SetParentWindow(obj uintptr, value HWND) {
   trackBar_SetParentWindow.Call(obj, uintptr(value))
}

func TrackBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := trackBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_SetUseDockManager(obj uintptr, value bool) {
   trackBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func TrackBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetAction.Call(obj)
    return ret
}

func TrackBar_SetAction(obj uintptr, value uintptr) {
   trackBar_SetAction.Call(obj, value)
}

func TrackBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := trackBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func TrackBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   trackBar_SetBiDiMode.Call(obj, uintptr(value))
}

func TrackBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    trackBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_SetBoundsRect(obj uintptr, value TRect) {
   trackBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TrackBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := trackBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func TrackBar_SetClientHeight(obj uintptr, value int32) {
   trackBar_SetClientHeight.Call(obj, uintptr(value))
}

func TrackBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    trackBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    trackBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TrackBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := trackBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func TrackBar_SetClientWidth(obj uintptr, value int32) {
   trackBar_SetClientWidth.Call(obj, uintptr(value))
}

func TrackBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := trackBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func TrackBar_SetControlState(obj uintptr, value TControlState) {
   trackBar_SetControlState.Call(obj, uintptr(value))
}

func TrackBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := trackBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func TrackBar_SetControlStyle(obj uintptr, value TControlStyle) {
   trackBar_SetControlStyle.Call(obj, uintptr(value))
}

func TrackBar_GetFloating(obj uintptr) bool {
    ret, _, _ := trackBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func TrackBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetParent.Call(obj)
    return ret
}

func TrackBar_SetParent(obj uintptr, value uintptr) {
   trackBar_SetParent.Call(obj, value)
}

func TrackBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := trackBar_GetLeft.Call(obj)
    return int32(ret)
}

func TrackBar_SetLeft(obj uintptr, value int32) {
   trackBar_SetLeft.Call(obj, uintptr(value))
}

func TrackBar_GetTop(obj uintptr) int32 {
    ret, _, _ := trackBar_GetTop.Call(obj)
    return int32(ret)
}

func TrackBar_SetTop(obj uintptr, value int32) {
   trackBar_SetTop.Call(obj, uintptr(value))
}

func TrackBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := trackBar_GetWidth.Call(obj)
    return int32(ret)
}

func TrackBar_SetWidth(obj uintptr, value int32) {
   trackBar_SetWidth.Call(obj, uintptr(value))
}

func TrackBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := trackBar_GetHeight.Call(obj)
    return int32(ret)
}

func TrackBar_SetHeight(obj uintptr, value int32) {
   trackBar_SetHeight.Call(obj, uintptr(value))
}

func TrackBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := trackBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func TrackBar_SetCursor(obj uintptr, value TCursor) {
   trackBar_SetCursor.Call(obj, uintptr(value))
}

func TrackBar_GetHint(obj uintptr) string {
    ret, _, _ := trackBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func TrackBar_SetHint(obj uintptr, value string) {
   trackBar_SetHint.Call(obj, GoStrToDStr(value))
}

func TrackBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := trackBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func TrackBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := trackBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func TrackBar_SetComponentIndex(obj uintptr, value int32) {
   trackBar_SetComponentIndex.Call(obj, uintptr(value))
}

func TrackBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetOwner.Call(obj)
    return ret
}

func TrackBar_GetName(obj uintptr) string {
    ret, _, _ := trackBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TrackBar_SetName(obj uintptr, value string) {
   trackBar_SetName.Call(obj, GoStrToDStr(value))
}

func TrackBar_GetTag(obj uintptr) int {
    ret, _, _ := trackBar_GetTag.Call(obj)
    return int(ret)
}

func TrackBar_SetTag(obj uintptr, value int) {
   trackBar_SetTag.Call(obj, uintptr(value))
}

func TrackBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func TrackBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   trackBar_SetAnchorSideLeft.Call(obj, value)
}

func TrackBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetAnchorSideTop.Call(obj)
    return ret
}

func TrackBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   trackBar_SetAnchorSideTop.Call(obj, value)
}

func TrackBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetAnchorSideRight.Call(obj)
    return ret
}

func TrackBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   trackBar_SetAnchorSideRight.Call(obj, value)
}

func TrackBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func TrackBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   trackBar_SetAnchorSideBottom.Call(obj, value)
}

func TrackBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetChildSizing.Call(obj)
    return ret
}

func TrackBar_SetChildSizing(obj uintptr, value uintptr) {
   trackBar_SetChildSizing.Call(obj, value)
}

func TrackBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := trackBar_GetBorderSpacing.Call(obj)
    return ret
}

func TrackBar_SetBorderSpacing(obj uintptr, value uintptr) {
   trackBar_SetBorderSpacing.Call(obj, value)
}

func TrackBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := trackBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func TrackBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := trackBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func TrackBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := trackBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func TrackBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := trackBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func TrackBar_StaticClassType() TClass {
    r, _, _:= trackBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TImageList ---------------------------

func ImageList_Create(obj uintptr) uintptr {
    ret, _, _ := imageList_Create.Call(obj)
    return ret
}

func ImageList_Free(obj uintptr) {
    imageList_Free.Call(obj)
}

func ImageList_GetHotSpot(obj uintptr) TPoint {
    var ret TPoint
    imageList_GetHotSpot.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageList_HideDragImage(obj uintptr)  {
    imageList_HideDragImage.Call(obj)
}

func ImageList_ShowDragImage(obj uintptr)  {
    imageList_ShowDragImage.Call(obj)
}

func ImageList_Assign(obj uintptr, Source uintptr)  {
    imageList_Assign.Call(obj, Source )
}

func ImageList_Add(obj uintptr, Image uintptr, Mask uintptr) int32 {
    ret, _, _ := imageList_Add.Call(obj, Image , Mask )
    return int32(ret)
}

func ImageList_AddIcon(obj uintptr, Image uintptr) int32 {
    ret, _, _ := imageList_AddIcon.Call(obj, Image )
    return int32(ret)
}

func ImageList_AddImages(obj uintptr, Value uintptr)  {
    imageList_AddImages.Call(obj, Value )
}

func ImageList_AddMasked(obj uintptr, Image uintptr, MaskColor TColor) int32 {
    ret, _, _ := imageList_AddMasked.Call(obj, Image , uintptr(MaskColor) )
    return int32(ret)
}

func ImageList_Clear(obj uintptr)  {
    imageList_Clear.Call(obj)
}

func ImageList_Delete(obj uintptr, Index int32)  {
    imageList_Delete.Call(obj, uintptr(Index) )
}

func ImageList_Insert(obj uintptr, Index int32, Image uintptr, Mask uintptr)  {
    imageList_Insert.Call(obj, uintptr(Index) , Image , Mask )
}

func ImageList_InsertIcon(obj uintptr, Index int32, Image uintptr)  {
    imageList_InsertIcon.Call(obj, uintptr(Index) , Image )
}

func ImageList_InsertMasked(obj uintptr, Index int32, Image uintptr, MaskColor TColor)  {
    imageList_InsertMasked.Call(obj, uintptr(Index) , Image , uintptr(MaskColor) )
}

func ImageList_Move(obj uintptr, CurIndex int32, NewIndex int32)  {
    imageList_Move.Call(obj, uintptr(CurIndex) , uintptr(NewIndex) )
}

func ImageList_Replace(obj uintptr, Index int32, Image uintptr, Mask uintptr)  {
    imageList_Replace.Call(obj, uintptr(Index) , Image , Mask )
}

func ImageList_ReplaceMasked(obj uintptr, Index int32, NewImage uintptr, MaskColor TColor)  {
    imageList_ReplaceMasked.Call(obj, uintptr(Index) , NewImage , uintptr(MaskColor) )
}

func ImageList_BeginUpdate(obj uintptr)  {
    imageList_BeginUpdate.Call(obj)
}

func ImageList_EndUpdate(obj uintptr)  {
    imageList_EndUpdate.Call(obj)
}

func ImageList_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := imageList_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ImageList_GetNamePath(obj uintptr) string {
    ret, _, _ := imageList_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ImageList_HasParent(obj uintptr) bool {
    ret, _, _ := imageList_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageList_ClassType(obj uintptr) TClass {
    ret, _, _ := imageList_ClassType.Call(obj)
    return TClass(ret)
}

func ImageList_ClassName(obj uintptr) string {
    ret, _, _ := imageList_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ImageList_InstanceSize(obj uintptr) int32 {
    ret, _, _ := imageList_InstanceSize.Call(obj)
    return int32(ret)
}

func ImageList_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := imageList_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ImageList_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := imageList_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ImageList_GetHashCode(obj uintptr) int32 {
    ret, _, _ := imageList_GetHashCode.Call(obj)
    return int32(ret)
}

func ImageList_ToString(obj uintptr) string {
    ret, _, _ := imageList_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ImageList_GetBlendColor(obj uintptr) TColor {
    ret, _, _ := imageList_GetBlendColor.Call(obj)
    return TColor(ret)
}

func ImageList_SetBlendColor(obj uintptr, value TColor) {
   imageList_SetBlendColor.Call(obj, uintptr(value))
}

func ImageList_GetBkColor(obj uintptr) TColor {
    ret, _, _ := imageList_GetBkColor.Call(obj)
    return TColor(ret)
}

func ImageList_SetBkColor(obj uintptr, value TColor) {
   imageList_SetBkColor.Call(obj, uintptr(value))
}

func ImageList_GetAllocBy(obj uintptr) int32 {
    ret, _, _ := imageList_GetAllocBy.Call(obj)
    return int32(ret)
}

func ImageList_SetAllocBy(obj uintptr, value int32) {
   imageList_SetAllocBy.Call(obj, uintptr(value))
}

func ImageList_GetDrawingStyle(obj uintptr) TDrawingStyle {
    ret, _, _ := imageList_GetDrawingStyle.Call(obj)
    return TDrawingStyle(ret)
}

func ImageList_SetDrawingStyle(obj uintptr, value TDrawingStyle) {
   imageList_SetDrawingStyle.Call(obj, uintptr(value))
}

func ImageList_GetHeight(obj uintptr) int32 {
    ret, _, _ := imageList_GetHeight.Call(obj)
    return int32(ret)
}

func ImageList_SetHeight(obj uintptr, value int32) {
   imageList_SetHeight.Call(obj, uintptr(value))
}

func ImageList_GetImageType(obj uintptr) TImageType {
    ret, _, _ := imageList_GetImageType.Call(obj)
    return TImageType(ret)
}

func ImageList_SetImageType(obj uintptr, value TImageType) {
   imageList_SetImageType.Call(obj, uintptr(value))
}

func ImageList_GetMasked(obj uintptr) bool {
    ret, _, _ := imageList_GetMasked.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageList_SetMasked(obj uintptr, value bool) {
   imageList_SetMasked.Call(obj, GoBoolToDBool(value))
}

func ImageList_SetOnChange(obj uintptr, fn interface{}) {
    imageList_SetOnChange.Call(obj, addEventToMap(fn))
}

func ImageList_GetShareImages(obj uintptr) bool {
    ret, _, _ := imageList_GetShareImages.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageList_SetShareImages(obj uintptr, value bool) {
   imageList_SetShareImages.Call(obj, GoBoolToDBool(value))
}

func ImageList_GetWidth(obj uintptr) int32 {
    ret, _, _ := imageList_GetWidth.Call(obj)
    return int32(ret)
}

func ImageList_SetWidth(obj uintptr, value int32) {
   imageList_SetWidth.Call(obj, uintptr(value))
}

func ImageList_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := imageList_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ImageList_SetDragCursor(obj uintptr, value TCursor) {
   imageList_SetDragCursor.Call(obj, uintptr(value))
}

func ImageList_GetDragging(obj uintptr) bool {
    ret, _, _ := imageList_GetDragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageList_GetCount(obj uintptr) int32 {
    ret, _, _ := imageList_GetCount.Call(obj)
    return int32(ret)
}

func ImageList_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := imageList_GetComponentCount.Call(obj)
    return int32(ret)
}

func ImageList_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := imageList_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ImageList_SetComponentIndex(obj uintptr, value int32) {
   imageList_SetComponentIndex.Call(obj, uintptr(value))
}

func ImageList_GetOwner(obj uintptr) uintptr {
    ret, _, _ := imageList_GetOwner.Call(obj)
    return ret
}

func ImageList_GetName(obj uintptr) string {
    ret, _, _ := imageList_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ImageList_SetName(obj uintptr, value string) {
   imageList_SetName.Call(obj, GoStrToDStr(value))
}

func ImageList_GetTag(obj uintptr) int {
    ret, _, _ := imageList_GetTag.Call(obj)
    return int(ret)
}

func ImageList_SetTag(obj uintptr, value int) {
   imageList_SetTag.Call(obj, uintptr(value))
}

func ImageList_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := imageList_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ImageList_StaticClassType() TClass {
    r, _, _:= imageList_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TUpDown ---------------------------

func UpDown_Create(obj uintptr) uintptr {
    ret, _, _ := upDown_Create.Call(obj)
    return ret
}

func UpDown_Free(obj uintptr) {
    upDown_Free.Call(obj)
}

func UpDown_CanFocus(obj uintptr) bool {
    ret, _, _ := upDown_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := upDown_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func UpDown_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := upDown_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func UpDown_DisableAlign(obj uintptr)  {
    upDown_DisableAlign.Call(obj)
}

func UpDown_EnableAlign(obj uintptr)  {
    upDown_EnableAlign.Call(obj)
}

func UpDown_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := upDown_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func UpDown_FlipChildren(obj uintptr, AllLevels bool)  {
    upDown_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func UpDown_Focused(obj uintptr) bool {
    ret, _, _ := upDown_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_HandleAllocated(obj uintptr) bool {
    ret, _, _ := upDown_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_InsertControl(obj uintptr, AControl uintptr)  {
    upDown_InsertControl.Call(obj, AControl )
}

func UpDown_Invalidate(obj uintptr)  {
    upDown_Invalidate.Call(obj)
}

func UpDown_RemoveControl(obj uintptr, AControl uintptr)  {
    upDown_RemoveControl.Call(obj, AControl )
}

func UpDown_Realign(obj uintptr)  {
    upDown_Realign.Call(obj)
}

func UpDown_Repaint(obj uintptr)  {
    upDown_Repaint.Call(obj)
}

func UpDown_ScaleBy(obj uintptr, M int32, D int32)  {
    upDown_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func UpDown_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    upDown_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func UpDown_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    upDown_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func UpDown_SetFocus(obj uintptr)  {
    upDown_SetFocus.Call(obj)
}

func UpDown_Update(obj uintptr)  {
    upDown_Update.Call(obj)
}

func UpDown_BringToFront(obj uintptr)  {
    upDown_BringToFront.Call(obj)
}

func UpDown_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    upDown_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    upDown_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_Dragging(obj uintptr) bool {
    ret, _, _ := upDown_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_HasParent(obj uintptr) bool {
    ret, _, _ := upDown_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_Hide(obj uintptr)  {
    upDown_Hide.Call(obj)
}

func UpDown_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := upDown_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func UpDown_Refresh(obj uintptr)  {
    upDown_Refresh.Call(obj)
}

func UpDown_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    upDown_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    upDown_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_SendToBack(obj uintptr)  {
    upDown_SendToBack.Call(obj)
}

func UpDown_Show(obj uintptr)  {
    upDown_Show.Call(obj)
}

func UpDown_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := upDown_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func UpDown_GetTextLen(obj uintptr) int32 {
    ret, _, _ := upDown_GetTextLen.Call(obj)
    return int32(ret)
}

func UpDown_SetTextBuf(obj uintptr, Buffer string)  {
    upDown_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func UpDown_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := upDown_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func UpDown_GetNamePath(obj uintptr) string {
    ret, _, _ := upDown_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func UpDown_Assign(obj uintptr, Source uintptr)  {
    upDown_Assign.Call(obj, Source )
}

func UpDown_ClassType(obj uintptr) TClass {
    ret, _, _ := upDown_ClassType.Call(obj)
    return TClass(ret)
}

func UpDown_ClassName(obj uintptr) string {
    ret, _, _ := upDown_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func UpDown_InstanceSize(obj uintptr) int32 {
    ret, _, _ := upDown_InstanceSize.Call(obj)
    return int32(ret)
}

func UpDown_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := upDown_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func UpDown_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := upDown_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func UpDown_GetHashCode(obj uintptr) int32 {
    ret, _, _ := upDown_GetHashCode.Call(obj)
    return int32(ret)
}

func UpDown_ToString(obj uintptr) string {
    ret, _, _ := upDown_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func UpDown_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    upDown_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func UpDown_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    upDown_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func UpDown_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    upDown_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func UpDown_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    upDown_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func UpDown_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    upDown_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func UpDown_AnchorClient(obj uintptr, ASpace int32)  {
    upDown_AnchorClient.Call(obj, uintptr(ASpace) )
}

func UpDown_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := upDown_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func UpDown_SetAnchors(obj uintptr, value TAnchors) {
   upDown_SetAnchors.Call(obj, uintptr(value))
}

func UpDown_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := upDown_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetDoubleBuffered(obj uintptr, value bool) {
   upDown_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetEnabled(obj uintptr) bool {
    ret, _, _ := upDown_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetEnabled(obj uintptr, value bool) {
   upDown_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetHint(obj uintptr) string {
    ret, _, _ := upDown_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func UpDown_SetHint(obj uintptr, value string) {
   upDown_SetHint.Call(obj, GoStrToDStr(value))
}

func UpDown_GetMin(obj uintptr) int32 {
    ret, _, _ := upDown_GetMin.Call(obj)
    return int32(ret)
}

func UpDown_SetMin(obj uintptr, value int32) {
   upDown_SetMin.Call(obj, uintptr(value))
}

func UpDown_GetMax(obj uintptr) int32 {
    ret, _, _ := upDown_GetMax.Call(obj)
    return int32(ret)
}

func UpDown_SetMax(obj uintptr, value int32) {
   upDown_SetMax.Call(obj, uintptr(value))
}

func UpDown_GetIncrement(obj uintptr) int32 {
    ret, _, _ := upDown_GetIncrement.Call(obj)
    return int32(ret)
}

func UpDown_SetIncrement(obj uintptr, value int32) {
   upDown_SetIncrement.Call(obj, uintptr(value))
}

func UpDown_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := upDown_GetConstraints.Call(obj)
    return ret
}

func UpDown_SetConstraints(obj uintptr, value uintptr) {
   upDown_SetConstraints.Call(obj, value)
}

func UpDown_GetOrientation(obj uintptr) TUDOrientation {
    ret, _, _ := upDown_GetOrientation.Call(obj)
    return TUDOrientation(ret)
}

func UpDown_SetOrientation(obj uintptr, value TUDOrientation) {
   upDown_SetOrientation.Call(obj, uintptr(value))
}

func UpDown_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := upDown_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetParentDoubleBuffered(obj uintptr, value bool) {
   upDown_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := upDown_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetParentShowHint(obj uintptr, value bool) {
   upDown_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := upDown_GetPopupMenu.Call(obj)
    return ret
}

func UpDown_SetPopupMenu(obj uintptr, value uintptr) {
   upDown_SetPopupMenu.Call(obj, value)
}

func UpDown_GetPosition(obj uintptr) int32 {
    ret, _, _ := upDown_GetPosition.Call(obj)
    return int32(ret)
}

func UpDown_SetPosition(obj uintptr, value int32) {
   upDown_SetPosition.Call(obj, uintptr(value))
}

func UpDown_GetShowHint(obj uintptr) bool {
    ret, _, _ := upDown_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetShowHint(obj uintptr, value bool) {
   upDown_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := upDown_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func UpDown_SetTabOrder(obj uintptr, value TTabOrder) {
   upDown_SetTabOrder.Call(obj, uintptr(value))
}

func UpDown_GetTabStop(obj uintptr) bool {
    ret, _, _ := upDown_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetTabStop(obj uintptr, value bool) {
   upDown_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetVisible(obj uintptr) bool {
    ret, _, _ := upDown_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetVisible(obj uintptr, value bool) {
   upDown_SetVisible.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetWrap(obj uintptr) bool {
    ret, _, _ := upDown_GetWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetWrap(obj uintptr, value bool) {
   upDown_SetWrap.Call(obj, GoBoolToDBool(value))
}

func UpDown_SetOnChanging(obj uintptr, fn interface{}) {
    upDown_SetOnChanging.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnContextPopup(obj uintptr, fn interface{}) {
    upDown_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnClick(obj uintptr, fn interface{}) {
    upDown_SetOnClick.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnEnter(obj uintptr, fn interface{}) {
    upDown_SetOnEnter.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnExit(obj uintptr, fn interface{}) {
    upDown_SetOnExit.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnMouseDown(obj uintptr, fn interface{}) {
    upDown_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnMouseEnter(obj uintptr, fn interface{}) {
    upDown_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnMouseLeave(obj uintptr, fn interface{}) {
    upDown_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnMouseMove(obj uintptr, fn interface{}) {
    upDown_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func UpDown_SetOnMouseUp(obj uintptr, fn interface{}) {
    upDown_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func UpDown_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := upDown_GetDockClientCount.Call(obj)
    return int32(ret)
}

func UpDown_GetDockSite(obj uintptr) bool {
    ret, _, _ := upDown_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetDockSite(obj uintptr, value bool) {
   upDown_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := upDown_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := upDown_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func UpDown_GetBrush(obj uintptr) uintptr {
    ret, _, _ := upDown_GetBrush.Call(obj)
    return ret
}

func UpDown_GetControlCount(obj uintptr) int32 {
    ret, _, _ := upDown_GetControlCount.Call(obj)
    return int32(ret)
}

func UpDown_GetHandle(obj uintptr) HWND {
    ret, _, _ := upDown_GetHandle.Call(obj)
    return HWND(ret)
}

func UpDown_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := upDown_GetParentWindow.Call(obj)
    return HWND(ret)
}

func UpDown_SetParentWindow(obj uintptr, value HWND) {
   upDown_SetParentWindow.Call(obj, uintptr(value))
}

func UpDown_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := upDown_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_SetUseDockManager(obj uintptr, value bool) {
   upDown_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func UpDown_GetAction(obj uintptr) uintptr {
    ret, _, _ := upDown_GetAction.Call(obj)
    return ret
}

func UpDown_SetAction(obj uintptr, value uintptr) {
   upDown_SetAction.Call(obj, value)
}

func UpDown_GetAlign(obj uintptr) TAlign {
    ret, _, _ := upDown_GetAlign.Call(obj)
    return TAlign(ret)
}

func UpDown_SetAlign(obj uintptr, value TAlign) {
   upDown_SetAlign.Call(obj, uintptr(value))
}

func UpDown_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := upDown_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func UpDown_SetBiDiMode(obj uintptr, value TBiDiMode) {
   upDown_SetBiDiMode.Call(obj, uintptr(value))
}

func UpDown_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    upDown_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_SetBoundsRect(obj uintptr, value TRect) {
   upDown_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func UpDown_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := upDown_GetClientHeight.Call(obj)
    return int32(ret)
}

func UpDown_SetClientHeight(obj uintptr, value int32) {
   upDown_SetClientHeight.Call(obj, uintptr(value))
}

func UpDown_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    upDown_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_GetClientRect(obj uintptr) TRect {
    var ret TRect
    upDown_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func UpDown_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := upDown_GetClientWidth.Call(obj)
    return int32(ret)
}

func UpDown_SetClientWidth(obj uintptr, value int32) {
   upDown_SetClientWidth.Call(obj, uintptr(value))
}

func UpDown_GetControlState(obj uintptr) TControlState {
    ret, _, _ := upDown_GetControlState.Call(obj)
    return TControlState(ret)
}

func UpDown_SetControlState(obj uintptr, value TControlState) {
   upDown_SetControlState.Call(obj, uintptr(value))
}

func UpDown_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := upDown_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func UpDown_SetControlStyle(obj uintptr, value TControlStyle) {
   upDown_SetControlStyle.Call(obj, uintptr(value))
}

func UpDown_GetFloating(obj uintptr) bool {
    ret, _, _ := upDown_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func UpDown_GetParent(obj uintptr) uintptr {
    ret, _, _ := upDown_GetParent.Call(obj)
    return ret
}

func UpDown_SetParent(obj uintptr, value uintptr) {
   upDown_SetParent.Call(obj, value)
}

func UpDown_GetLeft(obj uintptr) int32 {
    ret, _, _ := upDown_GetLeft.Call(obj)
    return int32(ret)
}

func UpDown_SetLeft(obj uintptr, value int32) {
   upDown_SetLeft.Call(obj, uintptr(value))
}

func UpDown_GetTop(obj uintptr) int32 {
    ret, _, _ := upDown_GetTop.Call(obj)
    return int32(ret)
}

func UpDown_SetTop(obj uintptr, value int32) {
   upDown_SetTop.Call(obj, uintptr(value))
}

func UpDown_GetWidth(obj uintptr) int32 {
    ret, _, _ := upDown_GetWidth.Call(obj)
    return int32(ret)
}

func UpDown_SetWidth(obj uintptr, value int32) {
   upDown_SetWidth.Call(obj, uintptr(value))
}

func UpDown_GetHeight(obj uintptr) int32 {
    ret, _, _ := upDown_GetHeight.Call(obj)
    return int32(ret)
}

func UpDown_SetHeight(obj uintptr, value int32) {
   upDown_SetHeight.Call(obj, uintptr(value))
}

func UpDown_GetCursor(obj uintptr) TCursor {
    ret, _, _ := upDown_GetCursor.Call(obj)
    return TCursor(ret)
}

func UpDown_SetCursor(obj uintptr, value TCursor) {
   upDown_SetCursor.Call(obj, uintptr(value))
}

func UpDown_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := upDown_GetComponentCount.Call(obj)
    return int32(ret)
}

func UpDown_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := upDown_GetComponentIndex.Call(obj)
    return int32(ret)
}

func UpDown_SetComponentIndex(obj uintptr, value int32) {
   upDown_SetComponentIndex.Call(obj, uintptr(value))
}

func UpDown_GetOwner(obj uintptr) uintptr {
    ret, _, _ := upDown_GetOwner.Call(obj)
    return ret
}

func UpDown_GetName(obj uintptr) string {
    ret, _, _ := upDown_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func UpDown_SetName(obj uintptr, value string) {
   upDown_SetName.Call(obj, GoStrToDStr(value))
}

func UpDown_GetTag(obj uintptr) int {
    ret, _, _ := upDown_GetTag.Call(obj)
    return int(ret)
}

func UpDown_SetTag(obj uintptr, value int) {
   upDown_SetTag.Call(obj, uintptr(value))
}

func UpDown_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := upDown_GetAnchorSideLeft.Call(obj)
    return ret
}

func UpDown_SetAnchorSideLeft(obj uintptr, value uintptr) {
   upDown_SetAnchorSideLeft.Call(obj, value)
}

func UpDown_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := upDown_GetAnchorSideTop.Call(obj)
    return ret
}

func UpDown_SetAnchorSideTop(obj uintptr, value uintptr) {
   upDown_SetAnchorSideTop.Call(obj, value)
}

func UpDown_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := upDown_GetAnchorSideRight.Call(obj)
    return ret
}

func UpDown_SetAnchorSideRight(obj uintptr, value uintptr) {
   upDown_SetAnchorSideRight.Call(obj, value)
}

func UpDown_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := upDown_GetAnchorSideBottom.Call(obj)
    return ret
}

func UpDown_SetAnchorSideBottom(obj uintptr, value uintptr) {
   upDown_SetAnchorSideBottom.Call(obj, value)
}

func UpDown_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := upDown_GetChildSizing.Call(obj)
    return ret
}

func UpDown_SetChildSizing(obj uintptr, value uintptr) {
   upDown_SetChildSizing.Call(obj, value)
}

func UpDown_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := upDown_GetBorderSpacing.Call(obj)
    return ret
}

func UpDown_SetBorderSpacing(obj uintptr, value uintptr) {
   upDown_SetBorderSpacing.Call(obj, value)
}

func UpDown_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := upDown_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func UpDown_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := upDown_GetControls.Call(obj, uintptr(Index))
    return ret
}

func UpDown_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := upDown_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func UpDown_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := upDown_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func UpDown_StaticClassType() TClass {
    r, _, _:= upDown_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TProgressBar ---------------------------

func ProgressBar_Create(obj uintptr) uintptr {
    ret, _, _ := progressBar_Create.Call(obj)
    return ret
}

func ProgressBar_Free(obj uintptr) {
    progressBar_Free.Call(obj)
}

func ProgressBar_StepIt(obj uintptr)  {
    progressBar_StepIt.Call(obj)
}

func ProgressBar_StepBy(obj uintptr, Delta int32)  {
    progressBar_StepBy.Call(obj, uintptr(Delta) )
}

func ProgressBar_CanFocus(obj uintptr) bool {
    ret, _, _ := progressBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := progressBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ProgressBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := progressBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ProgressBar_DisableAlign(obj uintptr)  {
    progressBar_DisableAlign.Call(obj)
}

func ProgressBar_EnableAlign(obj uintptr)  {
    progressBar_EnableAlign.Call(obj)
}

func ProgressBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := progressBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ProgressBar_FlipChildren(obj uintptr, AllLevels bool)  {
    progressBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ProgressBar_Focused(obj uintptr) bool {
    ret, _, _ := progressBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := progressBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_InsertControl(obj uintptr, AControl uintptr)  {
    progressBar_InsertControl.Call(obj, AControl )
}

func ProgressBar_Invalidate(obj uintptr)  {
    progressBar_Invalidate.Call(obj)
}

func ProgressBar_RemoveControl(obj uintptr, AControl uintptr)  {
    progressBar_RemoveControl.Call(obj, AControl )
}

func ProgressBar_Realign(obj uintptr)  {
    progressBar_Realign.Call(obj)
}

func ProgressBar_Repaint(obj uintptr)  {
    progressBar_Repaint.Call(obj)
}

func ProgressBar_ScaleBy(obj uintptr, M int32, D int32)  {
    progressBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ProgressBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    progressBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ProgressBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    progressBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ProgressBar_SetFocus(obj uintptr)  {
    progressBar_SetFocus.Call(obj)
}

func ProgressBar_Update(obj uintptr)  {
    progressBar_Update.Call(obj)
}

func ProgressBar_BringToFront(obj uintptr)  {
    progressBar_BringToFront.Call(obj)
}

func ProgressBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    progressBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    progressBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_Dragging(obj uintptr) bool {
    ret, _, _ := progressBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_HasParent(obj uintptr) bool {
    ret, _, _ := progressBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_Hide(obj uintptr)  {
    progressBar_Hide.Call(obj)
}

func ProgressBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := progressBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ProgressBar_Refresh(obj uintptr)  {
    progressBar_Refresh.Call(obj)
}

func ProgressBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    progressBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    progressBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_SendToBack(obj uintptr)  {
    progressBar_SendToBack.Call(obj)
}

func ProgressBar_Show(obj uintptr)  {
    progressBar_Show.Call(obj)
}

func ProgressBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := progressBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ProgressBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := progressBar_GetTextLen.Call(obj)
    return int32(ret)
}

func ProgressBar_SetTextBuf(obj uintptr, Buffer string)  {
    progressBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ProgressBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := progressBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ProgressBar_GetNamePath(obj uintptr) string {
    ret, _, _ := progressBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ProgressBar_Assign(obj uintptr, Source uintptr)  {
    progressBar_Assign.Call(obj, Source )
}

func ProgressBar_ClassType(obj uintptr) TClass {
    ret, _, _ := progressBar_ClassType.Call(obj)
    return TClass(ret)
}

func ProgressBar_ClassName(obj uintptr) string {
    ret, _, _ := progressBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ProgressBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := progressBar_InstanceSize.Call(obj)
    return int32(ret)
}

func ProgressBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := progressBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ProgressBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := progressBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ProgressBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := progressBar_GetHashCode.Call(obj)
    return int32(ret)
}

func ProgressBar_ToString(obj uintptr) string {
    ret, _, _ := progressBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ProgressBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    progressBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ProgressBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    progressBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ProgressBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    progressBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ProgressBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    progressBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ProgressBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    progressBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ProgressBar_AnchorClient(obj uintptr, ASpace int32)  {
    progressBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ProgressBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := progressBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func ProgressBar_SetAlign(obj uintptr, value TAlign) {
   progressBar_SetAlign.Call(obj, uintptr(value))
}

func ProgressBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := progressBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ProgressBar_SetAnchors(obj uintptr, value TAnchors) {
   progressBar_SetAnchors.Call(obj, uintptr(value))
}

func ProgressBar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := progressBar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func ProgressBar_SetBorderWidth(obj uintptr, value int32) {
   progressBar_SetBorderWidth.Call(obj, uintptr(value))
}

func ProgressBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := progressBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetDoubleBuffered(obj uintptr, value bool) {
   progressBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := progressBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ProgressBar_SetDragCursor(obj uintptr, value TCursor) {
   progressBar_SetDragCursor.Call(obj, uintptr(value))
}

func ProgressBar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := progressBar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ProgressBar_SetDragKind(obj uintptr, value TDragKind) {
   progressBar_SetDragKind.Call(obj, uintptr(value))
}

func ProgressBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := progressBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ProgressBar_SetDragMode(obj uintptr, value TDragMode) {
   progressBar_SetDragMode.Call(obj, uintptr(value))
}

func ProgressBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := progressBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetEnabled(obj uintptr, value bool) {
   progressBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetHint(obj uintptr) string {
    ret, _, _ := progressBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ProgressBar_SetHint(obj uintptr, value string) {
   progressBar_SetHint.Call(obj, GoStrToDStr(value))
}

func ProgressBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetConstraints.Call(obj)
    return ret
}

func ProgressBar_SetConstraints(obj uintptr, value uintptr) {
   progressBar_SetConstraints.Call(obj, value)
}

func ProgressBar_GetMin(obj uintptr) int32 {
    ret, _, _ := progressBar_GetMin.Call(obj)
    return int32(ret)
}

func ProgressBar_SetMin(obj uintptr, value int32) {
   progressBar_SetMin.Call(obj, uintptr(value))
}

func ProgressBar_GetMax(obj uintptr) int32 {
    ret, _, _ := progressBar_GetMax.Call(obj)
    return int32(ret)
}

func ProgressBar_SetMax(obj uintptr, value int32) {
   progressBar_SetMax.Call(obj, uintptr(value))
}

func ProgressBar_GetOrientation(obj uintptr) TProgressBarOrientation {
    ret, _, _ := progressBar_GetOrientation.Call(obj)
    return TProgressBarOrientation(ret)
}

func ProgressBar_SetOrientation(obj uintptr, value TProgressBarOrientation) {
   progressBar_SetOrientation.Call(obj, uintptr(value))
}

func ProgressBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := progressBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   progressBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := progressBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetParentShowHint(obj uintptr, value bool) {
   progressBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetPopupMenu.Call(obj)
    return ret
}

func ProgressBar_SetPopupMenu(obj uintptr, value uintptr) {
   progressBar_SetPopupMenu.Call(obj, value)
}

func ProgressBar_GetPosition(obj uintptr) int32 {
    ret, _, _ := progressBar_GetPosition.Call(obj)
    return int32(ret)
}

func ProgressBar_SetPosition(obj uintptr, value int32) {
   progressBar_SetPosition.Call(obj, uintptr(value))
}

func ProgressBar_GetSmooth(obj uintptr) bool {
    ret, _, _ := progressBar_GetSmooth.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetSmooth(obj uintptr, value bool) {
   progressBar_SetSmooth.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetStyle(obj uintptr) TProgressBarStyle {
    ret, _, _ := progressBar_GetStyle.Call(obj)
    return TProgressBarStyle(ret)
}

func ProgressBar_SetStyle(obj uintptr, value TProgressBarStyle) {
   progressBar_SetStyle.Call(obj, uintptr(value))
}

func ProgressBar_GetStep(obj uintptr) int32 {
    ret, _, _ := progressBar_GetStep.Call(obj)
    return int32(ret)
}

func ProgressBar_SetStep(obj uintptr, value int32) {
   progressBar_SetStep.Call(obj, uintptr(value))
}

func ProgressBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := progressBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetShowHint(obj uintptr, value bool) {
   progressBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := progressBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ProgressBar_SetTabOrder(obj uintptr, value TTabOrder) {
   progressBar_SetTabOrder.Call(obj, uintptr(value))
}

func ProgressBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := progressBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetTabStop(obj uintptr, value bool) {
   progressBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetVisible(obj uintptr) bool {
    ret, _, _ := progressBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetVisible(obj uintptr, value bool) {
   progressBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    progressBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    progressBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnDragOver(obj uintptr, fn interface{}) {
    progressBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    progressBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnEnter(obj uintptr, fn interface{}) {
    progressBar_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnExit(obj uintptr, fn interface{}) {
    progressBar_SetOnExit.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnMouseDown(obj uintptr, fn interface{}) {
    progressBar_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
    progressBar_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
    progressBar_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnMouseMove(obj uintptr, fn interface{}) {
    progressBar_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ProgressBar_SetOnMouseUp(obj uintptr, fn interface{}) {
    progressBar_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ProgressBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := progressBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ProgressBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := progressBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetDockSite(obj uintptr, value bool) {
   progressBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := progressBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := progressBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ProgressBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetBrush.Call(obj)
    return ret
}

func ProgressBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := progressBar_GetControlCount.Call(obj)
    return int32(ret)
}

func ProgressBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := progressBar_GetHandle.Call(obj)
    return HWND(ret)
}

func ProgressBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := progressBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ProgressBar_SetParentWindow(obj uintptr, value HWND) {
   progressBar_SetParentWindow.Call(obj, uintptr(value))
}

func ProgressBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := progressBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_SetUseDockManager(obj uintptr, value bool) {
   progressBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ProgressBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetAction.Call(obj)
    return ret
}

func ProgressBar_SetAction(obj uintptr, value uintptr) {
   progressBar_SetAction.Call(obj, value)
}

func ProgressBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := progressBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ProgressBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   progressBar_SetBiDiMode.Call(obj, uintptr(value))
}

func ProgressBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    progressBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_SetBoundsRect(obj uintptr, value TRect) {
   progressBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ProgressBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := progressBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func ProgressBar_SetClientHeight(obj uintptr, value int32) {
   progressBar_SetClientHeight.Call(obj, uintptr(value))
}

func ProgressBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    progressBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    progressBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ProgressBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := progressBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func ProgressBar_SetClientWidth(obj uintptr, value int32) {
   progressBar_SetClientWidth.Call(obj, uintptr(value))
}

func ProgressBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := progressBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func ProgressBar_SetControlState(obj uintptr, value TControlState) {
   progressBar_SetControlState.Call(obj, uintptr(value))
}

func ProgressBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := progressBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ProgressBar_SetControlStyle(obj uintptr, value TControlStyle) {
   progressBar_SetControlStyle.Call(obj, uintptr(value))
}

func ProgressBar_GetFloating(obj uintptr) bool {
    ret, _, _ := progressBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ProgressBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetParent.Call(obj)
    return ret
}

func ProgressBar_SetParent(obj uintptr, value uintptr) {
   progressBar_SetParent.Call(obj, value)
}

func ProgressBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := progressBar_GetLeft.Call(obj)
    return int32(ret)
}

func ProgressBar_SetLeft(obj uintptr, value int32) {
   progressBar_SetLeft.Call(obj, uintptr(value))
}

func ProgressBar_GetTop(obj uintptr) int32 {
    ret, _, _ := progressBar_GetTop.Call(obj)
    return int32(ret)
}

func ProgressBar_SetTop(obj uintptr, value int32) {
   progressBar_SetTop.Call(obj, uintptr(value))
}

func ProgressBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := progressBar_GetWidth.Call(obj)
    return int32(ret)
}

func ProgressBar_SetWidth(obj uintptr, value int32) {
   progressBar_SetWidth.Call(obj, uintptr(value))
}

func ProgressBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := progressBar_GetHeight.Call(obj)
    return int32(ret)
}

func ProgressBar_SetHeight(obj uintptr, value int32) {
   progressBar_SetHeight.Call(obj, uintptr(value))
}

func ProgressBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := progressBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func ProgressBar_SetCursor(obj uintptr, value TCursor) {
   progressBar_SetCursor.Call(obj, uintptr(value))
}

func ProgressBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := progressBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func ProgressBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := progressBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ProgressBar_SetComponentIndex(obj uintptr, value int32) {
   progressBar_SetComponentIndex.Call(obj, uintptr(value))
}

func ProgressBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetOwner.Call(obj)
    return ret
}

func ProgressBar_GetName(obj uintptr) string {
    ret, _, _ := progressBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ProgressBar_SetName(obj uintptr, value string) {
   progressBar_SetName.Call(obj, GoStrToDStr(value))
}

func ProgressBar_GetTag(obj uintptr) int {
    ret, _, _ := progressBar_GetTag.Call(obj)
    return int(ret)
}

func ProgressBar_SetTag(obj uintptr, value int) {
   progressBar_SetTag.Call(obj, uintptr(value))
}

func ProgressBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func ProgressBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   progressBar_SetAnchorSideLeft.Call(obj, value)
}

func ProgressBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetAnchorSideTop.Call(obj)
    return ret
}

func ProgressBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   progressBar_SetAnchorSideTop.Call(obj, value)
}

func ProgressBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetAnchorSideRight.Call(obj)
    return ret
}

func ProgressBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   progressBar_SetAnchorSideRight.Call(obj, value)
}

func ProgressBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func ProgressBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   progressBar_SetAnchorSideBottom.Call(obj, value)
}

func ProgressBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetChildSizing.Call(obj)
    return ret
}

func ProgressBar_SetChildSizing(obj uintptr, value uintptr) {
   progressBar_SetChildSizing.Call(obj, value)
}

func ProgressBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := progressBar_GetBorderSpacing.Call(obj)
    return ret
}

func ProgressBar_SetBorderSpacing(obj uintptr, value uintptr) {
   progressBar_SetBorderSpacing.Call(obj, value)
}

func ProgressBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := progressBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ProgressBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := progressBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ProgressBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := progressBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ProgressBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := progressBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ProgressBar_StaticClassType() TClass {
    r, _, _:= progressBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TDateTimePicker ---------------------------

func DateTimePicker_Create(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_Create.Call(obj)
    return ret
}

func DateTimePicker_Free(obj uintptr) {
    dateTimePicker_Free.Call(obj)
}

func DateTimePicker_CanFocus(obj uintptr) bool {
    ret, _, _ := dateTimePicker_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := dateTimePicker_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func DateTimePicker_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := dateTimePicker_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func DateTimePicker_DisableAlign(obj uintptr)  {
    dateTimePicker_DisableAlign.Call(obj)
}

func DateTimePicker_EnableAlign(obj uintptr)  {
    dateTimePicker_EnableAlign.Call(obj)
}

func DateTimePicker_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := dateTimePicker_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func DateTimePicker_FlipChildren(obj uintptr, AllLevels bool)  {
    dateTimePicker_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func DateTimePicker_Focused(obj uintptr) bool {
    ret, _, _ := dateTimePicker_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_HandleAllocated(obj uintptr) bool {
    ret, _, _ := dateTimePicker_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_InsertControl(obj uintptr, AControl uintptr)  {
    dateTimePicker_InsertControl.Call(obj, AControl )
}

func DateTimePicker_Invalidate(obj uintptr)  {
    dateTimePicker_Invalidate.Call(obj)
}

func DateTimePicker_RemoveControl(obj uintptr, AControl uintptr)  {
    dateTimePicker_RemoveControl.Call(obj, AControl )
}

func DateTimePicker_Realign(obj uintptr)  {
    dateTimePicker_Realign.Call(obj)
}

func DateTimePicker_Repaint(obj uintptr)  {
    dateTimePicker_Repaint.Call(obj)
}

func DateTimePicker_ScaleBy(obj uintptr, M int32, D int32)  {
    dateTimePicker_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func DateTimePicker_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    dateTimePicker_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func DateTimePicker_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    dateTimePicker_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func DateTimePicker_SetFocus(obj uintptr)  {
    dateTimePicker_SetFocus.Call(obj)
}

func DateTimePicker_Update(obj uintptr)  {
    dateTimePicker_Update.Call(obj)
}

func DateTimePicker_BringToFront(obj uintptr)  {
    dateTimePicker_BringToFront.Call(obj)
}

func DateTimePicker_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    dateTimePicker_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    dateTimePicker_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_Dragging(obj uintptr) bool {
    ret, _, _ := dateTimePicker_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_HasParent(obj uintptr) bool {
    ret, _, _ := dateTimePicker_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_Hide(obj uintptr)  {
    dateTimePicker_Hide.Call(obj)
}

func DateTimePicker_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := dateTimePicker_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func DateTimePicker_Refresh(obj uintptr)  {
    dateTimePicker_Refresh.Call(obj)
}

func DateTimePicker_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    dateTimePicker_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    dateTimePicker_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_SendToBack(obj uintptr)  {
    dateTimePicker_SendToBack.Call(obj)
}

func DateTimePicker_Show(obj uintptr)  {
    dateTimePicker_Show.Call(obj)
}

func DateTimePicker_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := dateTimePicker_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func DateTimePicker_GetTextLen(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetTextLen.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetTextBuf(obj uintptr, Buffer string)  {
    dateTimePicker_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func DateTimePicker_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := dateTimePicker_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func DateTimePicker_GetNamePath(obj uintptr) string {
    ret, _, _ := dateTimePicker_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func DateTimePicker_Assign(obj uintptr, Source uintptr)  {
    dateTimePicker_Assign.Call(obj, Source )
}

func DateTimePicker_ClassType(obj uintptr) TClass {
    ret, _, _ := dateTimePicker_ClassType.Call(obj)
    return TClass(ret)
}

func DateTimePicker_ClassName(obj uintptr) string {
    ret, _, _ := dateTimePicker_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func DateTimePicker_InstanceSize(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_InstanceSize.Call(obj)
    return int32(ret)
}

func DateTimePicker_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := dateTimePicker_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func DateTimePicker_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := dateTimePicker_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func DateTimePicker_GetHashCode(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetHashCode.Call(obj)
    return int32(ret)
}

func DateTimePicker_ToString(obj uintptr) string {
    ret, _, _ := dateTimePicker_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func DateTimePicker_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    dateTimePicker_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func DateTimePicker_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    dateTimePicker_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func DateTimePicker_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    dateTimePicker_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func DateTimePicker_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    dateTimePicker_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func DateTimePicker_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    dateTimePicker_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func DateTimePicker_AnchorClient(obj uintptr, ASpace int32)  {
    dateTimePicker_AnchorClient.Call(obj, uintptr(ASpace) )
}

func DateTimePicker_GetDateTime(obj uintptr) time.Time {
    ret, _, _ := dateTimePicker_GetDateTime.Call(obj)
    return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetDateTime(obj uintptr, value time.Time) {
   dateTimePicker_SetDateTime.Call(obj, uintptr(value.Unix()))
}

func DateTimePicker_GetDroppedDown(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetDroppedDown.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_GetAlign(obj uintptr) TAlign {
    ret, _, _ := dateTimePicker_GetAlign.Call(obj)
    return TAlign(ret)
}

func DateTimePicker_SetAlign(obj uintptr, value TAlign) {
   dateTimePicker_SetAlign.Call(obj, uintptr(value))
}

func DateTimePicker_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := dateTimePicker_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func DateTimePicker_SetAnchors(obj uintptr, value TAnchors) {
   dateTimePicker_SetAnchors.Call(obj, uintptr(value))
}

func DateTimePicker_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := dateTimePicker_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func DateTimePicker_SetBiDiMode(obj uintptr, value TBiDiMode) {
   dateTimePicker_SetBiDiMode.Call(obj, uintptr(value))
}

func DateTimePicker_GetCalAlignment(obj uintptr) TDTCalAlignment {
    ret, _, _ := dateTimePicker_GetCalAlignment.Call(obj)
    return TDTCalAlignment(ret)
}

func DateTimePicker_SetCalAlignment(obj uintptr, value TDTCalAlignment) {
   dateTimePicker_SetCalAlignment.Call(obj, uintptr(value))
}

func DateTimePicker_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetConstraints.Call(obj)
    return ret
}

func DateTimePicker_SetConstraints(obj uintptr, value uintptr) {
   dateTimePicker_SetConstraints.Call(obj, value)
}

func DateTimePicker_GetDate(obj uintptr) time.Time {
    ret, _, _ := dateTimePicker_GetDate.Call(obj)
    return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetDate(obj uintptr, value time.Time) {
   dateTimePicker_SetDate.Call(obj, uintptr(value.Unix()))
}

func DateTimePicker_GetTime(obj uintptr) time.Time {
    ret, _, _ := dateTimePicker_GetTime.Call(obj)
    return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetTime(obj uintptr, value time.Time) {
   dateTimePicker_SetTime.Call(obj, uintptr(value.Unix()))
}

func DateTimePicker_GetChecked(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetChecked(obj uintptr, value bool) {
   dateTimePicker_SetChecked.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetColor(obj uintptr) TColor {
    ret, _, _ := dateTimePicker_GetColor.Call(obj)
    return TColor(ret)
}

func DateTimePicker_SetColor(obj uintptr, value TColor) {
   dateTimePicker_SetColor.Call(obj, uintptr(value))
}

func DateTimePicker_GetDateMode(obj uintptr) TDTDateMode {
    ret, _, _ := dateTimePicker_GetDateMode.Call(obj)
    return TDTDateMode(ret)
}

func DateTimePicker_SetDateMode(obj uintptr, value TDTDateMode) {
   dateTimePicker_SetDateMode.Call(obj, uintptr(value))
}

func DateTimePicker_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetDoubleBuffered(obj uintptr, value bool) {
   dateTimePicker_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetEnabled(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetEnabled(obj uintptr, value bool) {
   dateTimePicker_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetFont(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetFont.Call(obj)
    return ret
}

func DateTimePicker_SetFont(obj uintptr, value uintptr) {
   dateTimePicker_SetFont.Call(obj, value)
}

func DateTimePicker_GetMaxDate(obj uintptr) time.Time {
    ret, _, _ := dateTimePicker_GetMaxDate.Call(obj)
    return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetMaxDate(obj uintptr, value time.Time) {
   dateTimePicker_SetMaxDate.Call(obj, uintptr(value.Unix()))
}

func DateTimePicker_GetMinDate(obj uintptr) time.Time {
    ret, _, _ := dateTimePicker_GetMinDate.Call(obj)
    return time.Unix(int64(ret), 0)
}

func DateTimePicker_SetMinDate(obj uintptr, value time.Time) {
   dateTimePicker_SetMinDate.Call(obj, uintptr(value.Unix()))
}

func DateTimePicker_GetParentColor(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentColor(obj uintptr, value bool) {
   dateTimePicker_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentDoubleBuffered(obj uintptr, value bool) {
   dateTimePicker_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentFont(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentFont(obj uintptr, value bool) {
   dateTimePicker_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetParentShowHint(obj uintptr, value bool) {
   dateTimePicker_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetPopupMenu.Call(obj)
    return ret
}

func DateTimePicker_SetPopupMenu(obj uintptr, value uintptr) {
   dateTimePicker_SetPopupMenu.Call(obj, value)
}

func DateTimePicker_GetShowHint(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetShowHint(obj uintptr, value bool) {
   dateTimePicker_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := dateTimePicker_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func DateTimePicker_SetTabOrder(obj uintptr, value TTabOrder) {
   dateTimePicker_SetTabOrder.Call(obj, uintptr(value))
}

func DateTimePicker_GetTabStop(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetTabStop(obj uintptr, value bool) {
   dateTimePicker_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetVisible(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetVisible(obj uintptr, value bool) {
   dateTimePicker_SetVisible.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_SetOnClick(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnClick.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnChange(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnChange.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnContextPopup(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnEnter(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnEnter.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnExit(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnExit.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnKeyDown(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnKeyPress(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnKeyUp(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnMouseEnter(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func DateTimePicker_SetOnMouseLeave(obj uintptr, fn interface{}) {
    dateTimePicker_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func DateTimePicker_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetDockClientCount.Call(obj)
    return int32(ret)
}

func DateTimePicker_GetDockSite(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetDockSite(obj uintptr, value bool) {
   dateTimePicker_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func DateTimePicker_GetBrush(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetBrush.Call(obj)
    return ret
}

func DateTimePicker_GetControlCount(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetControlCount.Call(obj)
    return int32(ret)
}

func DateTimePicker_GetHandle(obj uintptr) HWND {
    ret, _, _ := dateTimePicker_GetHandle.Call(obj)
    return HWND(ret)
}

func DateTimePicker_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := dateTimePicker_GetParentWindow.Call(obj)
    return HWND(ret)
}

func DateTimePicker_SetParentWindow(obj uintptr, value HWND) {
   dateTimePicker_SetParentWindow.Call(obj, uintptr(value))
}

func DateTimePicker_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_SetUseDockManager(obj uintptr, value bool) {
   dateTimePicker_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func DateTimePicker_GetAction(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetAction.Call(obj)
    return ret
}

func DateTimePicker_SetAction(obj uintptr, value uintptr) {
   dateTimePicker_SetAction.Call(obj, value)
}

func DateTimePicker_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    dateTimePicker_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_SetBoundsRect(obj uintptr, value TRect) {
   dateTimePicker_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DateTimePicker_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetClientHeight.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetClientHeight(obj uintptr, value int32) {
   dateTimePicker_SetClientHeight.Call(obj, uintptr(value))
}

func DateTimePicker_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    dateTimePicker_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_GetClientRect(obj uintptr) TRect {
    var ret TRect
    dateTimePicker_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DateTimePicker_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetClientWidth.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetClientWidth(obj uintptr, value int32) {
   dateTimePicker_SetClientWidth.Call(obj, uintptr(value))
}

func DateTimePicker_GetControlState(obj uintptr) TControlState {
    ret, _, _ := dateTimePicker_GetControlState.Call(obj)
    return TControlState(ret)
}

func DateTimePicker_SetControlState(obj uintptr, value TControlState) {
   dateTimePicker_SetControlState.Call(obj, uintptr(value))
}

func DateTimePicker_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := dateTimePicker_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func DateTimePicker_SetControlStyle(obj uintptr, value TControlStyle) {
   dateTimePicker_SetControlStyle.Call(obj, uintptr(value))
}

func DateTimePicker_GetFloating(obj uintptr) bool {
    ret, _, _ := dateTimePicker_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func DateTimePicker_GetParent(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetParent.Call(obj)
    return ret
}

func DateTimePicker_SetParent(obj uintptr, value uintptr) {
   dateTimePicker_SetParent.Call(obj, value)
}

func DateTimePicker_GetLeft(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetLeft.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetLeft(obj uintptr, value int32) {
   dateTimePicker_SetLeft.Call(obj, uintptr(value))
}

func DateTimePicker_GetTop(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetTop.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetTop(obj uintptr, value int32) {
   dateTimePicker_SetTop.Call(obj, uintptr(value))
}

func DateTimePicker_GetWidth(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetWidth.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetWidth(obj uintptr, value int32) {
   dateTimePicker_SetWidth.Call(obj, uintptr(value))
}

func DateTimePicker_GetHeight(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetHeight.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetHeight(obj uintptr, value int32) {
   dateTimePicker_SetHeight.Call(obj, uintptr(value))
}

func DateTimePicker_GetCursor(obj uintptr) TCursor {
    ret, _, _ := dateTimePicker_GetCursor.Call(obj)
    return TCursor(ret)
}

func DateTimePicker_SetCursor(obj uintptr, value TCursor) {
   dateTimePicker_SetCursor.Call(obj, uintptr(value))
}

func DateTimePicker_GetHint(obj uintptr) string {
    ret, _, _ := dateTimePicker_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func DateTimePicker_SetHint(obj uintptr, value string) {
   dateTimePicker_SetHint.Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetComponentCount.Call(obj)
    return int32(ret)
}

func DateTimePicker_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := dateTimePicker_GetComponentIndex.Call(obj)
    return int32(ret)
}

func DateTimePicker_SetComponentIndex(obj uintptr, value int32) {
   dateTimePicker_SetComponentIndex.Call(obj, uintptr(value))
}

func DateTimePicker_GetOwner(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetOwner.Call(obj)
    return ret
}

func DateTimePicker_GetName(obj uintptr) string {
    ret, _, _ := dateTimePicker_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func DateTimePicker_SetName(obj uintptr, value string) {
   dateTimePicker_SetName.Call(obj, GoStrToDStr(value))
}

func DateTimePicker_GetTag(obj uintptr) int {
    ret, _, _ := dateTimePicker_GetTag.Call(obj)
    return int(ret)
}

func DateTimePicker_SetTag(obj uintptr, value int) {
   dateTimePicker_SetTag.Call(obj, uintptr(value))
}

func DateTimePicker_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetAnchorSideLeft.Call(obj)
    return ret
}

func DateTimePicker_SetAnchorSideLeft(obj uintptr, value uintptr) {
   dateTimePicker_SetAnchorSideLeft.Call(obj, value)
}

func DateTimePicker_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetAnchorSideTop.Call(obj)
    return ret
}

func DateTimePicker_SetAnchorSideTop(obj uintptr, value uintptr) {
   dateTimePicker_SetAnchorSideTop.Call(obj, value)
}

func DateTimePicker_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetAnchorSideRight.Call(obj)
    return ret
}

func DateTimePicker_SetAnchorSideRight(obj uintptr, value uintptr) {
   dateTimePicker_SetAnchorSideRight.Call(obj, value)
}

func DateTimePicker_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetAnchorSideBottom.Call(obj)
    return ret
}

func DateTimePicker_SetAnchorSideBottom(obj uintptr, value uintptr) {
   dateTimePicker_SetAnchorSideBottom.Call(obj, value)
}

func DateTimePicker_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetChildSizing.Call(obj)
    return ret
}

func DateTimePicker_SetChildSizing(obj uintptr, value uintptr) {
   dateTimePicker_SetChildSizing.Call(obj, value)
}

func DateTimePicker_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := dateTimePicker_GetBorderSpacing.Call(obj)
    return ret
}

func DateTimePicker_SetBorderSpacing(obj uintptr, value uintptr) {
   dateTimePicker_SetBorderSpacing.Call(obj, value)
}

func DateTimePicker_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := dateTimePicker_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func DateTimePicker_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := dateTimePicker_GetControls.Call(obj, uintptr(Index))
    return ret
}

func DateTimePicker_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := dateTimePicker_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func DateTimePicker_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := dateTimePicker_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func DateTimePicker_StaticClassType() TClass {
    r, _, _:= dateTimePicker_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMonthCalendar ---------------------------

func MonthCalendar_Create(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_Create.Call(obj)
    return ret
}

func MonthCalendar_Free(obj uintptr) {
    monthCalendar_Free.Call(obj)
}

func MonthCalendar_CanFocus(obj uintptr) bool {
    ret, _, _ := monthCalendar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := monthCalendar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func MonthCalendar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := monthCalendar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func MonthCalendar_DisableAlign(obj uintptr)  {
    monthCalendar_DisableAlign.Call(obj)
}

func MonthCalendar_EnableAlign(obj uintptr)  {
    monthCalendar_EnableAlign.Call(obj)
}

func MonthCalendar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := monthCalendar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func MonthCalendar_FlipChildren(obj uintptr, AllLevels bool)  {
    monthCalendar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func MonthCalendar_Focused(obj uintptr) bool {
    ret, _, _ := monthCalendar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := monthCalendar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_InsertControl(obj uintptr, AControl uintptr)  {
    monthCalendar_InsertControl.Call(obj, AControl )
}

func MonthCalendar_Invalidate(obj uintptr)  {
    monthCalendar_Invalidate.Call(obj)
}

func MonthCalendar_RemoveControl(obj uintptr, AControl uintptr)  {
    monthCalendar_RemoveControl.Call(obj, AControl )
}

func MonthCalendar_Realign(obj uintptr)  {
    monthCalendar_Realign.Call(obj)
}

func MonthCalendar_Repaint(obj uintptr)  {
    monthCalendar_Repaint.Call(obj)
}

func MonthCalendar_ScaleBy(obj uintptr, M int32, D int32)  {
    monthCalendar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func MonthCalendar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    monthCalendar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func MonthCalendar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    monthCalendar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func MonthCalendar_SetFocus(obj uintptr)  {
    monthCalendar_SetFocus.Call(obj)
}

func MonthCalendar_Update(obj uintptr)  {
    monthCalendar_Update.Call(obj)
}

func MonthCalendar_BringToFront(obj uintptr)  {
    monthCalendar_BringToFront.Call(obj)
}

func MonthCalendar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    monthCalendar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    monthCalendar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_Dragging(obj uintptr) bool {
    ret, _, _ := monthCalendar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_HasParent(obj uintptr) bool {
    ret, _, _ := monthCalendar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_Hide(obj uintptr)  {
    monthCalendar_Hide.Call(obj)
}

func MonthCalendar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := monthCalendar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func MonthCalendar_Refresh(obj uintptr)  {
    monthCalendar_Refresh.Call(obj)
}

func MonthCalendar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    monthCalendar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    monthCalendar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_SendToBack(obj uintptr)  {
    monthCalendar_SendToBack.Call(obj)
}

func MonthCalendar_Show(obj uintptr)  {
    monthCalendar_Show.Call(obj)
}

func MonthCalendar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := monthCalendar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func MonthCalendar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetTextLen.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetTextBuf(obj uintptr, Buffer string)  {
    monthCalendar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func MonthCalendar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := monthCalendar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func MonthCalendar_GetNamePath(obj uintptr) string {
    ret, _, _ := monthCalendar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func MonthCalendar_Assign(obj uintptr, Source uintptr)  {
    monthCalendar_Assign.Call(obj, Source )
}

func MonthCalendar_ClassType(obj uintptr) TClass {
    ret, _, _ := monthCalendar_ClassType.Call(obj)
    return TClass(ret)
}

func MonthCalendar_ClassName(obj uintptr) string {
    ret, _, _ := monthCalendar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MonthCalendar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := monthCalendar_InstanceSize.Call(obj)
    return int32(ret)
}

func MonthCalendar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := monthCalendar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MonthCalendar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := monthCalendar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MonthCalendar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetHashCode.Call(obj)
    return int32(ret)
}

func MonthCalendar_ToString(obj uintptr) string {
    ret, _, _ := monthCalendar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MonthCalendar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    monthCalendar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MonthCalendar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    monthCalendar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MonthCalendar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    monthCalendar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func MonthCalendar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    monthCalendar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func MonthCalendar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    monthCalendar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func MonthCalendar_AnchorClient(obj uintptr, ASpace int32)  {
    monthCalendar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func MonthCalendar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := monthCalendar_GetAlign.Call(obj)
    return TAlign(ret)
}

func MonthCalendar_SetAlign(obj uintptr, value TAlign) {
   monthCalendar_SetAlign.Call(obj, uintptr(value))
}

func MonthCalendar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := monthCalendar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func MonthCalendar_SetAnchors(obj uintptr, value TAnchors) {
   monthCalendar_SetAnchors.Call(obj, uintptr(value))
}

func MonthCalendar_GetAutoSize(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetAutoSize(obj uintptr, value bool) {
   monthCalendar_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetBorderWidth(obj uintptr, value int32) {
   monthCalendar_SetBorderWidth.Call(obj, uintptr(value))
}

func MonthCalendar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := monthCalendar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func MonthCalendar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   monthCalendar_SetBiDiMode.Call(obj, uintptr(value))
}

func MonthCalendar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetConstraints.Call(obj)
    return ret
}

func MonthCalendar_SetConstraints(obj uintptr, value uintptr) {
   monthCalendar_SetConstraints.Call(obj, value)
}

func MonthCalendar_GetDate(obj uintptr) time.Time {
    ret, _, _ := monthCalendar_GetDate.Call(obj)
    return time.Unix(int64(ret), 0)
}

func MonthCalendar_SetDate(obj uintptr, value time.Time) {
   monthCalendar_SetDate.Call(obj, uintptr(value.Unix()))
}

func MonthCalendar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetDoubleBuffered(obj uintptr, value bool) {
   monthCalendar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := monthCalendar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func MonthCalendar_SetDragCursor(obj uintptr, value TCursor) {
   monthCalendar_SetDragCursor.Call(obj, uintptr(value))
}

func MonthCalendar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := monthCalendar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func MonthCalendar_SetDragKind(obj uintptr, value TDragKind) {
   monthCalendar_SetDragKind.Call(obj, uintptr(value))
}

func MonthCalendar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := monthCalendar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func MonthCalendar_SetDragMode(obj uintptr, value TDragMode) {
   monthCalendar_SetDragMode.Call(obj, uintptr(value))
}

func MonthCalendar_GetEnabled(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetEnabled(obj uintptr, value bool) {
   monthCalendar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetFont(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetFont.Call(obj)
    return ret
}

func MonthCalendar_SetFont(obj uintptr, value uintptr) {
   monthCalendar_SetFont.Call(obj, value)
}

func MonthCalendar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetParentDoubleBuffered(obj uintptr, value bool) {
   monthCalendar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetPopupMenu.Call(obj)
    return ret
}

func MonthCalendar_SetPopupMenu(obj uintptr, value uintptr) {
   monthCalendar_SetPopupMenu.Call(obj, value)
}

func MonthCalendar_GetShowHint(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetShowHint(obj uintptr, value bool) {
   monthCalendar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := monthCalendar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func MonthCalendar_SetTabOrder(obj uintptr, value TTabOrder) {
   monthCalendar_SetTabOrder.Call(obj, uintptr(value))
}

func MonthCalendar_GetTabStop(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetTabStop(obj uintptr, value bool) {
   monthCalendar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetVisible(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetVisible(obj uintptr, value bool) {
   monthCalendar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_SetOnClick(obj uintptr, fn interface{}) {
    monthCalendar_SetOnClick.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnContextPopup(obj uintptr, fn interface{}) {
    monthCalendar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnDblClick(obj uintptr, fn interface{}) {
    monthCalendar_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnDragDrop(obj uintptr, fn interface{}) {
    monthCalendar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnDragOver(obj uintptr, fn interface{}) {
    monthCalendar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnEndDock(obj uintptr, fn interface{}) {
    monthCalendar_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnEndDrag(obj uintptr, fn interface{}) {
    monthCalendar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnEnter(obj uintptr, fn interface{}) {
    monthCalendar_SetOnEnter.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnExit(obj uintptr, fn interface{}) {
    monthCalendar_SetOnExit.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnKeyDown(obj uintptr, fn interface{}) {
    monthCalendar_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnKeyPress(obj uintptr, fn interface{}) {
    monthCalendar_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnKeyUp(obj uintptr, fn interface{}) {
    monthCalendar_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnMouseEnter(obj uintptr, fn interface{}) {
    monthCalendar_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnMouseLeave(obj uintptr, fn interface{}) {
    monthCalendar_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func MonthCalendar_SetOnStartDock(obj uintptr, fn interface{}) {
    monthCalendar_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func MonthCalendar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func MonthCalendar_GetDockSite(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetDockSite(obj uintptr, value bool) {
   monthCalendar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func MonthCalendar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetBrush.Call(obj)
    return ret
}

func MonthCalendar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetControlCount.Call(obj)
    return int32(ret)
}

func MonthCalendar_GetHandle(obj uintptr) HWND {
    ret, _, _ := monthCalendar_GetHandle.Call(obj)
    return HWND(ret)
}

func MonthCalendar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := monthCalendar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func MonthCalendar_SetParentWindow(obj uintptr, value HWND) {
   monthCalendar_SetParentWindow.Call(obj, uintptr(value))
}

func MonthCalendar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_SetUseDockManager(obj uintptr, value bool) {
   monthCalendar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func MonthCalendar_GetAction(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetAction.Call(obj)
    return ret
}

func MonthCalendar_SetAction(obj uintptr, value uintptr) {
   monthCalendar_SetAction.Call(obj, value)
}

func MonthCalendar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    monthCalendar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_SetBoundsRect(obj uintptr, value TRect) {
   monthCalendar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MonthCalendar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetClientHeight.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetClientHeight(obj uintptr, value int32) {
   monthCalendar_SetClientHeight.Call(obj, uintptr(value))
}

func MonthCalendar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    monthCalendar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    monthCalendar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MonthCalendar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetClientWidth.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetClientWidth(obj uintptr, value int32) {
   monthCalendar_SetClientWidth.Call(obj, uintptr(value))
}

func MonthCalendar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := monthCalendar_GetControlState.Call(obj)
    return TControlState(ret)
}

func MonthCalendar_SetControlState(obj uintptr, value TControlState) {
   monthCalendar_SetControlState.Call(obj, uintptr(value))
}

func MonthCalendar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := monthCalendar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func MonthCalendar_SetControlStyle(obj uintptr, value TControlStyle) {
   monthCalendar_SetControlStyle.Call(obj, uintptr(value))
}

func MonthCalendar_GetFloating(obj uintptr) bool {
    ret, _, _ := monthCalendar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func MonthCalendar_GetParent(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetParent.Call(obj)
    return ret
}

func MonthCalendar_SetParent(obj uintptr, value uintptr) {
   monthCalendar_SetParent.Call(obj, value)
}

func MonthCalendar_GetLeft(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetLeft.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetLeft(obj uintptr, value int32) {
   monthCalendar_SetLeft.Call(obj, uintptr(value))
}

func MonthCalendar_GetTop(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetTop.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetTop(obj uintptr, value int32) {
   monthCalendar_SetTop.Call(obj, uintptr(value))
}

func MonthCalendar_GetWidth(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetWidth.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetWidth(obj uintptr, value int32) {
   monthCalendar_SetWidth.Call(obj, uintptr(value))
}

func MonthCalendar_GetHeight(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetHeight.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetHeight(obj uintptr, value int32) {
   monthCalendar_SetHeight.Call(obj, uintptr(value))
}

func MonthCalendar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := monthCalendar_GetCursor.Call(obj)
    return TCursor(ret)
}

func MonthCalendar_SetCursor(obj uintptr, value TCursor) {
   monthCalendar_SetCursor.Call(obj, uintptr(value))
}

func MonthCalendar_GetHint(obj uintptr) string {
    ret, _, _ := monthCalendar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func MonthCalendar_SetHint(obj uintptr, value string) {
   monthCalendar_SetHint.Call(obj, GoStrToDStr(value))
}

func MonthCalendar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetComponentCount.Call(obj)
    return int32(ret)
}

func MonthCalendar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := monthCalendar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func MonthCalendar_SetComponentIndex(obj uintptr, value int32) {
   monthCalendar_SetComponentIndex.Call(obj, uintptr(value))
}

func MonthCalendar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetOwner.Call(obj)
    return ret
}

func MonthCalendar_GetName(obj uintptr) string {
    ret, _, _ := monthCalendar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func MonthCalendar_SetName(obj uintptr, value string) {
   monthCalendar_SetName.Call(obj, GoStrToDStr(value))
}

func MonthCalendar_GetTag(obj uintptr) int {
    ret, _, _ := monthCalendar_GetTag.Call(obj)
    return int(ret)
}

func MonthCalendar_SetTag(obj uintptr, value int) {
   monthCalendar_SetTag.Call(obj, uintptr(value))
}

func MonthCalendar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetAnchorSideLeft.Call(obj)
    return ret
}

func MonthCalendar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   monthCalendar_SetAnchorSideLeft.Call(obj, value)
}

func MonthCalendar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetAnchorSideTop.Call(obj)
    return ret
}

func MonthCalendar_SetAnchorSideTop(obj uintptr, value uintptr) {
   monthCalendar_SetAnchorSideTop.Call(obj, value)
}

func MonthCalendar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetAnchorSideRight.Call(obj)
    return ret
}

func MonthCalendar_SetAnchorSideRight(obj uintptr, value uintptr) {
   monthCalendar_SetAnchorSideRight.Call(obj, value)
}

func MonthCalendar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetAnchorSideBottom.Call(obj)
    return ret
}

func MonthCalendar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   monthCalendar_SetAnchorSideBottom.Call(obj, value)
}

func MonthCalendar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetChildSizing.Call(obj)
    return ret
}

func MonthCalendar_SetChildSizing(obj uintptr, value uintptr) {
   monthCalendar_SetChildSizing.Call(obj, value)
}

func MonthCalendar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := monthCalendar_GetBorderSpacing.Call(obj)
    return ret
}

func MonthCalendar_SetBorderSpacing(obj uintptr, value uintptr) {
   monthCalendar_SetBorderSpacing.Call(obj, value)
}

func MonthCalendar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := monthCalendar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func MonthCalendar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := monthCalendar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func MonthCalendar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := monthCalendar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func MonthCalendar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := monthCalendar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func MonthCalendar_StaticClassType() TClass {
    r, _, _:= monthCalendar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListView ---------------------------

func ListView_Create(obj uintptr) uintptr {
    ret, _, _ := listView_Create.Call(obj)
    return ret
}

func ListView_Free(obj uintptr) {
    listView_Free.Call(obj)
}

func ListView_AddItem(obj uintptr, Item string, AObject uintptr)  {
    listView_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ListView_AlphaSort(obj uintptr) bool {
    ret, _, _ := listView_AlphaSort.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_Clear(obj uintptr)  {
    listView_Clear.Call(obj)
}

func ListView_ClearSelection(obj uintptr)  {
    listView_ClearSelection.Call(obj)
}

func ListView_DeleteSelected(obj uintptr)  {
    listView_DeleteSelected.Call(obj)
}

func ListView_IsEditing(obj uintptr) bool {
    ret, _, _ := listView_IsEditing.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SelectAll(obj uintptr)  {
    listView_SelectAll.Call(obj)
}

func ListView_CustomSort(obj uintptr, SortProc PFNLVCOMPARE, lParam int) bool {
    ret, _, _ := listView_CustomSort.Call(obj, uintptr(SortProc) , uintptr(lParam) )
    return DBoolToGoBool(ret)
}

func ListView_CanFocus(obj uintptr) bool {
    ret, _, _ := listView_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := listView_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ListView_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := listView_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ListView_DisableAlign(obj uintptr)  {
    listView_DisableAlign.Call(obj)
}

func ListView_EnableAlign(obj uintptr)  {
    listView_EnableAlign.Call(obj)
}

func ListView_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := listView_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ListView_FlipChildren(obj uintptr, AllLevels bool)  {
    listView_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ListView_Focused(obj uintptr) bool {
    ret, _, _ := listView_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_HandleAllocated(obj uintptr) bool {
    ret, _, _ := listView_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_InsertControl(obj uintptr, AControl uintptr)  {
    listView_InsertControl.Call(obj, AControl )
}

func ListView_Invalidate(obj uintptr)  {
    listView_Invalidate.Call(obj)
}

func ListView_RemoveControl(obj uintptr, AControl uintptr)  {
    listView_RemoveControl.Call(obj, AControl )
}

func ListView_Realign(obj uintptr)  {
    listView_Realign.Call(obj)
}

func ListView_Repaint(obj uintptr)  {
    listView_Repaint.Call(obj)
}

func ListView_ScaleBy(obj uintptr, M int32, D int32)  {
    listView_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ListView_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    listView_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ListView_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    listView_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ListView_SetFocus(obj uintptr)  {
    listView_SetFocus.Call(obj)
}

func ListView_Update(obj uintptr)  {
    listView_Update.Call(obj)
}

func ListView_BringToFront(obj uintptr)  {
    listView_BringToFront.Call(obj)
}

func ListView_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    listView_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    listView_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_Dragging(obj uintptr) bool {
    ret, _, _ := listView_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_HasParent(obj uintptr) bool {
    ret, _, _ := listView_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_Hide(obj uintptr)  {
    listView_Hide.Call(obj)
}

func ListView_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := listView_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ListView_Refresh(obj uintptr)  {
    listView_Refresh.Call(obj)
}

func ListView_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    listView_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    listView_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_SendToBack(obj uintptr)  {
    listView_SendToBack.Call(obj)
}

func ListView_Show(obj uintptr)  {
    listView_Show.Call(obj)
}

func ListView_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := listView_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ListView_GetTextLen(obj uintptr) int32 {
    ret, _, _ := listView_GetTextLen.Call(obj)
    return int32(ret)
}

func ListView_SetTextBuf(obj uintptr, Buffer string)  {
    listView_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ListView_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := listView_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ListView_GetNamePath(obj uintptr) string {
    ret, _, _ := listView_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListView_Assign(obj uintptr, Source uintptr)  {
    listView_Assign.Call(obj, Source )
}

func ListView_ClassType(obj uintptr) TClass {
    ret, _, _ := listView_ClassType.Call(obj)
    return TClass(ret)
}

func ListView_ClassName(obj uintptr) string {
    ret, _, _ := listView_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListView_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listView_InstanceSize.Call(obj)
    return int32(ret)
}

func ListView_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listView_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListView_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listView_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListView_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listView_GetHashCode.Call(obj)
    return int32(ret)
}

func ListView_ToString(obj uintptr) string {
    ret, _, _ := listView_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListView_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    listView_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ListView_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    listView_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ListView_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    listView_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ListView_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    listView_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ListView_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    listView_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ListView_AnchorClient(obj uintptr, ASpace int32)  {
    listView_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ListView_GetAutoSort(obj uintptr) bool {
    ret, _, _ := listView_GetAutoSort.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetAutoSort(obj uintptr, value bool) {
   listView_SetAutoSort.Call(obj, GoBoolToDBool(value))
}

func ListView_GetAutoSortIndicator(obj uintptr) bool {
    ret, _, _ := listView_GetAutoSortIndicator.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetAutoSortIndicator(obj uintptr, value bool) {
   listView_SetAutoSortIndicator.Call(obj, GoBoolToDBool(value))
}

func ListView_GetAutoWidthLastColumn(obj uintptr) bool {
    ret, _, _ := listView_GetAutoWidthLastColumn.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetAutoWidthLastColumn(obj uintptr, value bool) {
   listView_SetAutoWidthLastColumn.Call(obj, GoBoolToDBool(value))
}

func ListView_GetSmallImagesWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetSmallImagesWidth.Call(obj)
    return int32(ret)
}

func ListView_SetSmallImagesWidth(obj uintptr, value int32) {
   listView_SetSmallImagesWidth.Call(obj, uintptr(value))
}

func ListView_GetSortColumn(obj uintptr) int32 {
    ret, _, _ := listView_GetSortColumn.Call(obj)
    return int32(ret)
}

func ListView_SetSortColumn(obj uintptr, value int32) {
   listView_SetSortColumn.Call(obj, uintptr(value))
}

func ListView_GetSortDirection(obj uintptr) TSortDirection {
    ret, _, _ := listView_GetSortDirection.Call(obj)
    return TSortDirection(ret)
}

func ListView_SetSortDirection(obj uintptr, value TSortDirection) {
   listView_SetSortDirection.Call(obj, uintptr(value))
}

func ListView_GetLargeImagesWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetLargeImagesWidth.Call(obj)
    return int32(ret)
}

func ListView_SetLargeImagesWidth(obj uintptr, value int32) {
   listView_SetLargeImagesWidth.Call(obj, uintptr(value))
}

func ListView_GetStateImagesWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetStateImagesWidth.Call(obj)
    return int32(ret)
}

func ListView_SetStateImagesWidth(obj uintptr, value int32) {
   listView_SetStateImagesWidth.Call(obj, uintptr(value))
}

func ListView_GetToolTips(obj uintptr) bool {
    ret, _, _ := listView_GetToolTips.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetToolTips(obj uintptr, value bool) {
   listView_SetToolTips.Call(obj, GoBoolToDBool(value))
}

func ListView_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := listView_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func ListView_SetScrollBars(obj uintptr, value TScrollStyle) {
   listView_SetScrollBars.Call(obj, uintptr(value))
}

func ListView_GetAction(obj uintptr) uintptr {
    ret, _, _ := listView_GetAction.Call(obj)
    return ret
}

func ListView_SetAction(obj uintptr, value uintptr) {
   listView_SetAction.Call(obj, value)
}

func ListView_GetAlign(obj uintptr) TAlign {
    ret, _, _ := listView_GetAlign.Call(obj)
    return TAlign(ret)
}

func ListView_SetAlign(obj uintptr, value TAlign) {
   listView_SetAlign.Call(obj, uintptr(value))
}

func ListView_GetAllocBy(obj uintptr) int32 {
    ret, _, _ := listView_GetAllocBy.Call(obj)
    return int32(ret)
}

func ListView_SetAllocBy(obj uintptr, value int32) {
   listView_SetAllocBy.Call(obj, uintptr(value))
}

func ListView_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := listView_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ListView_SetAnchors(obj uintptr, value TAnchors) {
   listView_SetAnchors.Call(obj, uintptr(value))
}

func ListView_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := listView_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ListView_SetBiDiMode(obj uintptr, value TBiDiMode) {
   listView_SetBiDiMode.Call(obj, uintptr(value))
}

func ListView_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := listView_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func ListView_SetBorderStyle(obj uintptr, value TBorderStyle) {
   listView_SetBorderStyle.Call(obj, uintptr(value))
}

func ListView_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetBorderWidth.Call(obj)
    return int32(ret)
}

func ListView_SetBorderWidth(obj uintptr, value int32) {
   listView_SetBorderWidth.Call(obj, uintptr(value))
}

func ListView_GetCheckboxes(obj uintptr) bool {
    ret, _, _ := listView_GetCheckboxes.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetCheckboxes(obj uintptr, value bool) {
   listView_SetCheckboxes.Call(obj, GoBoolToDBool(value))
}

func ListView_GetColor(obj uintptr) TColor {
    ret, _, _ := listView_GetColor.Call(obj)
    return TColor(ret)
}

func ListView_SetColor(obj uintptr, value TColor) {
   listView_SetColor.Call(obj, uintptr(value))
}

func ListView_GetColumns(obj uintptr) uintptr {
    ret, _, _ := listView_GetColumns.Call(obj)
    return ret
}

func ListView_SetColumns(obj uintptr, value uintptr) {
   listView_SetColumns.Call(obj, value)
}

func ListView_GetColumnClick(obj uintptr) bool {
    ret, _, _ := listView_GetColumnClick.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetColumnClick(obj uintptr, value bool) {
   listView_SetColumnClick.Call(obj, GoBoolToDBool(value))
}

func ListView_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := listView_GetConstraints.Call(obj)
    return ret
}

func ListView_SetConstraints(obj uintptr, value uintptr) {
   listView_SetConstraints.Call(obj, value)
}

func ListView_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := listView_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetDoubleBuffered(obj uintptr, value bool) {
   listView_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ListView_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := listView_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ListView_SetDragCursor(obj uintptr, value TCursor) {
   listView_SetDragCursor.Call(obj, uintptr(value))
}

func ListView_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := listView_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ListView_SetDragKind(obj uintptr, value TDragKind) {
   listView_SetDragKind.Call(obj, uintptr(value))
}

func ListView_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := listView_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ListView_SetDragMode(obj uintptr, value TDragMode) {
   listView_SetDragMode.Call(obj, uintptr(value))
}

func ListView_GetEnabled(obj uintptr) bool {
    ret, _, _ := listView_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetEnabled(obj uintptr, value bool) {
   listView_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ListView_GetFont(obj uintptr) uintptr {
    ret, _, _ := listView_GetFont.Call(obj)
    return ret
}

func ListView_SetFont(obj uintptr, value uintptr) {
   listView_SetFont.Call(obj, value)
}

func ListView_GetFlatScrollBars(obj uintptr) bool {
    ret, _, _ := listView_GetFlatScrollBars.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetFlatScrollBars(obj uintptr, value bool) {
   listView_SetFlatScrollBars.Call(obj, GoBoolToDBool(value))
}

func ListView_GetFullDrag(obj uintptr) bool {
    ret, _, _ := listView_GetFullDrag.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetFullDrag(obj uintptr, value bool) {
   listView_SetFullDrag.Call(obj, GoBoolToDBool(value))
}

func ListView_GetGridLines(obj uintptr) bool {
    ret, _, _ := listView_GetGridLines.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetGridLines(obj uintptr, value bool) {
   listView_SetGridLines.Call(obj, GoBoolToDBool(value))
}

func ListView_GetHideSelection(obj uintptr) bool {
    ret, _, _ := listView_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetHideSelection(obj uintptr, value bool) {
   listView_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func ListView_GetHotTrack(obj uintptr) bool {
    ret, _, _ := listView_GetHotTrack.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetHotTrack(obj uintptr, value bool) {
   listView_SetHotTrack.Call(obj, GoBoolToDBool(value))
}

func ListView_GetIconOptions(obj uintptr) uintptr {
    ret, _, _ := listView_GetIconOptions.Call(obj)
    return ret
}

func ListView_SetIconOptions(obj uintptr, value uintptr) {
   listView_SetIconOptions.Call(obj, value)
}

func ListView_GetItems(obj uintptr) uintptr {
    ret, _, _ := listView_GetItems.Call(obj)
    return ret
}

func ListView_SetItems(obj uintptr, value uintptr) {
   listView_SetItems.Call(obj, value)
}

func ListView_GetLargeImages(obj uintptr) uintptr {
    ret, _, _ := listView_GetLargeImages.Call(obj)
    return ret
}

func ListView_SetLargeImages(obj uintptr, value uintptr) {
   listView_SetLargeImages.Call(obj, value)
}

func ListView_GetMultiSelect(obj uintptr) bool {
    ret, _, _ := listView_GetMultiSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetMultiSelect(obj uintptr, value bool) {
   listView_SetMultiSelect.Call(obj, GoBoolToDBool(value))
}

func ListView_GetOwnerData(obj uintptr) bool {
    ret, _, _ := listView_GetOwnerData.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetOwnerData(obj uintptr, value bool) {
   listView_SetOwnerData.Call(obj, GoBoolToDBool(value))
}

func ListView_GetOwnerDraw(obj uintptr) bool {
    ret, _, _ := listView_GetOwnerDraw.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetOwnerDraw(obj uintptr, value bool) {
   listView_SetOwnerDraw.Call(obj, GoBoolToDBool(value))
}

func ListView_GetReadOnly(obj uintptr) bool {
    ret, _, _ := listView_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetReadOnly(obj uintptr, value bool) {
   listView_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func ListView_GetRowSelect(obj uintptr) bool {
    ret, _, _ := listView_GetRowSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetRowSelect(obj uintptr, value bool) {
   listView_SetRowSelect.Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentColor(obj uintptr) bool {
    ret, _, _ := listView_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetParentColor(obj uintptr, value bool) {
   listView_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := listView_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetParentDoubleBuffered(obj uintptr, value bool) {
   listView_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentFont(obj uintptr) bool {
    ret, _, _ := listView_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetParentFont(obj uintptr, value bool) {
   listView_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ListView_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := listView_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetParentShowHint(obj uintptr, value bool) {
   listView_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ListView_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := listView_GetPopupMenu.Call(obj)
    return ret
}

func ListView_SetPopupMenu(obj uintptr, value uintptr) {
   listView_SetPopupMenu.Call(obj, value)
}

func ListView_GetShowColumnHeaders(obj uintptr) bool {
    ret, _, _ := listView_GetShowColumnHeaders.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetShowColumnHeaders(obj uintptr, value bool) {
   listView_SetShowColumnHeaders.Call(obj, GoBoolToDBool(value))
}

func ListView_GetShowHint(obj uintptr) bool {
    ret, _, _ := listView_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetShowHint(obj uintptr, value bool) {
   listView_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ListView_GetSmallImages(obj uintptr) uintptr {
    ret, _, _ := listView_GetSmallImages.Call(obj)
    return ret
}

func ListView_SetSmallImages(obj uintptr, value uintptr) {
   listView_SetSmallImages.Call(obj, value)
}

func ListView_GetSortType(obj uintptr) TSortType {
    ret, _, _ := listView_GetSortType.Call(obj)
    return TSortType(ret)
}

func ListView_SetSortType(obj uintptr, value TSortType) {
   listView_SetSortType.Call(obj, uintptr(value))
}

func ListView_GetStateImages(obj uintptr) uintptr {
    ret, _, _ := listView_GetStateImages.Call(obj)
    return ret
}

func ListView_SetStateImages(obj uintptr, value uintptr) {
   listView_SetStateImages.Call(obj, value)
}

func ListView_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := listView_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ListView_SetTabOrder(obj uintptr, value TTabOrder) {
   listView_SetTabOrder.Call(obj, uintptr(value))
}

func ListView_GetTabStop(obj uintptr) bool {
    ret, _, _ := listView_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetTabStop(obj uintptr, value bool) {
   listView_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ListView_GetViewStyle(obj uintptr) TViewStyle {
    ret, _, _ := listView_GetViewStyle.Call(obj)
    return TViewStyle(ret)
}

func ListView_SetViewStyle(obj uintptr, value TViewStyle) {
   listView_SetViewStyle.Call(obj, uintptr(value))
}

func ListView_GetVisible(obj uintptr) bool {
    ret, _, _ := listView_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetVisible(obj uintptr, value bool) {
   listView_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ListView_SetOnAdvancedCustomDraw(obj uintptr, fn interface{}) {
    listView_SetOnAdvancedCustomDraw.Call(obj, addEventToMap(fn))
}

func ListView_SetOnAdvancedCustomDrawItem(obj uintptr, fn interface{}) {
    listView_SetOnAdvancedCustomDrawItem.Call(obj, addEventToMap(fn))
}

func ListView_SetOnAdvancedCustomDrawSubItem(obj uintptr, fn interface{}) {
    listView_SetOnAdvancedCustomDrawSubItem.Call(obj, addEventToMap(fn))
}

func ListView_SetOnChange(obj uintptr, fn interface{}) {
    listView_SetOnChange.Call(obj, addEventToMap(fn))
}

func ListView_SetOnClick(obj uintptr, fn interface{}) {
    listView_SetOnClick.Call(obj, addEventToMap(fn))
}

func ListView_SetOnColumnClick(obj uintptr, fn interface{}) {
    listView_SetOnColumnClick.Call(obj, addEventToMap(fn))
}

func ListView_SetOnCompare(obj uintptr, fn interface{}) {
    listView_SetOnCompare.Call(obj, addEventToMap(fn))
}

func ListView_SetOnContextPopup(obj uintptr, fn interface{}) {
    listView_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ListView_SetOnCustomDraw(obj uintptr, fn interface{}) {
    listView_SetOnCustomDraw.Call(obj, addEventToMap(fn))
}

func ListView_SetOnCustomDrawItem(obj uintptr, fn interface{}) {
    listView_SetOnCustomDrawItem.Call(obj, addEventToMap(fn))
}

func ListView_SetOnCustomDrawSubItem(obj uintptr, fn interface{}) {
    listView_SetOnCustomDrawSubItem.Call(obj, addEventToMap(fn))
}

func ListView_SetOnData(obj uintptr, fn interface{}) {
    listView_SetOnData.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDataFind(obj uintptr, fn interface{}) {
    listView_SetOnDataFind.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDataHint(obj uintptr, fn interface{}) {
    listView_SetOnDataHint.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDblClick(obj uintptr, fn interface{}) {
    listView_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDeletion(obj uintptr, fn interface{}) {
    listView_SetOnDeletion.Call(obj, addEventToMap(fn))
}

func ListView_SetOnEdited(obj uintptr, fn interface{}) {
    listView_SetOnEdited.Call(obj, addEventToMap(fn))
}

func ListView_SetOnEditing(obj uintptr, fn interface{}) {
    listView_SetOnEditing.Call(obj, addEventToMap(fn))
}

func ListView_SetOnEndDock(obj uintptr, fn interface{}) {
    listView_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func ListView_SetOnEndDrag(obj uintptr, fn interface{}) {
    listView_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ListView_SetOnEnter(obj uintptr, fn interface{}) {
    listView_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ListView_SetOnExit(obj uintptr, fn interface{}) {
    listView_SetOnExit.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDragDrop(obj uintptr, fn interface{}) {
    listView_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ListView_SetOnDragOver(obj uintptr, fn interface{}) {
    listView_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ListView_SetOnInsert(obj uintptr, fn interface{}) {
    listView_SetOnInsert.Call(obj, addEventToMap(fn))
}

func ListView_SetOnKeyDown(obj uintptr, fn interface{}) {
    listView_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ListView_SetOnKeyPress(obj uintptr, fn interface{}) {
    listView_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ListView_SetOnKeyUp(obj uintptr, fn interface{}) {
    listView_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ListView_SetOnMouseDown(obj uintptr, fn interface{}) {
    listView_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ListView_SetOnMouseEnter(obj uintptr, fn interface{}) {
    listView_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ListView_SetOnMouseLeave(obj uintptr, fn interface{}) {
    listView_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ListView_SetOnMouseMove(obj uintptr, fn interface{}) {
    listView_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ListView_SetOnMouseUp(obj uintptr, fn interface{}) {
    listView_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ListView_SetOnResize(obj uintptr, fn interface{}) {
    listView_SetOnResize.Call(obj, addEventToMap(fn))
}

func ListView_SetOnSelectItem(obj uintptr, fn interface{}) {
    listView_SetOnSelectItem.Call(obj, addEventToMap(fn))
}

func ListView_SetOnItemChecked(obj uintptr, fn interface{}) {
    listView_SetOnItemChecked.Call(obj, addEventToMap(fn))
}

func ListView_SetOnStartDock(obj uintptr, fn interface{}) {
    listView_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func ListView_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := listView_GetCanvas.Call(obj)
    return ret
}

func ListView_GetItemFocused(obj uintptr) uintptr {
    ret, _, _ := listView_GetItemFocused.Call(obj)
    return ret
}

func ListView_SetItemFocused(obj uintptr, value uintptr) {
   listView_SetItemFocused.Call(obj, value)
}

func ListView_GetSelCount(obj uintptr) int32 {
    ret, _, _ := listView_GetSelCount.Call(obj)
    return int32(ret)
}

func ListView_GetSelected(obj uintptr) uintptr {
    ret, _, _ := listView_GetSelected.Call(obj)
    return ret
}

func ListView_SetSelected(obj uintptr, value uintptr) {
   listView_SetSelected.Call(obj, value)
}

func ListView_GetTopItem(obj uintptr) uintptr {
    ret, _, _ := listView_GetTopItem.Call(obj)
    return ret
}

func ListView_GetVisibleRowCount(obj uintptr) int32 {
    ret, _, _ := listView_GetVisibleRowCount.Call(obj)
    return int32(ret)
}

func ListView_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := listView_GetItemIndex.Call(obj)
    return int32(ret)
}

func ListView_SetItemIndex(obj uintptr, value int32) {
   listView_SetItemIndex.Call(obj, uintptr(value))
}

func ListView_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := listView_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ListView_GetDockSite(obj uintptr) bool {
    ret, _, _ := listView_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetDockSite(obj uintptr, value bool) {
   listView_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ListView_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := listView_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := listView_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ListView_GetBrush(obj uintptr) uintptr {
    ret, _, _ := listView_GetBrush.Call(obj)
    return ret
}

func ListView_GetControlCount(obj uintptr) int32 {
    ret, _, _ := listView_GetControlCount.Call(obj)
    return int32(ret)
}

func ListView_GetHandle(obj uintptr) HWND {
    ret, _, _ := listView_GetHandle.Call(obj)
    return HWND(ret)
}

func ListView_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := listView_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ListView_SetParentWindow(obj uintptr, value HWND) {
   listView_SetParentWindow.Call(obj, uintptr(value))
}

func ListView_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := listView_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_SetUseDockManager(obj uintptr, value bool) {
   listView_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ListView_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    listView_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_SetBoundsRect(obj uintptr, value TRect) {
   listView_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListView_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := listView_GetClientHeight.Call(obj)
    return int32(ret)
}

func ListView_SetClientHeight(obj uintptr, value int32) {
   listView_SetClientHeight.Call(obj, uintptr(value))
}

func ListView_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    listView_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_GetClientRect(obj uintptr) TRect {
    var ret TRect
    listView_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListView_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetClientWidth.Call(obj)
    return int32(ret)
}

func ListView_SetClientWidth(obj uintptr, value int32) {
   listView_SetClientWidth.Call(obj, uintptr(value))
}

func ListView_GetControlState(obj uintptr) TControlState {
    ret, _, _ := listView_GetControlState.Call(obj)
    return TControlState(ret)
}

func ListView_SetControlState(obj uintptr, value TControlState) {
   listView_SetControlState.Call(obj, uintptr(value))
}

func ListView_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := listView_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ListView_SetControlStyle(obj uintptr, value TControlStyle) {
   listView_SetControlStyle.Call(obj, uintptr(value))
}

func ListView_GetFloating(obj uintptr) bool {
    ret, _, _ := listView_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ListView_GetParent(obj uintptr) uintptr {
    ret, _, _ := listView_GetParent.Call(obj)
    return ret
}

func ListView_SetParent(obj uintptr, value uintptr) {
   listView_SetParent.Call(obj, value)
}

func ListView_GetLeft(obj uintptr) int32 {
    ret, _, _ := listView_GetLeft.Call(obj)
    return int32(ret)
}

func ListView_SetLeft(obj uintptr, value int32) {
   listView_SetLeft.Call(obj, uintptr(value))
}

func ListView_GetTop(obj uintptr) int32 {
    ret, _, _ := listView_GetTop.Call(obj)
    return int32(ret)
}

func ListView_SetTop(obj uintptr, value int32) {
   listView_SetTop.Call(obj, uintptr(value))
}

func ListView_GetWidth(obj uintptr) int32 {
    ret, _, _ := listView_GetWidth.Call(obj)
    return int32(ret)
}

func ListView_SetWidth(obj uintptr, value int32) {
   listView_SetWidth.Call(obj, uintptr(value))
}

func ListView_GetHeight(obj uintptr) int32 {
    ret, _, _ := listView_GetHeight.Call(obj)
    return int32(ret)
}

func ListView_SetHeight(obj uintptr, value int32) {
   listView_SetHeight.Call(obj, uintptr(value))
}

func ListView_GetCursor(obj uintptr) TCursor {
    ret, _, _ := listView_GetCursor.Call(obj)
    return TCursor(ret)
}

func ListView_SetCursor(obj uintptr, value TCursor) {
   listView_SetCursor.Call(obj, uintptr(value))
}

func ListView_GetHint(obj uintptr) string {
    ret, _, _ := listView_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ListView_SetHint(obj uintptr, value string) {
   listView_SetHint.Call(obj, GoStrToDStr(value))
}

func ListView_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := listView_GetComponentCount.Call(obj)
    return int32(ret)
}

func ListView_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := listView_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ListView_SetComponentIndex(obj uintptr, value int32) {
   listView_SetComponentIndex.Call(obj, uintptr(value))
}

func ListView_GetOwner(obj uintptr) uintptr {
    ret, _, _ := listView_GetOwner.Call(obj)
    return ret
}

func ListView_GetName(obj uintptr) string {
    ret, _, _ := listView_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ListView_SetName(obj uintptr, value string) {
   listView_SetName.Call(obj, GoStrToDStr(value))
}

func ListView_GetTag(obj uintptr) int {
    ret, _, _ := listView_GetTag.Call(obj)
    return int(ret)
}

func ListView_SetTag(obj uintptr, value int) {
   listView_SetTag.Call(obj, uintptr(value))
}

func ListView_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := listView_GetAnchorSideLeft.Call(obj)
    return ret
}

func ListView_SetAnchorSideLeft(obj uintptr, value uintptr) {
   listView_SetAnchorSideLeft.Call(obj, value)
}

func ListView_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := listView_GetAnchorSideTop.Call(obj)
    return ret
}

func ListView_SetAnchorSideTop(obj uintptr, value uintptr) {
   listView_SetAnchorSideTop.Call(obj, value)
}

func ListView_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := listView_GetAnchorSideRight.Call(obj)
    return ret
}

func ListView_SetAnchorSideRight(obj uintptr, value uintptr) {
   listView_SetAnchorSideRight.Call(obj, value)
}

func ListView_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := listView_GetAnchorSideBottom.Call(obj)
    return ret
}

func ListView_SetAnchorSideBottom(obj uintptr, value uintptr) {
   listView_SetAnchorSideBottom.Call(obj, value)
}

func ListView_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := listView_GetChildSizing.Call(obj)
    return ret
}

func ListView_SetChildSizing(obj uintptr, value uintptr) {
   listView_SetChildSizing.Call(obj, value)
}

func ListView_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := listView_GetBorderSpacing.Call(obj)
    return ret
}

func ListView_SetBorderSpacing(obj uintptr, value uintptr) {
   listView_SetBorderSpacing.Call(obj, value)
}

func ListView_GetColumn(obj uintptr, Index int32) uintptr {
    ret, _, _ := listView_GetColumn.Call(obj, uintptr(Index))
    return ret
}

func ListView_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := listView_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ListView_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := listView_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ListView_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := listView_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ListView_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := listView_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ListView_StaticClassType() TClass {
    r, _, _:= listView_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTreeView ---------------------------

func TreeView_Create(obj uintptr) uintptr {
    ret, _, _ := treeView_Create.Call(obj)
    return ret
}

func TreeView_Free(obj uintptr) {
    treeView_Free.Call(obj)
}

func TreeView_FullCollapse(obj uintptr)  {
    treeView_FullCollapse.Call(obj)
}

func TreeView_FullExpand(obj uintptr)  {
    treeView_FullExpand.Call(obj)
}

func TreeView_GetNodeAt(obj uintptr, X int32, Y int32) uintptr {
    ret, _, _ := treeView_GetNodeAt.Call(obj, uintptr(X) , uintptr(Y) )
    return ret
}

func TreeView_IsEditing(obj uintptr) bool {
    ret, _, _ := treeView_IsEditing.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_LoadFromFile(obj uintptr, FileName string)  {
    treeView_LoadFromFile.Call(obj, GoStrToDStr(FileName) )
}

func TreeView_LoadFromStream(obj uintptr, Stream uintptr)  {
    treeView_LoadFromStream.Call(obj, Stream )
}

func TreeView_SaveToFile(obj uintptr, FileName string)  {
    treeView_SaveToFile.Call(obj, GoStrToDStr(FileName) )
}

func TreeView_SaveToStream(obj uintptr, Stream uintptr)  {
    treeView_SaveToStream.Call(obj, Stream )
}

func TreeView_ClearSelection(obj uintptr, KeepPrimary bool)  {
    treeView_ClearSelection.Call(obj, GoBoolToDBool(KeepPrimary) )
}

func TreeView_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
    ret, _, _ := treeView_CustomSort.Call(obj, uintptr(SortProc) , uintptr(Data) , GoBoolToDBool(ARecurse) )
    return DBoolToGoBool(ret)
}

func TreeView_CanFocus(obj uintptr) bool {
    ret, _, _ := treeView_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := treeView_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func TreeView_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := treeView_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func TreeView_DisableAlign(obj uintptr)  {
    treeView_DisableAlign.Call(obj)
}

func TreeView_EnableAlign(obj uintptr)  {
    treeView_EnableAlign.Call(obj)
}

func TreeView_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := treeView_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func TreeView_FlipChildren(obj uintptr, AllLevels bool)  {
    treeView_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func TreeView_Focused(obj uintptr) bool {
    ret, _, _ := treeView_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_HandleAllocated(obj uintptr) bool {
    ret, _, _ := treeView_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_InsertControl(obj uintptr, AControl uintptr)  {
    treeView_InsertControl.Call(obj, AControl )
}

func TreeView_Invalidate(obj uintptr)  {
    treeView_Invalidate.Call(obj)
}

func TreeView_RemoveControl(obj uintptr, AControl uintptr)  {
    treeView_RemoveControl.Call(obj, AControl )
}

func TreeView_Realign(obj uintptr)  {
    treeView_Realign.Call(obj)
}

func TreeView_Repaint(obj uintptr)  {
    treeView_Repaint.Call(obj)
}

func TreeView_ScaleBy(obj uintptr, M int32, D int32)  {
    treeView_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func TreeView_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    treeView_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func TreeView_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    treeView_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func TreeView_SetFocus(obj uintptr)  {
    treeView_SetFocus.Call(obj)
}

func TreeView_Update(obj uintptr)  {
    treeView_Update.Call(obj)
}

func TreeView_BringToFront(obj uintptr)  {
    treeView_BringToFront.Call(obj)
}

func TreeView_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    treeView_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    treeView_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_Dragging(obj uintptr) bool {
    ret, _, _ := treeView_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_HasParent(obj uintptr) bool {
    ret, _, _ := treeView_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_Hide(obj uintptr)  {
    treeView_Hide.Call(obj)
}

func TreeView_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := treeView_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func TreeView_Refresh(obj uintptr)  {
    treeView_Refresh.Call(obj)
}

func TreeView_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    treeView_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    treeView_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_SendToBack(obj uintptr)  {
    treeView_SendToBack.Call(obj)
}

func TreeView_Show(obj uintptr)  {
    treeView_Show.Call(obj)
}

func TreeView_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := treeView_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func TreeView_GetTextLen(obj uintptr) int32 {
    ret, _, _ := treeView_GetTextLen.Call(obj)
    return int32(ret)
}

func TreeView_SetTextBuf(obj uintptr, Buffer string)  {
    treeView_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func TreeView_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := treeView_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func TreeView_GetNamePath(obj uintptr) string {
    ret, _, _ := treeView_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TreeView_Assign(obj uintptr, Source uintptr)  {
    treeView_Assign.Call(obj, Source )
}

func TreeView_ClassType(obj uintptr) TClass {
    ret, _, _ := treeView_ClassType.Call(obj)
    return TClass(ret)
}

func TreeView_ClassName(obj uintptr) string {
    ret, _, _ := treeView_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TreeView_InstanceSize(obj uintptr) int32 {
    ret, _, _ := treeView_InstanceSize.Call(obj)
    return int32(ret)
}

func TreeView_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := treeView_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TreeView_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := treeView_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TreeView_GetHashCode(obj uintptr) int32 {
    ret, _, _ := treeView_GetHashCode.Call(obj)
    return int32(ret)
}

func TreeView_ToString(obj uintptr) string {
    ret, _, _ := treeView_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TreeView_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    treeView_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TreeView_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    treeView_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TreeView_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    treeView_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func TreeView_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    treeView_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func TreeView_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    treeView_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func TreeView_AnchorClient(obj uintptr, ASpace int32)  {
    treeView_AnchorClient.Call(obj, uintptr(ASpace) )
}

func TreeView_GetDefaultItemHeight(obj uintptr) int32 {
    ret, _, _ := treeView_GetDefaultItemHeight.Call(obj)
    return int32(ret)
}

func TreeView_SetDefaultItemHeight(obj uintptr, value int32) {
   treeView_SetDefaultItemHeight.Call(obj, uintptr(value))
}

func TreeView_GetExpandSignColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetExpandSignColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetExpandSignColor(obj uintptr, value TColor) {
   treeView_SetExpandSignColor.Call(obj, uintptr(value))
}

func TreeView_GetExpandSignSize(obj uintptr) int32 {
    ret, _, _ := treeView_GetExpandSignSize.Call(obj)
    return int32(ret)
}

func TreeView_SetExpandSignSize(obj uintptr, value int32) {
   treeView_SetExpandSignSize.Call(obj, uintptr(value))
}

func TreeView_GetExpandSignType(obj uintptr) TTreeViewExpandSignType {
    ret, _, _ := treeView_GetExpandSignType.Call(obj)
    return TTreeViewExpandSignType(ret)
}

func TreeView_SetExpandSignType(obj uintptr, value TTreeViewExpandSignType) {
   treeView_SetExpandSignType.Call(obj, uintptr(value))
}

func TreeView_GetHotTrackColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetHotTrackColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetHotTrackColor(obj uintptr, value TColor) {
   treeView_SetHotTrackColor.Call(obj, uintptr(value))
}

func TreeView_GetImagesWidth(obj uintptr) int32 {
    ret, _, _ := treeView_GetImagesWidth.Call(obj)
    return int32(ret)
}

func TreeView_SetImagesWidth(obj uintptr, value int32) {
   treeView_SetImagesWidth.Call(obj, uintptr(value))
}

func TreeView_GetOptions(obj uintptr) TTreeViewOptions {
    ret, _, _ := treeView_GetOptions.Call(obj)
    return TTreeViewOptions(ret)
}

func TreeView_SetOptions(obj uintptr, value TTreeViewOptions) {
   treeView_SetOptions.Call(obj, uintptr(value))
}

func TreeView_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := treeView_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func TreeView_SetScrollBars(obj uintptr, value TScrollStyle) {
   treeView_SetScrollBars.Call(obj, uintptr(value))
}

func TreeView_GetSelectionColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetSelectionColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetSelectionColor(obj uintptr, value TColor) {
   treeView_SetSelectionColor.Call(obj, uintptr(value))
}

func TreeView_GetSelectionFontColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetSelectionFontColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetSelectionFontColor(obj uintptr, value TColor) {
   treeView_SetSelectionFontColor.Call(obj, uintptr(value))
}

func TreeView_GetSelectionFontColorUsed(obj uintptr) bool {
    ret, _, _ := treeView_GetSelectionFontColorUsed.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetSelectionFontColorUsed(obj uintptr, value bool) {
   treeView_SetSelectionFontColorUsed.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetSeparatorColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetSeparatorColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetSeparatorColor(obj uintptr, value TColor) {
   treeView_SetSeparatorColor.Call(obj, uintptr(value))
}

func TreeView_GetStateImagesWidth(obj uintptr) int32 {
    ret, _, _ := treeView_GetStateImagesWidth.Call(obj)
    return int32(ret)
}

func TreeView_SetStateImagesWidth(obj uintptr, value int32) {
   treeView_SetStateImagesWidth.Call(obj, uintptr(value))
}

func TreeView_GetToolTips(obj uintptr) bool {
    ret, _, _ := treeView_GetToolTips.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetToolTips(obj uintptr, value bool) {
   treeView_SetToolTips.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetTreeLineColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetTreeLineColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetTreeLineColor(obj uintptr, value TColor) {
   treeView_SetTreeLineColor.Call(obj, uintptr(value))
}

func TreeView_GetTreeLinePenStyle(obj uintptr) TPenStyle {
    ret, _, _ := treeView_GetTreeLinePenStyle.Call(obj)
    return TPenStyle(ret)
}

func TreeView_SetTreeLinePenStyle(obj uintptr, value TPenStyle) {
   treeView_SetTreeLinePenStyle.Call(obj, uintptr(value))
}

func TreeView_GetAlign(obj uintptr) TAlign {
    ret, _, _ := treeView_GetAlign.Call(obj)
    return TAlign(ret)
}

func TreeView_SetAlign(obj uintptr, value TAlign) {
   treeView_SetAlign.Call(obj, uintptr(value))
}

func TreeView_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := treeView_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func TreeView_SetAnchors(obj uintptr, value TAnchors) {
   treeView_SetAnchors.Call(obj, uintptr(value))
}

func TreeView_GetAutoExpand(obj uintptr) bool {
    ret, _, _ := treeView_GetAutoExpand.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetAutoExpand(obj uintptr, value bool) {
   treeView_SetAutoExpand.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := treeView_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func TreeView_SetBiDiMode(obj uintptr, value TBiDiMode) {
   treeView_SetBiDiMode.Call(obj, uintptr(value))
}

func TreeView_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := treeView_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func TreeView_SetBorderStyle(obj uintptr, value TBorderStyle) {
   treeView_SetBorderStyle.Call(obj, uintptr(value))
}

func TreeView_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := treeView_GetBorderWidth.Call(obj)
    return int32(ret)
}

func TreeView_SetBorderWidth(obj uintptr, value int32) {
   treeView_SetBorderWidth.Call(obj, uintptr(value))
}

func TreeView_GetColor(obj uintptr) TColor {
    ret, _, _ := treeView_GetColor.Call(obj)
    return TColor(ret)
}

func TreeView_SetColor(obj uintptr, value TColor) {
   treeView_SetColor.Call(obj, uintptr(value))
}

func TreeView_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := treeView_GetConstraints.Call(obj)
    return ret
}

func TreeView_SetConstraints(obj uintptr, value uintptr) {
   treeView_SetConstraints.Call(obj, value)
}

func TreeView_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := treeView_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetDoubleBuffered(obj uintptr, value bool) {
   treeView_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := treeView_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func TreeView_SetDragKind(obj uintptr, value TDragKind) {
   treeView_SetDragKind.Call(obj, uintptr(value))
}

func TreeView_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := treeView_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func TreeView_SetDragCursor(obj uintptr, value TCursor) {
   treeView_SetDragCursor.Call(obj, uintptr(value))
}

func TreeView_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := treeView_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func TreeView_SetDragMode(obj uintptr, value TDragMode) {
   treeView_SetDragMode.Call(obj, uintptr(value))
}

func TreeView_GetEnabled(obj uintptr) bool {
    ret, _, _ := treeView_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetEnabled(obj uintptr, value bool) {
   treeView_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetFont(obj uintptr) uintptr {
    ret, _, _ := treeView_GetFont.Call(obj)
    return ret
}

func TreeView_SetFont(obj uintptr, value uintptr) {
   treeView_SetFont.Call(obj, value)
}

func TreeView_GetHideSelection(obj uintptr) bool {
    ret, _, _ := treeView_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetHideSelection(obj uintptr, value bool) {
   treeView_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetHotTrack(obj uintptr) bool {
    ret, _, _ := treeView_GetHotTrack.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetHotTrack(obj uintptr, value bool) {
   treeView_SetHotTrack.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetImages(obj uintptr) uintptr {
    ret, _, _ := treeView_GetImages.Call(obj)
    return ret
}

func TreeView_SetImages(obj uintptr, value uintptr) {
   treeView_SetImages.Call(obj, value)
}

func TreeView_GetIndent(obj uintptr) int32 {
    ret, _, _ := treeView_GetIndent.Call(obj)
    return int32(ret)
}

func TreeView_SetIndent(obj uintptr, value int32) {
   treeView_SetIndent.Call(obj, uintptr(value))
}

func TreeView_GetMultiSelect(obj uintptr) bool {
    ret, _, _ := treeView_GetMultiSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetMultiSelect(obj uintptr, value bool) {
   treeView_SetMultiSelect.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetMultiSelectStyle(obj uintptr) TMultiSelectStyle {
    ret, _, _ := treeView_GetMultiSelectStyle.Call(obj)
    return TMultiSelectStyle(ret)
}

func TreeView_SetMultiSelectStyle(obj uintptr, value TMultiSelectStyle) {
   treeView_SetMultiSelectStyle.Call(obj, uintptr(value))
}

func TreeView_GetParentColor(obj uintptr) bool {
    ret, _, _ := treeView_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetParentColor(obj uintptr, value bool) {
   treeView_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := treeView_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetParentDoubleBuffered(obj uintptr, value bool) {
   treeView_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentFont(obj uintptr) bool {
    ret, _, _ := treeView_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetParentFont(obj uintptr, value bool) {
   treeView_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := treeView_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetParentShowHint(obj uintptr, value bool) {
   treeView_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := treeView_GetPopupMenu.Call(obj)
    return ret
}

func TreeView_SetPopupMenu(obj uintptr, value uintptr) {
   treeView_SetPopupMenu.Call(obj, value)
}

func TreeView_GetReadOnly(obj uintptr) bool {
    ret, _, _ := treeView_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetReadOnly(obj uintptr, value bool) {
   treeView_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetRightClickSelect(obj uintptr) bool {
    ret, _, _ := treeView_GetRightClickSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetRightClickSelect(obj uintptr, value bool) {
   treeView_SetRightClickSelect.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetRowSelect(obj uintptr) bool {
    ret, _, _ := treeView_GetRowSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetRowSelect(obj uintptr, value bool) {
   treeView_SetRowSelect.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowButtons(obj uintptr) bool {
    ret, _, _ := treeView_GetShowButtons.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetShowButtons(obj uintptr, value bool) {
   treeView_SetShowButtons.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowHint(obj uintptr) bool {
    ret, _, _ := treeView_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetShowHint(obj uintptr, value bool) {
   treeView_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowLines(obj uintptr) bool {
    ret, _, _ := treeView_GetShowLines.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetShowLines(obj uintptr, value bool) {
   treeView_SetShowLines.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetShowRoot(obj uintptr) bool {
    ret, _, _ := treeView_GetShowRoot.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetShowRoot(obj uintptr, value bool) {
   treeView_SetShowRoot.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetSortType(obj uintptr) TSortType {
    ret, _, _ := treeView_GetSortType.Call(obj)
    return TSortType(ret)
}

func TreeView_SetSortType(obj uintptr, value TSortType) {
   treeView_SetSortType.Call(obj, uintptr(value))
}

func TreeView_GetStateImages(obj uintptr) uintptr {
    ret, _, _ := treeView_GetStateImages.Call(obj)
    return ret
}

func TreeView_SetStateImages(obj uintptr, value uintptr) {
   treeView_SetStateImages.Call(obj, value)
}

func TreeView_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := treeView_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func TreeView_SetTabOrder(obj uintptr, value TTabOrder) {
   treeView_SetTabOrder.Call(obj, uintptr(value))
}

func TreeView_GetTabStop(obj uintptr) bool {
    ret, _, _ := treeView_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetTabStop(obj uintptr, value bool) {
   treeView_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetVisible(obj uintptr) bool {
    ret, _, _ := treeView_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetVisible(obj uintptr, value bool) {
   treeView_SetVisible.Call(obj, GoBoolToDBool(value))
}

func TreeView_SetOnAddition(obj uintptr, fn interface{}) {
    treeView_SetOnAddition.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnAdvancedCustomDraw(obj uintptr, fn interface{}) {
    treeView_SetOnAdvancedCustomDraw.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnAdvancedCustomDrawItem(obj uintptr, fn interface{}) {
    treeView_SetOnAdvancedCustomDrawItem.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnChange(obj uintptr, fn interface{}) {
    treeView_SetOnChange.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnChanging(obj uintptr, fn interface{}) {
    treeView_SetOnChanging.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnClick(obj uintptr, fn interface{}) {
    treeView_SetOnClick.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnCollapsed(obj uintptr, fn interface{}) {
    treeView_SetOnCollapsed.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnCollapsing(obj uintptr, fn interface{}) {
    treeView_SetOnCollapsing.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnCompare(obj uintptr, fn interface{}) {
    treeView_SetOnCompare.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnContextPopup(obj uintptr, fn interface{}) {
    treeView_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnCustomDraw(obj uintptr, fn interface{}) {
    treeView_SetOnCustomDraw.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnCustomDrawItem(obj uintptr, fn interface{}) {
    treeView_SetOnCustomDrawItem.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnDblClick(obj uintptr, fn interface{}) {
    treeView_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnDeletion(obj uintptr, fn interface{}) {
    treeView_SetOnDeletion.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnDragDrop(obj uintptr, fn interface{}) {
    treeView_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnDragOver(obj uintptr, fn interface{}) {
    treeView_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnEdited(obj uintptr, fn interface{}) {
    treeView_SetOnEdited.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnEditing(obj uintptr, fn interface{}) {
    treeView_SetOnEditing.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnEndDrag(obj uintptr, fn interface{}) {
    treeView_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnEnter(obj uintptr, fn interface{}) {
    treeView_SetOnEnter.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnExit(obj uintptr, fn interface{}) {
    treeView_SetOnExit.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnExpanding(obj uintptr, fn interface{}) {
    treeView_SetOnExpanding.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnExpanded(obj uintptr, fn interface{}) {
    treeView_SetOnExpanded.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnGetSelectedIndex(obj uintptr, fn interface{}) {
    treeView_SetOnGetSelectedIndex.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnKeyDown(obj uintptr, fn interface{}) {
    treeView_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnKeyPress(obj uintptr, fn interface{}) {
    treeView_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnKeyUp(obj uintptr, fn interface{}) {
    treeView_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnMouseDown(obj uintptr, fn interface{}) {
    treeView_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnMouseEnter(obj uintptr, fn interface{}) {
    treeView_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnMouseLeave(obj uintptr, fn interface{}) {
    treeView_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnMouseMove(obj uintptr, fn interface{}) {
    treeView_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func TreeView_SetOnMouseUp(obj uintptr, fn interface{}) {
    treeView_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func TreeView_GetItems(obj uintptr) uintptr {
    ret, _, _ := treeView_GetItems.Call(obj)
    return ret
}

func TreeView_SetItems(obj uintptr, value uintptr) {
   treeView_SetItems.Call(obj, value)
}

func TreeView_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := treeView_GetCanvas.Call(obj)
    return ret
}

func TreeView_GetSelected(obj uintptr) uintptr {
    ret, _, _ := treeView_GetSelected.Call(obj)
    return ret
}

func TreeView_SetSelected(obj uintptr, value uintptr) {
   treeView_SetSelected.Call(obj, value)
}

func TreeView_GetTopItem(obj uintptr) uintptr {
    ret, _, _ := treeView_GetTopItem.Call(obj)
    return ret
}

func TreeView_SetTopItem(obj uintptr, value uintptr) {
   treeView_SetTopItem.Call(obj, value)
}

func TreeView_GetSelectionCount(obj uintptr) uint32 {
    ret, _, _ := treeView_GetSelectionCount.Call(obj)
    return uint32(ret)
}

func TreeView_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := treeView_GetDockClientCount.Call(obj)
    return int32(ret)
}

func TreeView_GetDockSite(obj uintptr) bool {
    ret, _, _ := treeView_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetDockSite(obj uintptr, value bool) {
   treeView_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := treeView_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := treeView_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func TreeView_GetBrush(obj uintptr) uintptr {
    ret, _, _ := treeView_GetBrush.Call(obj)
    return ret
}

func TreeView_GetControlCount(obj uintptr) int32 {
    ret, _, _ := treeView_GetControlCount.Call(obj)
    return int32(ret)
}

func TreeView_GetHandle(obj uintptr) HWND {
    ret, _, _ := treeView_GetHandle.Call(obj)
    return HWND(ret)
}

func TreeView_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := treeView_GetParentWindow.Call(obj)
    return HWND(ret)
}

func TreeView_SetParentWindow(obj uintptr, value HWND) {
   treeView_SetParentWindow.Call(obj, uintptr(value))
}

func TreeView_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := treeView_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_SetUseDockManager(obj uintptr, value bool) {
   treeView_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func TreeView_GetAction(obj uintptr) uintptr {
    ret, _, _ := treeView_GetAction.Call(obj)
    return ret
}

func TreeView_SetAction(obj uintptr, value uintptr) {
   treeView_SetAction.Call(obj, value)
}

func TreeView_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    treeView_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_SetBoundsRect(obj uintptr, value TRect) {
   treeView_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TreeView_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := treeView_GetClientHeight.Call(obj)
    return int32(ret)
}

func TreeView_SetClientHeight(obj uintptr, value int32) {
   treeView_SetClientHeight.Call(obj, uintptr(value))
}

func TreeView_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    treeView_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_GetClientRect(obj uintptr) TRect {
    var ret TRect
    treeView_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeView_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := treeView_GetClientWidth.Call(obj)
    return int32(ret)
}

func TreeView_SetClientWidth(obj uintptr, value int32) {
   treeView_SetClientWidth.Call(obj, uintptr(value))
}

func TreeView_GetControlState(obj uintptr) TControlState {
    ret, _, _ := treeView_GetControlState.Call(obj)
    return TControlState(ret)
}

func TreeView_SetControlState(obj uintptr, value TControlState) {
   treeView_SetControlState.Call(obj, uintptr(value))
}

func TreeView_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := treeView_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func TreeView_SetControlStyle(obj uintptr, value TControlStyle) {
   treeView_SetControlStyle.Call(obj, uintptr(value))
}

func TreeView_GetFloating(obj uintptr) bool {
    ret, _, _ := treeView_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeView_GetParent(obj uintptr) uintptr {
    ret, _, _ := treeView_GetParent.Call(obj)
    return ret
}

func TreeView_SetParent(obj uintptr, value uintptr) {
   treeView_SetParent.Call(obj, value)
}

func TreeView_GetLeft(obj uintptr) int32 {
    ret, _, _ := treeView_GetLeft.Call(obj)
    return int32(ret)
}

func TreeView_SetLeft(obj uintptr, value int32) {
   treeView_SetLeft.Call(obj, uintptr(value))
}

func TreeView_GetTop(obj uintptr) int32 {
    ret, _, _ := treeView_GetTop.Call(obj)
    return int32(ret)
}

func TreeView_SetTop(obj uintptr, value int32) {
   treeView_SetTop.Call(obj, uintptr(value))
}

func TreeView_GetWidth(obj uintptr) int32 {
    ret, _, _ := treeView_GetWidth.Call(obj)
    return int32(ret)
}

func TreeView_SetWidth(obj uintptr, value int32) {
   treeView_SetWidth.Call(obj, uintptr(value))
}

func TreeView_GetHeight(obj uintptr) int32 {
    ret, _, _ := treeView_GetHeight.Call(obj)
    return int32(ret)
}

func TreeView_SetHeight(obj uintptr, value int32) {
   treeView_SetHeight.Call(obj, uintptr(value))
}

func TreeView_GetCursor(obj uintptr) TCursor {
    ret, _, _ := treeView_GetCursor.Call(obj)
    return TCursor(ret)
}

func TreeView_SetCursor(obj uintptr, value TCursor) {
   treeView_SetCursor.Call(obj, uintptr(value))
}

func TreeView_GetHint(obj uintptr) string {
    ret, _, _ := treeView_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func TreeView_SetHint(obj uintptr, value string) {
   treeView_SetHint.Call(obj, GoStrToDStr(value))
}

func TreeView_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := treeView_GetComponentCount.Call(obj)
    return int32(ret)
}

func TreeView_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := treeView_GetComponentIndex.Call(obj)
    return int32(ret)
}

func TreeView_SetComponentIndex(obj uintptr, value int32) {
   treeView_SetComponentIndex.Call(obj, uintptr(value))
}

func TreeView_GetOwner(obj uintptr) uintptr {
    ret, _, _ := treeView_GetOwner.Call(obj)
    return ret
}

func TreeView_GetName(obj uintptr) string {
    ret, _, _ := treeView_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TreeView_SetName(obj uintptr, value string) {
   treeView_SetName.Call(obj, GoStrToDStr(value))
}

func TreeView_GetTag(obj uintptr) int {
    ret, _, _ := treeView_GetTag.Call(obj)
    return int(ret)
}

func TreeView_SetTag(obj uintptr, value int) {
   treeView_SetTag.Call(obj, uintptr(value))
}

func TreeView_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := treeView_GetAnchorSideLeft.Call(obj)
    return ret
}

func TreeView_SetAnchorSideLeft(obj uintptr, value uintptr) {
   treeView_SetAnchorSideLeft.Call(obj, value)
}

func TreeView_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := treeView_GetAnchorSideTop.Call(obj)
    return ret
}

func TreeView_SetAnchorSideTop(obj uintptr, value uintptr) {
   treeView_SetAnchorSideTop.Call(obj, value)
}

func TreeView_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := treeView_GetAnchorSideRight.Call(obj)
    return ret
}

func TreeView_SetAnchorSideRight(obj uintptr, value uintptr) {
   treeView_SetAnchorSideRight.Call(obj, value)
}

func TreeView_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := treeView_GetAnchorSideBottom.Call(obj)
    return ret
}

func TreeView_SetAnchorSideBottom(obj uintptr, value uintptr) {
   treeView_SetAnchorSideBottom.Call(obj, value)
}

func TreeView_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := treeView_GetChildSizing.Call(obj)
    return ret
}

func TreeView_SetChildSizing(obj uintptr, value uintptr) {
   treeView_SetChildSizing.Call(obj, value)
}

func TreeView_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := treeView_GetBorderSpacing.Call(obj)
    return ret
}

func TreeView_SetBorderSpacing(obj uintptr, value uintptr) {
   treeView_SetBorderSpacing.Call(obj, value)
}

func TreeView_GetSelections(obj uintptr, Index int32) uintptr {
    ret, _, _ := treeView_GetSelections.Call(obj, uintptr(Index))
    return ret
}

func TreeView_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := treeView_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func TreeView_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := treeView_GetControls.Call(obj, uintptr(Index))
    return ret
}

func TreeView_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := treeView_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func TreeView_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := treeView_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func TreeView_StaticClassType() TClass {
    r, _, _:= treeView_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStatusBar ---------------------------

func StatusBar_Create(obj uintptr) uintptr {
    ret, _, _ := statusBar_Create.Call(obj)
    return ret
}

func StatusBar_Free(obj uintptr) {
    statusBar_Free.Call(obj)
}

func StatusBar_FlipChildren(obj uintptr, AllLevels bool)  {
    statusBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func StatusBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    statusBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func StatusBar_CanFocus(obj uintptr) bool {
    ret, _, _ := statusBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := statusBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func StatusBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := statusBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func StatusBar_DisableAlign(obj uintptr)  {
    statusBar_DisableAlign.Call(obj)
}

func StatusBar_EnableAlign(obj uintptr)  {
    statusBar_EnableAlign.Call(obj)
}

func StatusBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := statusBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func StatusBar_Focused(obj uintptr) bool {
    ret, _, _ := statusBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := statusBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_InsertControl(obj uintptr, AControl uintptr)  {
    statusBar_InsertControl.Call(obj, AControl )
}

func StatusBar_Invalidate(obj uintptr)  {
    statusBar_Invalidate.Call(obj)
}

func StatusBar_RemoveControl(obj uintptr, AControl uintptr)  {
    statusBar_RemoveControl.Call(obj, AControl )
}

func StatusBar_Realign(obj uintptr)  {
    statusBar_Realign.Call(obj)
}

func StatusBar_Repaint(obj uintptr)  {
    statusBar_Repaint.Call(obj)
}

func StatusBar_ScaleBy(obj uintptr, M int32, D int32)  {
    statusBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func StatusBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    statusBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func StatusBar_SetFocus(obj uintptr)  {
    statusBar_SetFocus.Call(obj)
}

func StatusBar_Update(obj uintptr)  {
    statusBar_Update.Call(obj)
}

func StatusBar_BringToFront(obj uintptr)  {
    statusBar_BringToFront.Call(obj)
}

func StatusBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    statusBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    statusBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_Dragging(obj uintptr) bool {
    ret, _, _ := statusBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_HasParent(obj uintptr) bool {
    ret, _, _ := statusBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_Hide(obj uintptr)  {
    statusBar_Hide.Call(obj)
}

func StatusBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := statusBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func StatusBar_Refresh(obj uintptr)  {
    statusBar_Refresh.Call(obj)
}

func StatusBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    statusBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    statusBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_SendToBack(obj uintptr)  {
    statusBar_SendToBack.Call(obj)
}

func StatusBar_Show(obj uintptr)  {
    statusBar_Show.Call(obj)
}

func StatusBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := statusBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func StatusBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := statusBar_GetTextLen.Call(obj)
    return int32(ret)
}

func StatusBar_SetTextBuf(obj uintptr, Buffer string)  {
    statusBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func StatusBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := statusBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func StatusBar_GetNamePath(obj uintptr) string {
    ret, _, _ := statusBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_Assign(obj uintptr, Source uintptr)  {
    statusBar_Assign.Call(obj, Source )
}

func StatusBar_ClassType(obj uintptr) TClass {
    ret, _, _ := statusBar_ClassType.Call(obj)
    return TClass(ret)
}

func StatusBar_ClassName(obj uintptr) string {
    ret, _, _ := statusBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := statusBar_InstanceSize.Call(obj)
    return int32(ret)
}

func StatusBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := statusBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StatusBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := statusBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func StatusBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := statusBar_GetHashCode.Call(obj)
    return int32(ret)
}

func StatusBar_ToString(obj uintptr) string {
    ret, _, _ := statusBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    statusBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StatusBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    statusBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StatusBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    statusBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func StatusBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    statusBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func StatusBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    statusBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func StatusBar_AnchorClient(obj uintptr, ASpace int32)  {
    statusBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func StatusBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetAction.Call(obj)
    return ret
}

func StatusBar_SetAction(obj uintptr, value uintptr) {
   statusBar_SetAction.Call(obj, value)
}

func StatusBar_GetAutoHint(obj uintptr) bool {
    ret, _, _ := statusBar_GetAutoHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetAutoHint(obj uintptr, value bool) {
   statusBar_SetAutoHint.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := statusBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func StatusBar_SetAlign(obj uintptr, value TAlign) {
   statusBar_SetAlign.Call(obj, uintptr(value))
}

func StatusBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := statusBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func StatusBar_SetAnchors(obj uintptr, value TAnchors) {
   statusBar_SetAnchors.Call(obj, uintptr(value))
}

func StatusBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := statusBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func StatusBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   statusBar_SetBiDiMode.Call(obj, uintptr(value))
}

func StatusBar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := statusBar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func StatusBar_SetBorderWidth(obj uintptr, value int32) {
   statusBar_SetBorderWidth.Call(obj, uintptr(value))
}

func StatusBar_GetColor(obj uintptr) TColor {
    ret, _, _ := statusBar_GetColor.Call(obj)
    return TColor(ret)
}

func StatusBar_SetColor(obj uintptr, value TColor) {
   statusBar_SetColor.Call(obj, uintptr(value))
}

func StatusBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := statusBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetDoubleBuffered(obj uintptr, value bool) {
   statusBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := statusBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func StatusBar_SetDragCursor(obj uintptr, value TCursor) {
   statusBar_SetDragCursor.Call(obj, uintptr(value))
}

func StatusBar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := statusBar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func StatusBar_SetDragKind(obj uintptr, value TDragKind) {
   statusBar_SetDragKind.Call(obj, uintptr(value))
}

func StatusBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := statusBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func StatusBar_SetDragMode(obj uintptr, value TDragMode) {
   statusBar_SetDragMode.Call(obj, uintptr(value))
}

func StatusBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := statusBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetEnabled(obj uintptr, value bool) {
   statusBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetFont(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetFont.Call(obj)
    return ret
}

func StatusBar_SetFont(obj uintptr, value uintptr) {
   statusBar_SetFont.Call(obj, value)
}

func StatusBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetConstraints.Call(obj)
    return ret
}

func StatusBar_SetConstraints(obj uintptr, value uintptr) {
   statusBar_SetConstraints.Call(obj, value)
}

func StatusBar_GetPanels(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetPanels.Call(obj)
    return ret
}

func StatusBar_SetPanels(obj uintptr, value uintptr) {
   statusBar_SetPanels.Call(obj, value)
}

func StatusBar_GetParentColor(obj uintptr) bool {
    ret, _, _ := statusBar_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetParentColor(obj uintptr, value bool) {
   statusBar_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := statusBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   statusBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentFont(obj uintptr) bool {
    ret, _, _ := statusBar_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetParentFont(obj uintptr, value bool) {
   statusBar_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := statusBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetParentShowHint(obj uintptr, value bool) {
   statusBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetPopupMenu.Call(obj)
    return ret
}

func StatusBar_SetPopupMenu(obj uintptr, value uintptr) {
   statusBar_SetPopupMenu.Call(obj, value)
}

func StatusBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := statusBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetShowHint(obj uintptr, value bool) {
   statusBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetSimplePanel(obj uintptr) bool {
    ret, _, _ := statusBar_GetSimplePanel.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetSimplePanel(obj uintptr, value bool) {
   statusBar_SetSimplePanel.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetSimpleText(obj uintptr) string {
    ret, _, _ := statusBar_GetSimpleText.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_SetSimpleText(obj uintptr, value string) {
   statusBar_SetSimpleText.Call(obj, GoStrToDStr(value))
}

func StatusBar_GetSizeGrip(obj uintptr) bool {
    ret, _, _ := statusBar_GetSizeGrip.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetSizeGrip(obj uintptr, value bool) {
   statusBar_SetSizeGrip.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetUseSystemFont(obj uintptr) bool {
    ret, _, _ := statusBar_GetUseSystemFont.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetUseSystemFont(obj uintptr, value bool) {
   statusBar_SetUseSystemFont.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetVisible(obj uintptr) bool {
    ret, _, _ := statusBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetVisible(obj uintptr, value bool) {
   statusBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func StatusBar_SetOnClick(obj uintptr, fn interface{}) {
    statusBar_SetOnClick.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    statusBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnDblClick(obj uintptr, fn interface{}) {
    statusBar_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    statusBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnDragOver(obj uintptr, fn interface{}) {
    statusBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnEndDock(obj uintptr, fn interface{}) {
    statusBar_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    statusBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnHint(obj uintptr, fn interface{}) {
    statusBar_SetOnHint.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnMouseDown(obj uintptr, fn interface{}) {
    statusBar_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
    statusBar_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
    statusBar_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnMouseMove(obj uintptr, fn interface{}) {
    statusBar_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnMouseUp(obj uintptr, fn interface{}) {
    statusBar_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnResize(obj uintptr, fn interface{}) {
    statusBar_SetOnResize.Call(obj, addEventToMap(fn))
}

func StatusBar_SetOnStartDock(obj uintptr, fn interface{}) {
    statusBar_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func StatusBar_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetCanvas.Call(obj)
    return ret
}

func StatusBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := statusBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func StatusBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := statusBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetDockSite(obj uintptr, value bool) {
   statusBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := statusBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := statusBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func StatusBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetBrush.Call(obj)
    return ret
}

func StatusBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := statusBar_GetControlCount.Call(obj)
    return int32(ret)
}

func StatusBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := statusBar_GetHandle.Call(obj)
    return HWND(ret)
}

func StatusBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := statusBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func StatusBar_SetParentWindow(obj uintptr, value HWND) {
   statusBar_SetParentWindow.Call(obj, uintptr(value))
}

func StatusBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := statusBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func StatusBar_SetTabOrder(obj uintptr, value TTabOrder) {
   statusBar_SetTabOrder.Call(obj, uintptr(value))
}

func StatusBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := statusBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetTabStop(obj uintptr, value bool) {
   statusBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := statusBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_SetUseDockManager(obj uintptr, value bool) {
   statusBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func StatusBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    statusBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_SetBoundsRect(obj uintptr, value TRect) {
   statusBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StatusBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := statusBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func StatusBar_SetClientHeight(obj uintptr, value int32) {
   statusBar_SetClientHeight.Call(obj, uintptr(value))
}

func StatusBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    statusBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    statusBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StatusBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := statusBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func StatusBar_SetClientWidth(obj uintptr, value int32) {
   statusBar_SetClientWidth.Call(obj, uintptr(value))
}

func StatusBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := statusBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func StatusBar_SetControlState(obj uintptr, value TControlState) {
   statusBar_SetControlState.Call(obj, uintptr(value))
}

func StatusBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := statusBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func StatusBar_SetControlStyle(obj uintptr, value TControlStyle) {
   statusBar_SetControlStyle.Call(obj, uintptr(value))
}

func StatusBar_GetFloating(obj uintptr) bool {
    ret, _, _ := statusBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func StatusBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetParent.Call(obj)
    return ret
}

func StatusBar_SetParent(obj uintptr, value uintptr) {
   statusBar_SetParent.Call(obj, value)
}

func StatusBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := statusBar_GetLeft.Call(obj)
    return int32(ret)
}

func StatusBar_SetLeft(obj uintptr, value int32) {
   statusBar_SetLeft.Call(obj, uintptr(value))
}

func StatusBar_GetTop(obj uintptr) int32 {
    ret, _, _ := statusBar_GetTop.Call(obj)
    return int32(ret)
}

func StatusBar_SetTop(obj uintptr, value int32) {
   statusBar_SetTop.Call(obj, uintptr(value))
}

func StatusBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := statusBar_GetWidth.Call(obj)
    return int32(ret)
}

func StatusBar_SetWidth(obj uintptr, value int32) {
   statusBar_SetWidth.Call(obj, uintptr(value))
}

func StatusBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := statusBar_GetHeight.Call(obj)
    return int32(ret)
}

func StatusBar_SetHeight(obj uintptr, value int32) {
   statusBar_SetHeight.Call(obj, uintptr(value))
}

func StatusBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := statusBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func StatusBar_SetCursor(obj uintptr, value TCursor) {
   statusBar_SetCursor.Call(obj, uintptr(value))
}

func StatusBar_GetHint(obj uintptr) string {
    ret, _, _ := statusBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_SetHint(obj uintptr, value string) {
   statusBar_SetHint.Call(obj, GoStrToDStr(value))
}

func StatusBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := statusBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func StatusBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := statusBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func StatusBar_SetComponentIndex(obj uintptr, value int32) {
   statusBar_SetComponentIndex.Call(obj, uintptr(value))
}

func StatusBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetOwner.Call(obj)
    return ret
}

func StatusBar_GetName(obj uintptr) string {
    ret, _, _ := statusBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func StatusBar_SetName(obj uintptr, value string) {
   statusBar_SetName.Call(obj, GoStrToDStr(value))
}

func StatusBar_GetTag(obj uintptr) int {
    ret, _, _ := statusBar_GetTag.Call(obj)
    return int(ret)
}

func StatusBar_SetTag(obj uintptr, value int) {
   statusBar_SetTag.Call(obj, uintptr(value))
}

func StatusBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func StatusBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   statusBar_SetAnchorSideLeft.Call(obj, value)
}

func StatusBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetAnchorSideTop.Call(obj)
    return ret
}

func StatusBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   statusBar_SetAnchorSideTop.Call(obj, value)
}

func StatusBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetAnchorSideRight.Call(obj)
    return ret
}

func StatusBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   statusBar_SetAnchorSideRight.Call(obj, value)
}

func StatusBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func StatusBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   statusBar_SetAnchorSideBottom.Call(obj, value)
}

func StatusBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetChildSizing.Call(obj)
    return ret
}

func StatusBar_SetChildSizing(obj uintptr, value uintptr) {
   statusBar_SetChildSizing.Call(obj, value)
}

func StatusBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := statusBar_GetBorderSpacing.Call(obj)
    return ret
}

func StatusBar_SetBorderSpacing(obj uintptr, value uintptr) {
   statusBar_SetBorderSpacing.Call(obj, value)
}

func StatusBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := statusBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func StatusBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := statusBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func StatusBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := statusBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func StatusBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := statusBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func StatusBar_StaticClassType() TClass {
    r, _, _:= statusBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TToolBar ---------------------------

func ToolBar_Create(obj uintptr) uintptr {
    ret, _, _ := toolBar_Create.Call(obj)
    return ret
}

func ToolBar_Free(obj uintptr) {
    toolBar_Free.Call(obj)
}

func ToolBar_FlipChildren(obj uintptr, AllLevels bool)  {
    toolBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ToolBar_CanFocus(obj uintptr) bool {
    ret, _, _ := toolBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := toolBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ToolBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := toolBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ToolBar_DisableAlign(obj uintptr)  {
    toolBar_DisableAlign.Call(obj)
}

func ToolBar_EnableAlign(obj uintptr)  {
    toolBar_EnableAlign.Call(obj)
}

func ToolBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := toolBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ToolBar_Focused(obj uintptr) bool {
    ret, _, _ := toolBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := toolBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_InsertControl(obj uintptr, AControl uintptr)  {
    toolBar_InsertControl.Call(obj, AControl )
}

func ToolBar_Invalidate(obj uintptr)  {
    toolBar_Invalidate.Call(obj)
}

func ToolBar_RemoveControl(obj uintptr, AControl uintptr)  {
    toolBar_RemoveControl.Call(obj, AControl )
}

func ToolBar_Realign(obj uintptr)  {
    toolBar_Realign.Call(obj)
}

func ToolBar_Repaint(obj uintptr)  {
    toolBar_Repaint.Call(obj)
}

func ToolBar_ScaleBy(obj uintptr, M int32, D int32)  {
    toolBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ToolBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    toolBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ToolBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    toolBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ToolBar_SetFocus(obj uintptr)  {
    toolBar_SetFocus.Call(obj)
}

func ToolBar_Update(obj uintptr)  {
    toolBar_Update.Call(obj)
}

func ToolBar_BringToFront(obj uintptr)  {
    toolBar_BringToFront.Call(obj)
}

func ToolBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    toolBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    toolBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_Dragging(obj uintptr) bool {
    ret, _, _ := toolBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_HasParent(obj uintptr) bool {
    ret, _, _ := toolBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_Hide(obj uintptr)  {
    toolBar_Hide.Call(obj)
}

func ToolBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := toolBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ToolBar_Refresh(obj uintptr)  {
    toolBar_Refresh.Call(obj)
}

func ToolBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    toolBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    toolBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_SendToBack(obj uintptr)  {
    toolBar_SendToBack.Call(obj)
}

func ToolBar_Show(obj uintptr)  {
    toolBar_Show.Call(obj)
}

func ToolBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := toolBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ToolBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := toolBar_GetTextLen.Call(obj)
    return int32(ret)
}

func ToolBar_SetTextBuf(obj uintptr, Buffer string)  {
    toolBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ToolBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := toolBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ToolBar_GetNamePath(obj uintptr) string {
    ret, _, _ := toolBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_Assign(obj uintptr, Source uintptr)  {
    toolBar_Assign.Call(obj, Source )
}

func ToolBar_ClassType(obj uintptr) TClass {
    ret, _, _ := toolBar_ClassType.Call(obj)
    return TClass(ret)
}

func ToolBar_ClassName(obj uintptr) string {
    ret, _, _ := toolBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := toolBar_InstanceSize.Call(obj)
    return int32(ret)
}

func ToolBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := toolBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ToolBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := toolBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ToolBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := toolBar_GetHashCode.Call(obj)
    return int32(ret)
}

func ToolBar_ToString(obj uintptr) string {
    ret, _, _ := toolBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    toolBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ToolBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    toolBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ToolBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    toolBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ToolBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    toolBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ToolBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    toolBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ToolBar_AnchorClient(obj uintptr, ASpace int32)  {
    toolBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ToolBar_GetButtonCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetButtonCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetCanvas.Call(obj)
    return ret
}

func ToolBar_GetRowCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetRowCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := toolBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func ToolBar_SetAlign(obj uintptr, value TAlign) {
   toolBar_SetAlign.Call(obj, uintptr(value))
}

func ToolBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := toolBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ToolBar_SetAnchors(obj uintptr, value TAnchors) {
   toolBar_SetAnchors.Call(obj, uintptr(value))
}

func ToolBar_GetAutoSize(obj uintptr) bool {
    ret, _, _ := toolBar_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetAutoSize(obj uintptr, value bool) {
   toolBar_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := toolBar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func ToolBar_SetBorderWidth(obj uintptr, value int32) {
   toolBar_SetBorderWidth.Call(obj, uintptr(value))
}

func ToolBar_GetButtonHeight(obj uintptr) int32 {
    ret, _, _ := toolBar_GetButtonHeight.Call(obj)
    return int32(ret)
}

func ToolBar_SetButtonHeight(obj uintptr, value int32) {
   toolBar_SetButtonHeight.Call(obj, uintptr(value))
}

func ToolBar_GetButtonWidth(obj uintptr) int32 {
    ret, _, _ := toolBar_GetButtonWidth.Call(obj)
    return int32(ret)
}

func ToolBar_SetButtonWidth(obj uintptr, value int32) {
   toolBar_SetButtonWidth.Call(obj, uintptr(value))
}

func ToolBar_GetCaption(obj uintptr) string {
    ret, _, _ := toolBar_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_SetCaption(obj uintptr, value string) {
   toolBar_SetCaption.Call(obj, GoStrToDStr(value))
}

func ToolBar_GetColor(obj uintptr) TColor {
    ret, _, _ := toolBar_GetColor.Call(obj)
    return TColor(ret)
}

func ToolBar_SetColor(obj uintptr, value TColor) {
   toolBar_SetColor.Call(obj, uintptr(value))
}

func ToolBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetConstraints.Call(obj)
    return ret
}

func ToolBar_SetConstraints(obj uintptr, value uintptr) {
   toolBar_SetConstraints.Call(obj, value)
}

func ToolBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := toolBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetDoubleBuffered(obj uintptr, value bool) {
   toolBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := toolBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetDockSite(obj uintptr, value bool) {
   toolBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := toolBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ToolBar_SetDragCursor(obj uintptr, value TCursor) {
   toolBar_SetDragCursor.Call(obj, uintptr(value))
}

func ToolBar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := toolBar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ToolBar_SetDragKind(obj uintptr, value TDragKind) {
   toolBar_SetDragKind.Call(obj, uintptr(value))
}

func ToolBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := toolBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ToolBar_SetDragMode(obj uintptr, value TDragMode) {
   toolBar_SetDragMode.Call(obj, uintptr(value))
}

func ToolBar_GetEdgeBorders(obj uintptr) TEdgeBorders {
    ret, _, _ := toolBar_GetEdgeBorders.Call(obj)
    return TEdgeBorders(ret)
}

func ToolBar_SetEdgeBorders(obj uintptr, value TEdgeBorders) {
   toolBar_SetEdgeBorders.Call(obj, uintptr(value))
}

func ToolBar_GetEdgeInner(obj uintptr) TEdgeStyle {
    ret, _, _ := toolBar_GetEdgeInner.Call(obj)
    return TEdgeStyle(ret)
}

func ToolBar_SetEdgeInner(obj uintptr, value TEdgeStyle) {
   toolBar_SetEdgeInner.Call(obj, uintptr(value))
}

func ToolBar_GetEdgeOuter(obj uintptr) TEdgeStyle {
    ret, _, _ := toolBar_GetEdgeOuter.Call(obj)
    return TEdgeStyle(ret)
}

func ToolBar_SetEdgeOuter(obj uintptr, value TEdgeStyle) {
   toolBar_SetEdgeOuter.Call(obj, uintptr(value))
}

func ToolBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := toolBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetEnabled(obj uintptr, value bool) {
   toolBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetFlat(obj uintptr) bool {
    ret, _, _ := toolBar_GetFlat.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetFlat(obj uintptr, value bool) {
   toolBar_SetFlat.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetFont(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetFont.Call(obj)
    return ret
}

func ToolBar_SetFont(obj uintptr, value uintptr) {
   toolBar_SetFont.Call(obj, value)
}

func ToolBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := toolBar_GetHeight.Call(obj)
    return int32(ret)
}

func ToolBar_SetHeight(obj uintptr, value int32) {
   toolBar_SetHeight.Call(obj, uintptr(value))
}

func ToolBar_GetHotImages(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetHotImages.Call(obj)
    return ret
}

func ToolBar_SetHotImages(obj uintptr, value uintptr) {
   toolBar_SetHotImages.Call(obj, value)
}

func ToolBar_GetImages(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetImages.Call(obj)
    return ret
}

func ToolBar_SetImages(obj uintptr, value uintptr) {
   toolBar_SetImages.Call(obj, value)
}

func ToolBar_GetIndent(obj uintptr) int32 {
    ret, _, _ := toolBar_GetIndent.Call(obj)
    return int32(ret)
}

func ToolBar_SetIndent(obj uintptr, value int32) {
   toolBar_SetIndent.Call(obj, uintptr(value))
}

func ToolBar_GetList(obj uintptr) bool {
    ret, _, _ := toolBar_GetList.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetList(obj uintptr, value bool) {
   toolBar_SetList.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentColor(obj uintptr) bool {
    ret, _, _ := toolBar_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetParentColor(obj uintptr, value bool) {
   toolBar_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := toolBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   toolBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentFont(obj uintptr) bool {
    ret, _, _ := toolBar_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetParentFont(obj uintptr, value bool) {
   toolBar_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := toolBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetParentShowHint(obj uintptr, value bool) {
   toolBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetPopupMenu.Call(obj)
    return ret
}

func ToolBar_SetPopupMenu(obj uintptr, value uintptr) {
   toolBar_SetPopupMenu.Call(obj, value)
}

func ToolBar_GetShowCaptions(obj uintptr) bool {
    ret, _, _ := toolBar_GetShowCaptions.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetShowCaptions(obj uintptr, value bool) {
   toolBar_SetShowCaptions.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := toolBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetShowHint(obj uintptr, value bool) {
   toolBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := toolBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ToolBar_SetTabOrder(obj uintptr, value TTabOrder) {
   toolBar_SetTabOrder.Call(obj, uintptr(value))
}

func ToolBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := toolBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetTabStop(obj uintptr, value bool) {
   toolBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetTransparent(obj uintptr) bool {
    ret, _, _ := toolBar_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetTransparent(obj uintptr, value bool) {
   toolBar_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetVisible(obj uintptr) bool {
    ret, _, _ := toolBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetVisible(obj uintptr, value bool) {
   toolBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetWrapable(obj uintptr) bool {
    ret, _, _ := toolBar_GetWrapable.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetWrapable(obj uintptr, value bool) {
   toolBar_SetWrapable.Call(obj, GoBoolToDBool(value))
}

func ToolBar_SetOnClick(obj uintptr, fn interface{}) {
    toolBar_SetOnClick.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    toolBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnDblClick(obj uintptr, fn interface{}) {
    toolBar_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnDockDrop(obj uintptr, fn interface{}) {
    toolBar_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    toolBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnDragOver(obj uintptr, fn interface{}) {
    toolBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    toolBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnEnter(obj uintptr, fn interface{}) {
    toolBar_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnExit(obj uintptr, fn interface{}) {
    toolBar_SetOnExit.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnMouseDown(obj uintptr, fn interface{}) {
    toolBar_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
    toolBar_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
    toolBar_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnMouseMove(obj uintptr, fn interface{}) {
    toolBar_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnMouseUp(obj uintptr, fn interface{}) {
    toolBar_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnResize(obj uintptr, fn interface{}) {
    toolBar_SetOnResize.Call(obj, addEventToMap(fn))
}

func ToolBar_SetOnUnDock(obj uintptr, fn interface{}) {
    toolBar_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func ToolBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := toolBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetBrush.Call(obj)
    return ret
}

func ToolBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetControlCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := toolBar_GetHandle.Call(obj)
    return HWND(ret)
}

func ToolBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := toolBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ToolBar_SetParentWindow(obj uintptr, value HWND) {
   toolBar_SetParentWindow.Call(obj, uintptr(value))
}

func ToolBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := toolBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_SetUseDockManager(obj uintptr, value bool) {
   toolBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ToolBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetAction.Call(obj)
    return ret
}

func ToolBar_SetAction(obj uintptr, value uintptr) {
   toolBar_SetAction.Call(obj, value)
}

func ToolBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := toolBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ToolBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   toolBar_SetBiDiMode.Call(obj, uintptr(value))
}

func ToolBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    toolBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_SetBoundsRect(obj uintptr, value TRect) {
   toolBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ToolBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := toolBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func ToolBar_SetClientHeight(obj uintptr, value int32) {
   toolBar_SetClientHeight.Call(obj, uintptr(value))
}

func ToolBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    toolBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    toolBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := toolBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func ToolBar_SetClientWidth(obj uintptr, value int32) {
   toolBar_SetClientWidth.Call(obj, uintptr(value))
}

func ToolBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := toolBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func ToolBar_SetControlState(obj uintptr, value TControlState) {
   toolBar_SetControlState.Call(obj, uintptr(value))
}

func ToolBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := toolBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ToolBar_SetControlStyle(obj uintptr, value TControlStyle) {
   toolBar_SetControlStyle.Call(obj, uintptr(value))
}

func ToolBar_GetFloating(obj uintptr) bool {
    ret, _, _ := toolBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetParent.Call(obj)
    return ret
}

func ToolBar_SetParent(obj uintptr, value uintptr) {
   toolBar_SetParent.Call(obj, value)
}

func ToolBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := toolBar_GetLeft.Call(obj)
    return int32(ret)
}

func ToolBar_SetLeft(obj uintptr, value int32) {
   toolBar_SetLeft.Call(obj, uintptr(value))
}

func ToolBar_GetTop(obj uintptr) int32 {
    ret, _, _ := toolBar_GetTop.Call(obj)
    return int32(ret)
}

func ToolBar_SetTop(obj uintptr, value int32) {
   toolBar_SetTop.Call(obj, uintptr(value))
}

func ToolBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := toolBar_GetWidth.Call(obj)
    return int32(ret)
}

func ToolBar_SetWidth(obj uintptr, value int32) {
   toolBar_SetWidth.Call(obj, uintptr(value))
}

func ToolBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := toolBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func ToolBar_SetCursor(obj uintptr, value TCursor) {
   toolBar_SetCursor.Call(obj, uintptr(value))
}

func ToolBar_GetHint(obj uintptr) string {
    ret, _, _ := toolBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_SetHint(obj uintptr, value string) {
   toolBar_SetHint.Call(obj, GoStrToDStr(value))
}

func ToolBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := toolBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func ToolBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := toolBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ToolBar_SetComponentIndex(obj uintptr, value int32) {
   toolBar_SetComponentIndex.Call(obj, uintptr(value))
}

func ToolBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetOwner.Call(obj)
    return ret
}

func ToolBar_GetName(obj uintptr) string {
    ret, _, _ := toolBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ToolBar_SetName(obj uintptr, value string) {
   toolBar_SetName.Call(obj, GoStrToDStr(value))
}

func ToolBar_GetTag(obj uintptr) int {
    ret, _, _ := toolBar_GetTag.Call(obj)
    return int(ret)
}

func ToolBar_SetTag(obj uintptr, value int) {
   toolBar_SetTag.Call(obj, uintptr(value))
}

func ToolBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func ToolBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   toolBar_SetAnchorSideLeft.Call(obj, value)
}

func ToolBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetAnchorSideTop.Call(obj)
    return ret
}

func ToolBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   toolBar_SetAnchorSideTop.Call(obj, value)
}

func ToolBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetAnchorSideRight.Call(obj)
    return ret
}

func ToolBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   toolBar_SetAnchorSideRight.Call(obj, value)
}

func ToolBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func ToolBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   toolBar_SetAnchorSideBottom.Call(obj, value)
}

func ToolBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetChildSizing.Call(obj)
    return ret
}

func ToolBar_SetChildSizing(obj uintptr, value uintptr) {
   toolBar_SetChildSizing.Call(obj, value)
}

func ToolBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := toolBar_GetBorderSpacing.Call(obj)
    return ret
}

func ToolBar_SetBorderSpacing(obj uintptr, value uintptr) {
   toolBar_SetBorderSpacing.Call(obj, value)
}

func ToolBar_GetButtons(obj uintptr, Index int32) uintptr {
    ret, _, _ := toolBar_GetButtons.Call(obj, uintptr(Index))
    return ret
}

func ToolBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := toolBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ToolBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := toolBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ToolBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := toolBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ToolBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := toolBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ToolBar_StaticClassType() TClass {
    r, _, _:= toolBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TBitBtn ---------------------------

func BitBtn_Create(obj uintptr) uintptr {
    ret, _, _ := bitBtn_Create.Call(obj)
    return ret
}

func BitBtn_Free(obj uintptr) {
    bitBtn_Free.Call(obj)
}

func BitBtn_Click(obj uintptr)  {
    bitBtn_Click.Call(obj)
}

func BitBtn_CanFocus(obj uintptr) bool {
    ret, _, _ := bitBtn_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := bitBtn_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func BitBtn_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := bitBtn_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func BitBtn_DisableAlign(obj uintptr)  {
    bitBtn_DisableAlign.Call(obj)
}

func BitBtn_EnableAlign(obj uintptr)  {
    bitBtn_EnableAlign.Call(obj)
}

func BitBtn_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := bitBtn_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func BitBtn_FlipChildren(obj uintptr, AllLevels bool)  {
    bitBtn_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func BitBtn_Focused(obj uintptr) bool {
    ret, _, _ := bitBtn_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_HandleAllocated(obj uintptr) bool {
    ret, _, _ := bitBtn_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_InsertControl(obj uintptr, AControl uintptr)  {
    bitBtn_InsertControl.Call(obj, AControl )
}

func BitBtn_Invalidate(obj uintptr)  {
    bitBtn_Invalidate.Call(obj)
}

func BitBtn_RemoveControl(obj uintptr, AControl uintptr)  {
    bitBtn_RemoveControl.Call(obj, AControl )
}

func BitBtn_Realign(obj uintptr)  {
    bitBtn_Realign.Call(obj)
}

func BitBtn_Repaint(obj uintptr)  {
    bitBtn_Repaint.Call(obj)
}

func BitBtn_ScaleBy(obj uintptr, M int32, D int32)  {
    bitBtn_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func BitBtn_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    bitBtn_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func BitBtn_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    bitBtn_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func BitBtn_SetFocus(obj uintptr)  {
    bitBtn_SetFocus.Call(obj)
}

func BitBtn_Update(obj uintptr)  {
    bitBtn_Update.Call(obj)
}

func BitBtn_BringToFront(obj uintptr)  {
    bitBtn_BringToFront.Call(obj)
}

func BitBtn_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    bitBtn_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    bitBtn_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_Dragging(obj uintptr) bool {
    ret, _, _ := bitBtn_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_HasParent(obj uintptr) bool {
    ret, _, _ := bitBtn_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_Hide(obj uintptr)  {
    bitBtn_Hide.Call(obj)
}

func BitBtn_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := bitBtn_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func BitBtn_Refresh(obj uintptr)  {
    bitBtn_Refresh.Call(obj)
}

func BitBtn_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    bitBtn_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    bitBtn_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_SendToBack(obj uintptr)  {
    bitBtn_SendToBack.Call(obj)
}

func BitBtn_Show(obj uintptr)  {
    bitBtn_Show.Call(obj)
}

func BitBtn_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := bitBtn_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func BitBtn_GetTextLen(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetTextLen.Call(obj)
    return int32(ret)
}

func BitBtn_SetTextBuf(obj uintptr, Buffer string)  {
    bitBtn_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func BitBtn_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := bitBtn_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func BitBtn_GetNamePath(obj uintptr) string {
    ret, _, _ := bitBtn_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_Assign(obj uintptr, Source uintptr)  {
    bitBtn_Assign.Call(obj, Source )
}

func BitBtn_ClassType(obj uintptr) TClass {
    ret, _, _ := bitBtn_ClassType.Call(obj)
    return TClass(ret)
}

func BitBtn_ClassName(obj uintptr) string {
    ret, _, _ := bitBtn_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_InstanceSize(obj uintptr) int32 {
    ret, _, _ := bitBtn_InstanceSize.Call(obj)
    return int32(ret)
}

func BitBtn_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := bitBtn_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func BitBtn_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := bitBtn_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func BitBtn_GetHashCode(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetHashCode.Call(obj)
    return int32(ret)
}

func BitBtn_ToString(obj uintptr) string {
    ret, _, _ := bitBtn_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    bitBtn_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func BitBtn_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    bitBtn_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func BitBtn_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    bitBtn_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func BitBtn_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    bitBtn_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func BitBtn_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    bitBtn_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func BitBtn_AnchorClient(obj uintptr, ASpace int32)  {
    bitBtn_AnchorClient.Call(obj, uintptr(ASpace) )
}

func BitBtn_GetDefaultCaption(obj uintptr) bool {
    ret, _, _ := bitBtn_GetDefaultCaption.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetDefaultCaption(obj uintptr, value bool) {
   bitBtn_SetDefaultCaption.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetGlyphShowMode(obj uintptr) TGlyphShowMode {
    ret, _, _ := bitBtn_GetGlyphShowMode.Call(obj)
    return TGlyphShowMode(ret)
}

func BitBtn_SetGlyphShowMode(obj uintptr, value TGlyphShowMode) {
   bitBtn_SetGlyphShowMode.Call(obj, uintptr(value))
}

func BitBtn_GetImageWidth(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetImageWidth.Call(obj)
    return int32(ret)
}

func BitBtn_SetImageWidth(obj uintptr, value int32) {
   bitBtn_SetImageWidth.Call(obj, uintptr(value))
}

func BitBtn_GetAction(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetAction.Call(obj)
    return ret
}

func BitBtn_SetAction(obj uintptr, value uintptr) {
   bitBtn_SetAction.Call(obj, value)
}

func BitBtn_GetAlign(obj uintptr) TAlign {
    ret, _, _ := bitBtn_GetAlign.Call(obj)
    return TAlign(ret)
}

func BitBtn_SetAlign(obj uintptr, value TAlign) {
   bitBtn_SetAlign.Call(obj, uintptr(value))
}

func BitBtn_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := bitBtn_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func BitBtn_SetAnchors(obj uintptr, value TAnchors) {
   bitBtn_SetAnchors.Call(obj, uintptr(value))
}

func BitBtn_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := bitBtn_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func BitBtn_SetBiDiMode(obj uintptr, value TBiDiMode) {
   bitBtn_SetBiDiMode.Call(obj, uintptr(value))
}

func BitBtn_GetCancel(obj uintptr) bool {
    ret, _, _ := bitBtn_GetCancel.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetCancel(obj uintptr, value bool) {
   bitBtn_SetCancel.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetCaption(obj uintptr) string {
    ret, _, _ := bitBtn_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_SetCaption(obj uintptr, value string) {
   bitBtn_SetCaption.Call(obj, GoStrToDStr(value))
}

func BitBtn_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetConstraints.Call(obj)
    return ret
}

func BitBtn_SetConstraints(obj uintptr, value uintptr) {
   bitBtn_SetConstraints.Call(obj, value)
}

func BitBtn_GetDefault(obj uintptr) bool {
    ret, _, _ := bitBtn_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetDefault(obj uintptr, value bool) {
   bitBtn_SetDefault.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := bitBtn_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetDoubleBuffered(obj uintptr, value bool) {
   bitBtn_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetEnabled(obj uintptr) bool {
    ret, _, _ := bitBtn_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetEnabled(obj uintptr, value bool) {
   bitBtn_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetFont(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetFont.Call(obj)
    return ret
}

func BitBtn_SetFont(obj uintptr, value uintptr) {
   bitBtn_SetFont.Call(obj, value)
}

func BitBtn_GetGlyph(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetGlyph.Call(obj)
    return ret
}

func BitBtn_SetGlyph(obj uintptr, value uintptr) {
   bitBtn_SetGlyph.Call(obj, value)
}

func BitBtn_GetLayout(obj uintptr) TButtonLayout {
    ret, _, _ := bitBtn_GetLayout.Call(obj)
    return TButtonLayout(ret)
}

func BitBtn_SetLayout(obj uintptr, value TButtonLayout) {
   bitBtn_SetLayout.Call(obj, uintptr(value))
}

func BitBtn_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := bitBtn_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func BitBtn_SetModalResult(obj uintptr, value TModalResult) {
   bitBtn_SetModalResult.Call(obj, uintptr(value))
}

func BitBtn_GetNumGlyphs(obj uintptr) TNumGlyphs {
    ret, _, _ := bitBtn_GetNumGlyphs.Call(obj)
    return TNumGlyphs(ret)
}

func BitBtn_SetNumGlyphs(obj uintptr, value TNumGlyphs) {
   bitBtn_SetNumGlyphs.Call(obj, uintptr(value))
}

func BitBtn_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := bitBtn_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetParentDoubleBuffered(obj uintptr, value bool) {
   bitBtn_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetParentFont(obj uintptr) bool {
    ret, _, _ := bitBtn_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetParentFont(obj uintptr, value bool) {
   bitBtn_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := bitBtn_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetParentShowHint(obj uintptr, value bool) {
   bitBtn_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetPopupMenu.Call(obj)
    return ret
}

func BitBtn_SetPopupMenu(obj uintptr, value uintptr) {
   bitBtn_SetPopupMenu.Call(obj, value)
}

func BitBtn_GetShowHint(obj uintptr) bool {
    ret, _, _ := bitBtn_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetShowHint(obj uintptr, value bool) {
   bitBtn_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetSpacing(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetSpacing.Call(obj)
    return int32(ret)
}

func BitBtn_SetSpacing(obj uintptr, value int32) {
   bitBtn_SetSpacing.Call(obj, uintptr(value))
}

func BitBtn_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := bitBtn_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func BitBtn_SetTabOrder(obj uintptr, value TTabOrder) {
   bitBtn_SetTabOrder.Call(obj, uintptr(value))
}

func BitBtn_GetTabStop(obj uintptr) bool {
    ret, _, _ := bitBtn_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetTabStop(obj uintptr, value bool) {
   bitBtn_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetVisible(obj uintptr) bool {
    ret, _, _ := bitBtn_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetVisible(obj uintptr, value bool) {
   bitBtn_SetVisible.Call(obj, GoBoolToDBool(value))
}

func BitBtn_SetOnClick(obj uintptr, fn interface{}) {
    bitBtn_SetOnClick.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnContextPopup(obj uintptr, fn interface{}) {
    bitBtn_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnDragDrop(obj uintptr, fn interface{}) {
    bitBtn_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnDragOver(obj uintptr, fn interface{}) {
    bitBtn_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnEndDrag(obj uintptr, fn interface{}) {
    bitBtn_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnEnter(obj uintptr, fn interface{}) {
    bitBtn_SetOnEnter.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnExit(obj uintptr, fn interface{}) {
    bitBtn_SetOnExit.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnKeyDown(obj uintptr, fn interface{}) {
    bitBtn_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnKeyPress(obj uintptr, fn interface{}) {
    bitBtn_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnKeyUp(obj uintptr, fn interface{}) {
    bitBtn_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnMouseDown(obj uintptr, fn interface{}) {
    bitBtn_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnMouseEnter(obj uintptr, fn interface{}) {
    bitBtn_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnMouseLeave(obj uintptr, fn interface{}) {
    bitBtn_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnMouseMove(obj uintptr, fn interface{}) {
    bitBtn_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func BitBtn_SetOnMouseUp(obj uintptr, fn interface{}) {
    bitBtn_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func BitBtn_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetDockClientCount.Call(obj)
    return int32(ret)
}

func BitBtn_GetDockSite(obj uintptr) bool {
    ret, _, _ := bitBtn_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetDockSite(obj uintptr, value bool) {
   bitBtn_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := bitBtn_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func BitBtn_GetBrush(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetBrush.Call(obj)
    return ret
}

func BitBtn_GetControlCount(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetControlCount.Call(obj)
    return int32(ret)
}

func BitBtn_GetHandle(obj uintptr) HWND {
    ret, _, _ := bitBtn_GetHandle.Call(obj)
    return HWND(ret)
}

func BitBtn_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := bitBtn_GetParentWindow.Call(obj)
    return HWND(ret)
}

func BitBtn_SetParentWindow(obj uintptr, value HWND) {
   bitBtn_SetParentWindow.Call(obj, uintptr(value))
}

func BitBtn_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := bitBtn_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_SetUseDockManager(obj uintptr, value bool) {
   bitBtn_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func BitBtn_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    bitBtn_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_SetBoundsRect(obj uintptr, value TRect) {
   bitBtn_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func BitBtn_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetClientHeight.Call(obj)
    return int32(ret)
}

func BitBtn_SetClientHeight(obj uintptr, value int32) {
   bitBtn_SetClientHeight.Call(obj, uintptr(value))
}

func BitBtn_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    bitBtn_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_GetClientRect(obj uintptr) TRect {
    var ret TRect
    bitBtn_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BitBtn_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetClientWidth.Call(obj)
    return int32(ret)
}

func BitBtn_SetClientWidth(obj uintptr, value int32) {
   bitBtn_SetClientWidth.Call(obj, uintptr(value))
}

func BitBtn_GetControlState(obj uintptr) TControlState {
    ret, _, _ := bitBtn_GetControlState.Call(obj)
    return TControlState(ret)
}

func BitBtn_SetControlState(obj uintptr, value TControlState) {
   bitBtn_SetControlState.Call(obj, uintptr(value))
}

func BitBtn_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := bitBtn_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func BitBtn_SetControlStyle(obj uintptr, value TControlStyle) {
   bitBtn_SetControlStyle.Call(obj, uintptr(value))
}

func BitBtn_GetFloating(obj uintptr) bool {
    ret, _, _ := bitBtn_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func BitBtn_GetParent(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetParent.Call(obj)
    return ret
}

func BitBtn_SetParent(obj uintptr, value uintptr) {
   bitBtn_SetParent.Call(obj, value)
}

func BitBtn_GetLeft(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetLeft.Call(obj)
    return int32(ret)
}

func BitBtn_SetLeft(obj uintptr, value int32) {
   bitBtn_SetLeft.Call(obj, uintptr(value))
}

func BitBtn_GetTop(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetTop.Call(obj)
    return int32(ret)
}

func BitBtn_SetTop(obj uintptr, value int32) {
   bitBtn_SetTop.Call(obj, uintptr(value))
}

func BitBtn_GetWidth(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetWidth.Call(obj)
    return int32(ret)
}

func BitBtn_SetWidth(obj uintptr, value int32) {
   bitBtn_SetWidth.Call(obj, uintptr(value))
}

func BitBtn_GetHeight(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetHeight.Call(obj)
    return int32(ret)
}

func BitBtn_SetHeight(obj uintptr, value int32) {
   bitBtn_SetHeight.Call(obj, uintptr(value))
}

func BitBtn_GetCursor(obj uintptr) TCursor {
    ret, _, _ := bitBtn_GetCursor.Call(obj)
    return TCursor(ret)
}

func BitBtn_SetCursor(obj uintptr, value TCursor) {
   bitBtn_SetCursor.Call(obj, uintptr(value))
}

func BitBtn_GetHint(obj uintptr) string {
    ret, _, _ := bitBtn_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_SetHint(obj uintptr, value string) {
   bitBtn_SetHint.Call(obj, GoStrToDStr(value))
}

func BitBtn_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetComponentCount.Call(obj)
    return int32(ret)
}

func BitBtn_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := bitBtn_GetComponentIndex.Call(obj)
    return int32(ret)
}

func BitBtn_SetComponentIndex(obj uintptr, value int32) {
   bitBtn_SetComponentIndex.Call(obj, uintptr(value))
}

func BitBtn_GetOwner(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetOwner.Call(obj)
    return ret
}

func BitBtn_GetName(obj uintptr) string {
    ret, _, _ := bitBtn_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func BitBtn_SetName(obj uintptr, value string) {
   bitBtn_SetName.Call(obj, GoStrToDStr(value))
}

func BitBtn_GetTag(obj uintptr) int {
    ret, _, _ := bitBtn_GetTag.Call(obj)
    return int(ret)
}

func BitBtn_SetTag(obj uintptr, value int) {
   bitBtn_SetTag.Call(obj, uintptr(value))
}

func BitBtn_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetAnchorSideLeft.Call(obj)
    return ret
}

func BitBtn_SetAnchorSideLeft(obj uintptr, value uintptr) {
   bitBtn_SetAnchorSideLeft.Call(obj, value)
}

func BitBtn_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetAnchorSideTop.Call(obj)
    return ret
}

func BitBtn_SetAnchorSideTop(obj uintptr, value uintptr) {
   bitBtn_SetAnchorSideTop.Call(obj, value)
}

func BitBtn_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetAnchorSideRight.Call(obj)
    return ret
}

func BitBtn_SetAnchorSideRight(obj uintptr, value uintptr) {
   bitBtn_SetAnchorSideRight.Call(obj, value)
}

func BitBtn_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetAnchorSideBottom.Call(obj)
    return ret
}

func BitBtn_SetAnchorSideBottom(obj uintptr, value uintptr) {
   bitBtn_SetAnchorSideBottom.Call(obj, value)
}

func BitBtn_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetChildSizing.Call(obj)
    return ret
}

func BitBtn_SetChildSizing(obj uintptr, value uintptr) {
   bitBtn_SetChildSizing.Call(obj, value)
}

func BitBtn_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := bitBtn_GetBorderSpacing.Call(obj)
    return ret
}

func BitBtn_SetBorderSpacing(obj uintptr, value uintptr) {
   bitBtn_SetBorderSpacing.Call(obj, value)
}

func BitBtn_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := bitBtn_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func BitBtn_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := bitBtn_GetControls.Call(obj, uintptr(Index))
    return ret
}

func BitBtn_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := bitBtn_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func BitBtn_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := bitBtn_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func BitBtn_StaticClassType() TClass {
    r, _, _:= bitBtn_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TIcon ---------------------------

func Icon_Create() uintptr {
    ret, _, _ := icon_Create.Call()
    return ret
}

func Icon_Free(obj uintptr) {
    icon_Free.Call(obj)
}

func Icon_Assign(obj uintptr, Source uintptr)  {
    icon_Assign.Call(obj, Source )
}

func Icon_HandleAllocated(obj uintptr) bool {
    ret, _, _ := icon_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Icon_LoadFromStream(obj uintptr, Stream uintptr)  {
    icon_LoadFromStream.Call(obj, Stream )
}

func Icon_SaveToStream(obj uintptr, Stream uintptr)  {
    icon_SaveToStream.Call(obj, Stream )
}

func Icon_SetSize(obj uintptr, AWidth int32, AHeight int32)  {
    icon_SetSize.Call(obj, uintptr(AWidth) , uintptr(AHeight) )
}

func Icon_LoadFromResourceName(obj uintptr, Instance uintptr, ResName string)  {
    icon_LoadFromResourceName.Call(obj, Instance , GoStrToDStr(ResName) )
}

func Icon_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32)  {
    icon_LoadFromResourceID.Call(obj, Instance , uintptr(ResID) )
}

func Icon_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := icon_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Icon_LoadFromFile(obj uintptr, Filename string)  {
    icon_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func Icon_SaveToFile(obj uintptr, Filename string)  {
    icon_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func Icon_GetNamePath(obj uintptr) string {
    ret, _, _ := icon_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Icon_ClassType(obj uintptr) TClass {
    ret, _, _ := icon_ClassType.Call(obj)
    return TClass(ret)
}

func Icon_ClassName(obj uintptr) string {
    ret, _, _ := icon_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Icon_InstanceSize(obj uintptr) int32 {
    ret, _, _ := icon_InstanceSize.Call(obj)
    return int32(ret)
}

func Icon_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := icon_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Icon_GetHashCode(obj uintptr) int32 {
    ret, _, _ := icon_GetHashCode.Call(obj)
    return int32(ret)
}

func Icon_ToString(obj uintptr) string {
    ret, _, _ := icon_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Icon_GetHandle(obj uintptr) HICON {
    ret, _, _ := icon_GetHandle.Call(obj)
    return HICON(ret)
}

func Icon_SetHandle(obj uintptr, value HICON) {
   icon_SetHandle.Call(obj, uintptr(value))
}

func Icon_GetEmpty(obj uintptr) bool {
    ret, _, _ := icon_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func Icon_GetHeight(obj uintptr) int32 {
    ret, _, _ := icon_GetHeight.Call(obj)
    return int32(ret)
}

func Icon_SetHeight(obj uintptr, value int32) {
   icon_SetHeight.Call(obj, uintptr(value))
}

func Icon_GetModified(obj uintptr) bool {
    ret, _, _ := icon_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Icon_SetModified(obj uintptr, value bool) {
   icon_SetModified.Call(obj, GoBoolToDBool(value))
}

func Icon_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := icon_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func Icon_SetPalette(obj uintptr, value HPALETTE) {
   icon_SetPalette.Call(obj, uintptr(value))
}

func Icon_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := icon_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Icon_SetPaletteModified(obj uintptr, value bool) {
   icon_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func Icon_GetTransparent(obj uintptr) bool {
    ret, _, _ := icon_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func Icon_SetTransparent(obj uintptr, value bool) {
   icon_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func Icon_GetWidth(obj uintptr) int32 {
    ret, _, _ := icon_GetWidth.Call(obj)
    return int32(ret)
}

func Icon_SetWidth(obj uintptr, value int32) {
   icon_SetWidth.Call(obj, uintptr(value))
}

func Icon_SetOnChange(obj uintptr, fn interface{}) {
    icon_SetOnChange.Call(obj, addEventToMap(fn))
}

func Icon_StaticClassType() TClass {
    r, _, _:= icon_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TBitmap ---------------------------

func Bitmap_Create() uintptr {
    ret, _, _ := bitmap_Create.Call()
    return ret
}

func Bitmap_Free(obj uintptr) {
    bitmap_Free.Call(obj)
}

func Bitmap_Assign(obj uintptr, Source uintptr)  {
    bitmap_Assign.Call(obj, Source )
}

func Bitmap_FreeImage(obj uintptr)  {
    bitmap_FreeImage.Call(obj)
}

func Bitmap_HandleAllocated(obj uintptr) bool {
    ret, _, _ := bitmap_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Bitmap_LoadFromStream(obj uintptr, Stream uintptr)  {
    bitmap_LoadFromStream.Call(obj, Stream )
}

func Bitmap_SaveToStream(obj uintptr, Stream uintptr)  {
    bitmap_SaveToStream.Call(obj, Stream )
}

func Bitmap_SetSize(obj uintptr, AWidth int32, AHeight int32)  {
    bitmap_SetSize.Call(obj, uintptr(AWidth) , uintptr(AHeight) )
}

func Bitmap_LoadFromResourceName(obj uintptr, Instance uintptr, ResName string)  {
    bitmap_LoadFromResourceName.Call(obj, Instance , GoStrToDStr(ResName) )
}

func Bitmap_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32)  {
    bitmap_LoadFromResourceID.Call(obj, Instance , uintptr(ResID) )
}

func Bitmap_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := bitmap_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Bitmap_LoadFromFile(obj uintptr, Filename string)  {
    bitmap_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func Bitmap_SaveToFile(obj uintptr, Filename string)  {
    bitmap_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func Bitmap_GetNamePath(obj uintptr) string {
    ret, _, _ := bitmap_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Bitmap_ClassType(obj uintptr) TClass {
    ret, _, _ := bitmap_ClassType.Call(obj)
    return TClass(ret)
}

func Bitmap_ClassName(obj uintptr) string {
    ret, _, _ := bitmap_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Bitmap_InstanceSize(obj uintptr) int32 {
    ret, _, _ := bitmap_InstanceSize.Call(obj)
    return int32(ret)
}

func Bitmap_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := bitmap_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Bitmap_GetHashCode(obj uintptr) int32 {
    ret, _, _ := bitmap_GetHashCode.Call(obj)
    return int32(ret)
}

func Bitmap_ToString(obj uintptr) string {
    ret, _, _ := bitmap_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Bitmap_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := bitmap_GetCanvas.Call(obj)
    return ret
}

func Bitmap_GetHandle(obj uintptr) HBITMAP {
    ret, _, _ := bitmap_GetHandle.Call(obj)
    return HBITMAP(ret)
}

func Bitmap_SetHandle(obj uintptr, value HBITMAP) {
   bitmap_SetHandle.Call(obj, uintptr(value))
}

func Bitmap_GetHandleType(obj uintptr) TBitmapHandleType {
    ret, _, _ := bitmap_GetHandleType.Call(obj)
    return TBitmapHandleType(ret)
}

func Bitmap_SetHandleType(obj uintptr, value TBitmapHandleType) {
   bitmap_SetHandleType.Call(obj, uintptr(value))
}

func Bitmap_GetMaskHandle(obj uintptr) HBITMAP {
    ret, _, _ := bitmap_GetMaskHandle.Call(obj)
    return HBITMAP(ret)
}

func Bitmap_SetMaskHandle(obj uintptr, value HBITMAP) {
   bitmap_SetMaskHandle.Call(obj, uintptr(value))
}

func Bitmap_GetPixelFormat(obj uintptr) TPixelFormat {
    ret, _, _ := bitmap_GetPixelFormat.Call(obj)
    return TPixelFormat(ret)
}

func Bitmap_SetPixelFormat(obj uintptr, value TPixelFormat) {
   bitmap_SetPixelFormat.Call(obj, uintptr(value))
}

func Bitmap_GetTransparentMode(obj uintptr) TTransparentMode {
    ret, _, _ := bitmap_GetTransparentMode.Call(obj)
    return TTransparentMode(ret)
}

func Bitmap_SetTransparentMode(obj uintptr, value TTransparentMode) {
   bitmap_SetTransparentMode.Call(obj, uintptr(value))
}

func Bitmap_GetEmpty(obj uintptr) bool {
    ret, _, _ := bitmap_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func Bitmap_GetHeight(obj uintptr) int32 {
    ret, _, _ := bitmap_GetHeight.Call(obj)
    return int32(ret)
}

func Bitmap_SetHeight(obj uintptr, value int32) {
   bitmap_SetHeight.Call(obj, uintptr(value))
}

func Bitmap_GetModified(obj uintptr) bool {
    ret, _, _ := bitmap_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Bitmap_SetModified(obj uintptr, value bool) {
   bitmap_SetModified.Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := bitmap_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func Bitmap_SetPalette(obj uintptr, value HPALETTE) {
   bitmap_SetPalette.Call(obj, uintptr(value))
}

func Bitmap_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := bitmap_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Bitmap_SetPaletteModified(obj uintptr, value bool) {
   bitmap_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetTransparent(obj uintptr) bool {
    ret, _, _ := bitmap_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func Bitmap_SetTransparent(obj uintptr, value bool) {
   bitmap_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func Bitmap_GetWidth(obj uintptr) int32 {
    ret, _, _ := bitmap_GetWidth.Call(obj)
    return int32(ret)
}

func Bitmap_SetWidth(obj uintptr, value int32) {
   bitmap_SetWidth.Call(obj, uintptr(value))
}

func Bitmap_SetOnChange(obj uintptr, fn interface{}) {
    bitmap_SetOnChange.Call(obj, addEventToMap(fn))
}

func Bitmap_GetScanLine(obj uintptr, Row int32) uintptr {
    ret, _, _ := bitmap_GetScanLine.Call(obj, uintptr(Row))
    return ret
}

func Bitmap_StaticClassType() TClass {
    r, _, _:= bitmap_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMemoryStream ---------------------------

func MemoryStream_Create() uintptr {
    ret, _, _ := memoryStream_Create.Call()
    return ret
}

func MemoryStream_Free(obj uintptr) {
    memoryStream_Free.Call(obj)
}

func MemoryStream_Clear(obj uintptr)  {
    memoryStream_Clear.Call(obj)
}

func MemoryStream_LoadFromStream(obj uintptr, Stream uintptr)  {
    memoryStream_LoadFromStream.Call(obj, Stream )
}

func MemoryStream_LoadFromFile(obj uintptr, FileName string)  {
    memoryStream_LoadFromFile.Call(obj, GoStrToDStr(FileName) )
}

func MemoryStream_Seek(obj uintptr, Offset int64, Origin TSeekOrigin) int64 {
    var ret int64
    memoryStream_Seek.Call(obj, uintptr(unsafe.Pointer(&Offset)), uintptr(Origin) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MemoryStream_SaveToStream(obj uintptr, Stream uintptr)  {
    memoryStream_SaveToStream.Call(obj, Stream )
}

func MemoryStream_SaveToFile(obj uintptr, FileName string)  {
    memoryStream_SaveToFile.Call(obj, GoStrToDStr(FileName) )
}

func MemoryStream_CopyFrom(obj uintptr, Source uintptr, Count int64) int64 {
    var ret int64
    memoryStream_CopyFrom.Call(obj, Source , uintptr(unsafe.Pointer(&Count)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MemoryStream_ClassType(obj uintptr) TClass {
    ret, _, _ := memoryStream_ClassType.Call(obj)
    return TClass(ret)
}

func MemoryStream_ClassName(obj uintptr) string {
    ret, _, _ := memoryStream_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MemoryStream_InstanceSize(obj uintptr) int32 {
    ret, _, _ := memoryStream_InstanceSize.Call(obj)
    return int32(ret)
}

func MemoryStream_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := memoryStream_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MemoryStream_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := memoryStream_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MemoryStream_GetHashCode(obj uintptr) int32 {
    ret, _, _ := memoryStream_GetHashCode.Call(obj)
    return int32(ret)
}

func MemoryStream_ToString(obj uintptr) string {
    ret, _, _ := memoryStream_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MemoryStream_GetMemory(obj uintptr) uintptr {
    ret, _, _ := memoryStream_GetMemory.Call(obj)
    return ret
}

func MemoryStream_GetPosition(obj uintptr) int64 {
    var ret int64
    memoryStream_GetPosition.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MemoryStream_SetPosition(obj uintptr, value int64) {
   memoryStream_SetPosition.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MemoryStream_GetSize(obj uintptr) int64 {
    var ret int64
    memoryStream_GetSize.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MemoryStream_SetSize(obj uintptr, value int64) {
   memoryStream_SetSize.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MemoryStream_StaticClassType() TClass {
    r, _, _:= memoryStream_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TFont ---------------------------

func Font_Create() uintptr {
    ret, _, _ := font_Create.Call()
    return ret
}

func Font_Free(obj uintptr) {
    font_Free.Call(obj)
}

func Font_Assign(obj uintptr, Source uintptr)  {
    font_Assign.Call(obj, Source )
}

func Font_HandleAllocated(obj uintptr) bool {
    ret, _, _ := font_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Font_GetNamePath(obj uintptr) string {
    ret, _, _ := font_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Font_ClassType(obj uintptr) TClass {
    ret, _, _ := font_ClassType.Call(obj)
    return TClass(ret)
}

func Font_ClassName(obj uintptr) string {
    ret, _, _ := font_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Font_InstanceSize(obj uintptr) int32 {
    ret, _, _ := font_InstanceSize.Call(obj)
    return int32(ret)
}

func Font_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := font_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Font_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := font_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Font_GetHashCode(obj uintptr) int32 {
    ret, _, _ := font_GetHashCode.Call(obj)
    return int32(ret)
}

func Font_ToString(obj uintptr) string {
    ret, _, _ := font_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Font_GetHandle(obj uintptr) HFONT {
    ret, _, _ := font_GetHandle.Call(obj)
    return HFONT(ret)
}

func Font_SetHandle(obj uintptr, value HFONT) {
   font_SetHandle.Call(obj, uintptr(value))
}

func Font_GetPixelsPerInch(obj uintptr) int32 {
    ret, _, _ := font_GetPixelsPerInch.Call(obj)
    return int32(ret)
}

func Font_SetPixelsPerInch(obj uintptr, value int32) {
   font_SetPixelsPerInch.Call(obj, uintptr(value))
}

func Font_GetCharset(obj uintptr) TFontCharset {
    ret, _, _ := font_GetCharset.Call(obj)
    return TFontCharset(ret)
}

func Font_SetCharset(obj uintptr, value TFontCharset) {
   font_SetCharset.Call(obj, uintptr(value))
}

func Font_GetColor(obj uintptr) TColor {
    ret, _, _ := font_GetColor.Call(obj)
    return TColor(ret)
}

func Font_SetColor(obj uintptr, value TColor) {
   font_SetColor.Call(obj, uintptr(value))
}

func Font_GetHeight(obj uintptr) int32 {
    ret, _, _ := font_GetHeight.Call(obj)
    return int32(ret)
}

func Font_SetHeight(obj uintptr, value int32) {
   font_SetHeight.Call(obj, uintptr(value))
}

func Font_GetName(obj uintptr) string {
    ret, _, _ := font_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Font_SetName(obj uintptr, value string) {
   font_SetName.Call(obj, GoStrToDStr(value))
}

func Font_GetOrientation(obj uintptr) int32 {
    ret, _, _ := font_GetOrientation.Call(obj)
    return int32(ret)
}

func Font_SetOrientation(obj uintptr, value int32) {
   font_SetOrientation.Call(obj, uintptr(value))
}

func Font_GetPitch(obj uintptr) TFontPitch {
    ret, _, _ := font_GetPitch.Call(obj)
    return TFontPitch(ret)
}

func Font_SetPitch(obj uintptr, value TFontPitch) {
   font_SetPitch.Call(obj, uintptr(value))
}

func Font_GetSize(obj uintptr) int32 {
    ret, _, _ := font_GetSize.Call(obj)
    return int32(ret)
}

func Font_SetSize(obj uintptr, value int32) {
   font_SetSize.Call(obj, uintptr(value))
}

func Font_GetStyle(obj uintptr) TFontStyles {
    ret, _, _ := font_GetStyle.Call(obj)
    return TFontStyles(ret)
}

func Font_SetStyle(obj uintptr, value TFontStyles) {
   font_SetStyle.Call(obj, uintptr(value))
}

func Font_GetQuality(obj uintptr) TFontQuality {
    ret, _, _ := font_GetQuality.Call(obj)
    return TFontQuality(ret)
}

func Font_SetQuality(obj uintptr, value TFontQuality) {
   font_SetQuality.Call(obj, uintptr(value))
}

func Font_SetOnChange(obj uintptr, fn interface{}) {
    font_SetOnChange.Call(obj, addEventToMap(fn))
}

func Font_StaticClassType() TClass {
    r, _, _:= font_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStrings ---------------------------

func Strings_Create() uintptr {
    ret, _, _ := strings_Create.Call()
    return ret
}

func Strings_Free(obj uintptr) {
    strings_Free.Call(obj)
}

func Strings_Add(obj uintptr, S string) int32 {
    ret, _, _ := strings_Add.Call(obj, GoStrToDStr(S) )
    return int32(ret)
}

func Strings_AddObject(obj uintptr, S string, AObject uintptr) int32 {
    ret, _, _ := strings_AddObject.Call(obj, GoStrToDStr(S) , AObject )
    return int32(ret)
}

func Strings_Append(obj uintptr, S string)  {
    strings_Append.Call(obj, GoStrToDStr(S) )
}

func Strings_Assign(obj uintptr, Source uintptr)  {
    strings_Assign.Call(obj, Source )
}

func Strings_BeginUpdate(obj uintptr)  {
    strings_BeginUpdate.Call(obj)
}

func Strings_Clear(obj uintptr)  {
    strings_Clear.Call(obj)
}

func Strings_Delete(obj uintptr, Index int32)  {
    strings_Delete.Call(obj, uintptr(Index) )
}

func Strings_EndUpdate(obj uintptr)  {
    strings_EndUpdate.Call(obj)
}

func Strings_Equals(obj uintptr, Strings uintptr) bool {
    ret, _, _ := strings_Equals.Call(obj, Strings )
    return DBoolToGoBool(ret)
}

func Strings_IndexOf(obj uintptr, S string) int32 {
    ret, _, _ := strings_IndexOf.Call(obj, GoStrToDStr(S) )
    return int32(ret)
}

func Strings_IndexOfName(obj uintptr, Name string) int32 {
    ret, _, _ := strings_IndexOfName.Call(obj, GoStrToDStr(Name) )
    return int32(ret)
}

func Strings_IndexOfObject(obj uintptr, AObject uintptr) int32 {
    ret, _, _ := strings_IndexOfObject.Call(obj, AObject )
    return int32(ret)
}

func Strings_Insert(obj uintptr, Index int32, S string)  {
    strings_Insert.Call(obj, uintptr(Index) , GoStrToDStr(S) )
}

func Strings_InsertObject(obj uintptr, Index int32, S string, AObject uintptr)  {
    strings_InsertObject.Call(obj, uintptr(Index) , GoStrToDStr(S) , AObject )
}

func Strings_LoadFromFile(obj uintptr, FileName string)  {
    strings_LoadFromFile.Call(obj, GoStrToDStr(FileName) )
}

func Strings_LoadFromStream(obj uintptr, Stream uintptr)  {
    strings_LoadFromStream.Call(obj, Stream )
}

func Strings_Move(obj uintptr, CurIndex int32, NewIndex int32)  {
    strings_Move.Call(obj, uintptr(CurIndex) , uintptr(NewIndex) )
}

func Strings_SaveToFile(obj uintptr, FileName string)  {
    strings_SaveToFile.Call(obj, GoStrToDStr(FileName) )
}

func Strings_SaveToStream(obj uintptr, Stream uintptr)  {
    strings_SaveToStream.Call(obj, Stream )
}

func Strings_GetNamePath(obj uintptr) string {
    ret, _, _ := strings_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Strings_ClassType(obj uintptr) TClass {
    ret, _, _ := strings_ClassType.Call(obj)
    return TClass(ret)
}

func Strings_ClassName(obj uintptr) string {
    ret, _, _ := strings_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Strings_InstanceSize(obj uintptr) int32 {
    ret, _, _ := strings_InstanceSize.Call(obj)
    return int32(ret)
}

func Strings_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := strings_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Strings_GetHashCode(obj uintptr) int32 {
    ret, _, _ := strings_GetHashCode.Call(obj)
    return int32(ret)
}

func Strings_ToString(obj uintptr) string {
    ret, _, _ := strings_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Strings_GetCapacity(obj uintptr) int32 {
    ret, _, _ := strings_GetCapacity.Call(obj)
    return int32(ret)
}

func Strings_SetCapacity(obj uintptr, value int32) {
   strings_SetCapacity.Call(obj, uintptr(value))
}

func Strings_GetCommaText(obj uintptr) string {
    ret, _, _ := strings_GetCommaText.Call(obj)
    return DStrToGoStr(ret)
}

func Strings_SetCommaText(obj uintptr, value string) {
   strings_SetCommaText.Call(obj, GoStrToDStr(value))
}

func Strings_GetCount(obj uintptr) int32 {
    ret, _, _ := strings_GetCount.Call(obj)
    return int32(ret)
}

func Strings_GetDelimiter(obj uintptr) uint16 {
    ret, _, _ := strings_GetDelimiter.Call(obj)
    return uint16(ret)
}

func Strings_SetDelimiter(obj uintptr, value uint16) {
   strings_SetDelimiter.Call(obj, uintptr(value))
}

func Strings_GetText(obj uintptr) string {
    ret, _, _ := strings_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func Strings_SetText(obj uintptr, value string) {
   strings_SetText.Call(obj, GoStrToDStr(value))
}

func Strings_GetObjects(obj uintptr, Index int32) uintptr {
    ret, _, _ := strings_GetObjects.Call(obj, uintptr(Index))
    return ret
}

func Strings_SetObjects(obj uintptr, Index int32, value uintptr) {
   strings_SetObjects.Call(obj, uintptr(Index), value)
}

func Strings_GetValues(obj uintptr, Name string) string {
    ret, _, _ := strings_GetValues.Call(obj, GoStrToDStr(Name))
    return DStrToGoStr(ret)
}

func Strings_SetValues(obj uintptr, Name string, value string) {
   strings_SetValues.Call(obj, GoStrToDStr(Name), GoStrToDStr(value))
}

func Strings_GetValueFromIndex(obj uintptr, Index int32) string {
    ret, _, _ := strings_GetValueFromIndex.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func Strings_SetValueFromIndex(obj uintptr, Index int32, value string) {
   strings_SetValueFromIndex.Call(obj, uintptr(Index), GoStrToDStr(value))
}

func Strings_GetStrings(obj uintptr, Index int32) string {
    ret, _, _ := strings_GetStrings.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func Strings_SetStrings(obj uintptr, Index int32, value string) {
   strings_SetStrings.Call(obj, uintptr(Index), GoStrToDStr(value))
}

func Strings_StaticClassType() TClass {
    r, _, _:= strings_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStringList ---------------------------

func StringList_Create() uintptr {
    ret, _, _ := stringList_Create.Call()
    return ret
}

func StringList_Free(obj uintptr) {
    stringList_Free.Call(obj)
}

func StringList_Add(obj uintptr, S string) int32 {
    ret, _, _ := stringList_Add.Call(obj, GoStrToDStr(S) )
    return int32(ret)
}

func StringList_AddObject(obj uintptr, S string, AObject uintptr) int32 {
    ret, _, _ := stringList_AddObject.Call(obj, GoStrToDStr(S) , AObject )
    return int32(ret)
}

func StringList_Assign(obj uintptr, Source uintptr)  {
    stringList_Assign.Call(obj, Source )
}

func StringList_Clear(obj uintptr)  {
    stringList_Clear.Call(obj)
}

func StringList_Delete(obj uintptr, Index int32)  {
    stringList_Delete.Call(obj, uintptr(Index) )
}

func StringList_IndexOf(obj uintptr, S string) int32 {
    ret, _, _ := stringList_IndexOf.Call(obj, GoStrToDStr(S) )
    return int32(ret)
}

func StringList_Insert(obj uintptr, Index int32, S string)  {
    stringList_Insert.Call(obj, uintptr(Index) , GoStrToDStr(S) )
}

func StringList_InsertObject(obj uintptr, Index int32, S string, AObject uintptr)  {
    stringList_InsertObject.Call(obj, uintptr(Index) , GoStrToDStr(S) , AObject )
}

func StringList_Append(obj uintptr, S string)  {
    stringList_Append.Call(obj, GoStrToDStr(S) )
}

func StringList_BeginUpdate(obj uintptr)  {
    stringList_BeginUpdate.Call(obj)
}

func StringList_EndUpdate(obj uintptr)  {
    stringList_EndUpdate.Call(obj)
}

func StringList_Equals(obj uintptr, Strings uintptr) bool {
    ret, _, _ := stringList_Equals.Call(obj, Strings )
    return DBoolToGoBool(ret)
}

func StringList_IndexOfName(obj uintptr, Name string) int32 {
    ret, _, _ := stringList_IndexOfName.Call(obj, GoStrToDStr(Name) )
    return int32(ret)
}

func StringList_IndexOfObject(obj uintptr, AObject uintptr) int32 {
    ret, _, _ := stringList_IndexOfObject.Call(obj, AObject )
    return int32(ret)
}

func StringList_LoadFromFile(obj uintptr, FileName string)  {
    stringList_LoadFromFile.Call(obj, GoStrToDStr(FileName) )
}

func StringList_LoadFromStream(obj uintptr, Stream uintptr)  {
    stringList_LoadFromStream.Call(obj, Stream )
}

func StringList_Move(obj uintptr, CurIndex int32, NewIndex int32)  {
    stringList_Move.Call(obj, uintptr(CurIndex) , uintptr(NewIndex) )
}

func StringList_SaveToFile(obj uintptr, FileName string)  {
    stringList_SaveToFile.Call(obj, GoStrToDStr(FileName) )
}

func StringList_SaveToStream(obj uintptr, Stream uintptr)  {
    stringList_SaveToStream.Call(obj, Stream )
}

func StringList_GetNamePath(obj uintptr) string {
    ret, _, _ := stringList_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StringList_ClassType(obj uintptr) TClass {
    ret, _, _ := stringList_ClassType.Call(obj)
    return TClass(ret)
}

func StringList_ClassName(obj uintptr) string {
    ret, _, _ := stringList_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StringList_InstanceSize(obj uintptr) int32 {
    ret, _, _ := stringList_InstanceSize.Call(obj)
    return int32(ret)
}

func StringList_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := stringList_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StringList_GetHashCode(obj uintptr) int32 {
    ret, _, _ := stringList_GetHashCode.Call(obj)
    return int32(ret)
}

func StringList_ToString(obj uintptr) string {
    ret, _, _ := stringList_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StringList_GetSorted(obj uintptr) bool {
    ret, _, _ := stringList_GetSorted.Call(obj)
    return DBoolToGoBool(ret)
}

func StringList_SetSorted(obj uintptr, value bool) {
   stringList_SetSorted.Call(obj, GoBoolToDBool(value))
}

func StringList_SetOnChange(obj uintptr, fn interface{}) {
    stringList_SetOnChange.Call(obj, addEventToMap(fn))
}

func StringList_SetOnChanging(obj uintptr, fn interface{}) {
    stringList_SetOnChanging.Call(obj, addEventToMap(fn))
}

func StringList_GetCapacity(obj uintptr) int32 {
    ret, _, _ := stringList_GetCapacity.Call(obj)
    return int32(ret)
}

func StringList_SetCapacity(obj uintptr, value int32) {
   stringList_SetCapacity.Call(obj, uintptr(value))
}

func StringList_GetCommaText(obj uintptr) string {
    ret, _, _ := stringList_GetCommaText.Call(obj)
    return DStrToGoStr(ret)
}

func StringList_SetCommaText(obj uintptr, value string) {
   stringList_SetCommaText.Call(obj, GoStrToDStr(value))
}

func StringList_GetCount(obj uintptr) int32 {
    ret, _, _ := stringList_GetCount.Call(obj)
    return int32(ret)
}

func StringList_GetDelimiter(obj uintptr) uint16 {
    ret, _, _ := stringList_GetDelimiter.Call(obj)
    return uint16(ret)
}

func StringList_SetDelimiter(obj uintptr, value uint16) {
   stringList_SetDelimiter.Call(obj, uintptr(value))
}

func StringList_GetText(obj uintptr) string {
    ret, _, _ := stringList_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func StringList_SetText(obj uintptr, value string) {
   stringList_SetText.Call(obj, GoStrToDStr(value))
}

func StringList_GetObjects(obj uintptr, Index int32) uintptr {
    ret, _, _ := stringList_GetObjects.Call(obj, uintptr(Index))
    return ret
}

func StringList_SetObjects(obj uintptr, Index int32, value uintptr) {
   stringList_SetObjects.Call(obj, uintptr(Index), value)
}

func StringList_GetValues(obj uintptr, Name string) string {
    ret, _, _ := stringList_GetValues.Call(obj, GoStrToDStr(Name))
    return DStrToGoStr(ret)
}

func StringList_SetValues(obj uintptr, Name string, value string) {
   stringList_SetValues.Call(obj, GoStrToDStr(Name), GoStrToDStr(value))
}

func StringList_GetValueFromIndex(obj uintptr, Index int32) string {
    ret, _, _ := stringList_GetValueFromIndex.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func StringList_SetValueFromIndex(obj uintptr, Index int32, value string) {
   stringList_SetValueFromIndex.Call(obj, uintptr(Index), GoStrToDStr(value))
}

func StringList_GetStrings(obj uintptr, Index int32) string {
    ret, _, _ := stringList_GetStrings.Call(obj, uintptr(Index))
    return DStrToGoStr(ret)
}

func StringList_SetStrings(obj uintptr, Index int32, value string) {
   stringList_SetStrings.Call(obj, uintptr(Index), GoStrToDStr(value))
}

func StringList_StaticClassType() TClass {
    r, _, _:= stringList_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TBrush ---------------------------

func Brush_Create() uintptr {
    ret, _, _ := brush_Create.Call()
    return ret
}

func Brush_Free(obj uintptr) {
    brush_Free.Call(obj)
}

func Brush_Assign(obj uintptr, Source uintptr)  {
    brush_Assign.Call(obj, Source )
}

func Brush_GetNamePath(obj uintptr) string {
    ret, _, _ := brush_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Brush_ClassType(obj uintptr) TClass {
    ret, _, _ := brush_ClassType.Call(obj)
    return TClass(ret)
}

func Brush_ClassName(obj uintptr) string {
    ret, _, _ := brush_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Brush_InstanceSize(obj uintptr) int32 {
    ret, _, _ := brush_InstanceSize.Call(obj)
    return int32(ret)
}

func Brush_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := brush_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Brush_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := brush_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Brush_GetHashCode(obj uintptr) int32 {
    ret, _, _ := brush_GetHashCode.Call(obj)
    return int32(ret)
}

func Brush_ToString(obj uintptr) string {
    ret, _, _ := brush_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Brush_GetBitmap(obj uintptr) uintptr {
    ret, _, _ := brush_GetBitmap.Call(obj)
    return ret
}

func Brush_SetBitmap(obj uintptr, value uintptr) {
   brush_SetBitmap.Call(obj, value)
}

func Brush_GetHandle(obj uintptr) HBRUSH {
    ret, _, _ := brush_GetHandle.Call(obj)
    return HBRUSH(ret)
}

func Brush_SetHandle(obj uintptr, value HBRUSH) {
   brush_SetHandle.Call(obj, uintptr(value))
}

func Brush_GetColor(obj uintptr) TColor {
    ret, _, _ := brush_GetColor.Call(obj)
    return TColor(ret)
}

func Brush_SetColor(obj uintptr, value TColor) {
   brush_SetColor.Call(obj, uintptr(value))
}

func Brush_GetStyle(obj uintptr) TBrushStyle {
    ret, _, _ := brush_GetStyle.Call(obj)
    return TBrushStyle(ret)
}

func Brush_SetStyle(obj uintptr, value TBrushStyle) {
   brush_SetStyle.Call(obj, uintptr(value))
}

func Brush_SetOnChange(obj uintptr, fn interface{}) {
    brush_SetOnChange.Call(obj, addEventToMap(fn))
}

func Brush_StaticClassType() TClass {
    r, _, _:= brush_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPen ---------------------------

func Pen_Create() uintptr {
    ret, _, _ := pen_Create.Call()
    return ret
}

func Pen_Free(obj uintptr) {
    pen_Free.Call(obj)
}

func Pen_Assign(obj uintptr, Source uintptr)  {
    pen_Assign.Call(obj, Source )
}

func Pen_GetNamePath(obj uintptr) string {
    ret, _, _ := pen_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Pen_ClassType(obj uintptr) TClass {
    ret, _, _ := pen_ClassType.Call(obj)
    return TClass(ret)
}

func Pen_ClassName(obj uintptr) string {
    ret, _, _ := pen_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Pen_InstanceSize(obj uintptr) int32 {
    ret, _, _ := pen_InstanceSize.Call(obj)
    return int32(ret)
}

func Pen_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := pen_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Pen_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := pen_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Pen_GetHashCode(obj uintptr) int32 {
    ret, _, _ := pen_GetHashCode.Call(obj)
    return int32(ret)
}

func Pen_ToString(obj uintptr) string {
    ret, _, _ := pen_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Pen_GetHandle(obj uintptr) HPEN {
    ret, _, _ := pen_GetHandle.Call(obj)
    return HPEN(ret)
}

func Pen_SetHandle(obj uintptr, value HPEN) {
   pen_SetHandle.Call(obj, uintptr(value))
}

func Pen_GetColor(obj uintptr) TColor {
    ret, _, _ := pen_GetColor.Call(obj)
    return TColor(ret)
}

func Pen_SetColor(obj uintptr, value TColor) {
   pen_SetColor.Call(obj, uintptr(value))
}

func Pen_GetMode(obj uintptr) TPenMode {
    ret, _, _ := pen_GetMode.Call(obj)
    return TPenMode(ret)
}

func Pen_SetMode(obj uintptr, value TPenMode) {
   pen_SetMode.Call(obj, uintptr(value))
}

func Pen_GetStyle(obj uintptr) TPenStyle {
    ret, _, _ := pen_GetStyle.Call(obj)
    return TPenStyle(ret)
}

func Pen_SetStyle(obj uintptr, value TPenStyle) {
   pen_SetStyle.Call(obj, uintptr(value))
}

func Pen_GetWidth(obj uintptr) int32 {
    ret, _, _ := pen_GetWidth.Call(obj)
    return int32(ret)
}

func Pen_SetWidth(obj uintptr, value int32) {
   pen_SetWidth.Call(obj, uintptr(value))
}

func Pen_SetOnChange(obj uintptr, fn interface{}) {
    pen_SetOnChange.Call(obj, addEventToMap(fn))
}

func Pen_StaticClassType() TClass {
    r, _, _:= pen_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMenuItem ---------------------------

func MenuItem_Create(obj uintptr) uintptr {
    ret, _, _ := menuItem_Create.Call(obj)
    return ret
}

func MenuItem_Free(obj uintptr) {
    menuItem_Free.Call(obj)
}

func MenuItem_Insert(obj uintptr, Index int32, Item uintptr)  {
    menuItem_Insert.Call(obj, uintptr(Index) , Item )
}

func MenuItem_Delete(obj uintptr, Index int32)  {
    menuItem_Delete.Call(obj, uintptr(Index) )
}

func MenuItem_Clear(obj uintptr)  {
    menuItem_Clear.Call(obj)
}

func MenuItem_Click(obj uintptr)  {
    menuItem_Click.Call(obj)
}

func MenuItem_IndexOf(obj uintptr, Item uintptr) int32 {
    ret, _, _ := menuItem_IndexOf.Call(obj, Item )
    return int32(ret)
}

func MenuItem_HasParent(obj uintptr) bool {
    ret, _, _ := menuItem_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_Add(obj uintptr, Item uintptr)  {
    menuItem_Add.Call(obj, Item )
}

func MenuItem_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := menuItem_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func MenuItem_GetNamePath(obj uintptr) string {
    ret, _, _ := menuItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_Assign(obj uintptr, Source uintptr)  {
    menuItem_Assign.Call(obj, Source )
}

func MenuItem_ClassType(obj uintptr) TClass {
    ret, _, _ := menuItem_ClassType.Call(obj)
    return TClass(ret)
}

func MenuItem_ClassName(obj uintptr) string {
    ret, _, _ := menuItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := menuItem_InstanceSize.Call(obj)
    return int32(ret)
}

func MenuItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := menuItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MenuItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := menuItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MenuItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := menuItem_GetHashCode.Call(obj)
    return int32(ret)
}

func MenuItem_ToString(obj uintptr) string {
    ret, _, _ := menuItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_GetHandle(obj uintptr) HMENU {
    ret, _, _ := menuItem_GetHandle.Call(obj)
    return HMENU(ret)
}

func MenuItem_GetCount(obj uintptr) int32 {
    ret, _, _ := menuItem_GetCount.Call(obj)
    return int32(ret)
}

func MenuItem_GetParent(obj uintptr) uintptr {
    ret, _, _ := menuItem_GetParent.Call(obj)
    return ret
}

func MenuItem_GetAction(obj uintptr) uintptr {
    ret, _, _ := menuItem_GetAction.Call(obj)
    return ret
}

func MenuItem_SetAction(obj uintptr, value uintptr) {
   menuItem_SetAction.Call(obj, value)
}

func MenuItem_GetAutoCheck(obj uintptr) bool {
    ret, _, _ := menuItem_GetAutoCheck.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetAutoCheck(obj uintptr, value bool) {
   menuItem_SetAutoCheck.Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetBitmap(obj uintptr) uintptr {
    ret, _, _ := menuItem_GetBitmap.Call(obj)
    return ret
}

func MenuItem_SetBitmap(obj uintptr, value uintptr) {
   menuItem_SetBitmap.Call(obj, value)
}

func MenuItem_GetCaption(obj uintptr) string {
    ret, _, _ := menuItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_SetCaption(obj uintptr, value string) {
   menuItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func MenuItem_GetChecked(obj uintptr) bool {
    ret, _, _ := menuItem_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetChecked(obj uintptr, value bool) {
   menuItem_SetChecked.Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetDefault(obj uintptr) bool {
    ret, _, _ := menuItem_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetDefault(obj uintptr, value bool) {
   menuItem_SetDefault.Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetEnabled(obj uintptr) bool {
    ret, _, _ := menuItem_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetEnabled(obj uintptr, value bool) {
   menuItem_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetGroupIndex(obj uintptr) uint8 {
    ret, _, _ := menuItem_GetGroupIndex.Call(obj)
    return uint8(ret)
}

func MenuItem_SetGroupIndex(obj uintptr, value uint8) {
   menuItem_SetGroupIndex.Call(obj, uintptr(value))
}

func MenuItem_GetHint(obj uintptr) string {
    ret, _, _ := menuItem_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_SetHint(obj uintptr, value string) {
   menuItem_SetHint.Call(obj, GoStrToDStr(value))
}

func MenuItem_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := menuItem_GetImageIndex.Call(obj)
    return int32(ret)
}

func MenuItem_SetImageIndex(obj uintptr, value int32) {
   menuItem_SetImageIndex.Call(obj, uintptr(value))
}

func MenuItem_GetRadioItem(obj uintptr) bool {
    ret, _, _ := menuItem_GetRadioItem.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetRadioItem(obj uintptr, value bool) {
   menuItem_SetRadioItem.Call(obj, GoBoolToDBool(value))
}

func MenuItem_GetShortCut(obj uintptr) TShortCut {
    ret, _, _ := menuItem_GetShortCut.Call(obj)
    return TShortCut(ret)
}

func MenuItem_SetShortCut(obj uintptr, value TShortCut) {
   menuItem_SetShortCut.Call(obj, uintptr(value))
}

func MenuItem_GetVisible(obj uintptr) bool {
    ret, _, _ := menuItem_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func MenuItem_SetVisible(obj uintptr, value bool) {
   menuItem_SetVisible.Call(obj, GoBoolToDBool(value))
}

func MenuItem_SetOnClick(obj uintptr, fn interface{}) {
    menuItem_SetOnClick.Call(obj, addEventToMap(fn))
}

func MenuItem_SetOnMeasureItem(obj uintptr, fn interface{}) {
    menuItem_SetOnMeasureItem.Call(obj, addEventToMap(fn))
}

func MenuItem_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := menuItem_GetComponentCount.Call(obj)
    return int32(ret)
}

func MenuItem_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := menuItem_GetComponentIndex.Call(obj)
    return int32(ret)
}

func MenuItem_SetComponentIndex(obj uintptr, value int32) {
   menuItem_SetComponentIndex.Call(obj, uintptr(value))
}

func MenuItem_GetOwner(obj uintptr) uintptr {
    ret, _, _ := menuItem_GetOwner.Call(obj)
    return ret
}

func MenuItem_GetName(obj uintptr) string {
    ret, _, _ := menuItem_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func MenuItem_SetName(obj uintptr, value string) {
   menuItem_SetName.Call(obj, GoStrToDStr(value))
}

func MenuItem_GetTag(obj uintptr) int {
    ret, _, _ := menuItem_GetTag.Call(obj)
    return int(ret)
}

func MenuItem_SetTag(obj uintptr, value int) {
   menuItem_SetTag.Call(obj, uintptr(value))
}

func MenuItem_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := menuItem_GetItems.Call(obj, uintptr(Index))
    return ret
}

func MenuItem_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := menuItem_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func MenuItem_StaticClassType() TClass {
    r, _, _:= menuItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPicture ---------------------------

func Picture_Create() uintptr {
    ret, _, _ := picture_Create.Call()
    return ret
}

func Picture_Free(obj uintptr) {
    picture_Free.Call(obj)
}

func Picture_LoadFromFile(obj uintptr, Filename string)  {
    picture_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func Picture_SaveToFile(obj uintptr, Filename string)  {
    picture_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func Picture_LoadFromStream(obj uintptr, Stream uintptr)  {
    picture_LoadFromStream.Call(obj, Stream )
}

func Picture_SaveToStream(obj uintptr, Stream uintptr)  {
    picture_SaveToStream.Call(obj, Stream )
}

func Picture_Assign(obj uintptr, Source uintptr)  {
    picture_Assign.Call(obj, Source )
}

func Picture_GetNamePath(obj uintptr) string {
    ret, _, _ := picture_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Picture_ClassType(obj uintptr) TClass {
    ret, _, _ := picture_ClassType.Call(obj)
    return TClass(ret)
}

func Picture_ClassName(obj uintptr) string {
    ret, _, _ := picture_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Picture_InstanceSize(obj uintptr) int32 {
    ret, _, _ := picture_InstanceSize.Call(obj)
    return int32(ret)
}

func Picture_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := picture_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Picture_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := picture_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Picture_GetHashCode(obj uintptr) int32 {
    ret, _, _ := picture_GetHashCode.Call(obj)
    return int32(ret)
}

func Picture_ToString(obj uintptr) string {
    ret, _, _ := picture_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Picture_GetBitmap(obj uintptr) uintptr {
    ret, _, _ := picture_GetBitmap.Call(obj)
    return ret
}

func Picture_SetBitmap(obj uintptr, value uintptr) {
   picture_SetBitmap.Call(obj, value)
}

func Picture_GetGraphic(obj uintptr) uintptr {
    ret, _, _ := picture_GetGraphic.Call(obj)
    return ret
}

func Picture_SetGraphic(obj uintptr, value uintptr) {
   picture_SetGraphic.Call(obj, value)
}

func Picture_GetHeight(obj uintptr) int32 {
    ret, _, _ := picture_GetHeight.Call(obj)
    return int32(ret)
}

func Picture_GetIcon(obj uintptr) uintptr {
    ret, _, _ := picture_GetIcon.Call(obj)
    return ret
}

func Picture_SetIcon(obj uintptr, value uintptr) {
   picture_SetIcon.Call(obj, value)
}

func Picture_GetWidth(obj uintptr) int32 {
    ret, _, _ := picture_GetWidth.Call(obj)
    return int32(ret)
}

func Picture_SetOnChange(obj uintptr, fn interface{}) {
    picture_SetOnChange.Call(obj, addEventToMap(fn))
}

func Picture_StaticClassType() TClass {
    r, _, _:= picture_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListColumns ---------------------------

func ListColumns_Create(obj uintptr) uintptr {
    ret, _, _ := listColumns_Create.Call(obj)
    return ret
}

func ListColumns_Free(obj uintptr) {
    listColumns_Free.Call(obj)
}

func ListColumns_Add(obj uintptr) uintptr {
    ret, _, _ := listColumns_Add.Call(obj)
    return ret
}

func ListColumns_Owner(obj uintptr) uintptr {
    ret, _, _ := listColumns_Owner.Call(obj)
    return ret
}

func ListColumns_Assign(obj uintptr, Source uintptr)  {
    listColumns_Assign.Call(obj, Source )
}

func ListColumns_BeginUpdate(obj uintptr)  {
    listColumns_BeginUpdate.Call(obj)
}

func ListColumns_Clear(obj uintptr)  {
    listColumns_Clear.Call(obj)
}

func ListColumns_Delete(obj uintptr, Index int32)  {
    listColumns_Delete.Call(obj, uintptr(Index) )
}

func ListColumns_EndUpdate(obj uintptr)  {
    listColumns_EndUpdate.Call(obj)
}

func ListColumns_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := listColumns_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func ListColumns_GetNamePath(obj uintptr) string {
    ret, _, _ := listColumns_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumns_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := listColumns_Insert.Call(obj, uintptr(Index) )
    return ret
}

func ListColumns_ClassType(obj uintptr) TClass {
    ret, _, _ := listColumns_ClassType.Call(obj)
    return TClass(ret)
}

func ListColumns_ClassName(obj uintptr) string {
    ret, _, _ := listColumns_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumns_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listColumns_InstanceSize.Call(obj)
    return int32(ret)
}

func ListColumns_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listColumns_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListColumns_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listColumns_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListColumns_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listColumns_GetHashCode.Call(obj)
    return int32(ret)
}

func ListColumns_ToString(obj uintptr) string {
    ret, _, _ := listColumns_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumns_GetCount(obj uintptr) int32 {
    ret, _, _ := listColumns_GetCount.Call(obj)
    return int32(ret)
}

func ListColumns_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := listColumns_GetItems.Call(obj, uintptr(Index))
    return ret
}

func ListColumns_SetItems(obj uintptr, Index int32, value uintptr) {
   listColumns_SetItems.Call(obj, uintptr(Index), value)
}

func ListColumns_StaticClassType() TClass {
    r, _, _:= listColumns_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListItems ---------------------------

func ListItems_Create(obj uintptr) uintptr {
    ret, _, _ := listItems_Create.Call(obj)
    return ret
}

func ListItems_Free(obj uintptr) {
    listItems_Free.Call(obj)
}

func ListItems_Add(obj uintptr) uintptr {
    ret, _, _ := listItems_Add.Call(obj)
    return ret
}

func ListItems_Assign(obj uintptr, Source uintptr)  {
    listItems_Assign.Call(obj, Source )
}

func ListItems_BeginUpdate(obj uintptr)  {
    listItems_BeginUpdate.Call(obj)
}

func ListItems_Clear(obj uintptr)  {
    listItems_Clear.Call(obj)
}

func ListItems_Delete(obj uintptr, Index int32)  {
    listItems_Delete.Call(obj, uintptr(Index) )
}

func ListItems_EndUpdate(obj uintptr)  {
    listItems_EndUpdate.Call(obj)
}

func ListItems_IndexOf(obj uintptr, Value uintptr) int32 {
    ret, _, _ := listItems_IndexOf.Call(obj, Value )
    return int32(ret)
}

func ListItems_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := listItems_Insert.Call(obj, uintptr(Index) )
    return ret
}

func ListItems_GetNamePath(obj uintptr) string {
    ret, _, _ := listItems_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListItems_ClassType(obj uintptr) TClass {
    ret, _, _ := listItems_ClassType.Call(obj)
    return TClass(ret)
}

func ListItems_ClassName(obj uintptr) string {
    ret, _, _ := listItems_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListItems_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listItems_InstanceSize.Call(obj)
    return int32(ret)
}

func ListItems_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listItems_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListItems_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listItems_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListItems_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listItems_GetHashCode.Call(obj)
    return int32(ret)
}

func ListItems_ToString(obj uintptr) string {
    ret, _, _ := listItems_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListItems_GetCount(obj uintptr) int32 {
    ret, _, _ := listItems_GetCount.Call(obj)
    return int32(ret)
}

func ListItems_SetCount(obj uintptr, value int32) {
   listItems_SetCount.Call(obj, uintptr(value))
}

func ListItems_GetOwner(obj uintptr) uintptr {
    ret, _, _ := listItems_GetOwner.Call(obj)
    return ret
}

func ListItems_GetItem(obj uintptr, Index int32) uintptr {
    ret, _, _ := listItems_GetItem.Call(obj, uintptr(Index))
    return ret
}

func ListItems_SetItem(obj uintptr, Index int32, value uintptr) {
   listItems_SetItem.Call(obj, uintptr(Index), value)
}

func ListItems_StaticClassType() TClass {
    r, _, _:= listItems_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTreeNodes ---------------------------

func TreeNodes_Create(obj uintptr) uintptr {
    ret, _, _ := treeNodes_Create.Call(obj)
    return ret
}

func TreeNodes_Free(obj uintptr) {
    treeNodes_Free.Call(obj)
}

func TreeNodes_AddChildFirst(obj uintptr, Parent uintptr, S string) uintptr {
    ret, _, _ := treeNodes_AddChildFirst.Call(obj, Parent , GoStrToDStr(S) )
    return ret
}

func TreeNodes_AddChild(obj uintptr, Parent uintptr, S string) uintptr {
    ret, _, _ := treeNodes_AddChild.Call(obj, Parent , GoStrToDStr(S) )
    return ret
}

func TreeNodes_AddChildObjectFirst(obj uintptr, Parent uintptr, S string, Ptr uintptr) uintptr {
    ret, _, _ := treeNodes_AddChildObjectFirst.Call(obj, Parent , GoStrToDStr(S) , Ptr )
    return ret
}

func TreeNodes_AddChildObject(obj uintptr, Parent uintptr, S string, Ptr uintptr) uintptr {
    ret, _, _ := treeNodes_AddChildObject.Call(obj, Parent , GoStrToDStr(S) , Ptr )
    return ret
}

func TreeNodes_AddObjectFirst(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
    ret, _, _ := treeNodes_AddObjectFirst.Call(obj, Sibling , GoStrToDStr(S) , Ptr )
    return ret
}

func TreeNodes_AddObject(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
    ret, _, _ := treeNodes_AddObject.Call(obj, Sibling , GoStrToDStr(S) , Ptr )
    return ret
}

func TreeNodes_AddNode(obj uintptr, Node uintptr, Relative uintptr, S string, Ptr uintptr, Method TNodeAttachMode) uintptr {
    ret, _, _ := treeNodes_AddNode.Call(obj, Node , Relative , GoStrToDStr(S) , Ptr , uintptr(Method) )
    return ret
}

func TreeNodes_AddFirst(obj uintptr, Sibling uintptr, S string) uintptr {
    ret, _, _ := treeNodes_AddFirst.Call(obj, Sibling , GoStrToDStr(S) )
    return ret
}

func TreeNodes_Add(obj uintptr, Sibling uintptr, S string) uintptr {
    ret, _, _ := treeNodes_Add.Call(obj, Sibling , GoStrToDStr(S) )
    return ret
}

func TreeNodes_Assign(obj uintptr, Source uintptr)  {
    treeNodes_Assign.Call(obj, Source )
}

func TreeNodes_BeginUpdate(obj uintptr)  {
    treeNodes_BeginUpdate.Call(obj)
}

func TreeNodes_Clear(obj uintptr)  {
    treeNodes_Clear.Call(obj)
}

func TreeNodes_Delete(obj uintptr, Node uintptr)  {
    treeNodes_Delete.Call(obj, Node )
}

func TreeNodes_EndUpdate(obj uintptr)  {
    treeNodes_EndUpdate.Call(obj)
}

func TreeNodes_GetFirstNode(obj uintptr) uintptr {
    ret, _, _ := treeNodes_GetFirstNode.Call(obj)
    return ret
}

func TreeNodes_Insert(obj uintptr, Sibling uintptr, S string) uintptr {
    ret, _, _ := treeNodes_Insert.Call(obj, Sibling , GoStrToDStr(S) )
    return ret
}

func TreeNodes_InsertObject(obj uintptr, Sibling uintptr, S string, Ptr uintptr) uintptr {
    ret, _, _ := treeNodes_InsertObject.Call(obj, Sibling , GoStrToDStr(S) , Ptr )
    return ret
}

func TreeNodes_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
    ret, _, _ := treeNodes_CustomSort.Call(obj, uintptr(SortProc) , uintptr(Data) , GoBoolToDBool(ARecurse) )
    return DBoolToGoBool(ret)
}

func TreeNodes_GetNamePath(obj uintptr) string {
    ret, _, _ := treeNodes_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNodes_ClassType(obj uintptr) TClass {
    ret, _, _ := treeNodes_ClassType.Call(obj)
    return TClass(ret)
}

func TreeNodes_ClassName(obj uintptr) string {
    ret, _, _ := treeNodes_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNodes_InstanceSize(obj uintptr) int32 {
    ret, _, _ := treeNodes_InstanceSize.Call(obj)
    return int32(ret)
}

func TreeNodes_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := treeNodes_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TreeNodes_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := treeNodes_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TreeNodes_GetHashCode(obj uintptr) int32 {
    ret, _, _ := treeNodes_GetHashCode.Call(obj)
    return int32(ret)
}

func TreeNodes_ToString(obj uintptr) string {
    ret, _, _ := treeNodes_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNodes_GetCount(obj uintptr) int32 {
    ret, _, _ := treeNodes_GetCount.Call(obj)
    return int32(ret)
}

func TreeNodes_GetOwner(obj uintptr) uintptr {
    ret, _, _ := treeNodes_GetOwner.Call(obj)
    return ret
}

func TreeNodes_GetItem(obj uintptr, Index int32) uintptr {
    ret, _, _ := treeNodes_GetItem.Call(obj, uintptr(Index))
    return ret
}

func TreeNodes_StaticClassType() TClass {
    r, _, _:= treeNodes_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListItem ---------------------------

func ListItem_Create(obj uintptr) uintptr {
    ret, _, _ := listItem_Create.Call(obj)
    return ret
}

func ListItem_Free(obj uintptr) {
    listItem_Free.Call(obj)
}

func ListItem_Assign(obj uintptr, Source uintptr)  {
    listItem_Assign.Call(obj, Source )
}

func ListItem_Delete(obj uintptr)  {
    listItem_Delete.Call(obj)
}

func ListItem_DisplayRect(obj uintptr, Code TDisplayCode) TRect {
    var ret TRect
    listItem_DisplayRect.Call(obj, uintptr(Code) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListItem_EditCaption(obj uintptr) bool {
    ret, _, _ := listItem_EditCaption.Call(obj)
    return DBoolToGoBool(ret)
}

func ListItem_MakeVisible(obj uintptr, PartialOK bool)  {
    listItem_MakeVisible.Call(obj, GoBoolToDBool(PartialOK) )
}

func ListItem_GetNamePath(obj uintptr) string {
    ret, _, _ := listItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListItem_ClassType(obj uintptr) TClass {
    ret, _, _ := listItem_ClassType.Call(obj)
    return TClass(ret)
}

func ListItem_ClassName(obj uintptr) string {
    ret, _, _ := listItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listItem_InstanceSize.Call(obj)
    return int32(ret)
}

func ListItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listItem_GetHashCode.Call(obj)
    return int32(ret)
}

func ListItem_ToString(obj uintptr) string {
    ret, _, _ := listItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListItem_GetCaption(obj uintptr) string {
    ret, _, _ := listItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ListItem_SetCaption(obj uintptr, value string) {
   listItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func ListItem_GetChecked(obj uintptr) bool {
    ret, _, _ := listItem_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func ListItem_SetChecked(obj uintptr, value bool) {
   listItem_SetChecked.Call(obj, GoBoolToDBool(value))
}

func ListItem_GetCut(obj uintptr) bool {
    ret, _, _ := listItem_GetCut.Call(obj)
    return DBoolToGoBool(ret)
}

func ListItem_SetCut(obj uintptr, value bool) {
   listItem_SetCut.Call(obj, GoBoolToDBool(value))
}

func ListItem_GetData(obj uintptr) unsafe.Pointer {
    ret, _, _ := listItem_GetData.Call(obj)
    return unsafe.Pointer(ret)
}

func ListItem_SetData(obj uintptr, value unsafe.Pointer) {
   listItem_SetData.Call(obj, uintptr(value))
}

func ListItem_GetFocused(obj uintptr) bool {
    ret, _, _ := listItem_GetFocused.Call(obj)
    return DBoolToGoBool(ret)
}

func ListItem_SetFocused(obj uintptr, value bool) {
   listItem_SetFocused.Call(obj, GoBoolToDBool(value))
}

func ListItem_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := listItem_GetImageIndex.Call(obj)
    return int32(ret)
}

func ListItem_SetImageIndex(obj uintptr, value int32) {
   listItem_SetImageIndex.Call(obj, uintptr(value))
}

func ListItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := listItem_GetIndex.Call(obj)
    return int32(ret)
}

func ListItem_GetLeft(obj uintptr) int32 {
    ret, _, _ := listItem_GetLeft.Call(obj)
    return int32(ret)
}

func ListItem_SetLeft(obj uintptr, value int32) {
   listItem_SetLeft.Call(obj, uintptr(value))
}

func ListItem_GetListView(obj uintptr) uintptr {
    ret, _, _ := listItem_GetListView.Call(obj)
    return ret
}

func ListItem_GetOwner(obj uintptr) uintptr {
    ret, _, _ := listItem_GetOwner.Call(obj)
    return ret
}

func ListItem_GetPosition(obj uintptr) TPoint {
    var ret TPoint
    listItem_GetPosition.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ListItem_SetPosition(obj uintptr, value TPoint) {
   listItem_SetPosition.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ListItem_GetSelected(obj uintptr) bool {
    ret, _, _ := listItem_GetSelected.Call(obj)
    return DBoolToGoBool(ret)
}

func ListItem_SetSelected(obj uintptr, value bool) {
   listItem_SetSelected.Call(obj, GoBoolToDBool(value))
}

func ListItem_GetStateIndex(obj uintptr) int32 {
    ret, _, _ := listItem_GetStateIndex.Call(obj)
    return int32(ret)
}

func ListItem_SetStateIndex(obj uintptr, value int32) {
   listItem_SetStateIndex.Call(obj, uintptr(value))
}

func ListItem_GetSubItems(obj uintptr) uintptr {
    ret, _, _ := listItem_GetSubItems.Call(obj)
    return ret
}

func ListItem_SetSubItems(obj uintptr, value uintptr) {
   listItem_SetSubItems.Call(obj, value)
}

func ListItem_GetTop(obj uintptr) int32 {
    ret, _, _ := listItem_GetTop.Call(obj)
    return int32(ret)
}

func ListItem_SetTop(obj uintptr, value int32) {
   listItem_SetTop.Call(obj, uintptr(value))
}

func ListItem_GetSubItemImages(obj uintptr, Index int32) int32 {
    ret, _, _ := listItem_GetSubItemImages.Call(obj, uintptr(Index))
    return int32(ret)
}

func ListItem_SetSubItemImages(obj uintptr, Index int32, value int32) {
   listItem_SetSubItemImages.Call(obj, uintptr(Index), uintptr(value))
}

func ListItem_StaticClassType() TClass {
    r, _, _:= listItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTreeNode ---------------------------

func TreeNode_Create(obj uintptr) uintptr {
    ret, _, _ := treeNode_Create.Call(obj)
    return ret
}

func TreeNode_Free(obj uintptr) {
    treeNode_Free.Call(obj)
}

func TreeNode_Assign(obj uintptr, Source uintptr)  {
    treeNode_Assign.Call(obj, Source )
}

func TreeNode_Collapse(obj uintptr, Recurse bool)  {
    treeNode_Collapse.Call(obj, GoBoolToDBool(Recurse) )
}

func TreeNode_Delete(obj uintptr)  {
    treeNode_Delete.Call(obj)
}

func TreeNode_DisplayRect(obj uintptr, TextOnly bool) TRect {
    var ret TRect
    treeNode_DisplayRect.Call(obj, GoBoolToDBool(TextOnly) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TreeNode_EditText(obj uintptr) bool {
    ret, _, _ := treeNode_EditText.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_Expand(obj uintptr, Recurse bool)  {
    treeNode_Expand.Call(obj, GoBoolToDBool(Recurse) )
}

func TreeNode_IndexOf(obj uintptr, Value uintptr) int32 {
    ret, _, _ := treeNode_IndexOf.Call(obj, Value )
    return int32(ret)
}

func TreeNode_MakeVisible(obj uintptr)  {
    treeNode_MakeVisible.Call(obj)
}

func TreeNode_MoveTo(obj uintptr, Destination uintptr, Mode TNodeAttachMode)  {
    treeNode_MoveTo.Call(obj, Destination , uintptr(Mode) )
}

func TreeNode_CustomSort(obj uintptr, SortProc PFNTVCOMPARE, Data int, ARecurse bool) bool {
    ret, _, _ := treeNode_CustomSort.Call(obj, uintptr(SortProc) , uintptr(Data) , GoBoolToDBool(ARecurse) )
    return DBoolToGoBool(ret)
}

func TreeNode_GetNamePath(obj uintptr) string {
    ret, _, _ := treeNode_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNode_ClassType(obj uintptr) TClass {
    ret, _, _ := treeNode_ClassType.Call(obj)
    return TClass(ret)
}

func TreeNode_ClassName(obj uintptr) string {
    ret, _, _ := treeNode_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNode_InstanceSize(obj uintptr) int32 {
    ret, _, _ := treeNode_InstanceSize.Call(obj)
    return int32(ret)
}

func TreeNode_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := treeNode_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TreeNode_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := treeNode_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TreeNode_GetHashCode(obj uintptr) int32 {
    ret, _, _ := treeNode_GetHashCode.Call(obj)
    return int32(ret)
}

func TreeNode_ToString(obj uintptr) string {
    ret, _, _ := treeNode_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNode_GetAbsoluteIndex(obj uintptr) int32 {
    ret, _, _ := treeNode_GetAbsoluteIndex.Call(obj)
    return int32(ret)
}

func TreeNode_GetCount(obj uintptr) int32 {
    ret, _, _ := treeNode_GetCount.Call(obj)
    return int32(ret)
}

func TreeNode_GetCut(obj uintptr) bool {
    ret, _, _ := treeNode_GetCut.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_SetCut(obj uintptr, value bool) {
   treeNode_SetCut.Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetData(obj uintptr) unsafe.Pointer {
    ret, _, _ := treeNode_GetData.Call(obj)
    return unsafe.Pointer(ret)
}

func TreeNode_SetData(obj uintptr, value unsafe.Pointer) {
   treeNode_SetData.Call(obj, uintptr(value))
}

func TreeNode_GetDeleting(obj uintptr) bool {
    ret, _, _ := treeNode_GetDeleting.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_GetFocused(obj uintptr) bool {
    ret, _, _ := treeNode_GetFocused.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_SetFocused(obj uintptr, value bool) {
   treeNode_SetFocused.Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetSelected(obj uintptr) bool {
    ret, _, _ := treeNode_GetSelected.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_SetSelected(obj uintptr, value bool) {
   treeNode_SetSelected.Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetExpanded(obj uintptr) bool {
    ret, _, _ := treeNode_GetExpanded.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_SetExpanded(obj uintptr, value bool) {
   treeNode_SetExpanded.Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetHandle(obj uintptr) HWND {
    ret, _, _ := treeNode_GetHandle.Call(obj)
    return HWND(ret)
}

func TreeNode_GetHasChildren(obj uintptr) bool {
    ret, _, _ := treeNode_GetHasChildren.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_SetHasChildren(obj uintptr, value bool) {
   treeNode_SetHasChildren.Call(obj, GoBoolToDBool(value))
}

func TreeNode_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := treeNode_GetImageIndex.Call(obj)
    return int32(ret)
}

func TreeNode_SetImageIndex(obj uintptr, value int32) {
   treeNode_SetImageIndex.Call(obj, uintptr(value))
}

func TreeNode_GetIndex(obj uintptr) int32 {
    ret, _, _ := treeNode_GetIndex.Call(obj)
    return int32(ret)
}

func TreeNode_GetIsVisible(obj uintptr) bool {
    ret, _, _ := treeNode_GetIsVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TreeNode_GetLevel(obj uintptr) int32 {
    ret, _, _ := treeNode_GetLevel.Call(obj)
    return int32(ret)
}

func TreeNode_GetOwner(obj uintptr) uintptr {
    ret, _, _ := treeNode_GetOwner.Call(obj)
    return ret
}

func TreeNode_GetParent(obj uintptr) uintptr {
    ret, _, _ := treeNode_GetParent.Call(obj)
    return ret
}

func TreeNode_GetSelectedIndex(obj uintptr) int32 {
    ret, _, _ := treeNode_GetSelectedIndex.Call(obj)
    return int32(ret)
}

func TreeNode_SetSelectedIndex(obj uintptr, value int32) {
   treeNode_SetSelectedIndex.Call(obj, uintptr(value))
}

func TreeNode_GetStateIndex(obj uintptr) int32 {
    ret, _, _ := treeNode_GetStateIndex.Call(obj)
    return int32(ret)
}

func TreeNode_SetStateIndex(obj uintptr, value int32) {
   treeNode_SetStateIndex.Call(obj, uintptr(value))
}

func TreeNode_GetText(obj uintptr) string {
    ret, _, _ := treeNode_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func TreeNode_SetText(obj uintptr, value string) {
   treeNode_SetText.Call(obj, GoStrToDStr(value))
}

func TreeNode_GetTreeView(obj uintptr) uintptr {
    ret, _, _ := treeNode_GetTreeView.Call(obj)
    return ret
}

func TreeNode_GetItem(obj uintptr, Index int32) uintptr {
    ret, _, _ := treeNode_GetItem.Call(obj, uintptr(Index))
    return ret
}

func TreeNode_SetItem(obj uintptr, Index int32, value uintptr) {
   treeNode_SetItem.Call(obj, uintptr(Index), value)
}

func TreeNode_StaticClassType() TClass {
    r, _, _:= treeNode_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPageControl ---------------------------

func PageControl_Create(obj uintptr) uintptr {
    ret, _, _ := pageControl_Create.Call(obj)
    return ret
}

func PageControl_Free(obj uintptr) {
    pageControl_Free.Call(obj)
}

func PageControl_SelectNextPage(obj uintptr, GoForward bool, CheckTabVisible bool)  {
    pageControl_SelectNextPage.Call(obj, GoBoolToDBool(GoForward) , GoBoolToDBool(CheckTabVisible) )
}

func PageControl_TabRect(obj uintptr, Index int32) TRect {
    var ret TRect
    pageControl_TabRect.Call(obj, uintptr(Index) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_CanFocus(obj uintptr) bool {
    ret, _, _ := pageControl_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := pageControl_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func PageControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := pageControl_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func PageControl_DisableAlign(obj uintptr)  {
    pageControl_DisableAlign.Call(obj)
}

func PageControl_EnableAlign(obj uintptr)  {
    pageControl_EnableAlign.Call(obj)
}

func PageControl_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := pageControl_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func PageControl_FlipChildren(obj uintptr, AllLevels bool)  {
    pageControl_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func PageControl_Focused(obj uintptr) bool {
    ret, _, _ := pageControl_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_HandleAllocated(obj uintptr) bool {
    ret, _, _ := pageControl_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_InsertControl(obj uintptr, AControl uintptr)  {
    pageControl_InsertControl.Call(obj, AControl )
}

func PageControl_Invalidate(obj uintptr)  {
    pageControl_Invalidate.Call(obj)
}

func PageControl_RemoveControl(obj uintptr, AControl uintptr)  {
    pageControl_RemoveControl.Call(obj, AControl )
}

func PageControl_Realign(obj uintptr)  {
    pageControl_Realign.Call(obj)
}

func PageControl_Repaint(obj uintptr)  {
    pageControl_Repaint.Call(obj)
}

func PageControl_ScaleBy(obj uintptr, M int32, D int32)  {
    pageControl_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func PageControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    pageControl_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func PageControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    pageControl_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func PageControl_SetFocus(obj uintptr)  {
    pageControl_SetFocus.Call(obj)
}

func PageControl_Update(obj uintptr)  {
    pageControl_Update.Call(obj)
}

func PageControl_BringToFront(obj uintptr)  {
    pageControl_BringToFront.Call(obj)
}

func PageControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    pageControl_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    pageControl_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_Dragging(obj uintptr) bool {
    ret, _, _ := pageControl_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_HasParent(obj uintptr) bool {
    ret, _, _ := pageControl_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_Hide(obj uintptr)  {
    pageControl_Hide.Call(obj)
}

func PageControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := pageControl_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func PageControl_Refresh(obj uintptr)  {
    pageControl_Refresh.Call(obj)
}

func PageControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    pageControl_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    pageControl_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_SendToBack(obj uintptr)  {
    pageControl_SendToBack.Call(obj)
}

func PageControl_Show(obj uintptr)  {
    pageControl_Show.Call(obj)
}

func PageControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := pageControl_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func PageControl_GetTextLen(obj uintptr) int32 {
    ret, _, _ := pageControl_GetTextLen.Call(obj)
    return int32(ret)
}

func PageControl_SetTextBuf(obj uintptr, Buffer string)  {
    pageControl_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func PageControl_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := pageControl_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PageControl_GetNamePath(obj uintptr) string {
    ret, _, _ := pageControl_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PageControl_Assign(obj uintptr, Source uintptr)  {
    pageControl_Assign.Call(obj, Source )
}

func PageControl_ClassType(obj uintptr) TClass {
    ret, _, _ := pageControl_ClassType.Call(obj)
    return TClass(ret)
}

func PageControl_ClassName(obj uintptr) string {
    ret, _, _ := pageControl_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PageControl_InstanceSize(obj uintptr) int32 {
    ret, _, _ := pageControl_InstanceSize.Call(obj)
    return int32(ret)
}

func PageControl_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := pageControl_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PageControl_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := pageControl_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PageControl_GetHashCode(obj uintptr) int32 {
    ret, _, _ := pageControl_GetHashCode.Call(obj)
    return int32(ret)
}

func PageControl_ToString(obj uintptr) string {
    ret, _, _ := pageControl_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PageControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    pageControl_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func PageControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    pageControl_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func PageControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    pageControl_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func PageControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    pageControl_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func PageControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    pageControl_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func PageControl_AnchorClient(obj uintptr, ASpace int32)  {
    pageControl_AnchorClient.Call(obj, uintptr(ASpace) )
}

func PageControl_GetOptions(obj uintptr) TCTabControlOptions {
    ret, _, _ := pageControl_GetOptions.Call(obj)
    return TCTabControlOptions(ret)
}

func PageControl_SetOptions(obj uintptr, value TCTabControlOptions) {
   pageControl_SetOptions.Call(obj, uintptr(value))
}

func PageControl_GetActivePageIndex(obj uintptr) int32 {
    ret, _, _ := pageControl_GetActivePageIndex.Call(obj)
    return int32(ret)
}

func PageControl_SetActivePageIndex(obj uintptr, value int32) {
   pageControl_SetActivePageIndex.Call(obj, uintptr(value))
}

func PageControl_GetPageCount(obj uintptr) int32 {
    ret, _, _ := pageControl_GetPageCount.Call(obj)
    return int32(ret)
}

func PageControl_GetAlign(obj uintptr) TAlign {
    ret, _, _ := pageControl_GetAlign.Call(obj)
    return TAlign(ret)
}

func PageControl_SetAlign(obj uintptr, value TAlign) {
   pageControl_SetAlign.Call(obj, uintptr(value))
}

func PageControl_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := pageControl_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func PageControl_SetAnchors(obj uintptr, value TAnchors) {
   pageControl_SetAnchors.Call(obj, uintptr(value))
}

func PageControl_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := pageControl_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func PageControl_SetBiDiMode(obj uintptr, value TBiDiMode) {
   pageControl_SetBiDiMode.Call(obj, uintptr(value))
}

func PageControl_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetConstraints.Call(obj)
    return ret
}

func PageControl_SetConstraints(obj uintptr, value uintptr) {
   pageControl_SetConstraints.Call(obj, value)
}

func PageControl_GetDockSite(obj uintptr) bool {
    ret, _, _ := pageControl_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetDockSite(obj uintptr, value bool) {
   pageControl_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := pageControl_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetDoubleBuffered(obj uintptr, value bool) {
   pageControl_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := pageControl_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func PageControl_SetDragCursor(obj uintptr, value TCursor) {
   pageControl_SetDragCursor.Call(obj, uintptr(value))
}

func PageControl_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := pageControl_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func PageControl_SetDragKind(obj uintptr, value TDragKind) {
   pageControl_SetDragKind.Call(obj, uintptr(value))
}

func PageControl_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := pageControl_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func PageControl_SetDragMode(obj uintptr, value TDragMode) {
   pageControl_SetDragMode.Call(obj, uintptr(value))
}

func PageControl_GetEnabled(obj uintptr) bool {
    ret, _, _ := pageControl_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetEnabled(obj uintptr, value bool) {
   pageControl_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetFont(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetFont.Call(obj)
    return ret
}

func PageControl_SetFont(obj uintptr, value uintptr) {
   pageControl_SetFont.Call(obj, value)
}

func PageControl_GetImages(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetImages.Call(obj)
    return ret
}

func PageControl_SetImages(obj uintptr, value uintptr) {
   pageControl_SetImages.Call(obj, value)
}

func PageControl_GetMultiLine(obj uintptr) bool {
    ret, _, _ := pageControl_GetMultiLine.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetMultiLine(obj uintptr, value bool) {
   pageControl_SetMultiLine.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := pageControl_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetParentDoubleBuffered(obj uintptr, value bool) {
   pageControl_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentFont(obj uintptr) bool {
    ret, _, _ := pageControl_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetParentFont(obj uintptr, value bool) {
   pageControl_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := pageControl_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetParentShowHint(obj uintptr, value bool) {
   pageControl_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetPopupMenu.Call(obj)
    return ret
}

func PageControl_SetPopupMenu(obj uintptr, value uintptr) {
   pageControl_SetPopupMenu.Call(obj, value)
}

func PageControl_GetShowHint(obj uintptr) bool {
    ret, _, _ := pageControl_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetShowHint(obj uintptr, value bool) {
   pageControl_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetTabHeight(obj uintptr) int16 {
    ret, _, _ := pageControl_GetTabHeight.Call(obj)
    return int16(ret)
}

func PageControl_SetTabHeight(obj uintptr, value int16) {
   pageControl_SetTabHeight.Call(obj, uintptr(value))
}

func PageControl_GetTabIndex(obj uintptr) int32 {
    ret, _, _ := pageControl_GetTabIndex.Call(obj)
    return int32(ret)
}

func PageControl_SetTabIndex(obj uintptr, value int32) {
   pageControl_SetTabIndex.Call(obj, uintptr(value))
}

func PageControl_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := pageControl_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func PageControl_SetTabOrder(obj uintptr, value TTabOrder) {
   pageControl_SetTabOrder.Call(obj, uintptr(value))
}

func PageControl_GetTabPosition(obj uintptr) TTabPosition {
    ret, _, _ := pageControl_GetTabPosition.Call(obj)
    return TTabPosition(ret)
}

func PageControl_SetTabPosition(obj uintptr, value TTabPosition) {
   pageControl_SetTabPosition.Call(obj, uintptr(value))
}

func PageControl_GetTabStop(obj uintptr) bool {
    ret, _, _ := pageControl_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetTabStop(obj uintptr, value bool) {
   pageControl_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetTabWidth(obj uintptr) int16 {
    ret, _, _ := pageControl_GetTabWidth.Call(obj)
    return int16(ret)
}

func PageControl_SetTabWidth(obj uintptr, value int16) {
   pageControl_SetTabWidth.Call(obj, uintptr(value))
}

func PageControl_GetVisible(obj uintptr) bool {
    ret, _, _ := pageControl_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetVisible(obj uintptr, value bool) {
   pageControl_SetVisible.Call(obj, GoBoolToDBool(value))
}

func PageControl_SetOnChange(obj uintptr, fn interface{}) {
    pageControl_SetOnChange.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnChanging(obj uintptr, fn interface{}) {
    pageControl_SetOnChanging.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnContextPopup(obj uintptr, fn interface{}) {
    pageControl_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnDockDrop(obj uintptr, fn interface{}) {
    pageControl_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnDragDrop(obj uintptr, fn interface{}) {
    pageControl_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnDragOver(obj uintptr, fn interface{}) {
    pageControl_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnEndDock(obj uintptr, fn interface{}) {
    pageControl_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnEndDrag(obj uintptr, fn interface{}) {
    pageControl_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnEnter(obj uintptr, fn interface{}) {
    pageControl_SetOnEnter.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnExit(obj uintptr, fn interface{}) {
    pageControl_SetOnExit.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    pageControl_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnMouseDown(obj uintptr, fn interface{}) {
    pageControl_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnMouseEnter(obj uintptr, fn interface{}) {
    pageControl_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnMouseLeave(obj uintptr, fn interface{}) {
    pageControl_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnMouseMove(obj uintptr, fn interface{}) {
    pageControl_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnMouseUp(obj uintptr, fn interface{}) {
    pageControl_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnResize(obj uintptr, fn interface{}) {
    pageControl_SetOnResize.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnStartDock(obj uintptr, fn interface{}) {
    pageControl_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func PageControl_SetOnUnDock(obj uintptr, fn interface{}) {
    pageControl_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func PageControl_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := pageControl_GetDockClientCount.Call(obj)
    return int32(ret)
}

func PageControl_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := pageControl_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := pageControl_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func PageControl_GetBrush(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetBrush.Call(obj)
    return ret
}

func PageControl_GetControlCount(obj uintptr) int32 {
    ret, _, _ := pageControl_GetControlCount.Call(obj)
    return int32(ret)
}

func PageControl_GetHandle(obj uintptr) HWND {
    ret, _, _ := pageControl_GetHandle.Call(obj)
    return HWND(ret)
}

func PageControl_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := pageControl_GetParentWindow.Call(obj)
    return HWND(ret)
}

func PageControl_SetParentWindow(obj uintptr, value HWND) {
   pageControl_SetParentWindow.Call(obj, uintptr(value))
}

func PageControl_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := pageControl_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_SetUseDockManager(obj uintptr, value bool) {
   pageControl_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func PageControl_GetAction(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetAction.Call(obj)
    return ret
}

func PageControl_SetAction(obj uintptr, value uintptr) {
   pageControl_SetAction.Call(obj, value)
}

func PageControl_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    pageControl_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_SetBoundsRect(obj uintptr, value TRect) {
   pageControl_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func PageControl_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := pageControl_GetClientHeight.Call(obj)
    return int32(ret)
}

func PageControl_SetClientHeight(obj uintptr, value int32) {
   pageControl_SetClientHeight.Call(obj, uintptr(value))
}

func PageControl_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    pageControl_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_GetClientRect(obj uintptr) TRect {
    var ret TRect
    pageControl_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PageControl_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := pageControl_GetClientWidth.Call(obj)
    return int32(ret)
}

func PageControl_SetClientWidth(obj uintptr, value int32) {
   pageControl_SetClientWidth.Call(obj, uintptr(value))
}

func PageControl_GetControlState(obj uintptr) TControlState {
    ret, _, _ := pageControl_GetControlState.Call(obj)
    return TControlState(ret)
}

func PageControl_SetControlState(obj uintptr, value TControlState) {
   pageControl_SetControlState.Call(obj, uintptr(value))
}

func PageControl_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := pageControl_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func PageControl_SetControlStyle(obj uintptr, value TControlStyle) {
   pageControl_SetControlStyle.Call(obj, uintptr(value))
}

func PageControl_GetFloating(obj uintptr) bool {
    ret, _, _ := pageControl_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func PageControl_GetParent(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetParent.Call(obj)
    return ret
}

func PageControl_SetParent(obj uintptr, value uintptr) {
   pageControl_SetParent.Call(obj, value)
}

func PageControl_GetLeft(obj uintptr) int32 {
    ret, _, _ := pageControl_GetLeft.Call(obj)
    return int32(ret)
}

func PageControl_SetLeft(obj uintptr, value int32) {
   pageControl_SetLeft.Call(obj, uintptr(value))
}

func PageControl_GetTop(obj uintptr) int32 {
    ret, _, _ := pageControl_GetTop.Call(obj)
    return int32(ret)
}

func PageControl_SetTop(obj uintptr, value int32) {
   pageControl_SetTop.Call(obj, uintptr(value))
}

func PageControl_GetWidth(obj uintptr) int32 {
    ret, _, _ := pageControl_GetWidth.Call(obj)
    return int32(ret)
}

func PageControl_SetWidth(obj uintptr, value int32) {
   pageControl_SetWidth.Call(obj, uintptr(value))
}

func PageControl_GetHeight(obj uintptr) int32 {
    ret, _, _ := pageControl_GetHeight.Call(obj)
    return int32(ret)
}

func PageControl_SetHeight(obj uintptr, value int32) {
   pageControl_SetHeight.Call(obj, uintptr(value))
}

func PageControl_GetCursor(obj uintptr) TCursor {
    ret, _, _ := pageControl_GetCursor.Call(obj)
    return TCursor(ret)
}

func PageControl_SetCursor(obj uintptr, value TCursor) {
   pageControl_SetCursor.Call(obj, uintptr(value))
}

func PageControl_GetHint(obj uintptr) string {
    ret, _, _ := pageControl_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func PageControl_SetHint(obj uintptr, value string) {
   pageControl_SetHint.Call(obj, GoStrToDStr(value))
}

func PageControl_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := pageControl_GetComponentCount.Call(obj)
    return int32(ret)
}

func PageControl_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := pageControl_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PageControl_SetComponentIndex(obj uintptr, value int32) {
   pageControl_SetComponentIndex.Call(obj, uintptr(value))
}

func PageControl_GetOwner(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetOwner.Call(obj)
    return ret
}

func PageControl_GetName(obj uintptr) string {
    ret, _, _ := pageControl_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PageControl_SetName(obj uintptr, value string) {
   pageControl_SetName.Call(obj, GoStrToDStr(value))
}

func PageControl_GetTag(obj uintptr) int {
    ret, _, _ := pageControl_GetTag.Call(obj)
    return int(ret)
}

func PageControl_SetTag(obj uintptr, value int) {
   pageControl_SetTag.Call(obj, uintptr(value))
}

func PageControl_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetAnchorSideLeft.Call(obj)
    return ret
}

func PageControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
   pageControl_SetAnchorSideLeft.Call(obj, value)
}

func PageControl_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetAnchorSideTop.Call(obj)
    return ret
}

func PageControl_SetAnchorSideTop(obj uintptr, value uintptr) {
   pageControl_SetAnchorSideTop.Call(obj, value)
}

func PageControl_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetAnchorSideRight.Call(obj)
    return ret
}

func PageControl_SetAnchorSideRight(obj uintptr, value uintptr) {
   pageControl_SetAnchorSideRight.Call(obj, value)
}

func PageControl_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetAnchorSideBottom.Call(obj)
    return ret
}

func PageControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
   pageControl_SetAnchorSideBottom.Call(obj, value)
}

func PageControl_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetChildSizing.Call(obj)
    return ret
}

func PageControl_SetChildSizing(obj uintptr, value uintptr) {
   pageControl_SetChildSizing.Call(obj, value)
}

func PageControl_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := pageControl_GetBorderSpacing.Call(obj)
    return ret
}

func PageControl_SetBorderSpacing(obj uintptr, value uintptr) {
   pageControl_SetBorderSpacing.Call(obj, value)
}

func PageControl_GetPages(obj uintptr, Index int32) uintptr {
    ret, _, _ := pageControl_GetPages.Call(obj, uintptr(Index))
    return ret
}

func PageControl_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := pageControl_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func PageControl_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := pageControl_GetControls.Call(obj, uintptr(Index))
    return ret
}

func PageControl_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := pageControl_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PageControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := pageControl_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func PageControl_StaticClassType() TClass {
    r, _, _:= pageControl_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTabSheet ---------------------------

func TabSheet_Create(obj uintptr) uintptr {
    ret, _, _ := tabSheet_Create.Call(obj)
    return ret
}

func TabSheet_Free(obj uintptr) {
    tabSheet_Free.Call(obj)
}

func TabSheet_CanFocus(obj uintptr) bool {
    ret, _, _ := tabSheet_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := tabSheet_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func TabSheet_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := tabSheet_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func TabSheet_DisableAlign(obj uintptr)  {
    tabSheet_DisableAlign.Call(obj)
}

func TabSheet_EnableAlign(obj uintptr)  {
    tabSheet_EnableAlign.Call(obj)
}

func TabSheet_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := tabSheet_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func TabSheet_FlipChildren(obj uintptr, AllLevels bool)  {
    tabSheet_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func TabSheet_Focused(obj uintptr) bool {
    ret, _, _ := tabSheet_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_HandleAllocated(obj uintptr) bool {
    ret, _, _ := tabSheet_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_InsertControl(obj uintptr, AControl uintptr)  {
    tabSheet_InsertControl.Call(obj, AControl )
}

func TabSheet_Invalidate(obj uintptr)  {
    tabSheet_Invalidate.Call(obj)
}

func TabSheet_RemoveControl(obj uintptr, AControl uintptr)  {
    tabSheet_RemoveControl.Call(obj, AControl )
}

func TabSheet_Realign(obj uintptr)  {
    tabSheet_Realign.Call(obj)
}

func TabSheet_Repaint(obj uintptr)  {
    tabSheet_Repaint.Call(obj)
}

func TabSheet_ScaleBy(obj uintptr, M int32, D int32)  {
    tabSheet_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func TabSheet_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    tabSheet_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func TabSheet_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    tabSheet_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func TabSheet_SetFocus(obj uintptr)  {
    tabSheet_SetFocus.Call(obj)
}

func TabSheet_Update(obj uintptr)  {
    tabSheet_Update.Call(obj)
}

func TabSheet_BringToFront(obj uintptr)  {
    tabSheet_BringToFront.Call(obj)
}

func TabSheet_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    tabSheet_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    tabSheet_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_Dragging(obj uintptr) bool {
    ret, _, _ := tabSheet_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_HasParent(obj uintptr) bool {
    ret, _, _ := tabSheet_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_Hide(obj uintptr)  {
    tabSheet_Hide.Call(obj)
}

func TabSheet_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := tabSheet_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func TabSheet_Refresh(obj uintptr)  {
    tabSheet_Refresh.Call(obj)
}

func TabSheet_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    tabSheet_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    tabSheet_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_SendToBack(obj uintptr)  {
    tabSheet_SendToBack.Call(obj)
}

func TabSheet_Show(obj uintptr)  {
    tabSheet_Show.Call(obj)
}

func TabSheet_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := tabSheet_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func TabSheet_GetTextLen(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetTextLen.Call(obj)
    return int32(ret)
}

func TabSheet_SetTextBuf(obj uintptr, Buffer string)  {
    tabSheet_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func TabSheet_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := tabSheet_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func TabSheet_GetNamePath(obj uintptr) string {
    ret, _, _ := tabSheet_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_Assign(obj uintptr, Source uintptr)  {
    tabSheet_Assign.Call(obj, Source )
}

func TabSheet_ClassType(obj uintptr) TClass {
    ret, _, _ := tabSheet_ClassType.Call(obj)
    return TClass(ret)
}

func TabSheet_ClassName(obj uintptr) string {
    ret, _, _ := tabSheet_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_InstanceSize(obj uintptr) int32 {
    ret, _, _ := tabSheet_InstanceSize.Call(obj)
    return int32(ret)
}

func TabSheet_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := tabSheet_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TabSheet_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := tabSheet_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TabSheet_GetHashCode(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetHashCode.Call(obj)
    return int32(ret)
}

func TabSheet_ToString(obj uintptr) string {
    ret, _, _ := tabSheet_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    tabSheet_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TabSheet_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    tabSheet_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func TabSheet_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    tabSheet_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func TabSheet_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    tabSheet_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func TabSheet_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    tabSheet_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func TabSheet_AnchorClient(obj uintptr, ASpace int32)  {
    tabSheet_AnchorClient.Call(obj, uintptr(ASpace) )
}

func TabSheet_GetPageControl(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetPageControl.Call(obj)
    return ret
}

func TabSheet_SetPageControl(obj uintptr, value uintptr) {
   tabSheet_SetPageControl.Call(obj, value)
}

func TabSheet_GetTabIndex(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetTabIndex.Call(obj)
    return int32(ret)
}

func TabSheet_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetBorderWidth.Call(obj)
    return int32(ret)
}

func TabSheet_SetBorderWidth(obj uintptr, value int32) {
   tabSheet_SetBorderWidth.Call(obj, uintptr(value))
}

func TabSheet_GetCaption(obj uintptr) string {
    ret, _, _ := tabSheet_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_SetCaption(obj uintptr, value string) {
   tabSheet_SetCaption.Call(obj, GoStrToDStr(value))
}

func TabSheet_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := tabSheet_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetDoubleBuffered(obj uintptr, value bool) {
   tabSheet_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetEnabled(obj uintptr) bool {
    ret, _, _ := tabSheet_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetEnabled(obj uintptr, value bool) {
   tabSheet_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetFont(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetFont.Call(obj)
    return ret
}

func TabSheet_SetFont(obj uintptr, value uintptr) {
   tabSheet_SetFont.Call(obj, value)
}

func TabSheet_GetHeight(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetHeight.Call(obj)
    return int32(ret)
}

func TabSheet_SetHeight(obj uintptr, value int32) {
   tabSheet_SetHeight.Call(obj, uintptr(value))
}

func TabSheet_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetImageIndex.Call(obj)
    return int32(ret)
}

func TabSheet_SetImageIndex(obj uintptr, value int32) {
   tabSheet_SetImageIndex.Call(obj, uintptr(value))
}

func TabSheet_GetLeft(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetLeft.Call(obj)
    return int32(ret)
}

func TabSheet_SetLeft(obj uintptr, value int32) {
   tabSheet_SetLeft.Call(obj, uintptr(value))
}

func TabSheet_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetConstraints.Call(obj)
    return ret
}

func TabSheet_SetConstraints(obj uintptr, value uintptr) {
   tabSheet_SetConstraints.Call(obj, value)
}

func TabSheet_GetPageIndex(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetPageIndex.Call(obj)
    return int32(ret)
}

func TabSheet_SetPageIndex(obj uintptr, value int32) {
   tabSheet_SetPageIndex.Call(obj, uintptr(value))
}

func TabSheet_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := tabSheet_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetParentDoubleBuffered(obj uintptr, value bool) {
   tabSheet_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetParentFont(obj uintptr) bool {
    ret, _, _ := tabSheet_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetParentFont(obj uintptr, value bool) {
   tabSheet_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := tabSheet_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetParentShowHint(obj uintptr, value bool) {
   tabSheet_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetPopupMenu.Call(obj)
    return ret
}

func TabSheet_SetPopupMenu(obj uintptr, value uintptr) {
   tabSheet_SetPopupMenu.Call(obj, value)
}

func TabSheet_GetShowHint(obj uintptr) bool {
    ret, _, _ := tabSheet_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetShowHint(obj uintptr, value bool) {
   tabSheet_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetTabVisible(obj uintptr) bool {
    ret, _, _ := tabSheet_GetTabVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetTabVisible(obj uintptr, value bool) {
   tabSheet_SetTabVisible.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetTop(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetTop.Call(obj)
    return int32(ret)
}

func TabSheet_SetTop(obj uintptr, value int32) {
   tabSheet_SetTop.Call(obj, uintptr(value))
}

func TabSheet_GetVisible(obj uintptr) bool {
    ret, _, _ := tabSheet_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetVisible(obj uintptr, value bool) {
   tabSheet_SetVisible.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetWidth(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetWidth.Call(obj)
    return int32(ret)
}

func TabSheet_SetWidth(obj uintptr, value int32) {
   tabSheet_SetWidth.Call(obj, uintptr(value))
}

func TabSheet_SetOnContextPopup(obj uintptr, fn interface{}) {
    tabSheet_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnDragDrop(obj uintptr, fn interface{}) {
    tabSheet_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnDragOver(obj uintptr, fn interface{}) {
    tabSheet_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnEndDrag(obj uintptr, fn interface{}) {
    tabSheet_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnEnter(obj uintptr, fn interface{}) {
    tabSheet_SetOnEnter.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnExit(obj uintptr, fn interface{}) {
    tabSheet_SetOnExit.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnHide(obj uintptr, fn interface{}) {
    tabSheet_SetOnHide.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnMouseDown(obj uintptr, fn interface{}) {
    tabSheet_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnMouseEnter(obj uintptr, fn interface{}) {
    tabSheet_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnMouseLeave(obj uintptr, fn interface{}) {
    tabSheet_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnMouseMove(obj uintptr, fn interface{}) {
    tabSheet_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnMouseUp(obj uintptr, fn interface{}) {
    tabSheet_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnResize(obj uintptr, fn interface{}) {
    tabSheet_SetOnResize.Call(obj, addEventToMap(fn))
}

func TabSheet_SetOnShow(obj uintptr, fn interface{}) {
    tabSheet_SetOnShow.Call(obj, addEventToMap(fn))
}

func TabSheet_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetDockClientCount.Call(obj)
    return int32(ret)
}

func TabSheet_GetDockSite(obj uintptr) bool {
    ret, _, _ := tabSheet_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetDockSite(obj uintptr, value bool) {
   tabSheet_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := tabSheet_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func TabSheet_GetBrush(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetBrush.Call(obj)
    return ret
}

func TabSheet_GetControlCount(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetControlCount.Call(obj)
    return int32(ret)
}

func TabSheet_GetHandle(obj uintptr) HWND {
    ret, _, _ := tabSheet_GetHandle.Call(obj)
    return HWND(ret)
}

func TabSheet_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := tabSheet_GetParentWindow.Call(obj)
    return HWND(ret)
}

func TabSheet_SetParentWindow(obj uintptr, value HWND) {
   tabSheet_SetParentWindow.Call(obj, uintptr(value))
}

func TabSheet_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := tabSheet_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func TabSheet_SetTabOrder(obj uintptr, value TTabOrder) {
   tabSheet_SetTabOrder.Call(obj, uintptr(value))
}

func TabSheet_GetTabStop(obj uintptr) bool {
    ret, _, _ := tabSheet_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetTabStop(obj uintptr, value bool) {
   tabSheet_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := tabSheet_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_SetUseDockManager(obj uintptr, value bool) {
   tabSheet_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func TabSheet_GetAction(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetAction.Call(obj)
    return ret
}

func TabSheet_SetAction(obj uintptr, value uintptr) {
   tabSheet_SetAction.Call(obj, value)
}

func TabSheet_GetAlign(obj uintptr) TAlign {
    ret, _, _ := tabSheet_GetAlign.Call(obj)
    return TAlign(ret)
}

func TabSheet_SetAlign(obj uintptr, value TAlign) {
   tabSheet_SetAlign.Call(obj, uintptr(value))
}

func TabSheet_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := tabSheet_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func TabSheet_SetAnchors(obj uintptr, value TAnchors) {
   tabSheet_SetAnchors.Call(obj, uintptr(value))
}

func TabSheet_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := tabSheet_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func TabSheet_SetBiDiMode(obj uintptr, value TBiDiMode) {
   tabSheet_SetBiDiMode.Call(obj, uintptr(value))
}

func TabSheet_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    tabSheet_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_SetBoundsRect(obj uintptr, value TRect) {
   tabSheet_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func TabSheet_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetClientHeight.Call(obj)
    return int32(ret)
}

func TabSheet_SetClientHeight(obj uintptr, value int32) {
   tabSheet_SetClientHeight.Call(obj, uintptr(value))
}

func TabSheet_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    tabSheet_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_GetClientRect(obj uintptr) TRect {
    var ret TRect
    tabSheet_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func TabSheet_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetClientWidth.Call(obj)
    return int32(ret)
}

func TabSheet_SetClientWidth(obj uintptr, value int32) {
   tabSheet_SetClientWidth.Call(obj, uintptr(value))
}

func TabSheet_GetControlState(obj uintptr) TControlState {
    ret, _, _ := tabSheet_GetControlState.Call(obj)
    return TControlState(ret)
}

func TabSheet_SetControlState(obj uintptr, value TControlState) {
   tabSheet_SetControlState.Call(obj, uintptr(value))
}

func TabSheet_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := tabSheet_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func TabSheet_SetControlStyle(obj uintptr, value TControlStyle) {
   tabSheet_SetControlStyle.Call(obj, uintptr(value))
}

func TabSheet_GetFloating(obj uintptr) bool {
    ret, _, _ := tabSheet_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func TabSheet_GetParent(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetParent.Call(obj)
    return ret
}

func TabSheet_SetParent(obj uintptr, value uintptr) {
   tabSheet_SetParent.Call(obj, value)
}

func TabSheet_GetCursor(obj uintptr) TCursor {
    ret, _, _ := tabSheet_GetCursor.Call(obj)
    return TCursor(ret)
}

func TabSheet_SetCursor(obj uintptr, value TCursor) {
   tabSheet_SetCursor.Call(obj, uintptr(value))
}

func TabSheet_GetHint(obj uintptr) string {
    ret, _, _ := tabSheet_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_SetHint(obj uintptr, value string) {
   tabSheet_SetHint.Call(obj, GoStrToDStr(value))
}

func TabSheet_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetComponentCount.Call(obj)
    return int32(ret)
}

func TabSheet_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := tabSheet_GetComponentIndex.Call(obj)
    return int32(ret)
}

func TabSheet_SetComponentIndex(obj uintptr, value int32) {
   tabSheet_SetComponentIndex.Call(obj, uintptr(value))
}

func TabSheet_GetOwner(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetOwner.Call(obj)
    return ret
}

func TabSheet_GetName(obj uintptr) string {
    ret, _, _ := tabSheet_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TabSheet_SetName(obj uintptr, value string) {
   tabSheet_SetName.Call(obj, GoStrToDStr(value))
}

func TabSheet_GetTag(obj uintptr) int {
    ret, _, _ := tabSheet_GetTag.Call(obj)
    return int(ret)
}

func TabSheet_SetTag(obj uintptr, value int) {
   tabSheet_SetTag.Call(obj, uintptr(value))
}

func TabSheet_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetAnchorSideLeft.Call(obj)
    return ret
}

func TabSheet_SetAnchorSideLeft(obj uintptr, value uintptr) {
   tabSheet_SetAnchorSideLeft.Call(obj, value)
}

func TabSheet_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetAnchorSideTop.Call(obj)
    return ret
}

func TabSheet_SetAnchorSideTop(obj uintptr, value uintptr) {
   tabSheet_SetAnchorSideTop.Call(obj, value)
}

func TabSheet_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetAnchorSideRight.Call(obj)
    return ret
}

func TabSheet_SetAnchorSideRight(obj uintptr, value uintptr) {
   tabSheet_SetAnchorSideRight.Call(obj, value)
}

func TabSheet_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetAnchorSideBottom.Call(obj)
    return ret
}

func TabSheet_SetAnchorSideBottom(obj uintptr, value uintptr) {
   tabSheet_SetAnchorSideBottom.Call(obj, value)
}

func TabSheet_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetChildSizing.Call(obj)
    return ret
}

func TabSheet_SetChildSizing(obj uintptr, value uintptr) {
   tabSheet_SetChildSizing.Call(obj, value)
}

func TabSheet_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := tabSheet_GetBorderSpacing.Call(obj)
    return ret
}

func TabSheet_SetBorderSpacing(obj uintptr, value uintptr) {
   tabSheet_SetBorderSpacing.Call(obj, value)
}

func TabSheet_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := tabSheet_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func TabSheet_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := tabSheet_GetControls.Call(obj, uintptr(Index))
    return ret
}

func TabSheet_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := tabSheet_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func TabSheet_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := tabSheet_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func TabSheet_StaticClassType() TClass {
    r, _, _:= tabSheet_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TControl ---------------------------

func Control_Create(obj uintptr) uintptr {
    ret, _, _ := control_Create.Call(obj)
    return ret
}

func Control_Free(obj uintptr) {
    control_Free.Call(obj)
}

func Control_BringToFront(obj uintptr)  {
    control_BringToFront.Call(obj)
}

func Control_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    control_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    control_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_Dragging(obj uintptr) bool {
    ret, _, _ := control_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_HasParent(obj uintptr) bool {
    ret, _, _ := control_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_Hide(obj uintptr)  {
    control_Hide.Call(obj)
}

func Control_Invalidate(obj uintptr)  {
    control_Invalidate.Call(obj)
}

func Control_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := control_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Control_Refresh(obj uintptr)  {
    control_Refresh.Call(obj)
}

func Control_Repaint(obj uintptr)  {
    control_Repaint.Call(obj)
}

func Control_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    control_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    control_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_SendToBack(obj uintptr)  {
    control_SendToBack.Call(obj)
}

func Control_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    control_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Control_Show(obj uintptr)  {
    control_Show.Call(obj)
}

func Control_Update(obj uintptr)  {
    control_Update.Call(obj)
}

func Control_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := control_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Control_GetTextLen(obj uintptr) int32 {
    ret, _, _ := control_GetTextLen.Call(obj)
    return int32(ret)
}

func Control_SetTextBuf(obj uintptr, Buffer string)  {
    control_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Control_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := control_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Control_GetNamePath(obj uintptr) string {
    ret, _, _ := control_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Control_Assign(obj uintptr, Source uintptr)  {
    control_Assign.Call(obj, Source )
}

func Control_ClassType(obj uintptr) TClass {
    ret, _, _ := control_ClassType.Call(obj)
    return TClass(ret)
}

func Control_ClassName(obj uintptr) string {
    ret, _, _ := control_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Control_InstanceSize(obj uintptr) int32 {
    ret, _, _ := control_InstanceSize.Call(obj)
    return int32(ret)
}

func Control_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := control_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Control_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := control_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Control_GetHashCode(obj uintptr) int32 {
    ret, _, _ := control_GetHashCode.Call(obj)
    return int32(ret)
}

func Control_ToString(obj uintptr) string {
    ret, _, _ := control_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Control_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    control_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Control_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    control_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Control_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    control_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Control_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    control_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Control_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    control_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Control_AnchorClient(obj uintptr, ASpace int32)  {
    control_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Control_GetEnabled(obj uintptr) bool {
    ret, _, _ := control_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_SetEnabled(obj uintptr, value bool) {
   control_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Control_GetAction(obj uintptr) uintptr {
    ret, _, _ := control_GetAction.Call(obj)
    return ret
}

func Control_SetAction(obj uintptr, value uintptr) {
   control_SetAction.Call(obj, value)
}

func Control_GetAlign(obj uintptr) TAlign {
    ret, _, _ := control_GetAlign.Call(obj)
    return TAlign(ret)
}

func Control_SetAlign(obj uintptr, value TAlign) {
   control_SetAlign.Call(obj, uintptr(value))
}

func Control_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := control_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Control_SetAnchors(obj uintptr, value TAnchors) {
   control_SetAnchors.Call(obj, uintptr(value))
}

func Control_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := control_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Control_SetBiDiMode(obj uintptr, value TBiDiMode) {
   control_SetBiDiMode.Call(obj, uintptr(value))
}

func Control_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    control_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_SetBoundsRect(obj uintptr, value TRect) {
   control_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Control_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := control_GetClientHeight.Call(obj)
    return int32(ret)
}

func Control_SetClientHeight(obj uintptr, value int32) {
   control_SetClientHeight.Call(obj, uintptr(value))
}

func Control_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    control_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_GetClientRect(obj uintptr) TRect {
    var ret TRect
    control_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Control_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := control_GetClientWidth.Call(obj)
    return int32(ret)
}

func Control_SetClientWidth(obj uintptr, value int32) {
   control_SetClientWidth.Call(obj, uintptr(value))
}

func Control_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := control_GetConstraints.Call(obj)
    return ret
}

func Control_SetConstraints(obj uintptr, value uintptr) {
   control_SetConstraints.Call(obj, value)
}

func Control_GetControlState(obj uintptr) TControlState {
    ret, _, _ := control_GetControlState.Call(obj)
    return TControlState(ret)
}

func Control_SetControlState(obj uintptr, value TControlState) {
   control_SetControlState.Call(obj, uintptr(value))
}

func Control_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := control_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Control_SetControlStyle(obj uintptr, value TControlStyle) {
   control_SetControlStyle.Call(obj, uintptr(value))
}

func Control_GetFloating(obj uintptr) bool {
    ret, _, _ := control_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_GetShowHint(obj uintptr) bool {
    ret, _, _ := control_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_SetShowHint(obj uintptr, value bool) {
   control_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Control_GetVisible(obj uintptr) bool {
    ret, _, _ := control_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Control_SetVisible(obj uintptr, value bool) {
   control_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Control_GetParent(obj uintptr) uintptr {
    ret, _, _ := control_GetParent.Call(obj)
    return ret
}

func Control_SetParent(obj uintptr, value uintptr) {
   control_SetParent.Call(obj, value)
}

func Control_GetLeft(obj uintptr) int32 {
    ret, _, _ := control_GetLeft.Call(obj)
    return int32(ret)
}

func Control_SetLeft(obj uintptr, value int32) {
   control_SetLeft.Call(obj, uintptr(value))
}

func Control_GetTop(obj uintptr) int32 {
    ret, _, _ := control_GetTop.Call(obj)
    return int32(ret)
}

func Control_SetTop(obj uintptr, value int32) {
   control_SetTop.Call(obj, uintptr(value))
}

func Control_GetWidth(obj uintptr) int32 {
    ret, _, _ := control_GetWidth.Call(obj)
    return int32(ret)
}

func Control_SetWidth(obj uintptr, value int32) {
   control_SetWidth.Call(obj, uintptr(value))
}

func Control_GetHeight(obj uintptr) int32 {
    ret, _, _ := control_GetHeight.Call(obj)
    return int32(ret)
}

func Control_SetHeight(obj uintptr, value int32) {
   control_SetHeight.Call(obj, uintptr(value))
}

func Control_GetCursor(obj uintptr) TCursor {
    ret, _, _ := control_GetCursor.Call(obj)
    return TCursor(ret)
}

func Control_SetCursor(obj uintptr, value TCursor) {
   control_SetCursor.Call(obj, uintptr(value))
}

func Control_GetHint(obj uintptr) string {
    ret, _, _ := control_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Control_SetHint(obj uintptr, value string) {
   control_SetHint.Call(obj, GoStrToDStr(value))
}

func Control_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := control_GetComponentCount.Call(obj)
    return int32(ret)
}

func Control_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := control_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Control_SetComponentIndex(obj uintptr, value int32) {
   control_SetComponentIndex.Call(obj, uintptr(value))
}

func Control_GetOwner(obj uintptr) uintptr {
    ret, _, _ := control_GetOwner.Call(obj)
    return ret
}

func Control_GetName(obj uintptr) string {
    ret, _, _ := control_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Control_SetName(obj uintptr, value string) {
   control_SetName.Call(obj, GoStrToDStr(value))
}

func Control_GetTag(obj uintptr) int {
    ret, _, _ := control_GetTag.Call(obj)
    return int(ret)
}

func Control_SetTag(obj uintptr, value int) {
   control_SetTag.Call(obj, uintptr(value))
}

func Control_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := control_GetAnchorSideLeft.Call(obj)
    return ret
}

func Control_SetAnchorSideLeft(obj uintptr, value uintptr) {
   control_SetAnchorSideLeft.Call(obj, value)
}

func Control_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := control_GetAnchorSideTop.Call(obj)
    return ret
}

func Control_SetAnchorSideTop(obj uintptr, value uintptr) {
   control_SetAnchorSideTop.Call(obj, value)
}

func Control_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := control_GetAnchorSideRight.Call(obj)
    return ret
}

func Control_SetAnchorSideRight(obj uintptr, value uintptr) {
   control_SetAnchorSideRight.Call(obj, value)
}

func Control_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := control_GetAnchorSideBottom.Call(obj)
    return ret
}

func Control_SetAnchorSideBottom(obj uintptr, value uintptr) {
   control_SetAnchorSideBottom.Call(obj, value)
}

func Control_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := control_GetBorderSpacing.Call(obj)
    return ret
}

func Control_SetBorderSpacing(obj uintptr, value uintptr) {
   control_SetBorderSpacing.Call(obj, value)
}

func Control_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := control_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Control_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := control_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Control_StaticClassType() TClass {
    r, _, _:= control_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TWinControl ---------------------------

func WinControl_Create(obj uintptr) uintptr {
    ret, _, _ := winControl_Create.Call(obj)
    return ret
}

func WinControl_Free(obj uintptr) {
    winControl_Free.Call(obj)
}

func WinControl_CanFocus(obj uintptr) bool {
    ret, _, _ := winControl_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := winControl_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func WinControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := winControl_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func WinControl_DisableAlign(obj uintptr)  {
    winControl_DisableAlign.Call(obj)
}

func WinControl_EnableAlign(obj uintptr)  {
    winControl_EnableAlign.Call(obj)
}

func WinControl_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := winControl_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func WinControl_FlipChildren(obj uintptr, AllLevels bool)  {
    winControl_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func WinControl_Focused(obj uintptr) bool {
    ret, _, _ := winControl_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_HandleAllocated(obj uintptr) bool {
    ret, _, _ := winControl_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_InsertControl(obj uintptr, AControl uintptr)  {
    winControl_InsertControl.Call(obj, AControl )
}

func WinControl_Invalidate(obj uintptr)  {
    winControl_Invalidate.Call(obj)
}

func WinControl_RemoveControl(obj uintptr, AControl uintptr)  {
    winControl_RemoveControl.Call(obj, AControl )
}

func WinControl_Realign(obj uintptr)  {
    winControl_Realign.Call(obj)
}

func WinControl_Repaint(obj uintptr)  {
    winControl_Repaint.Call(obj)
}

func WinControl_ScaleBy(obj uintptr, M int32, D int32)  {
    winControl_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func WinControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    winControl_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func WinControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    winControl_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func WinControl_SetFocus(obj uintptr)  {
    winControl_SetFocus.Call(obj)
}

func WinControl_Update(obj uintptr)  {
    winControl_Update.Call(obj)
}

func WinControl_BringToFront(obj uintptr)  {
    winControl_BringToFront.Call(obj)
}

func WinControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    winControl_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    winControl_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_Dragging(obj uintptr) bool {
    ret, _, _ := winControl_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_HasParent(obj uintptr) bool {
    ret, _, _ := winControl_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_Hide(obj uintptr)  {
    winControl_Hide.Call(obj)
}

func WinControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := winControl_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func WinControl_Refresh(obj uintptr)  {
    winControl_Refresh.Call(obj)
}

func WinControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    winControl_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    winControl_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_SendToBack(obj uintptr)  {
    winControl_SendToBack.Call(obj)
}

func WinControl_Show(obj uintptr)  {
    winControl_Show.Call(obj)
}

func WinControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := winControl_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func WinControl_GetTextLen(obj uintptr) int32 {
    ret, _, _ := winControl_GetTextLen.Call(obj)
    return int32(ret)
}

func WinControl_SetTextBuf(obj uintptr, Buffer string)  {
    winControl_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func WinControl_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := winControl_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func WinControl_GetNamePath(obj uintptr) string {
    ret, _, _ := winControl_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func WinControl_Assign(obj uintptr, Source uintptr)  {
    winControl_Assign.Call(obj, Source )
}

func WinControl_ClassType(obj uintptr) TClass {
    ret, _, _ := winControl_ClassType.Call(obj)
    return TClass(ret)
}

func WinControl_ClassName(obj uintptr) string {
    ret, _, _ := winControl_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func WinControl_InstanceSize(obj uintptr) int32 {
    ret, _, _ := winControl_InstanceSize.Call(obj)
    return int32(ret)
}

func WinControl_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := winControl_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func WinControl_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := winControl_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func WinControl_GetHashCode(obj uintptr) int32 {
    ret, _, _ := winControl_GetHashCode.Call(obj)
    return int32(ret)
}

func WinControl_ToString(obj uintptr) string {
    ret, _, _ := winControl_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func WinControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    winControl_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func WinControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    winControl_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func WinControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    winControl_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func WinControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    winControl_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func WinControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    winControl_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func WinControl_AnchorClient(obj uintptr, ASpace int32)  {
    winControl_AnchorClient.Call(obj, uintptr(ASpace) )
}

func WinControl_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := winControl_GetDockClientCount.Call(obj)
    return int32(ret)
}

func WinControl_GetDockSite(obj uintptr) bool {
    ret, _, _ := winControl_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetDockSite(obj uintptr, value bool) {
   winControl_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := winControl_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetDoubleBuffered(obj uintptr, value bool) {
   winControl_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := winControl_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := winControl_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func WinControl_GetBrush(obj uintptr) uintptr {
    ret, _, _ := winControl_GetBrush.Call(obj)
    return ret
}

func WinControl_GetControlCount(obj uintptr) int32 {
    ret, _, _ := winControl_GetControlCount.Call(obj)
    return int32(ret)
}

func WinControl_GetHandle(obj uintptr) HWND {
    ret, _, _ := winControl_GetHandle.Call(obj)
    return HWND(ret)
}

func WinControl_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := winControl_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetParentDoubleBuffered(obj uintptr, value bool) {
   winControl_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := winControl_GetParentWindow.Call(obj)
    return HWND(ret)
}

func WinControl_SetParentWindow(obj uintptr, value HWND) {
   winControl_SetParentWindow.Call(obj, uintptr(value))
}

func WinControl_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := winControl_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func WinControl_SetTabOrder(obj uintptr, value TTabOrder) {
   winControl_SetTabOrder.Call(obj, uintptr(value))
}

func WinControl_GetTabStop(obj uintptr) bool {
    ret, _, _ := winControl_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetTabStop(obj uintptr, value bool) {
   winControl_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := winControl_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetUseDockManager(obj uintptr, value bool) {
   winControl_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetEnabled(obj uintptr) bool {
    ret, _, _ := winControl_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetEnabled(obj uintptr, value bool) {
   winControl_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetAction(obj uintptr) uintptr {
    ret, _, _ := winControl_GetAction.Call(obj)
    return ret
}

func WinControl_SetAction(obj uintptr, value uintptr) {
   winControl_SetAction.Call(obj, value)
}

func WinControl_GetAlign(obj uintptr) TAlign {
    ret, _, _ := winControl_GetAlign.Call(obj)
    return TAlign(ret)
}

func WinControl_SetAlign(obj uintptr, value TAlign) {
   winControl_SetAlign.Call(obj, uintptr(value))
}

func WinControl_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := winControl_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func WinControl_SetAnchors(obj uintptr, value TAnchors) {
   winControl_SetAnchors.Call(obj, uintptr(value))
}

func WinControl_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := winControl_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func WinControl_SetBiDiMode(obj uintptr, value TBiDiMode) {
   winControl_SetBiDiMode.Call(obj, uintptr(value))
}

func WinControl_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    winControl_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_SetBoundsRect(obj uintptr, value TRect) {
   winControl_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func WinControl_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := winControl_GetClientHeight.Call(obj)
    return int32(ret)
}

func WinControl_SetClientHeight(obj uintptr, value int32) {
   winControl_SetClientHeight.Call(obj, uintptr(value))
}

func WinControl_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    winControl_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_GetClientRect(obj uintptr) TRect {
    var ret TRect
    winControl_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func WinControl_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := winControl_GetClientWidth.Call(obj)
    return int32(ret)
}

func WinControl_SetClientWidth(obj uintptr, value int32) {
   winControl_SetClientWidth.Call(obj, uintptr(value))
}

func WinControl_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := winControl_GetConstraints.Call(obj)
    return ret
}

func WinControl_SetConstraints(obj uintptr, value uintptr) {
   winControl_SetConstraints.Call(obj, value)
}

func WinControl_GetControlState(obj uintptr) TControlState {
    ret, _, _ := winControl_GetControlState.Call(obj)
    return TControlState(ret)
}

func WinControl_SetControlState(obj uintptr, value TControlState) {
   winControl_SetControlState.Call(obj, uintptr(value))
}

func WinControl_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := winControl_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func WinControl_SetControlStyle(obj uintptr, value TControlStyle) {
   winControl_SetControlStyle.Call(obj, uintptr(value))
}

func WinControl_GetFloating(obj uintptr) bool {
    ret, _, _ := winControl_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_GetShowHint(obj uintptr) bool {
    ret, _, _ := winControl_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetShowHint(obj uintptr, value bool) {
   winControl_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetVisible(obj uintptr) bool {
    ret, _, _ := winControl_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func WinControl_SetVisible(obj uintptr, value bool) {
   winControl_SetVisible.Call(obj, GoBoolToDBool(value))
}

func WinControl_GetParent(obj uintptr) uintptr {
    ret, _, _ := winControl_GetParent.Call(obj)
    return ret
}

func WinControl_SetParent(obj uintptr, value uintptr) {
   winControl_SetParent.Call(obj, value)
}

func WinControl_GetLeft(obj uintptr) int32 {
    ret, _, _ := winControl_GetLeft.Call(obj)
    return int32(ret)
}

func WinControl_SetLeft(obj uintptr, value int32) {
   winControl_SetLeft.Call(obj, uintptr(value))
}

func WinControl_GetTop(obj uintptr) int32 {
    ret, _, _ := winControl_GetTop.Call(obj)
    return int32(ret)
}

func WinControl_SetTop(obj uintptr, value int32) {
   winControl_SetTop.Call(obj, uintptr(value))
}

func WinControl_GetWidth(obj uintptr) int32 {
    ret, _, _ := winControl_GetWidth.Call(obj)
    return int32(ret)
}

func WinControl_SetWidth(obj uintptr, value int32) {
   winControl_SetWidth.Call(obj, uintptr(value))
}

func WinControl_GetHeight(obj uintptr) int32 {
    ret, _, _ := winControl_GetHeight.Call(obj)
    return int32(ret)
}

func WinControl_SetHeight(obj uintptr, value int32) {
   winControl_SetHeight.Call(obj, uintptr(value))
}

func WinControl_GetCursor(obj uintptr) TCursor {
    ret, _, _ := winControl_GetCursor.Call(obj)
    return TCursor(ret)
}

func WinControl_SetCursor(obj uintptr, value TCursor) {
   winControl_SetCursor.Call(obj, uintptr(value))
}

func WinControl_GetHint(obj uintptr) string {
    ret, _, _ := winControl_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func WinControl_SetHint(obj uintptr, value string) {
   winControl_SetHint.Call(obj, GoStrToDStr(value))
}

func WinControl_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := winControl_GetComponentCount.Call(obj)
    return int32(ret)
}

func WinControl_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := winControl_GetComponentIndex.Call(obj)
    return int32(ret)
}

func WinControl_SetComponentIndex(obj uintptr, value int32) {
   winControl_SetComponentIndex.Call(obj, uintptr(value))
}

func WinControl_GetOwner(obj uintptr) uintptr {
    ret, _, _ := winControl_GetOwner.Call(obj)
    return ret
}

func WinControl_GetName(obj uintptr) string {
    ret, _, _ := winControl_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func WinControl_SetName(obj uintptr, value string) {
   winControl_SetName.Call(obj, GoStrToDStr(value))
}

func WinControl_GetTag(obj uintptr) int {
    ret, _, _ := winControl_GetTag.Call(obj)
    return int(ret)
}

func WinControl_SetTag(obj uintptr, value int) {
   winControl_SetTag.Call(obj, uintptr(value))
}

func WinControl_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := winControl_GetAnchorSideLeft.Call(obj)
    return ret
}

func WinControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
   winControl_SetAnchorSideLeft.Call(obj, value)
}

func WinControl_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := winControl_GetAnchorSideTop.Call(obj)
    return ret
}

func WinControl_SetAnchorSideTop(obj uintptr, value uintptr) {
   winControl_SetAnchorSideTop.Call(obj, value)
}

func WinControl_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := winControl_GetAnchorSideRight.Call(obj)
    return ret
}

func WinControl_SetAnchorSideRight(obj uintptr, value uintptr) {
   winControl_SetAnchorSideRight.Call(obj, value)
}

func WinControl_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := winControl_GetAnchorSideBottom.Call(obj)
    return ret
}

func WinControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
   winControl_SetAnchorSideBottom.Call(obj, value)
}

func WinControl_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := winControl_GetChildSizing.Call(obj)
    return ret
}

func WinControl_SetChildSizing(obj uintptr, value uintptr) {
   winControl_SetChildSizing.Call(obj, value)
}

func WinControl_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := winControl_GetBorderSpacing.Call(obj)
    return ret
}

func WinControl_SetBorderSpacing(obj uintptr, value uintptr) {
   winControl_SetBorderSpacing.Call(obj, value)
}

func WinControl_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := winControl_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func WinControl_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := winControl_GetControls.Call(obj, uintptr(Index))
    return ret
}

func WinControl_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := winControl_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func WinControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := winControl_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func WinControl_StaticClassType() TClass {
    r, _, _:= winControl_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TScreen ---------------------------

func Screen_Create(obj uintptr) uintptr {
    ret, _, _ := screen_Create.Call(obj)
    return ret
}

func Screen_Free(obj uintptr) {
    screen_Free.Call(obj)
}

func Screen_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := screen_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Screen_GetNamePath(obj uintptr) string {
    ret, _, _ := screen_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Screen_HasParent(obj uintptr) bool {
    ret, _, _ := screen_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Screen_Assign(obj uintptr, Source uintptr)  {
    screen_Assign.Call(obj, Source )
}

func Screen_ClassType(obj uintptr) TClass {
    ret, _, _ := screen_ClassType.Call(obj)
    return TClass(ret)
}

func Screen_ClassName(obj uintptr) string {
    ret, _, _ := screen_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Screen_InstanceSize(obj uintptr) int32 {
    ret, _, _ := screen_InstanceSize.Call(obj)
    return int32(ret)
}

func Screen_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := screen_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Screen_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := screen_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Screen_GetHashCode(obj uintptr) int32 {
    ret, _, _ := screen_GetHashCode.Call(obj)
    return int32(ret)
}

func Screen_ToString(obj uintptr) string {
    ret, _, _ := screen_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Screen_GetActiveForm(obj uintptr) uintptr {
    ret, _, _ := screen_GetActiveForm.Call(obj)
    return ret
}

func Screen_GetCustomFormCount(obj uintptr) int32 {
    ret, _, _ := screen_GetCustomFormCount.Call(obj)
    return int32(ret)
}

func Screen_GetCursor(obj uintptr) TCursor {
    ret, _, _ := screen_GetCursor.Call(obj)
    return TCursor(ret)
}

func Screen_SetCursor(obj uintptr, value TCursor) {
   screen_SetCursor.Call(obj, uintptr(value))
}

func Screen_GetFocusedForm(obj uintptr) uintptr {
    ret, _, _ := screen_GetFocusedForm.Call(obj)
    return ret
}

func Screen_GetMonitorCount(obj uintptr) int32 {
    ret, _, _ := screen_GetMonitorCount.Call(obj)
    return int32(ret)
}

func Screen_GetDesktopRect(obj uintptr) TRect {
    var ret TRect
    screen_GetDesktopRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Screen_GetDesktopHeight(obj uintptr) int32 {
    ret, _, _ := screen_GetDesktopHeight.Call(obj)
    return int32(ret)
}

func Screen_GetDesktopLeft(obj uintptr) int32 {
    ret, _, _ := screen_GetDesktopLeft.Call(obj)
    return int32(ret)
}

func Screen_GetDesktopTop(obj uintptr) int32 {
    ret, _, _ := screen_GetDesktopTop.Call(obj)
    return int32(ret)
}

func Screen_GetDesktopWidth(obj uintptr) int32 {
    ret, _, _ := screen_GetDesktopWidth.Call(obj)
    return int32(ret)
}

func Screen_GetWorkAreaRect(obj uintptr) TRect {
    var ret TRect
    screen_GetWorkAreaRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Screen_GetWorkAreaHeight(obj uintptr) int32 {
    ret, _, _ := screen_GetWorkAreaHeight.Call(obj)
    return int32(ret)
}

func Screen_GetWorkAreaLeft(obj uintptr) int32 {
    ret, _, _ := screen_GetWorkAreaLeft.Call(obj)
    return int32(ret)
}

func Screen_GetWorkAreaTop(obj uintptr) int32 {
    ret, _, _ := screen_GetWorkAreaTop.Call(obj)
    return int32(ret)
}

func Screen_GetWorkAreaWidth(obj uintptr) int32 {
    ret, _, _ := screen_GetWorkAreaWidth.Call(obj)
    return int32(ret)
}

func Screen_GetFonts(obj uintptr) uintptr {
    ret, _, _ := screen_GetFonts.Call(obj)
    return ret
}

func Screen_GetFormCount(obj uintptr) int32 {
    ret, _, _ := screen_GetFormCount.Call(obj)
    return int32(ret)
}

func Screen_GetHeight(obj uintptr) int32 {
    ret, _, _ := screen_GetHeight.Call(obj)
    return int32(ret)
}

func Screen_GetPixelsPerInch(obj uintptr) int32 {
    ret, _, _ := screen_GetPixelsPerInch.Call(obj)
    return int32(ret)
}

func Screen_GetPrimaryMonitor(obj uintptr) uintptr {
    ret, _, _ := screen_GetPrimaryMonitor.Call(obj)
    return ret
}

func Screen_GetWidth(obj uintptr) int32 {
    ret, _, _ := screen_GetWidth.Call(obj)
    return int32(ret)
}

func Screen_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := screen_GetComponentCount.Call(obj)
    return int32(ret)
}

func Screen_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := screen_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Screen_SetComponentIndex(obj uintptr, value int32) {
   screen_SetComponentIndex.Call(obj, uintptr(value))
}

func Screen_GetOwner(obj uintptr) uintptr {
    ret, _, _ := screen_GetOwner.Call(obj)
    return ret
}

func Screen_GetName(obj uintptr) string {
    ret, _, _ := screen_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Screen_SetName(obj uintptr, value string) {
   screen_SetName.Call(obj, GoStrToDStr(value))
}

func Screen_GetTag(obj uintptr) int {
    ret, _, _ := screen_GetTag.Call(obj)
    return int(ret)
}

func Screen_SetTag(obj uintptr, value int) {
   screen_SetTag.Call(obj, uintptr(value))
}

func Screen_GetCursors(obj uintptr, Index int32) HICON {
    ret, _, _ := screen_GetCursors.Call(obj, uintptr(Index))
    return HICON(ret)
}

func Screen_SetCursors(obj uintptr, Index int32, value HICON) {
   screen_SetCursors.Call(obj, uintptr(Index), uintptr(value))
}

func Screen_GetMonitors(obj uintptr, Index int32) uintptr {
    ret, _, _ := screen_GetMonitors.Call(obj, uintptr(Index))
    return ret
}

func Screen_GetForms(obj uintptr, Index int32) uintptr {
    ret, _, _ := screen_GetForms.Call(obj, uintptr(Index))
    return ret
}

func Screen_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := screen_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Screen_StaticClassType() TClass {
    r, _, _:= screen_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMouse ---------------------------

func Mouse_Create() uintptr {
    ret, _, _ := mouse_Create.Call()
    return ret
}

func Mouse_Free(obj uintptr) {
    mouse_Free.Call(obj)
}

func Mouse_ClassType(obj uintptr) TClass {
    ret, _, _ := mouse_ClassType.Call(obj)
    return TClass(ret)
}

func Mouse_ClassName(obj uintptr) string {
    ret, _, _ := mouse_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Mouse_InstanceSize(obj uintptr) int32 {
    ret, _, _ := mouse_InstanceSize.Call(obj)
    return int32(ret)
}

func Mouse_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := mouse_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Mouse_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := mouse_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Mouse_GetHashCode(obj uintptr) int32 {
    ret, _, _ := mouse_GetHashCode.Call(obj)
    return int32(ret)
}

func Mouse_ToString(obj uintptr) string {
    ret, _, _ := mouse_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Mouse_GetCapture(obj uintptr) HWND {
    ret, _, _ := mouse_GetCapture.Call(obj)
    return HWND(ret)
}

func Mouse_SetCapture(obj uintptr, value HWND) {
   mouse_SetCapture.Call(obj, uintptr(value))
}

func Mouse_GetCursorPos(obj uintptr) TPoint {
    var ret TPoint
    mouse_GetCursorPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Mouse_SetCursorPos(obj uintptr, value TPoint) {
   mouse_SetCursorPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Mouse_GetIsDragging(obj uintptr) bool {
    ret, _, _ := mouse_GetIsDragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Mouse_GetWheelScrollLines(obj uintptr) int32 {
    ret, _, _ := mouse_GetWheelScrollLines.Call(obj)
    return int32(ret)
}

func Mouse_StaticClassType() TClass {
    r, _, _:= mouse_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TListColumn ---------------------------

func ListColumn_Create(obj uintptr) uintptr {
    ret, _, _ := listColumn_Create.Call(obj)
    return ret
}

func ListColumn_Free(obj uintptr) {
    listColumn_Free.Call(obj)
}

func ListColumn_Assign(obj uintptr, Source uintptr)  {
    listColumn_Assign.Call(obj, Source )
}

func ListColumn_GetNamePath(obj uintptr) string {
    ret, _, _ := listColumn_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumn_ClassType(obj uintptr) TClass {
    ret, _, _ := listColumn_ClassType.Call(obj)
    return TClass(ret)
}

func ListColumn_ClassName(obj uintptr) string {
    ret, _, _ := listColumn_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumn_InstanceSize(obj uintptr) int32 {
    ret, _, _ := listColumn_InstanceSize.Call(obj)
    return int32(ret)
}

func ListColumn_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := listColumn_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ListColumn_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := listColumn_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ListColumn_GetHashCode(obj uintptr) int32 {
    ret, _, _ := listColumn_GetHashCode.Call(obj)
    return int32(ret)
}

func ListColumn_ToString(obj uintptr) string {
    ret, _, _ := listColumn_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumn_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := listColumn_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func ListColumn_SetAlignment(obj uintptr, value TAlignment) {
   listColumn_SetAlignment.Call(obj, uintptr(value))
}

func ListColumn_GetAutoSize(obj uintptr) bool {
    ret, _, _ := listColumn_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func ListColumn_SetAutoSize(obj uintptr, value bool) {
   listColumn_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func ListColumn_GetCaption(obj uintptr) string {
    ret, _, _ := listColumn_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumn_SetCaption(obj uintptr, value string) {
   listColumn_SetCaption.Call(obj, GoStrToDStr(value))
}

func ListColumn_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := listColumn_GetImageIndex.Call(obj)
    return int32(ret)
}

func ListColumn_SetImageIndex(obj uintptr, value int32) {
   listColumn_SetImageIndex.Call(obj, uintptr(value))
}

func ListColumn_GetMaxWidth(obj uintptr) int32 {
    ret, _, _ := listColumn_GetMaxWidth.Call(obj)
    return int32(ret)
}

func ListColumn_SetMaxWidth(obj uintptr, value int32) {
   listColumn_SetMaxWidth.Call(obj, uintptr(value))
}

func ListColumn_GetMinWidth(obj uintptr) int32 {
    ret, _, _ := listColumn_GetMinWidth.Call(obj)
    return int32(ret)
}

func ListColumn_SetMinWidth(obj uintptr, value int32) {
   listColumn_SetMinWidth.Call(obj, uintptr(value))
}

func ListColumn_GetTag(obj uintptr) int32 {
    ret, _, _ := listColumn_GetTag.Call(obj)
    return int32(ret)
}

func ListColumn_SetTag(obj uintptr, value int32) {
   listColumn_SetTag.Call(obj, uintptr(value))
}

func ListColumn_GetWidth(obj uintptr) int32 {
    ret, _, _ := listColumn_GetWidth.Call(obj)
    return int32(ret)
}

func ListColumn_SetWidth(obj uintptr, value int32) {
   listColumn_SetWidth.Call(obj, uintptr(value))
}

func ListColumn_GetCollection(obj uintptr) uintptr {
    ret, _, _ := listColumn_GetCollection.Call(obj)
    return ret
}

func ListColumn_SetCollection(obj uintptr, value uintptr) {
   listColumn_SetCollection.Call(obj, value)
}

func ListColumn_GetIndex(obj uintptr) int32 {
    ret, _, _ := listColumn_GetIndex.Call(obj)
    return int32(ret)
}

func ListColumn_SetIndex(obj uintptr, value int32) {
   listColumn_SetIndex.Call(obj, uintptr(value))
}

func ListColumn_GetDisplayName(obj uintptr) string {
    ret, _, _ := listColumn_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func ListColumn_SetDisplayName(obj uintptr, value string) {
   listColumn_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func ListColumn_StaticClassType() TClass {
    r, _, _:= listColumn_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCollectionItem ---------------------------

func CollectionItem_Create(obj uintptr) uintptr {
    ret, _, _ := collectionItem_Create.Call(obj)
    return ret
}

func CollectionItem_Free(obj uintptr) {
    collectionItem_Free.Call(obj)
}

func CollectionItem_GetNamePath(obj uintptr) string {
    ret, _, _ := collectionItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CollectionItem_Assign(obj uintptr, Source uintptr)  {
    collectionItem_Assign.Call(obj, Source )
}

func CollectionItem_ClassType(obj uintptr) TClass {
    ret, _, _ := collectionItem_ClassType.Call(obj)
    return TClass(ret)
}

func CollectionItem_ClassName(obj uintptr) string {
    ret, _, _ := collectionItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CollectionItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := collectionItem_InstanceSize.Call(obj)
    return int32(ret)
}

func CollectionItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := collectionItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CollectionItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := collectionItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CollectionItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := collectionItem_GetHashCode.Call(obj)
    return int32(ret)
}

func CollectionItem_ToString(obj uintptr) string {
    ret, _, _ := collectionItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CollectionItem_GetCollection(obj uintptr) uintptr {
    ret, _, _ := collectionItem_GetCollection.Call(obj)
    return ret
}

func CollectionItem_SetCollection(obj uintptr, value uintptr) {
   collectionItem_SetCollection.Call(obj, value)
}

func CollectionItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := collectionItem_GetIndex.Call(obj)
    return int32(ret)
}

func CollectionItem_SetIndex(obj uintptr, value int32) {
   collectionItem_SetIndex.Call(obj, uintptr(value))
}

func CollectionItem_GetDisplayName(obj uintptr) string {
    ret, _, _ := collectionItem_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func CollectionItem_SetDisplayName(obj uintptr, value string) {
   collectionItem_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func CollectionItem_StaticClassType() TClass {
    r, _, _:= collectionItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStatusPanels ---------------------------

func StatusPanels_Create(obj uintptr) uintptr {
    ret, _, _ := statusPanels_Create.Call(obj)
    return ret
}

func StatusPanels_Free(obj uintptr) {
    statusPanels_Free.Call(obj)
}

func StatusPanels_Add(obj uintptr) uintptr {
    ret, _, _ := statusPanels_Add.Call(obj)
    return ret
}

func StatusPanels_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := statusPanels_Insert.Call(obj, uintptr(Index) )
    return ret
}

func StatusPanels_Owner(obj uintptr) uintptr {
    ret, _, _ := statusPanels_Owner.Call(obj)
    return ret
}

func StatusPanels_Assign(obj uintptr, Source uintptr)  {
    statusPanels_Assign.Call(obj, Source )
}

func StatusPanels_BeginUpdate(obj uintptr)  {
    statusPanels_BeginUpdate.Call(obj)
}

func StatusPanels_Clear(obj uintptr)  {
    statusPanels_Clear.Call(obj)
}

func StatusPanels_Delete(obj uintptr, Index int32)  {
    statusPanels_Delete.Call(obj, uintptr(Index) )
}

func StatusPanels_EndUpdate(obj uintptr)  {
    statusPanels_EndUpdate.Call(obj)
}

func StatusPanels_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := statusPanels_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func StatusPanels_GetNamePath(obj uintptr) string {
    ret, _, _ := statusPanels_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanels_ClassType(obj uintptr) TClass {
    ret, _, _ := statusPanels_ClassType.Call(obj)
    return TClass(ret)
}

func StatusPanels_ClassName(obj uintptr) string {
    ret, _, _ := statusPanels_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanels_InstanceSize(obj uintptr) int32 {
    ret, _, _ := statusPanels_InstanceSize.Call(obj)
    return int32(ret)
}

func StatusPanels_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := statusPanels_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StatusPanels_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := statusPanels_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func StatusPanels_GetHashCode(obj uintptr) int32 {
    ret, _, _ := statusPanels_GetHashCode.Call(obj)
    return int32(ret)
}

func StatusPanels_ToString(obj uintptr) string {
    ret, _, _ := statusPanels_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanels_GetCapacity(obj uintptr) int32 {
    ret, _, _ := statusPanels_GetCapacity.Call(obj)
    return int32(ret)
}

func StatusPanels_SetCapacity(obj uintptr, value int32) {
   statusPanels_SetCapacity.Call(obj, uintptr(value))
}

func StatusPanels_GetCount(obj uintptr) int32 {
    ret, _, _ := statusPanels_GetCount.Call(obj)
    return int32(ret)
}

func StatusPanels_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := statusPanels_GetItems.Call(obj, uintptr(Index))
    return ret
}

func StatusPanels_SetItems(obj uintptr, Index int32, value uintptr) {
   statusPanels_SetItems.Call(obj, uintptr(Index), value)
}

func StatusPanels_StaticClassType() TClass {
    r, _, _:= statusPanels_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStatusPanel ---------------------------

func StatusPanel_Create(obj uintptr) uintptr {
    ret, _, _ := statusPanel_Create.Call(obj)
    return ret
}

func StatusPanel_Free(obj uintptr) {
    statusPanel_Free.Call(obj)
}

func StatusPanel_Assign(obj uintptr, Source uintptr)  {
    statusPanel_Assign.Call(obj, Source )
}

func StatusPanel_GetNamePath(obj uintptr) string {
    ret, _, _ := statusPanel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanel_ClassType(obj uintptr) TClass {
    ret, _, _ := statusPanel_ClassType.Call(obj)
    return TClass(ret)
}

func StatusPanel_ClassName(obj uintptr) string {
    ret, _, _ := statusPanel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := statusPanel_InstanceSize.Call(obj)
    return int32(ret)
}

func StatusPanel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := statusPanel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StatusPanel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := statusPanel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func StatusPanel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := statusPanel_GetHashCode.Call(obj)
    return int32(ret)
}

func StatusPanel_ToString(obj uintptr) string {
    ret, _, _ := statusPanel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanel_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := statusPanel_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func StatusPanel_SetAlignment(obj uintptr, value TAlignment) {
   statusPanel_SetAlignment.Call(obj, uintptr(value))
}

func StatusPanel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := statusPanel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func StatusPanel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   statusPanel_SetBiDiMode.Call(obj, uintptr(value))
}

func StatusPanel_GetStyle(obj uintptr) TStatusPanelStyle {
    ret, _, _ := statusPanel_GetStyle.Call(obj)
    return TStatusPanelStyle(ret)
}

func StatusPanel_SetStyle(obj uintptr, value TStatusPanelStyle) {
   statusPanel_SetStyle.Call(obj, uintptr(value))
}

func StatusPanel_GetText(obj uintptr) string {
    ret, _, _ := statusPanel_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanel_SetText(obj uintptr, value string) {
   statusPanel_SetText.Call(obj, GoStrToDStr(value))
}

func StatusPanel_GetWidth(obj uintptr) int32 {
    ret, _, _ := statusPanel_GetWidth.Call(obj)
    return int32(ret)
}

func StatusPanel_SetWidth(obj uintptr, value int32) {
   statusPanel_SetWidth.Call(obj, uintptr(value))
}

func StatusPanel_GetCollection(obj uintptr) uintptr {
    ret, _, _ := statusPanel_GetCollection.Call(obj)
    return ret
}

func StatusPanel_SetCollection(obj uintptr, value uintptr) {
   statusPanel_SetCollection.Call(obj, value)
}

func StatusPanel_GetIndex(obj uintptr) int32 {
    ret, _, _ := statusPanel_GetIndex.Call(obj)
    return int32(ret)
}

func StatusPanel_SetIndex(obj uintptr, value int32) {
   statusPanel_SetIndex.Call(obj, uintptr(value))
}

func StatusPanel_GetDisplayName(obj uintptr) string {
    ret, _, _ := statusPanel_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func StatusPanel_SetDisplayName(obj uintptr, value string) {
   statusPanel_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func StatusPanel_StaticClassType() TClass {
    r, _, _:= statusPanel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSpinEdit ---------------------------

func SpinEdit_Create(obj uintptr) uintptr {
    ret, _, _ := spinEdit_Create.Call(obj)
    return ret
}

func SpinEdit_Free(obj uintptr) {
    spinEdit_Free.Call(obj)
}

func SpinEdit_Clear(obj uintptr)  {
    spinEdit_Clear.Call(obj)
}

func SpinEdit_ClearSelection(obj uintptr)  {
    spinEdit_ClearSelection.Call(obj)
}

func SpinEdit_CopyToClipboard(obj uintptr)  {
    spinEdit_CopyToClipboard.Call(obj)
}

func SpinEdit_CutToClipboard(obj uintptr)  {
    spinEdit_CutToClipboard.Call(obj)
}

func SpinEdit_PasteFromClipboard(obj uintptr)  {
    spinEdit_PasteFromClipboard.Call(obj)
}

func SpinEdit_Undo(obj uintptr)  {
    spinEdit_Undo.Call(obj)
}

func SpinEdit_SelectAll(obj uintptr)  {
    spinEdit_SelectAll.Call(obj)
}

func SpinEdit_CanFocus(obj uintptr) bool {
    ret, _, _ := spinEdit_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := spinEdit_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func SpinEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := spinEdit_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func SpinEdit_DisableAlign(obj uintptr)  {
    spinEdit_DisableAlign.Call(obj)
}

func SpinEdit_EnableAlign(obj uintptr)  {
    spinEdit_EnableAlign.Call(obj)
}

func SpinEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := spinEdit_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func SpinEdit_FlipChildren(obj uintptr, AllLevels bool)  {
    spinEdit_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func SpinEdit_Focused(obj uintptr) bool {
    ret, _, _ := spinEdit_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_HandleAllocated(obj uintptr) bool {
    ret, _, _ := spinEdit_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_InsertControl(obj uintptr, AControl uintptr)  {
    spinEdit_InsertControl.Call(obj, AControl )
}

func SpinEdit_Invalidate(obj uintptr)  {
    spinEdit_Invalidate.Call(obj)
}

func SpinEdit_RemoveControl(obj uintptr, AControl uintptr)  {
    spinEdit_RemoveControl.Call(obj, AControl )
}

func SpinEdit_Realign(obj uintptr)  {
    spinEdit_Realign.Call(obj)
}

func SpinEdit_Repaint(obj uintptr)  {
    spinEdit_Repaint.Call(obj)
}

func SpinEdit_ScaleBy(obj uintptr, M int32, D int32)  {
    spinEdit_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func SpinEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    spinEdit_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func SpinEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    spinEdit_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func SpinEdit_SetFocus(obj uintptr)  {
    spinEdit_SetFocus.Call(obj)
}

func SpinEdit_Update(obj uintptr)  {
    spinEdit_Update.Call(obj)
}

func SpinEdit_BringToFront(obj uintptr)  {
    spinEdit_BringToFront.Call(obj)
}

func SpinEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    spinEdit_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    spinEdit_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_Dragging(obj uintptr) bool {
    ret, _, _ := spinEdit_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_HasParent(obj uintptr) bool {
    ret, _, _ := spinEdit_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_Hide(obj uintptr)  {
    spinEdit_Hide.Call(obj)
}

func SpinEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := spinEdit_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func SpinEdit_Refresh(obj uintptr)  {
    spinEdit_Refresh.Call(obj)
}

func SpinEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    spinEdit_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    spinEdit_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_SendToBack(obj uintptr)  {
    spinEdit_SendToBack.Call(obj)
}

func SpinEdit_Show(obj uintptr)  {
    spinEdit_Show.Call(obj)
}

func SpinEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := spinEdit_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func SpinEdit_GetTextLen(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetTextLen.Call(obj)
    return int32(ret)
}

func SpinEdit_SetTextBuf(obj uintptr, Buffer string)  {
    spinEdit_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func SpinEdit_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := spinEdit_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func SpinEdit_GetNamePath(obj uintptr) string {
    ret, _, _ := spinEdit_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_Assign(obj uintptr, Source uintptr)  {
    spinEdit_Assign.Call(obj, Source )
}

func SpinEdit_ClassType(obj uintptr) TClass {
    ret, _, _ := spinEdit_ClassType.Call(obj)
    return TClass(ret)
}

func SpinEdit_ClassName(obj uintptr) string {
    ret, _, _ := spinEdit_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_InstanceSize(obj uintptr) int32 {
    ret, _, _ := spinEdit_InstanceSize.Call(obj)
    return int32(ret)
}

func SpinEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := spinEdit_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SpinEdit_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := spinEdit_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SpinEdit_GetHashCode(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetHashCode.Call(obj)
    return int32(ret)
}

func SpinEdit_ToString(obj uintptr) string {
    ret, _, _ := spinEdit_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    spinEdit_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func SpinEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    spinEdit_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func SpinEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    spinEdit_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func SpinEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    spinEdit_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func SpinEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    spinEdit_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func SpinEdit_AnchorClient(obj uintptr, ASpace int32)  {
    spinEdit_AnchorClient.Call(obj, uintptr(ASpace) )
}

func SpinEdit_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := spinEdit_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func SpinEdit_SetAnchors(obj uintptr, value TAnchors) {
   spinEdit_SetAnchors.Call(obj, uintptr(value))
}

func SpinEdit_GetAutoSelect(obj uintptr) bool {
    ret, _, _ := spinEdit_GetAutoSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetAutoSelect(obj uintptr, value bool) {
   spinEdit_SetAutoSelect.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetAutoSize(obj uintptr) bool {
    ret, _, _ := spinEdit_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetAutoSize(obj uintptr, value bool) {
   spinEdit_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetColor(obj uintptr) TColor {
    ret, _, _ := spinEdit_GetColor.Call(obj)
    return TColor(ret)
}

func SpinEdit_SetColor(obj uintptr, value TColor) {
   spinEdit_SetColor.Call(obj, uintptr(value))
}

func SpinEdit_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetConstraints.Call(obj)
    return ret
}

func SpinEdit_SetConstraints(obj uintptr, value uintptr) {
   spinEdit_SetConstraints.Call(obj, value)
}

func SpinEdit_GetEnabled(obj uintptr) bool {
    ret, _, _ := spinEdit_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetEnabled(obj uintptr, value bool) {
   spinEdit_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetFont(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetFont.Call(obj)
    return ret
}

func SpinEdit_SetFont(obj uintptr, value uintptr) {
   spinEdit_SetFont.Call(obj, value)
}

func SpinEdit_GetIncrement(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetIncrement.Call(obj)
    return int32(ret)
}

func SpinEdit_SetIncrement(obj uintptr, value int32) {
   spinEdit_SetIncrement.Call(obj, uintptr(value))
}

func SpinEdit_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetMaxLength.Call(obj)
    return int32(ret)
}

func SpinEdit_SetMaxLength(obj uintptr, value int32) {
   spinEdit_SetMaxLength.Call(obj, uintptr(value))
}

func SpinEdit_GetMaxValue(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetMaxValue.Call(obj)
    return int32(ret)
}

func SpinEdit_SetMaxValue(obj uintptr, value int32) {
   spinEdit_SetMaxValue.Call(obj, uintptr(value))
}

func SpinEdit_GetMinValue(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetMinValue.Call(obj)
    return int32(ret)
}

func SpinEdit_SetMinValue(obj uintptr, value int32) {
   spinEdit_SetMinValue.Call(obj, uintptr(value))
}

func SpinEdit_GetParentColor(obj uintptr) bool {
    ret, _, _ := spinEdit_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetParentColor(obj uintptr, value bool) {
   spinEdit_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentFont(obj uintptr) bool {
    ret, _, _ := spinEdit_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetParentFont(obj uintptr, value bool) {
   spinEdit_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := spinEdit_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetParentShowHint(obj uintptr, value bool) {
   spinEdit_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetPopupMenu.Call(obj)
    return ret
}

func SpinEdit_SetPopupMenu(obj uintptr, value uintptr) {
   spinEdit_SetPopupMenu.Call(obj, value)
}

func SpinEdit_GetReadOnly(obj uintptr) bool {
    ret, _, _ := spinEdit_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetReadOnly(obj uintptr, value bool) {
   spinEdit_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetShowHint(obj uintptr) bool {
    ret, _, _ := spinEdit_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetShowHint(obj uintptr, value bool) {
   spinEdit_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := spinEdit_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func SpinEdit_SetTabOrder(obj uintptr, value TTabOrder) {
   spinEdit_SetTabOrder.Call(obj, uintptr(value))
}

func SpinEdit_GetTabStop(obj uintptr) bool {
    ret, _, _ := spinEdit_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetTabStop(obj uintptr, value bool) {
   spinEdit_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetValue(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetValue.Call(obj)
    return int32(ret)
}

func SpinEdit_SetValue(obj uintptr, value int32) {
   spinEdit_SetValue.Call(obj, uintptr(value))
}

func SpinEdit_GetVisible(obj uintptr) bool {
    ret, _, _ := spinEdit_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetVisible(obj uintptr, value bool) {
   spinEdit_SetVisible.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_SetOnChange(obj uintptr, fn interface{}) {
    spinEdit_SetOnChange.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnClick(obj uintptr, fn interface{}) {
    spinEdit_SetOnClick.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnEnter(obj uintptr, fn interface{}) {
    spinEdit_SetOnEnter.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnExit(obj uintptr, fn interface{}) {
    spinEdit_SetOnExit.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
    spinEdit_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
    spinEdit_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
    spinEdit_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
    spinEdit_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
    spinEdit_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func SpinEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
    spinEdit_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func SpinEdit_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := spinEdit_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func SpinEdit_SetAlignment(obj uintptr, value TAlignment) {
   spinEdit_SetAlignment.Call(obj, uintptr(value))
}

func SpinEdit_GetCanUndo(obj uintptr) bool {
    ret, _, _ := spinEdit_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_GetModified(obj uintptr) bool {
    ret, _, _ := spinEdit_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetModified(obj uintptr, value bool) {
   spinEdit_SetModified.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetSelLength(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetSelLength.Call(obj)
    return int32(ret)
}

func SpinEdit_SetSelLength(obj uintptr, value int32) {
   spinEdit_SetSelLength.Call(obj, uintptr(value))
}

func SpinEdit_GetSelStart(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetSelStart.Call(obj)
    return int32(ret)
}

func SpinEdit_SetSelStart(obj uintptr, value int32) {
   spinEdit_SetSelStart.Call(obj, uintptr(value))
}

func SpinEdit_GetSelText(obj uintptr) string {
    ret, _, _ := spinEdit_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_SetSelText(obj uintptr, value string) {
   spinEdit_SetSelText.Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetText(obj uintptr) string {
    ret, _, _ := spinEdit_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_SetText(obj uintptr, value string) {
   spinEdit_SetText.Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetTextHint(obj uintptr) string {
    ret, _, _ := spinEdit_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_SetTextHint(obj uintptr, value string) {
   spinEdit_SetTextHint.Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetDockClientCount.Call(obj)
    return int32(ret)
}

func SpinEdit_GetDockSite(obj uintptr) bool {
    ret, _, _ := spinEdit_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetDockSite(obj uintptr, value bool) {
   spinEdit_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := spinEdit_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetDoubleBuffered(obj uintptr, value bool) {
   spinEdit_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := spinEdit_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func SpinEdit_GetBrush(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetBrush.Call(obj)
    return ret
}

func SpinEdit_GetControlCount(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetControlCount.Call(obj)
    return int32(ret)
}

func SpinEdit_GetHandle(obj uintptr) HWND {
    ret, _, _ := spinEdit_GetHandle.Call(obj)
    return HWND(ret)
}

func SpinEdit_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := spinEdit_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
   spinEdit_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := spinEdit_GetParentWindow.Call(obj)
    return HWND(ret)
}

func SpinEdit_SetParentWindow(obj uintptr, value HWND) {
   spinEdit_SetParentWindow.Call(obj, uintptr(value))
}

func SpinEdit_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := spinEdit_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_SetUseDockManager(obj uintptr, value bool) {
   spinEdit_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func SpinEdit_GetAction(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetAction.Call(obj)
    return ret
}

func SpinEdit_SetAction(obj uintptr, value uintptr) {
   spinEdit_SetAction.Call(obj, value)
}

func SpinEdit_GetAlign(obj uintptr) TAlign {
    ret, _, _ := spinEdit_GetAlign.Call(obj)
    return TAlign(ret)
}

func SpinEdit_SetAlign(obj uintptr, value TAlign) {
   spinEdit_SetAlign.Call(obj, uintptr(value))
}

func SpinEdit_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := spinEdit_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func SpinEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
   spinEdit_SetBiDiMode.Call(obj, uintptr(value))
}

func SpinEdit_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    spinEdit_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_SetBoundsRect(obj uintptr, value TRect) {
   spinEdit_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func SpinEdit_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetClientHeight.Call(obj)
    return int32(ret)
}

func SpinEdit_SetClientHeight(obj uintptr, value int32) {
   spinEdit_SetClientHeight.Call(obj, uintptr(value))
}

func SpinEdit_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    spinEdit_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_GetClientRect(obj uintptr) TRect {
    var ret TRect
    spinEdit_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func SpinEdit_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetClientWidth.Call(obj)
    return int32(ret)
}

func SpinEdit_SetClientWidth(obj uintptr, value int32) {
   spinEdit_SetClientWidth.Call(obj, uintptr(value))
}

func SpinEdit_GetControlState(obj uintptr) TControlState {
    ret, _, _ := spinEdit_GetControlState.Call(obj)
    return TControlState(ret)
}

func SpinEdit_SetControlState(obj uintptr, value TControlState) {
   spinEdit_SetControlState.Call(obj, uintptr(value))
}

func SpinEdit_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := spinEdit_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func SpinEdit_SetControlStyle(obj uintptr, value TControlStyle) {
   spinEdit_SetControlStyle.Call(obj, uintptr(value))
}

func SpinEdit_GetFloating(obj uintptr) bool {
    ret, _, _ := spinEdit_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func SpinEdit_GetParent(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetParent.Call(obj)
    return ret
}

func SpinEdit_SetParent(obj uintptr, value uintptr) {
   spinEdit_SetParent.Call(obj, value)
}

func SpinEdit_GetLeft(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetLeft.Call(obj)
    return int32(ret)
}

func SpinEdit_SetLeft(obj uintptr, value int32) {
   spinEdit_SetLeft.Call(obj, uintptr(value))
}

func SpinEdit_GetTop(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetTop.Call(obj)
    return int32(ret)
}

func SpinEdit_SetTop(obj uintptr, value int32) {
   spinEdit_SetTop.Call(obj, uintptr(value))
}

func SpinEdit_GetWidth(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetWidth.Call(obj)
    return int32(ret)
}

func SpinEdit_SetWidth(obj uintptr, value int32) {
   spinEdit_SetWidth.Call(obj, uintptr(value))
}

func SpinEdit_GetHeight(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetHeight.Call(obj)
    return int32(ret)
}

func SpinEdit_SetHeight(obj uintptr, value int32) {
   spinEdit_SetHeight.Call(obj, uintptr(value))
}

func SpinEdit_GetCursor(obj uintptr) TCursor {
    ret, _, _ := spinEdit_GetCursor.Call(obj)
    return TCursor(ret)
}

func SpinEdit_SetCursor(obj uintptr, value TCursor) {
   spinEdit_SetCursor.Call(obj, uintptr(value))
}

func SpinEdit_GetHint(obj uintptr) string {
    ret, _, _ := spinEdit_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_SetHint(obj uintptr, value string) {
   spinEdit_SetHint.Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetComponentCount.Call(obj)
    return int32(ret)
}

func SpinEdit_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := spinEdit_GetComponentIndex.Call(obj)
    return int32(ret)
}

func SpinEdit_SetComponentIndex(obj uintptr, value int32) {
   spinEdit_SetComponentIndex.Call(obj, uintptr(value))
}

func SpinEdit_GetOwner(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetOwner.Call(obj)
    return ret
}

func SpinEdit_GetName(obj uintptr) string {
    ret, _, _ := spinEdit_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func SpinEdit_SetName(obj uintptr, value string) {
   spinEdit_SetName.Call(obj, GoStrToDStr(value))
}

func SpinEdit_GetTag(obj uintptr) int {
    ret, _, _ := spinEdit_GetTag.Call(obj)
    return int(ret)
}

func SpinEdit_SetTag(obj uintptr, value int) {
   spinEdit_SetTag.Call(obj, uintptr(value))
}

func SpinEdit_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetAnchorSideLeft.Call(obj)
    return ret
}

func SpinEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
   spinEdit_SetAnchorSideLeft.Call(obj, value)
}

func SpinEdit_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetAnchorSideTop.Call(obj)
    return ret
}

func SpinEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
   spinEdit_SetAnchorSideTop.Call(obj, value)
}

func SpinEdit_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetAnchorSideRight.Call(obj)
    return ret
}

func SpinEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
   spinEdit_SetAnchorSideRight.Call(obj, value)
}

func SpinEdit_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetAnchorSideBottom.Call(obj)
    return ret
}

func SpinEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
   spinEdit_SetAnchorSideBottom.Call(obj, value)
}

func SpinEdit_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetChildSizing.Call(obj)
    return ret
}

func SpinEdit_SetChildSizing(obj uintptr, value uintptr) {
   spinEdit_SetChildSizing.Call(obj, value)
}

func SpinEdit_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := spinEdit_GetBorderSpacing.Call(obj)
    return ret
}

func SpinEdit_SetBorderSpacing(obj uintptr, value uintptr) {
   spinEdit_SetBorderSpacing.Call(obj, value)
}

func SpinEdit_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := spinEdit_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func SpinEdit_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := spinEdit_GetControls.Call(obj, uintptr(Index))
    return ret
}

func SpinEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := spinEdit_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func SpinEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := spinEdit_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func SpinEdit_StaticClassType() TClass {
    r, _, _:= spinEdit_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMiniWebview ---------------------------

func MiniWebview_Create(obj uintptr) uintptr {
    ret, _, _ := miniWebview_Create.Call(obj)
    return ret
}

func MiniWebview_Free(obj uintptr) {
    miniWebview_Free.Call(obj)
}

func MiniWebview_Navigate(obj uintptr, AURL string)  {
    miniWebview_Navigate.Call(obj, GoStrToDStr(AURL) )
}

func MiniWebview_GoBack(obj uintptr)  {
    miniWebview_GoBack.Call(obj)
}

func MiniWebview_GoForward(obj uintptr)  {
    miniWebview_GoForward.Call(obj)
}

func MiniWebview_GoHome(obj uintptr)  {
    miniWebview_GoHome.Call(obj)
}

func MiniWebview_GoSearch(obj uintptr)  {
    miniWebview_GoSearch.Call(obj)
}

func MiniWebview_Refresh(obj uintptr)  {
    miniWebview_Refresh.Call(obj)
}

func MiniWebview_Stop(obj uintptr)  {
    miniWebview_Stop.Call(obj)
}

func MiniWebview_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    miniWebview_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func MiniWebview_ExecuteScript(obj uintptr, AScriptText string, AScriptType string)  {
    miniWebview_ExecuteScript.Call(obj, GoStrToDStr(AScriptText) , GoStrToDStr(AScriptType) )
}

func MiniWebview_ExecuteJS(obj uintptr, AScriptText string)  {
    miniWebview_ExecuteJS.Call(obj, GoStrToDStr(AScriptText) )
}

func MiniWebview_LoadHTML(obj uintptr, AStr string)  {
    miniWebview_LoadHTML.Call(obj, GoStrToDStr(AStr) )
}

func MiniWebview_CanFocus(obj uintptr) bool {
    ret, _, _ := miniWebview_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := miniWebview_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func MiniWebview_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := miniWebview_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func MiniWebview_DisableAlign(obj uintptr)  {
    miniWebview_DisableAlign.Call(obj)
}

func MiniWebview_EnableAlign(obj uintptr)  {
    miniWebview_EnableAlign.Call(obj)
}

func MiniWebview_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := miniWebview_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func MiniWebview_FlipChildren(obj uintptr, AllLevels bool)  {
    miniWebview_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func MiniWebview_Focused(obj uintptr) bool {
    ret, _, _ := miniWebview_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_HandleAllocated(obj uintptr) bool {
    ret, _, _ := miniWebview_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_InsertControl(obj uintptr, AControl uintptr)  {
    miniWebview_InsertControl.Call(obj, AControl )
}

func MiniWebview_Invalidate(obj uintptr)  {
    miniWebview_Invalidate.Call(obj)
}

func MiniWebview_RemoveControl(obj uintptr, AControl uintptr)  {
    miniWebview_RemoveControl.Call(obj, AControl )
}

func MiniWebview_Realign(obj uintptr)  {
    miniWebview_Realign.Call(obj)
}

func MiniWebview_Repaint(obj uintptr)  {
    miniWebview_Repaint.Call(obj)
}

func MiniWebview_ScaleBy(obj uintptr, M int32, D int32)  {
    miniWebview_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func MiniWebview_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    miniWebview_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func MiniWebview_SetFocus(obj uintptr)  {
    miniWebview_SetFocus.Call(obj)
}

func MiniWebview_Update(obj uintptr)  {
    miniWebview_Update.Call(obj)
}

func MiniWebview_BringToFront(obj uintptr)  {
    miniWebview_BringToFront.Call(obj)
}

func MiniWebview_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    miniWebview_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    miniWebview_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_Dragging(obj uintptr) bool {
    ret, _, _ := miniWebview_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_HasParent(obj uintptr) bool {
    ret, _, _ := miniWebview_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_Hide(obj uintptr)  {
    miniWebview_Hide.Call(obj)
}

func MiniWebview_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := miniWebview_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func MiniWebview_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    miniWebview_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    miniWebview_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_SendToBack(obj uintptr)  {
    miniWebview_SendToBack.Call(obj)
}

func MiniWebview_Show(obj uintptr)  {
    miniWebview_Show.Call(obj)
}

func MiniWebview_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := miniWebview_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func MiniWebview_GetTextLen(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetTextLen.Call(obj)
    return int32(ret)
}

func MiniWebview_SetTextBuf(obj uintptr, Buffer string)  {
    miniWebview_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func MiniWebview_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := miniWebview_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func MiniWebview_GetNamePath(obj uintptr) string {
    ret, _, _ := miniWebview_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func MiniWebview_Assign(obj uintptr, Source uintptr)  {
    miniWebview_Assign.Call(obj, Source )
}

func MiniWebview_ClassType(obj uintptr) TClass {
    ret, _, _ := miniWebview_ClassType.Call(obj)
    return TClass(ret)
}

func MiniWebview_ClassName(obj uintptr) string {
    ret, _, _ := miniWebview_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MiniWebview_InstanceSize(obj uintptr) int32 {
    ret, _, _ := miniWebview_InstanceSize.Call(obj)
    return int32(ret)
}

func MiniWebview_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := miniWebview_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MiniWebview_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := miniWebview_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MiniWebview_GetHashCode(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetHashCode.Call(obj)
    return int32(ret)
}

func MiniWebview_ToString(obj uintptr) string {
    ret, _, _ := miniWebview_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MiniWebview_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    miniWebview_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MiniWebview_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    miniWebview_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MiniWebview_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    miniWebview_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func MiniWebview_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    miniWebview_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func MiniWebview_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    miniWebview_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func MiniWebview_AnchorClient(obj uintptr, ASpace int32)  {
    miniWebview_AnchorClient.Call(obj, uintptr(ASpace) )
}

func MiniWebview_GetReadyState(obj uintptr) TReadyState {
    ret, _, _ := miniWebview_GetReadyState.Call(obj)
    return TReadyState(ret)
}

func MiniWebview_GetAlign(obj uintptr) TAlign {
    ret, _, _ := miniWebview_GetAlign.Call(obj)
    return TAlign(ret)
}

func MiniWebview_SetAlign(obj uintptr, value TAlign) {
   miniWebview_SetAlign.Call(obj, uintptr(value))
}

func MiniWebview_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := miniWebview_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func MiniWebview_SetAnchors(obj uintptr, value TAnchors) {
   miniWebview_SetAnchors.Call(obj, uintptr(value))
}

func MiniWebview_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetConstraints.Call(obj)
    return ret
}

func MiniWebview_SetConstraints(obj uintptr, value uintptr) {
   miniWebview_SetConstraints.Call(obj, value)
}

func MiniWebview_GetEnabled(obj uintptr) bool {
    ret, _, _ := miniWebview_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetEnabled(obj uintptr, value bool) {
   miniWebview_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetVisible(obj uintptr) bool {
    ret, _, _ := miniWebview_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetVisible(obj uintptr, value bool) {
   miniWebview_SetVisible.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_SetOnTitleChange(obj uintptr, fn interface{}) {
    miniWebview_SetOnTitleChange.Call(obj, addEventToMap(fn))
}

func MiniWebview_SetOnJSExternal(obj uintptr, fn interface{}) {
    miniWebview_SetOnJSExternal.Call(obj, addEventToMap(fn))
}

func MiniWebview_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetDockClientCount.Call(obj)
    return int32(ret)
}

func MiniWebview_GetDockSite(obj uintptr) bool {
    ret, _, _ := miniWebview_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetDockSite(obj uintptr, value bool) {
   miniWebview_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := miniWebview_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetDoubleBuffered(obj uintptr, value bool) {
   miniWebview_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := miniWebview_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func MiniWebview_GetBrush(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetBrush.Call(obj)
    return ret
}

func MiniWebview_GetControlCount(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetControlCount.Call(obj)
    return int32(ret)
}

func MiniWebview_GetHandle(obj uintptr) HWND {
    ret, _, _ := miniWebview_GetHandle.Call(obj)
    return HWND(ret)
}

func MiniWebview_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := miniWebview_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetParentDoubleBuffered(obj uintptr, value bool) {
   miniWebview_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := miniWebview_GetParentWindow.Call(obj)
    return HWND(ret)
}

func MiniWebview_SetParentWindow(obj uintptr, value HWND) {
   miniWebview_SetParentWindow.Call(obj, uintptr(value))
}

func MiniWebview_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := miniWebview_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func MiniWebview_SetTabOrder(obj uintptr, value TTabOrder) {
   miniWebview_SetTabOrder.Call(obj, uintptr(value))
}

func MiniWebview_GetTabStop(obj uintptr) bool {
    ret, _, _ := miniWebview_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetTabStop(obj uintptr, value bool) {
   miniWebview_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := miniWebview_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetUseDockManager(obj uintptr, value bool) {
   miniWebview_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetAction(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetAction.Call(obj)
    return ret
}

func MiniWebview_SetAction(obj uintptr, value uintptr) {
   miniWebview_SetAction.Call(obj, value)
}

func MiniWebview_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := miniWebview_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func MiniWebview_SetBiDiMode(obj uintptr, value TBiDiMode) {
   miniWebview_SetBiDiMode.Call(obj, uintptr(value))
}

func MiniWebview_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    miniWebview_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_SetBoundsRect(obj uintptr, value TRect) {
   miniWebview_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MiniWebview_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetClientHeight.Call(obj)
    return int32(ret)
}

func MiniWebview_SetClientHeight(obj uintptr, value int32) {
   miniWebview_SetClientHeight.Call(obj, uintptr(value))
}

func MiniWebview_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    miniWebview_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_GetClientRect(obj uintptr) TRect {
    var ret TRect
    miniWebview_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MiniWebview_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetClientWidth.Call(obj)
    return int32(ret)
}

func MiniWebview_SetClientWidth(obj uintptr, value int32) {
   miniWebview_SetClientWidth.Call(obj, uintptr(value))
}

func MiniWebview_GetControlState(obj uintptr) TControlState {
    ret, _, _ := miniWebview_GetControlState.Call(obj)
    return TControlState(ret)
}

func MiniWebview_SetControlState(obj uintptr, value TControlState) {
   miniWebview_SetControlState.Call(obj, uintptr(value))
}

func MiniWebview_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := miniWebview_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func MiniWebview_SetControlStyle(obj uintptr, value TControlStyle) {
   miniWebview_SetControlStyle.Call(obj, uintptr(value))
}

func MiniWebview_GetFloating(obj uintptr) bool {
    ret, _, _ := miniWebview_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_GetShowHint(obj uintptr) bool {
    ret, _, _ := miniWebview_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func MiniWebview_SetShowHint(obj uintptr, value bool) {
   miniWebview_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func MiniWebview_GetParent(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetParent.Call(obj)
    return ret
}

func MiniWebview_SetParent(obj uintptr, value uintptr) {
   miniWebview_SetParent.Call(obj, value)
}

func MiniWebview_GetLeft(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetLeft.Call(obj)
    return int32(ret)
}

func MiniWebview_SetLeft(obj uintptr, value int32) {
   miniWebview_SetLeft.Call(obj, uintptr(value))
}

func MiniWebview_GetTop(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetTop.Call(obj)
    return int32(ret)
}

func MiniWebview_SetTop(obj uintptr, value int32) {
   miniWebview_SetTop.Call(obj, uintptr(value))
}

func MiniWebview_GetWidth(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetWidth.Call(obj)
    return int32(ret)
}

func MiniWebview_SetWidth(obj uintptr, value int32) {
   miniWebview_SetWidth.Call(obj, uintptr(value))
}

func MiniWebview_GetHeight(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetHeight.Call(obj)
    return int32(ret)
}

func MiniWebview_SetHeight(obj uintptr, value int32) {
   miniWebview_SetHeight.Call(obj, uintptr(value))
}

func MiniWebview_GetCursor(obj uintptr) TCursor {
    ret, _, _ := miniWebview_GetCursor.Call(obj)
    return TCursor(ret)
}

func MiniWebview_SetCursor(obj uintptr, value TCursor) {
   miniWebview_SetCursor.Call(obj, uintptr(value))
}

func MiniWebview_GetHint(obj uintptr) string {
    ret, _, _ := miniWebview_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func MiniWebview_SetHint(obj uintptr, value string) {
   miniWebview_SetHint.Call(obj, GoStrToDStr(value))
}

func MiniWebview_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetComponentCount.Call(obj)
    return int32(ret)
}

func MiniWebview_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := miniWebview_GetComponentIndex.Call(obj)
    return int32(ret)
}

func MiniWebview_SetComponentIndex(obj uintptr, value int32) {
   miniWebview_SetComponentIndex.Call(obj, uintptr(value))
}

func MiniWebview_GetOwner(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetOwner.Call(obj)
    return ret
}

func MiniWebview_GetName(obj uintptr) string {
    ret, _, _ := miniWebview_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func MiniWebview_SetName(obj uintptr, value string) {
   miniWebview_SetName.Call(obj, GoStrToDStr(value))
}

func MiniWebview_GetTag(obj uintptr) int {
    ret, _, _ := miniWebview_GetTag.Call(obj)
    return int(ret)
}

func MiniWebview_SetTag(obj uintptr, value int) {
   miniWebview_SetTag.Call(obj, uintptr(value))
}

func MiniWebview_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetAnchorSideLeft.Call(obj)
    return ret
}

func MiniWebview_SetAnchorSideLeft(obj uintptr, value uintptr) {
   miniWebview_SetAnchorSideLeft.Call(obj, value)
}

func MiniWebview_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetAnchorSideTop.Call(obj)
    return ret
}

func MiniWebview_SetAnchorSideTop(obj uintptr, value uintptr) {
   miniWebview_SetAnchorSideTop.Call(obj, value)
}

func MiniWebview_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetAnchorSideRight.Call(obj)
    return ret
}

func MiniWebview_SetAnchorSideRight(obj uintptr, value uintptr) {
   miniWebview_SetAnchorSideRight.Call(obj, value)
}

func MiniWebview_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetAnchorSideBottom.Call(obj)
    return ret
}

func MiniWebview_SetAnchorSideBottom(obj uintptr, value uintptr) {
   miniWebview_SetAnchorSideBottom.Call(obj, value)
}

func MiniWebview_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetChildSizing.Call(obj)
    return ret
}

func MiniWebview_SetChildSizing(obj uintptr, value uintptr) {
   miniWebview_SetChildSizing.Call(obj, value)
}

func MiniWebview_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := miniWebview_GetBorderSpacing.Call(obj)
    return ret
}

func MiniWebview_SetBorderSpacing(obj uintptr, value uintptr) {
   miniWebview_SetBorderSpacing.Call(obj, value)
}

func MiniWebview_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := miniWebview_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func MiniWebview_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := miniWebview_GetControls.Call(obj, uintptr(Index))
    return ret
}

func MiniWebview_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := miniWebview_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func MiniWebview_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := miniWebview_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func MiniWebview_StaticClassType() TClass {
    r, _, _:= miniWebview_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCanvas ---------------------------

func Canvas_Create() uintptr {
    ret, _, _ := canvas_Create.Call()
    return ret
}

func Canvas_Free(obj uintptr) {
    canvas_Free.Call(obj)
}

func Canvas_Arc(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32)  {
    canvas_Arc.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) , uintptr(X3) , uintptr(Y3) , uintptr(X4) , uintptr(Y4) )
}

func Canvas_ArcTo(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32)  {
    canvas_ArcTo.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) , uintptr(X3) , uintptr(Y3) , uintptr(X4) , uintptr(Y4) )
}

func Canvas_AngleArc(obj uintptr, X int32, Y int32, Radius uint32, StartAngle float32, SweepAngle float32)  {
    canvas_AngleArc.Call(obj, uintptr(X) , uintptr(Y) , uintptr(Radius) , uintptr(unsafe.Pointer(&StartAngle)), uintptr(unsafe.Pointer(&SweepAngle)))
}

func Canvas_Chord(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32)  {
    canvas_Chord.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) , uintptr(X3) , uintptr(Y3) , uintptr(X4) , uintptr(Y4) )
}

func Canvas_Ellipse(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32)  {
    canvas_Ellipse.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) )
}

func Canvas_FloodFill(obj uintptr, X int32, Y int32, Color TColor, FillStyle TFillStyle)  {
    canvas_FloodFill.Call(obj, uintptr(X) , uintptr(Y) , uintptr(Color) , uintptr(FillStyle) )
}

func Canvas_HandleAllocated(obj uintptr) bool {
    ret, _, _ := canvas_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Canvas_LineTo(obj uintptr, X int32, Y int32)  {
    canvas_LineTo.Call(obj, uintptr(X) , uintptr(Y) )
}

func Canvas_MoveTo(obj uintptr, X int32, Y int32)  {
    canvas_MoveTo.Call(obj, uintptr(X) , uintptr(Y) )
}

func Canvas_Pie(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32, X4 int32, Y4 int32)  {
    canvas_Pie.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) , uintptr(X3) , uintptr(Y3) , uintptr(X4) , uintptr(Y4) )
}

func Canvas_Rectangle(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32)  {
    canvas_Rectangle.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) )
}

func Canvas_Refresh(obj uintptr)  {
    canvas_Refresh.Call(obj)
}

func Canvas_RoundRect(obj uintptr, X1 int32, Y1 int32, X2 int32, Y2 int32, X3 int32, Y3 int32)  {
    canvas_RoundRect.Call(obj, uintptr(X1) , uintptr(Y1) , uintptr(X2) , uintptr(Y2) , uintptr(X3) , uintptr(Y3) )
}

func Canvas_TextExtent(obj uintptr, Text string) TSize {
    var ret TSize
    canvas_TextExtent.Call(obj, GoStrToDStr(Text) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Canvas_TextOut(obj uintptr, X int32, Y int32, Text string)  {
    canvas_TextOut.Call(obj, uintptr(X) , uintptr(Y) , GoStrToDStr(Text) )
}

func Canvas_Lock(obj uintptr)  {
    canvas_Lock.Call(obj)
}

func Canvas_TextHeight(obj uintptr, Text string) int32 {
    ret, _, _ := canvas_TextHeight.Call(obj, GoStrToDStr(Text) )
    return int32(ret)
}

func Canvas_TextWidth(obj uintptr, Text string) int32 {
    ret, _, _ := canvas_TextWidth.Call(obj, GoStrToDStr(Text) )
    return int32(ret)
}

func Canvas_Assign(obj uintptr, Source uintptr)  {
    canvas_Assign.Call(obj, Source )
}

func Canvas_GetNamePath(obj uintptr) string {
    ret, _, _ := canvas_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Canvas_ClassType(obj uintptr) TClass {
    ret, _, _ := canvas_ClassType.Call(obj)
    return TClass(ret)
}

func Canvas_ClassName(obj uintptr) string {
    ret, _, _ := canvas_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Canvas_InstanceSize(obj uintptr) int32 {
    ret, _, _ := canvas_InstanceSize.Call(obj)
    return int32(ret)
}

func Canvas_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := canvas_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Canvas_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := canvas_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Canvas_GetHashCode(obj uintptr) int32 {
    ret, _, _ := canvas_GetHashCode.Call(obj)
    return int32(ret)
}

func Canvas_ToString(obj uintptr) string {
    ret, _, _ := canvas_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Canvas_GetHandle(obj uintptr) HDC {
    ret, _, _ := canvas_GetHandle.Call(obj)
    return HDC(ret)
}

func Canvas_SetHandle(obj uintptr, value HDC) {
   canvas_SetHandle.Call(obj, uintptr(value))
}

func Canvas_GetBrush(obj uintptr) uintptr {
    ret, _, _ := canvas_GetBrush.Call(obj)
    return ret
}

func Canvas_SetBrush(obj uintptr, value uintptr) {
   canvas_SetBrush.Call(obj, value)
}

func Canvas_GetCopyMode(obj uintptr) int32 {
    ret, _, _ := canvas_GetCopyMode.Call(obj)
    return int32(ret)
}

func Canvas_SetCopyMode(obj uintptr, value int32) {
   canvas_SetCopyMode.Call(obj, uintptr(value))
}

func Canvas_GetFont(obj uintptr) uintptr {
    ret, _, _ := canvas_GetFont.Call(obj)
    return ret
}

func Canvas_SetFont(obj uintptr, value uintptr) {
   canvas_SetFont.Call(obj, value)
}

func Canvas_GetPen(obj uintptr) uintptr {
    ret, _, _ := canvas_GetPen.Call(obj)
    return ret
}

func Canvas_SetPen(obj uintptr, value uintptr) {
   canvas_SetPen.Call(obj, value)
}

func Canvas_SetOnChange(obj uintptr, fn interface{}) {
    canvas_SetOnChange.Call(obj, addEventToMap(fn))
}

func Canvas_SetOnChanging(obj uintptr, fn interface{}) {
    canvas_SetOnChanging.Call(obj, addEventToMap(fn))
}

func Canvas_StaticClassType() TClass {
    r, _, _:= canvas_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TObject ---------------------------

func Object_Create() uintptr {
    ret, _, _ := object_Create.Call()
    return ret
}

func Object_Free(obj uintptr) {
    object_Free.Call(obj)
}

func Object_ClassType(obj uintptr) TClass {
    ret, _, _ := object_ClassType.Call(obj)
    return TClass(ret)
}

func Object_ClassName(obj uintptr) string {
    ret, _, _ := object_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Object_InstanceSize(obj uintptr) int32 {
    ret, _, _ := object_InstanceSize.Call(obj)
    return int32(ret)
}

func Object_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := object_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Object_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := object_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Object_GetHashCode(obj uintptr) int32 {
    ret, _, _ := object_GetHashCode.Call(obj)
    return int32(ret)
}

func Object_ToString(obj uintptr) string {
    ret, _, _ := object_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Object_StaticClassType() TClass {
    r, _, _:= object_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TGraphic ---------------------------

func Graphic_Create() uintptr {
    ret, _, _ := graphic_Create.Call()
    return ret
}

func Graphic_Free(obj uintptr) {
    graphic_Free.Call(obj)
}

func Graphic_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := graphic_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Graphic_LoadFromFile(obj uintptr, Filename string)  {
    graphic_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func Graphic_SaveToFile(obj uintptr, Filename string)  {
    graphic_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func Graphic_LoadFromStream(obj uintptr, Stream uintptr)  {
    graphic_LoadFromStream.Call(obj, Stream )
}

func Graphic_SaveToStream(obj uintptr, Stream uintptr)  {
    graphic_SaveToStream.Call(obj, Stream )
}

func Graphic_Assign(obj uintptr, Source uintptr)  {
    graphic_Assign.Call(obj, Source )
}

func Graphic_GetNamePath(obj uintptr) string {
    ret, _, _ := graphic_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Graphic_ClassType(obj uintptr) TClass {
    ret, _, _ := graphic_ClassType.Call(obj)
    return TClass(ret)
}

func Graphic_ClassName(obj uintptr) string {
    ret, _, _ := graphic_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Graphic_InstanceSize(obj uintptr) int32 {
    ret, _, _ := graphic_InstanceSize.Call(obj)
    return int32(ret)
}

func Graphic_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := graphic_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Graphic_GetHashCode(obj uintptr) int32 {
    ret, _, _ := graphic_GetHashCode.Call(obj)
    return int32(ret)
}

func Graphic_ToString(obj uintptr) string {
    ret, _, _ := graphic_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Graphic_GetEmpty(obj uintptr) bool {
    ret, _, _ := graphic_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func Graphic_GetHeight(obj uintptr) int32 {
    ret, _, _ := graphic_GetHeight.Call(obj)
    return int32(ret)
}

func Graphic_SetHeight(obj uintptr, value int32) {
   graphic_SetHeight.Call(obj, uintptr(value))
}

func Graphic_GetModified(obj uintptr) bool {
    ret, _, _ := graphic_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Graphic_SetModified(obj uintptr, value bool) {
   graphic_SetModified.Call(obj, GoBoolToDBool(value))
}

func Graphic_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := graphic_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func Graphic_SetPalette(obj uintptr, value HPALETTE) {
   graphic_SetPalette.Call(obj, uintptr(value))
}

func Graphic_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := graphic_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func Graphic_SetPaletteModified(obj uintptr, value bool) {
   graphic_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func Graphic_GetTransparent(obj uintptr) bool {
    ret, _, _ := graphic_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func Graphic_SetTransparent(obj uintptr, value bool) {
   graphic_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func Graphic_GetWidth(obj uintptr) int32 {
    ret, _, _ := graphic_GetWidth.Call(obj)
    return int32(ret)
}

func Graphic_SetWidth(obj uintptr, value int32) {
   graphic_SetWidth.Call(obj, uintptr(value))
}

func Graphic_SetOnChange(obj uintptr, fn interface{}) {
    graphic_SetOnChange.Call(obj, addEventToMap(fn))
}

func Graphic_StaticClassType() TClass {
    r, _, _:= graphic_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPngImage ---------------------------

func PngImage_Create() uintptr {
    ret, _, _ := pngImage_Create.Call()
    return ret
}

func PngImage_Free(obj uintptr) {
    pngImage_Free.Call(obj)
}

func PngImage_Assign(obj uintptr, Source uintptr)  {
    pngImage_Assign.Call(obj, Source )
}

func PngImage_LoadFromStream(obj uintptr, Stream uintptr)  {
    pngImage_LoadFromStream.Call(obj, Stream )
}

func PngImage_SaveToStream(obj uintptr, Stream uintptr)  {
    pngImage_SaveToStream.Call(obj, Stream )
}

func PngImage_LoadFromResourceName(obj uintptr, Instance uintptr, Name string)  {
    pngImage_LoadFromResourceName.Call(obj, Instance , GoStrToDStr(Name) )
}

func PngImage_LoadFromResourceID(obj uintptr, Instance uintptr, ResID int32)  {
    pngImage_LoadFromResourceID.Call(obj, Instance , uintptr(ResID) )
}

func PngImage_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := pngImage_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PngImage_LoadFromFile(obj uintptr, Filename string)  {
    pngImage_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func PngImage_SaveToFile(obj uintptr, Filename string)  {
    pngImage_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func PngImage_SetSize(obj uintptr, AWidth int32, AHeight int32)  {
    pngImage_SetSize.Call(obj, uintptr(AWidth) , uintptr(AHeight) )
}

func PngImage_GetNamePath(obj uintptr) string {
    ret, _, _ := pngImage_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PngImage_ClassType(obj uintptr) TClass {
    ret, _, _ := pngImage_ClassType.Call(obj)
    return TClass(ret)
}

func PngImage_ClassName(obj uintptr) string {
    ret, _, _ := pngImage_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PngImage_InstanceSize(obj uintptr) int32 {
    ret, _, _ := pngImage_InstanceSize.Call(obj)
    return int32(ret)
}

func PngImage_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := pngImage_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PngImage_GetHashCode(obj uintptr) int32 {
    ret, _, _ := pngImage_GetHashCode.Call(obj)
    return int32(ret)
}

func PngImage_ToString(obj uintptr) string {
    ret, _, _ := pngImage_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PngImage_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := pngImage_GetCanvas.Call(obj)
    return ret
}

func PngImage_GetWidth(obj uintptr) int32 {
    ret, _, _ := pngImage_GetWidth.Call(obj)
    return int32(ret)
}

func PngImage_GetHeight(obj uintptr) int32 {
    ret, _, _ := pngImage_GetHeight.Call(obj)
    return int32(ret)
}

func PngImage_GetEmpty(obj uintptr) bool {
    ret, _, _ := pngImage_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func PngImage_GetModified(obj uintptr) bool {
    ret, _, _ := pngImage_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func PngImage_SetModified(obj uintptr, value bool) {
   pngImage_SetModified.Call(obj, GoBoolToDBool(value))
}

func PngImage_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := pngImage_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func PngImage_SetPalette(obj uintptr, value HPALETTE) {
   pngImage_SetPalette.Call(obj, uintptr(value))
}

func PngImage_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := pngImage_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func PngImage_SetPaletteModified(obj uintptr, value bool) {
   pngImage_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func PngImage_GetTransparent(obj uintptr) bool {
    ret, _, _ := pngImage_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func PngImage_SetTransparent(obj uintptr, value bool) {
   pngImage_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func PngImage_SetOnChange(obj uintptr, fn interface{}) {
    pngImage_SetOnChange.Call(obj, addEventToMap(fn))
}

func PngImage_StaticClassType() TClass {
    r, _, _:= pngImage_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TJPEGImage ---------------------------

func JPEGImage_Create() uintptr {
    ret, _, _ := jPEGImage_Create.Call()
    return ret
}

func JPEGImage_Free(obj uintptr) {
    jPEGImage_Free.Call(obj)
}

func JPEGImage_Assign(obj uintptr, Source uintptr)  {
    jPEGImage_Assign.Call(obj, Source )
}

func JPEGImage_LoadFromStream(obj uintptr, Stream uintptr)  {
    jPEGImage_LoadFromStream.Call(obj, Stream )
}

func JPEGImage_SaveToStream(obj uintptr, Stream uintptr)  {
    jPEGImage_SaveToStream.Call(obj, Stream )
}

func JPEGImage_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := jPEGImage_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func JPEGImage_LoadFromFile(obj uintptr, Filename string)  {
    jPEGImage_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func JPEGImage_SaveToFile(obj uintptr, Filename string)  {
    jPEGImage_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func JPEGImage_SetSize(obj uintptr, AWidth int32, AHeight int32)  {
    jPEGImage_SetSize.Call(obj, uintptr(AWidth) , uintptr(AHeight) )
}

func JPEGImage_GetNamePath(obj uintptr) string {
    ret, _, _ := jPEGImage_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func JPEGImage_ClassType(obj uintptr) TClass {
    ret, _, _ := jPEGImage_ClassType.Call(obj)
    return TClass(ret)
}

func JPEGImage_ClassName(obj uintptr) string {
    ret, _, _ := jPEGImage_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func JPEGImage_InstanceSize(obj uintptr) int32 {
    ret, _, _ := jPEGImage_InstanceSize.Call(obj)
    return int32(ret)
}

func JPEGImage_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := jPEGImage_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func JPEGImage_GetHashCode(obj uintptr) int32 {
    ret, _, _ := jPEGImage_GetHashCode.Call(obj)
    return int32(ret)
}

func JPEGImage_ToString(obj uintptr) string {
    ret, _, _ := jPEGImage_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func JPEGImage_GetPixelFormat(obj uintptr) TJPEGPixelFormat {
    ret, _, _ := jPEGImage_GetPixelFormat.Call(obj)
    return TJPEGPixelFormat(ret)
}

func JPEGImage_SetPixelFormat(obj uintptr, value TJPEGPixelFormat) {
   jPEGImage_SetPixelFormat.Call(obj, uintptr(value))
}

func JPEGImage_GetPerformance(obj uintptr) TJPEGPerformance {
    ret, _, _ := jPEGImage_GetPerformance.Call(obj)
    return TJPEGPerformance(ret)
}

func JPEGImage_SetPerformance(obj uintptr, value TJPEGPerformance) {
   jPEGImage_SetPerformance.Call(obj, uintptr(value))
}

func JPEGImage_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := jPEGImage_GetCanvas.Call(obj)
    return ret
}

func JPEGImage_GetEmpty(obj uintptr) bool {
    ret, _, _ := jPEGImage_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func JPEGImage_GetHeight(obj uintptr) int32 {
    ret, _, _ := jPEGImage_GetHeight.Call(obj)
    return int32(ret)
}

func JPEGImage_SetHeight(obj uintptr, value int32) {
   jPEGImage_SetHeight.Call(obj, uintptr(value))
}

func JPEGImage_GetModified(obj uintptr) bool {
    ret, _, _ := jPEGImage_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func JPEGImage_SetModified(obj uintptr, value bool) {
   jPEGImage_SetModified.Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := jPEGImage_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func JPEGImage_SetPalette(obj uintptr, value HPALETTE) {
   jPEGImage_SetPalette.Call(obj, uintptr(value))
}

func JPEGImage_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := jPEGImage_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func JPEGImage_SetPaletteModified(obj uintptr, value bool) {
   jPEGImage_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetTransparent(obj uintptr) bool {
    ret, _, _ := jPEGImage_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func JPEGImage_SetTransparent(obj uintptr, value bool) {
   jPEGImage_SetTransparent.Call(obj, GoBoolToDBool(value))
}

func JPEGImage_GetWidth(obj uintptr) int32 {
    ret, _, _ := jPEGImage_GetWidth.Call(obj)
    return int32(ret)
}

func JPEGImage_SetWidth(obj uintptr, value int32) {
   jPEGImage_SetWidth.Call(obj, uintptr(value))
}

func JPEGImage_SetOnChange(obj uintptr, fn interface{}) {
    jPEGImage_SetOnChange.Call(obj, addEventToMap(fn))
}

func JPEGImage_StaticClassType() TClass {
    r, _, _:= jPEGImage_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TGIFImage ---------------------------

func GIFImage_Create() uintptr {
    ret, _, _ := gIFImage_Create.Call()
    return ret
}

func GIFImage_Free(obj uintptr) {
    gIFImage_Free.Call(obj)
}

func GIFImage_SaveToStream(obj uintptr, Stream uintptr)  {
    gIFImage_SaveToStream.Call(obj, Stream )
}

func GIFImage_LoadFromStream(obj uintptr, Stream uintptr)  {
    gIFImage_LoadFromStream.Call(obj, Stream )
}

func GIFImage_Clear(obj uintptr)  {
    gIFImage_Clear.Call(obj)
}

func GIFImage_Assign(obj uintptr, Source uintptr)  {
    gIFImage_Assign.Call(obj, Source )
}

func GIFImage_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := gIFImage_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func GIFImage_LoadFromFile(obj uintptr, Filename string)  {
    gIFImage_LoadFromFile.Call(obj, GoStrToDStr(Filename) )
}

func GIFImage_SaveToFile(obj uintptr, Filename string)  {
    gIFImage_SaveToFile.Call(obj, GoStrToDStr(Filename) )
}

func GIFImage_SetSize(obj uintptr, AWidth int32, AHeight int32)  {
    gIFImage_SetSize.Call(obj, uintptr(AWidth) , uintptr(AHeight) )
}

func GIFImage_GetNamePath(obj uintptr) string {
    ret, _, _ := gIFImage_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func GIFImage_ClassType(obj uintptr) TClass {
    ret, _, _ := gIFImage_ClassType.Call(obj)
    return TClass(ret)
}

func GIFImage_ClassName(obj uintptr) string {
    ret, _, _ := gIFImage_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func GIFImage_InstanceSize(obj uintptr) int32 {
    ret, _, _ := gIFImage_InstanceSize.Call(obj)
    return int32(ret)
}

func GIFImage_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := gIFImage_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func GIFImage_GetHashCode(obj uintptr) int32 {
    ret, _, _ := gIFImage_GetHashCode.Call(obj)
    return int32(ret)
}

func GIFImage_ToString(obj uintptr) string {
    ret, _, _ := gIFImage_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func GIFImage_GetBitsPerPixel(obj uintptr) int32 {
    ret, _, _ := gIFImage_GetBitsPerPixel.Call(obj)
    return int32(ret)
}

func GIFImage_GetEmpty(obj uintptr) bool {
    ret, _, _ := gIFImage_GetEmpty.Call(obj)
    return DBoolToGoBool(ret)
}

func GIFImage_GetHeight(obj uintptr) int32 {
    ret, _, _ := gIFImage_GetHeight.Call(obj)
    return int32(ret)
}

func GIFImage_SetHeight(obj uintptr, value int32) {
   gIFImage_SetHeight.Call(obj, uintptr(value))
}

func GIFImage_GetModified(obj uintptr) bool {
    ret, _, _ := gIFImage_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func GIFImage_SetModified(obj uintptr, value bool) {
   gIFImage_SetModified.Call(obj, GoBoolToDBool(value))
}

func GIFImage_GetPalette(obj uintptr) HPALETTE {
    ret, _, _ := gIFImage_GetPalette.Call(obj)
    return HPALETTE(ret)
}

func GIFImage_SetPalette(obj uintptr, value HPALETTE) {
   gIFImage_SetPalette.Call(obj, uintptr(value))
}

func GIFImage_GetPaletteModified(obj uintptr) bool {
    ret, _, _ := gIFImage_GetPaletteModified.Call(obj)
    return DBoolToGoBool(ret)
}

func GIFImage_SetPaletteModified(obj uintptr, value bool) {
   gIFImage_SetPaletteModified.Call(obj, GoBoolToDBool(value))
}

func GIFImage_GetTransparent(obj uintptr) bool {
    ret, _, _ := gIFImage_GetTransparent.Call(obj)
    return DBoolToGoBool(ret)
}

func GIFImage_GetWidth(obj uintptr) int32 {
    ret, _, _ := gIFImage_GetWidth.Call(obj)
    return int32(ret)
}

func GIFImage_SetWidth(obj uintptr, value int32) {
   gIFImage_SetWidth.Call(obj, uintptr(value))
}

func GIFImage_SetOnChange(obj uintptr, fn interface{}) {
    gIFImage_SetOnChange.Call(obj, addEventToMap(fn))
}

func GIFImage_StaticClassType() TClass {
    r, _, _:= gIFImage_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TActionList ---------------------------

func ActionList_Create(obj uintptr) uintptr {
    ret, _, _ := actionList_Create.Call(obj)
    return ret
}

func ActionList_Free(obj uintptr) {
    actionList_Free.Call(obj)
}

func ActionList_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := actionList_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ActionList_GetNamePath(obj uintptr) string {
    ret, _, _ := actionList_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ActionList_HasParent(obj uintptr) bool {
    ret, _, _ := actionList_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ActionList_Assign(obj uintptr, Source uintptr)  {
    actionList_Assign.Call(obj, Source )
}

func ActionList_ClassType(obj uintptr) TClass {
    ret, _, _ := actionList_ClassType.Call(obj)
    return TClass(ret)
}

func ActionList_ClassName(obj uintptr) string {
    ret, _, _ := actionList_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ActionList_InstanceSize(obj uintptr) int32 {
    ret, _, _ := actionList_InstanceSize.Call(obj)
    return int32(ret)
}

func ActionList_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := actionList_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ActionList_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := actionList_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ActionList_GetHashCode(obj uintptr) int32 {
    ret, _, _ := actionList_GetHashCode.Call(obj)
    return int32(ret)
}

func ActionList_ToString(obj uintptr) string {
    ret, _, _ := actionList_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ActionList_GetImages(obj uintptr) uintptr {
    ret, _, _ := actionList_GetImages.Call(obj)
    return ret
}

func ActionList_SetImages(obj uintptr, value uintptr) {
   actionList_SetImages.Call(obj, value)
}

func ActionList_GetState(obj uintptr) TActionListState {
    ret, _, _ := actionList_GetState.Call(obj)
    return TActionListState(ret)
}

func ActionList_SetState(obj uintptr, value TActionListState) {
   actionList_SetState.Call(obj, uintptr(value))
}

func ActionList_SetOnChange(obj uintptr, fn interface{}) {
    actionList_SetOnChange.Call(obj, addEventToMap(fn))
}

func ActionList_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := actionList_GetComponentCount.Call(obj)
    return int32(ret)
}

func ActionList_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := actionList_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ActionList_SetComponentIndex(obj uintptr, value int32) {
   actionList_SetComponentIndex.Call(obj, uintptr(value))
}

func ActionList_GetOwner(obj uintptr) uintptr {
    ret, _, _ := actionList_GetOwner.Call(obj)
    return ret
}

func ActionList_GetName(obj uintptr) string {
    ret, _, _ := actionList_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ActionList_SetName(obj uintptr, value string) {
   actionList_SetName.Call(obj, GoStrToDStr(value))
}

func ActionList_GetTag(obj uintptr) int {
    ret, _, _ := actionList_GetTag.Call(obj)
    return int(ret)
}

func ActionList_SetTag(obj uintptr, value int) {
   actionList_SetTag.Call(obj, uintptr(value))
}

func ActionList_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := actionList_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ActionList_StaticClassType() TClass {
    r, _, _:= actionList_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TAction ---------------------------

func Action_Create(obj uintptr) uintptr {
    ret, _, _ := action_Create.Call(obj)
    return ret
}

func Action_Free(obj uintptr) {
    action_Free.Call(obj)
}

func Action_Execute(obj uintptr) bool {
    ret, _, _ := action_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_Update(obj uintptr) bool {
    ret, _, _ := action_Update.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_HasParent(obj uintptr) bool {
    ret, _, _ := action_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := action_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Action_GetNamePath(obj uintptr) string {
    ret, _, _ := action_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Action_Assign(obj uintptr, Source uintptr)  {
    action_Assign.Call(obj, Source )
}

func Action_ClassType(obj uintptr) TClass {
    ret, _, _ := action_ClassType.Call(obj)
    return TClass(ret)
}

func Action_ClassName(obj uintptr) string {
    ret, _, _ := action_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Action_InstanceSize(obj uintptr) int32 {
    ret, _, _ := action_InstanceSize.Call(obj)
    return int32(ret)
}

func Action_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := action_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Action_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := action_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Action_GetHashCode(obj uintptr) int32 {
    ret, _, _ := action_GetHashCode.Call(obj)
    return int32(ret)
}

func Action_ToString(obj uintptr) string {
    ret, _, _ := action_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Action_GetAutoCheck(obj uintptr) bool {
    ret, _, _ := action_GetAutoCheck.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_SetAutoCheck(obj uintptr, value bool) {
   action_SetAutoCheck.Call(obj, GoBoolToDBool(value))
}

func Action_GetCaption(obj uintptr) string {
    ret, _, _ := action_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func Action_SetCaption(obj uintptr, value string) {
   action_SetCaption.Call(obj, GoStrToDStr(value))
}

func Action_GetChecked(obj uintptr) bool {
    ret, _, _ := action_GetChecked.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_SetChecked(obj uintptr, value bool) {
   action_SetChecked.Call(obj, GoBoolToDBool(value))
}

func Action_GetEnabled(obj uintptr) bool {
    ret, _, _ := action_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_SetEnabled(obj uintptr, value bool) {
   action_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Action_GetGroupIndex(obj uintptr) int32 {
    ret, _, _ := action_GetGroupIndex.Call(obj)
    return int32(ret)
}

func Action_SetGroupIndex(obj uintptr, value int32) {
   action_SetGroupIndex.Call(obj, uintptr(value))
}

func Action_GetHint(obj uintptr) string {
    ret, _, _ := action_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Action_SetHint(obj uintptr, value string) {
   action_SetHint.Call(obj, GoStrToDStr(value))
}

func Action_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := action_GetImageIndex.Call(obj)
    return int32(ret)
}

func Action_SetImageIndex(obj uintptr, value int32) {
   action_SetImageIndex.Call(obj, uintptr(value))
}

func Action_GetShortCut(obj uintptr) TShortCut {
    ret, _, _ := action_GetShortCut.Call(obj)
    return TShortCut(ret)
}

func Action_SetShortCut(obj uintptr, value TShortCut) {
   action_SetShortCut.Call(obj, uintptr(value))
}

func Action_GetVisible(obj uintptr) bool {
    ret, _, _ := action_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Action_SetVisible(obj uintptr, value bool) {
   action_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Action_SetOnExecute(obj uintptr, fn interface{}) {
    action_SetOnExecute.Call(obj, addEventToMap(fn))
}

func Action_SetOnUpdate(obj uintptr, fn interface{}) {
    action_SetOnUpdate.Call(obj, addEventToMap(fn))
}

func Action_GetIndex(obj uintptr) int32 {
    ret, _, _ := action_GetIndex.Call(obj)
    return int32(ret)
}

func Action_SetIndex(obj uintptr, value int32) {
   action_SetIndex.Call(obj, uintptr(value))
}

func Action_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := action_GetComponentCount.Call(obj)
    return int32(ret)
}

func Action_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := action_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Action_SetComponentIndex(obj uintptr, value int32) {
   action_SetComponentIndex.Call(obj, uintptr(value))
}

func Action_GetOwner(obj uintptr) uintptr {
    ret, _, _ := action_GetOwner.Call(obj)
    return ret
}

func Action_GetName(obj uintptr) string {
    ret, _, _ := action_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Action_SetName(obj uintptr, value string) {
   action_SetName.Call(obj, GoStrToDStr(value))
}

func Action_GetTag(obj uintptr) int {
    ret, _, _ := action_GetTag.Call(obj)
    return int(ret)
}

func Action_SetTag(obj uintptr, value int) {
   action_SetTag.Call(obj, uintptr(value))
}

func Action_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := action_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Action_StaticClassType() TClass {
    r, _, _:= action_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TToolButton ---------------------------

func ToolButton_Create(obj uintptr) uintptr {
    ret, _, _ := toolButton_Create.Call(obj)
    return ret
}

func ToolButton_Free(obj uintptr) {
    toolButton_Free.Call(obj)
}

func ToolButton_CheckMenuDropdown(obj uintptr) bool {
    ret, _, _ := toolButton_CheckMenuDropdown.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_Click(obj uintptr)  {
    toolButton_Click.Call(obj)
}

func ToolButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    toolButton_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ToolButton_BringToFront(obj uintptr)  {
    toolButton_BringToFront.Call(obj)
}

func ToolButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    toolButton_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    toolButton_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_Dragging(obj uintptr) bool {
    ret, _, _ := toolButton_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_HasParent(obj uintptr) bool {
    ret, _, _ := toolButton_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_Hide(obj uintptr)  {
    toolButton_Hide.Call(obj)
}

func ToolButton_Invalidate(obj uintptr)  {
    toolButton_Invalidate.Call(obj)
}

func ToolButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := toolButton_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ToolButton_Refresh(obj uintptr)  {
    toolButton_Refresh.Call(obj)
}

func ToolButton_Repaint(obj uintptr)  {
    toolButton_Repaint.Call(obj)
}

func ToolButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    toolButton_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    toolButton_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_SendToBack(obj uintptr)  {
    toolButton_SendToBack.Call(obj)
}

func ToolButton_Show(obj uintptr)  {
    toolButton_Show.Call(obj)
}

func ToolButton_Update(obj uintptr)  {
    toolButton_Update.Call(obj)
}

func ToolButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := toolButton_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ToolButton_GetTextLen(obj uintptr) int32 {
    ret, _, _ := toolButton_GetTextLen.Call(obj)
    return int32(ret)
}

func ToolButton_SetTextBuf(obj uintptr, Buffer string)  {
    toolButton_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ToolButton_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := toolButton_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ToolButton_GetNamePath(obj uintptr) string {
    ret, _, _ := toolButton_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_Assign(obj uintptr, Source uintptr)  {
    toolButton_Assign.Call(obj, Source )
}

func ToolButton_ClassType(obj uintptr) TClass {
    ret, _, _ := toolButton_ClassType.Call(obj)
    return TClass(ret)
}

func ToolButton_ClassName(obj uintptr) string {
    ret, _, _ := toolButton_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_InstanceSize(obj uintptr) int32 {
    ret, _, _ := toolButton_InstanceSize.Call(obj)
    return int32(ret)
}

func ToolButton_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := toolButton_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ToolButton_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := toolButton_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ToolButton_GetHashCode(obj uintptr) int32 {
    ret, _, _ := toolButton_GetHashCode.Call(obj)
    return int32(ret)
}

func ToolButton_ToString(obj uintptr) string {
    ret, _, _ := toolButton_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    toolButton_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ToolButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    toolButton_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ToolButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    toolButton_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ToolButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    toolButton_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ToolButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    toolButton_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ToolButton_AnchorClient(obj uintptr, ASpace int32)  {
    toolButton_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ToolButton_GetIndex(obj uintptr) int32 {
    ret, _, _ := toolButton_GetIndex.Call(obj)
    return int32(ret)
}

func ToolButton_GetAction(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetAction.Call(obj)
    return ret
}

func ToolButton_SetAction(obj uintptr, value uintptr) {
   toolButton_SetAction.Call(obj, value)
}

func ToolButton_GetAllowAllUp(obj uintptr) bool {
    ret, _, _ := toolButton_GetAllowAllUp.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetAllowAllUp(obj uintptr, value bool) {
   toolButton_SetAllowAllUp.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetAutoSize(obj uintptr) bool {
    ret, _, _ := toolButton_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetAutoSize(obj uintptr, value bool) {
   toolButton_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetCaption(obj uintptr) string {
    ret, _, _ := toolButton_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_SetCaption(obj uintptr, value string) {
   toolButton_SetCaption.Call(obj, GoStrToDStr(value))
}

func ToolButton_GetDown(obj uintptr) bool {
    ret, _, _ := toolButton_GetDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetDown(obj uintptr, value bool) {
   toolButton_SetDown.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := toolButton_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ToolButton_SetDragCursor(obj uintptr, value TCursor) {
   toolButton_SetDragCursor.Call(obj, uintptr(value))
}

func ToolButton_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := toolButton_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ToolButton_SetDragKind(obj uintptr, value TDragKind) {
   toolButton_SetDragKind.Call(obj, uintptr(value))
}

func ToolButton_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := toolButton_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ToolButton_SetDragMode(obj uintptr, value TDragMode) {
   toolButton_SetDragMode.Call(obj, uintptr(value))
}

func ToolButton_GetDropdownMenu(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetDropdownMenu.Call(obj)
    return ret
}

func ToolButton_SetDropdownMenu(obj uintptr, value uintptr) {
   toolButton_SetDropdownMenu.Call(obj, value)
}

func ToolButton_GetEnabled(obj uintptr) bool {
    ret, _, _ := toolButton_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetEnabled(obj uintptr, value bool) {
   toolButton_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetGrouped(obj uintptr) bool {
    ret, _, _ := toolButton_GetGrouped.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetGrouped(obj uintptr, value bool) {
   toolButton_SetGrouped.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetHeight(obj uintptr) int32 {
    ret, _, _ := toolButton_GetHeight.Call(obj)
    return int32(ret)
}

func ToolButton_SetHeight(obj uintptr, value int32) {
   toolButton_SetHeight.Call(obj, uintptr(value))
}

func ToolButton_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := toolButton_GetImageIndex.Call(obj)
    return int32(ret)
}

func ToolButton_SetImageIndex(obj uintptr, value int32) {
   toolButton_SetImageIndex.Call(obj, uintptr(value))
}

func ToolButton_GetIndeterminate(obj uintptr) bool {
    ret, _, _ := toolButton_GetIndeterminate.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetIndeterminate(obj uintptr, value bool) {
   toolButton_SetIndeterminate.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetMarked(obj uintptr) bool {
    ret, _, _ := toolButton_GetMarked.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetMarked(obj uintptr, value bool) {
   toolButton_SetMarked.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := toolButton_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetParentShowHint(obj uintptr, value bool) {
   toolButton_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetPopupMenu.Call(obj)
    return ret
}

func ToolButton_SetPopupMenu(obj uintptr, value uintptr) {
   toolButton_SetPopupMenu.Call(obj, value)
}

func ToolButton_GetWrap(obj uintptr) bool {
    ret, _, _ := toolButton_GetWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetWrap(obj uintptr, value bool) {
   toolButton_SetWrap.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetShowHint(obj uintptr) bool {
    ret, _, _ := toolButton_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetShowHint(obj uintptr, value bool) {
   toolButton_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetStyle(obj uintptr) TToolButtonStyle {
    ret, _, _ := toolButton_GetStyle.Call(obj)
    return TToolButtonStyle(ret)
}

func ToolButton_SetStyle(obj uintptr, value TToolButtonStyle) {
   toolButton_SetStyle.Call(obj, uintptr(value))
}

func ToolButton_GetVisible(obj uintptr) bool {
    ret, _, _ := toolButton_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_SetVisible(obj uintptr, value bool) {
   toolButton_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ToolButton_GetWidth(obj uintptr) int32 {
    ret, _, _ := toolButton_GetWidth.Call(obj)
    return int32(ret)
}

func ToolButton_SetWidth(obj uintptr, value int32) {
   toolButton_SetWidth.Call(obj, uintptr(value))
}

func ToolButton_SetOnClick(obj uintptr, fn interface{}) {
    toolButton_SetOnClick.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnContextPopup(obj uintptr, fn interface{}) {
    toolButton_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnDragDrop(obj uintptr, fn interface{}) {
    toolButton_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnDragOver(obj uintptr, fn interface{}) {
    toolButton_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnEndDock(obj uintptr, fn interface{}) {
    toolButton_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnEndDrag(obj uintptr, fn interface{}) {
    toolButton_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnMouseDown(obj uintptr, fn interface{}) {
    toolButton_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
    toolButton_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
    toolButton_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnMouseMove(obj uintptr, fn interface{}) {
    toolButton_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnMouseUp(obj uintptr, fn interface{}) {
    toolButton_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ToolButton_SetOnStartDock(obj uintptr, fn interface{}) {
    toolButton_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func ToolButton_GetAlign(obj uintptr) TAlign {
    ret, _, _ := toolButton_GetAlign.Call(obj)
    return TAlign(ret)
}

func ToolButton_SetAlign(obj uintptr, value TAlign) {
   toolButton_SetAlign.Call(obj, uintptr(value))
}

func ToolButton_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := toolButton_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ToolButton_SetAnchors(obj uintptr, value TAnchors) {
   toolButton_SetAnchors.Call(obj, uintptr(value))
}

func ToolButton_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := toolButton_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ToolButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
   toolButton_SetBiDiMode.Call(obj, uintptr(value))
}

func ToolButton_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    toolButton_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_SetBoundsRect(obj uintptr, value TRect) {
   toolButton_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ToolButton_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := toolButton_GetClientHeight.Call(obj)
    return int32(ret)
}

func ToolButton_SetClientHeight(obj uintptr, value int32) {
   toolButton_SetClientHeight.Call(obj, uintptr(value))
}

func ToolButton_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    toolButton_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_GetClientRect(obj uintptr) TRect {
    var ret TRect
    toolButton_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ToolButton_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := toolButton_GetClientWidth.Call(obj)
    return int32(ret)
}

func ToolButton_SetClientWidth(obj uintptr, value int32) {
   toolButton_SetClientWidth.Call(obj, uintptr(value))
}

func ToolButton_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetConstraints.Call(obj)
    return ret
}

func ToolButton_SetConstraints(obj uintptr, value uintptr) {
   toolButton_SetConstraints.Call(obj, value)
}

func ToolButton_GetControlState(obj uintptr) TControlState {
    ret, _, _ := toolButton_GetControlState.Call(obj)
    return TControlState(ret)
}

func ToolButton_SetControlState(obj uintptr, value TControlState) {
   toolButton_SetControlState.Call(obj, uintptr(value))
}

func ToolButton_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := toolButton_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ToolButton_SetControlStyle(obj uintptr, value TControlStyle) {
   toolButton_SetControlStyle.Call(obj, uintptr(value))
}

func ToolButton_GetFloating(obj uintptr) bool {
    ret, _, _ := toolButton_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ToolButton_GetParent(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetParent.Call(obj)
    return ret
}

func ToolButton_SetParent(obj uintptr, value uintptr) {
   toolButton_SetParent.Call(obj, value)
}

func ToolButton_GetLeft(obj uintptr) int32 {
    ret, _, _ := toolButton_GetLeft.Call(obj)
    return int32(ret)
}

func ToolButton_SetLeft(obj uintptr, value int32) {
   toolButton_SetLeft.Call(obj, uintptr(value))
}

func ToolButton_GetTop(obj uintptr) int32 {
    ret, _, _ := toolButton_GetTop.Call(obj)
    return int32(ret)
}

func ToolButton_SetTop(obj uintptr, value int32) {
   toolButton_SetTop.Call(obj, uintptr(value))
}

func ToolButton_GetCursor(obj uintptr) TCursor {
    ret, _, _ := toolButton_GetCursor.Call(obj)
    return TCursor(ret)
}

func ToolButton_SetCursor(obj uintptr, value TCursor) {
   toolButton_SetCursor.Call(obj, uintptr(value))
}

func ToolButton_GetHint(obj uintptr) string {
    ret, _, _ := toolButton_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_SetHint(obj uintptr, value string) {
   toolButton_SetHint.Call(obj, GoStrToDStr(value))
}

func ToolButton_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := toolButton_GetComponentCount.Call(obj)
    return int32(ret)
}

func ToolButton_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := toolButton_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ToolButton_SetComponentIndex(obj uintptr, value int32) {
   toolButton_SetComponentIndex.Call(obj, uintptr(value))
}

func ToolButton_GetOwner(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetOwner.Call(obj)
    return ret
}

func ToolButton_GetName(obj uintptr) string {
    ret, _, _ := toolButton_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ToolButton_SetName(obj uintptr, value string) {
   toolButton_SetName.Call(obj, GoStrToDStr(value))
}

func ToolButton_GetTag(obj uintptr) int {
    ret, _, _ := toolButton_GetTag.Call(obj)
    return int(ret)
}

func ToolButton_SetTag(obj uintptr, value int) {
   toolButton_SetTag.Call(obj, uintptr(value))
}

func ToolButton_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetAnchorSideLeft.Call(obj)
    return ret
}

func ToolButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
   toolButton_SetAnchorSideLeft.Call(obj, value)
}

func ToolButton_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetAnchorSideTop.Call(obj)
    return ret
}

func ToolButton_SetAnchorSideTop(obj uintptr, value uintptr) {
   toolButton_SetAnchorSideTop.Call(obj, value)
}

func ToolButton_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetAnchorSideRight.Call(obj)
    return ret
}

func ToolButton_SetAnchorSideRight(obj uintptr, value uintptr) {
   toolButton_SetAnchorSideRight.Call(obj, value)
}

func ToolButton_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetAnchorSideBottom.Call(obj)
    return ret
}

func ToolButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
   toolButton_SetAnchorSideBottom.Call(obj, value)
}

func ToolButton_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := toolButton_GetBorderSpacing.Call(obj)
    return ret
}

func ToolButton_SetBorderSpacing(obj uintptr, value uintptr) {
   toolButton_SetBorderSpacing.Call(obj, value)
}

func ToolButton_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := toolButton_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ToolButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := toolButton_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ToolButton_StaticClassType() TClass {
    r, _, _:= toolButton_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TIniFile ---------------------------

func IniFile_Create(obj uintptr) uintptr {
    ret, _, _ := iniFile_Create.Call(obj)
    return ret
}

func IniFile_Free(obj uintptr) {
    iniFile_Free.Call(obj)
}

func IniFile_ReadString(obj uintptr, Section string, Ident string, Default string) string {
    ret, _, _ := iniFile_ReadString.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , GoStrToDStr(Default) )
    return DStrToGoStr(ret)
}

func IniFile_WriteString(obj uintptr, Section string, Ident string, Value string)  {
    iniFile_WriteString.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , GoStrToDStr(Value) )
}

func IniFile_ReadSections(obj uintptr, Strings uintptr)  {
    iniFile_ReadSections.Call(obj, Strings )
}

func IniFile_ReadSectionValues(obj uintptr, Section string, Strings uintptr)  {
    iniFile_ReadSectionValues.Call(obj, GoStrToDStr(Section) , Strings )
}

func IniFile_EraseSection(obj uintptr, Section string)  {
    iniFile_EraseSection.Call(obj, GoStrToDStr(Section) )
}

func IniFile_DeleteKey(obj uintptr, Section string, Ident string)  {
    iniFile_DeleteKey.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) )
}

func IniFile_UpdateFile(obj uintptr)  {
    iniFile_UpdateFile.Call(obj)
}

func IniFile_SectionExists(obj uintptr, Section string) bool {
    ret, _, _ := iniFile_SectionExists.Call(obj, GoStrToDStr(Section) )
    return DBoolToGoBool(ret)
}

func IniFile_ReadInteger(obj uintptr, Section string, Ident string, Default int32) int32 {
    ret, _, _ := iniFile_ReadInteger.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , uintptr(Default) )
    return int32(ret)
}

func IniFile_WriteInteger(obj uintptr, Section string, Ident string, Value int32)  {
    iniFile_WriteInteger.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , uintptr(Value) )
}

func IniFile_ReadBool(obj uintptr, Section string, Ident string, Default bool) bool {
    ret, _, _ := iniFile_ReadBool.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , GoBoolToDBool(Default) )
    return DBoolToGoBool(ret)
}

func IniFile_WriteBool(obj uintptr, Section string, Ident string, Value bool)  {
    iniFile_WriteBool.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) , GoBoolToDBool(Value) )
}

func IniFile_ReadDate(obj uintptr, Section string, Name string, Default time.Time) time.Time {
    ret, _, _ := iniFile_ReadDate.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Default.Unix()))
    return time.Unix(int64(ret), 0)
}

func IniFile_ReadDateTime(obj uintptr, Section string, Name string, Default time.Time) time.Time {
    ret, _, _ := iniFile_ReadDateTime.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Default.Unix()))
    return time.Unix(int64(ret), 0)
}

func IniFile_ReadFloat(obj uintptr, Section string, Name string, Default float64) float64 {
    var ret float64
    iniFile_ReadFloat.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(unsafe.Pointer(&Default)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func IniFile_ReadTime(obj uintptr, Section string, Name string, Default time.Time) time.Time {
    ret, _, _ := iniFile_ReadTime.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Default.Unix()))
    return time.Unix(int64(ret), 0)
}

func IniFile_WriteDate(obj uintptr, Section string, Name string, Value time.Time)  {
    iniFile_WriteDate.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func IniFile_WriteDateTime(obj uintptr, Section string, Name string, Value time.Time)  {
    iniFile_WriteDateTime.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func IniFile_WriteFloat(obj uintptr, Section string, Name string, Value float64)  {
    iniFile_WriteFloat.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(unsafe.Pointer(&Value)))
}

func IniFile_WriteTime(obj uintptr, Section string, Name string, Value time.Time)  {
    iniFile_WriteTime.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func IniFile_ValueExists(obj uintptr, Section string, Ident string) bool {
    ret, _, _ := iniFile_ValueExists.Call(obj, GoStrToDStr(Section) , GoStrToDStr(Ident) )
    return DBoolToGoBool(ret)
}

func IniFile_ClassType(obj uintptr) TClass {
    ret, _, _ := iniFile_ClassType.Call(obj)
    return TClass(ret)
}

func IniFile_ClassName(obj uintptr) string {
    ret, _, _ := iniFile_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func IniFile_InstanceSize(obj uintptr) int32 {
    ret, _, _ := iniFile_InstanceSize.Call(obj)
    return int32(ret)
}

func IniFile_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := iniFile_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func IniFile_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := iniFile_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func IniFile_GetHashCode(obj uintptr) int32 {
    ret, _, _ := iniFile_GetHashCode.Call(obj)
    return int32(ret)
}

func IniFile_ToString(obj uintptr) string {
    ret, _, _ := iniFile_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func IniFile_GetFileName(obj uintptr) string {
    ret, _, _ := iniFile_GetFileName.Call(obj)
    return DStrToGoStr(ret)
}

func IniFile_StaticClassType() TClass {
    r, _, _:= iniFile_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TRegistry ---------------------------

func Registry_Create(obj uintptr) uintptr {
    ret, _, _ := registry_Create.Call(obj)
    return ret
}

func Registry_Free(obj uintptr) {
    registry_Free.Call(obj)
}

func Registry_CloseKey(obj uintptr)  {
    registry_CloseKey.Call(obj)
}

func Registry_CreateKey(obj uintptr, Key string) bool {
    ret, _, _ := registry_CreateKey.Call(obj, GoStrToDStr(Key) )
    return DBoolToGoBool(ret)
}

func Registry_DeleteKey(obj uintptr, Key string) bool {
    ret, _, _ := registry_DeleteKey.Call(obj, GoStrToDStr(Key) )
    return DBoolToGoBool(ret)
}

func Registry_DeleteValue(obj uintptr, Name string) bool {
    ret, _, _ := registry_DeleteValue.Call(obj, GoStrToDStr(Name) )
    return DBoolToGoBool(ret)
}

func Registry_HasSubKeys(obj uintptr) bool {
    ret, _, _ := registry_HasSubKeys.Call(obj)
    return DBoolToGoBool(ret)
}

func Registry_KeyExists(obj uintptr, Key string) bool {
    ret, _, _ := registry_KeyExists.Call(obj, GoStrToDStr(Key) )
    return DBoolToGoBool(ret)
}

func Registry_LoadKey(obj uintptr, Key string, FileName string) bool {
    ret, _, _ := registry_LoadKey.Call(obj, GoStrToDStr(Key) , GoStrToDStr(FileName) )
    return DBoolToGoBool(ret)
}

func Registry_MoveKey(obj uintptr, OldName string, NewName string, Delete bool)  {
    registry_MoveKey.Call(obj, GoStrToDStr(OldName) , GoStrToDStr(NewName) , GoBoolToDBool(Delete) )
}

func Registry_OpenKey(obj uintptr, Key string, CanCreate bool) bool {
    ret, _, _ := registry_OpenKey.Call(obj, GoStrToDStr(Key) , GoBoolToDBool(CanCreate) )
    return DBoolToGoBool(ret)
}

func Registry_OpenKeyReadOnly(obj uintptr, Key string) bool {
    ret, _, _ := registry_OpenKeyReadOnly.Call(obj, GoStrToDStr(Key) )
    return DBoolToGoBool(ret)
}

func Registry_ReadBool(obj uintptr, Name string) bool {
    ret, _, _ := registry_ReadBool.Call(obj, GoStrToDStr(Name) )
    return DBoolToGoBool(ret)
}

func Registry_ReadDate(obj uintptr, Name string) time.Time {
    ret, _, _ := registry_ReadDate.Call(obj, GoStrToDStr(Name) )
    return time.Unix(int64(ret), 0)
}

func Registry_ReadDateTime(obj uintptr, Name string) time.Time {
    ret, _, _ := registry_ReadDateTime.Call(obj, GoStrToDStr(Name) )
    return time.Unix(int64(ret), 0)
}

func Registry_ReadFloat(obj uintptr, Name string) float64 {
    var ret float64
    registry_ReadFloat.Call(obj, GoStrToDStr(Name) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Registry_ReadInteger(obj uintptr, Name string) int32 {
    ret, _, _ := registry_ReadInteger.Call(obj, GoStrToDStr(Name) )
    return int32(ret)
}

func Registry_ReadString(obj uintptr, Name string) string {
    ret, _, _ := registry_ReadString.Call(obj, GoStrToDStr(Name) )
    return DStrToGoStr(ret)
}

func Registry_ReadTime(obj uintptr, Name string) time.Time {
    ret, _, _ := registry_ReadTime.Call(obj, GoStrToDStr(Name) )
    return time.Unix(int64(ret), 0)
}

func Registry_RegistryConnect(obj uintptr, UNCName string) bool {
    ret, _, _ := registry_RegistryConnect.Call(obj, GoStrToDStr(UNCName) )
    return DBoolToGoBool(ret)
}

func Registry_RenameValue(obj uintptr, OldName string, NewName string)  {
    registry_RenameValue.Call(obj, GoStrToDStr(OldName) , GoStrToDStr(NewName) )
}

func Registry_ReplaceKey(obj uintptr, Key string, FileName string, BackUpFileName string) bool {
    ret, _, _ := registry_ReplaceKey.Call(obj, GoStrToDStr(Key) , GoStrToDStr(FileName) , GoStrToDStr(BackUpFileName) )
    return DBoolToGoBool(ret)
}

func Registry_RestoreKey(obj uintptr, Key string, FileName string) bool {
    ret, _, _ := registry_RestoreKey.Call(obj, GoStrToDStr(Key) , GoStrToDStr(FileName) )
    return DBoolToGoBool(ret)
}

func Registry_SaveKey(obj uintptr, Key string, FileName string) bool {
    ret, _, _ := registry_SaveKey.Call(obj, GoStrToDStr(Key) , GoStrToDStr(FileName) )
    return DBoolToGoBool(ret)
}

func Registry_UnLoadKey(obj uintptr, Key string) bool {
    ret, _, _ := registry_UnLoadKey.Call(obj, GoStrToDStr(Key) )
    return DBoolToGoBool(ret)
}

func Registry_ValueExists(obj uintptr, Name string) bool {
    ret, _, _ := registry_ValueExists.Call(obj, GoStrToDStr(Name) )
    return DBoolToGoBool(ret)
}

func Registry_WriteBool(obj uintptr, Name string, Value bool)  {
    registry_WriteBool.Call(obj, GoStrToDStr(Name) , GoBoolToDBool(Value) )
}

func Registry_WriteDate(obj uintptr, Name string, Value time.Time)  {
    registry_WriteDate.Call(obj, GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func Registry_WriteDateTime(obj uintptr, Name string, Value time.Time)  {
    registry_WriteDateTime.Call(obj, GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func Registry_WriteFloat(obj uintptr, Name string, Value float64)  {
    registry_WriteFloat.Call(obj, GoStrToDStr(Name) , uintptr(unsafe.Pointer(&Value)))
}

func Registry_WriteInteger(obj uintptr, Name string, Value int32)  {
    registry_WriteInteger.Call(obj, GoStrToDStr(Name) , uintptr(Value) )
}

func Registry_WriteString(obj uintptr, Name string, Value string)  {
    registry_WriteString.Call(obj, GoStrToDStr(Name) , GoStrToDStr(Value) )
}

func Registry_WriteExpandString(obj uintptr, Name string, Value string)  {
    registry_WriteExpandString.Call(obj, GoStrToDStr(Name) , GoStrToDStr(Value) )
}

func Registry_WriteTime(obj uintptr, Name string, Value time.Time)  {
    registry_WriteTime.Call(obj, GoStrToDStr(Name) , uintptr(Value.Unix()))
}

func Registry_ClassType(obj uintptr) TClass {
    ret, _, _ := registry_ClassType.Call(obj)
    return TClass(ret)
}

func Registry_ClassName(obj uintptr) string {
    ret, _, _ := registry_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Registry_InstanceSize(obj uintptr) int32 {
    ret, _, _ := registry_InstanceSize.Call(obj)
    return int32(ret)
}

func Registry_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := registry_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Registry_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := registry_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Registry_GetHashCode(obj uintptr) int32 {
    ret, _, _ := registry_GetHashCode.Call(obj)
    return int32(ret)
}

func Registry_ToString(obj uintptr) string {
    ret, _, _ := registry_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Registry_GetCurrentKey(obj uintptr) HKEY {
    ret, _, _ := registry_GetCurrentKey.Call(obj)
    return HKEY(ret)
}

func Registry_GetCurrentPath(obj uintptr) string {
    ret, _, _ := registry_GetCurrentPath.Call(obj)
    return DStrToGoStr(ret)
}

func Registry_GetLazyWrite(obj uintptr) bool {
    ret, _, _ := registry_GetLazyWrite.Call(obj)
    return DBoolToGoBool(ret)
}

func Registry_SetLazyWrite(obj uintptr, value bool) {
   registry_SetLazyWrite.Call(obj, GoBoolToDBool(value))
}

func Registry_GetLastError(obj uintptr) int32 {
    ret, _, _ := registry_GetLastError.Call(obj)
    return int32(ret)
}

func Registry_GetLastErrorMsg(obj uintptr) string {
    ret, _, _ := registry_GetLastErrorMsg.Call(obj)
    return DStrToGoStr(ret)
}

func Registry_GetRootKey(obj uintptr) HKEY {
    ret, _, _ := registry_GetRootKey.Call(obj)
    return HKEY(ret)
}

func Registry_SetRootKey(obj uintptr, value HKEY) {
   registry_SetRootKey.Call(obj, uintptr(value))
}

func Registry_GetAccess(obj uintptr) uint32 {
    ret, _, _ := registry_GetAccess.Call(obj)
    return uint32(ret)
}

func Registry_SetAccess(obj uintptr, value uint32) {
   registry_SetAccess.Call(obj, uintptr(value))
}

func Registry_StaticClassType() TClass {
    r, _, _:= registry_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TClipboard ---------------------------

func Clipboard_Create() uintptr {
    ret, _, _ := clipboard_Create.Call()
    return ret
}

func Clipboard_Free(obj uintptr) {
    clipboard_Free.Call(obj)
}

func Clipboard_Assign(obj uintptr, Source uintptr)  {
    clipboard_Assign.Call(obj, Source )
}

func Clipboard_Clear(obj uintptr)  {
    clipboard_Clear.Call(obj)
}

func Clipboard_Close(obj uintptr)  {
    clipboard_Close.Call(obj)
}

func Clipboard_HasFormat(obj uintptr, Format uint16) bool {
    ret, _, _ := clipboard_HasFormat.Call(obj, uintptr(Format) )
    return DBoolToGoBool(ret)
}

func Clipboard_Open(obj uintptr)  {
    clipboard_Open.Call(obj)
}

func Clipboard_GetTextBuf(obj uintptr, Buffer string, BufSize int32) int32 {
    ret, _, _ := clipboard_GetTextBuf.Call(obj, GoStrToDStr(Buffer) , uintptr(BufSize) )
    return int32(ret)
}

func Clipboard_SetTextBuf(obj uintptr, Buffer string)  {
    clipboard_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Clipboard_GetNamePath(obj uintptr) string {
    ret, _, _ := clipboard_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Clipboard_ClassType(obj uintptr) TClass {
    ret, _, _ := clipboard_ClassType.Call(obj)
    return TClass(ret)
}

func Clipboard_ClassName(obj uintptr) string {
    ret, _, _ := clipboard_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Clipboard_InstanceSize(obj uintptr) int32 {
    ret, _, _ := clipboard_InstanceSize.Call(obj)
    return int32(ret)
}

func Clipboard_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := clipboard_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Clipboard_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := clipboard_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Clipboard_GetHashCode(obj uintptr) int32 {
    ret, _, _ := clipboard_GetHashCode.Call(obj)
    return int32(ret)
}

func Clipboard_ToString(obj uintptr) string {
    ret, _, _ := clipboard_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Clipboard_GetAsText(obj uintptr) string {
    ret, _, _ := clipboard_GetAsText.Call(obj)
    return DStrToGoStr(ret)
}

func Clipboard_SetAsText(obj uintptr, value string) {
   clipboard_SetAsText.Call(obj, GoStrToDStr(value))
}

func Clipboard_GetFormatCount(obj uintptr) int32 {
    ret, _, _ := clipboard_GetFormatCount.Call(obj)
    return int32(ret)
}

func Clipboard_GetFormats(obj uintptr, Index int32) uint16 {
    ret, _, _ := clipboard_GetFormats.Call(obj, uintptr(Index))
    return uint16(ret)
}

func Clipboard_StaticClassType() TClass {
    r, _, _:= clipboard_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMonitor ---------------------------

func Monitor_Create() uintptr {
    ret, _, _ := monitor_Create.Call()
    return ret
}

func Monitor_Free(obj uintptr) {
    monitor_Free.Call(obj)
}

func Monitor_ClassType(obj uintptr) TClass {
    ret, _, _ := monitor_ClassType.Call(obj)
    return TClass(ret)
}

func Monitor_ClassName(obj uintptr) string {
    ret, _, _ := monitor_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Monitor_InstanceSize(obj uintptr) int32 {
    ret, _, _ := monitor_InstanceSize.Call(obj)
    return int32(ret)
}

func Monitor_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := monitor_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Monitor_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := monitor_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Monitor_GetHashCode(obj uintptr) int32 {
    ret, _, _ := monitor_GetHashCode.Call(obj)
    return int32(ret)
}

func Monitor_ToString(obj uintptr) string {
    ret, _, _ := monitor_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Monitor_GetHandle(obj uintptr) HMONITOR {
    ret, _, _ := monitor_GetHandle.Call(obj)
    return HMONITOR(ret)
}

func Monitor_GetMonitorNum(obj uintptr) int32 {
    ret, _, _ := monitor_GetMonitorNum.Call(obj)
    return int32(ret)
}

func Monitor_GetLeft(obj uintptr) int32 {
    ret, _, _ := monitor_GetLeft.Call(obj)
    return int32(ret)
}

func Monitor_GetHeight(obj uintptr) int32 {
    ret, _, _ := monitor_GetHeight.Call(obj)
    return int32(ret)
}

func Monitor_GetTop(obj uintptr) int32 {
    ret, _, _ := monitor_GetTop.Call(obj)
    return int32(ret)
}

func Monitor_GetWidth(obj uintptr) int32 {
    ret, _, _ := monitor_GetWidth.Call(obj)
    return int32(ret)
}

func Monitor_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    monitor_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Monitor_GetWorkareaRect(obj uintptr) TRect {
    var ret TRect
    monitor_GetWorkareaRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Monitor_GetPrimary(obj uintptr) bool {
    ret, _, _ := monitor_GetPrimary.Call(obj)
    return DBoolToGoBool(ret)
}

func Monitor_GetPixelsPerInch(obj uintptr) int32 {
    ret, _, _ := monitor_GetPixelsPerInch.Call(obj)
    return int32(ret)
}

func Monitor_StaticClassType() TClass {
    r, _, _:= monitor_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPaintBox ---------------------------

func PaintBox_Create(obj uintptr) uintptr {
    ret, _, _ := paintBox_Create.Call(obj)
    return ret
}

func PaintBox_Free(obj uintptr) {
    paintBox_Free.Call(obj)
}

func PaintBox_BringToFront(obj uintptr)  {
    paintBox_BringToFront.Call(obj)
}

func PaintBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    paintBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    paintBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_Dragging(obj uintptr) bool {
    ret, _, _ := paintBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_HasParent(obj uintptr) bool {
    ret, _, _ := paintBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_Hide(obj uintptr)  {
    paintBox_Hide.Call(obj)
}

func PaintBox_Invalidate(obj uintptr)  {
    paintBox_Invalidate.Call(obj)
}

func PaintBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := paintBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func PaintBox_Refresh(obj uintptr)  {
    paintBox_Refresh.Call(obj)
}

func PaintBox_Repaint(obj uintptr)  {
    paintBox_Repaint.Call(obj)
}

func PaintBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    paintBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    paintBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_SendToBack(obj uintptr)  {
    paintBox_SendToBack.Call(obj)
}

func PaintBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    paintBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func PaintBox_Show(obj uintptr)  {
    paintBox_Show.Call(obj)
}

func PaintBox_Update(obj uintptr)  {
    paintBox_Update.Call(obj)
}

func PaintBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := paintBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func PaintBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := paintBox_GetTextLen.Call(obj)
    return int32(ret)
}

func PaintBox_SetTextBuf(obj uintptr, Buffer string)  {
    paintBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func PaintBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := paintBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PaintBox_GetNamePath(obj uintptr) string {
    ret, _, _ := paintBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PaintBox_Assign(obj uintptr, Source uintptr)  {
    paintBox_Assign.Call(obj, Source )
}

func PaintBox_ClassType(obj uintptr) TClass {
    ret, _, _ := paintBox_ClassType.Call(obj)
    return TClass(ret)
}

func PaintBox_ClassName(obj uintptr) string {
    ret, _, _ := paintBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PaintBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := paintBox_InstanceSize.Call(obj)
    return int32(ret)
}

func PaintBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := paintBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PaintBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := paintBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PaintBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := paintBox_GetHashCode.Call(obj)
    return int32(ret)
}

func PaintBox_ToString(obj uintptr) string {
    ret, _, _ := paintBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PaintBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    paintBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func PaintBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    paintBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func PaintBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    paintBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func PaintBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    paintBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func PaintBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    paintBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func PaintBox_AnchorClient(obj uintptr, ASpace int32)  {
    paintBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func PaintBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetCanvas.Call(obj)
    return ret
}

func PaintBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := paintBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func PaintBox_SetAlign(obj uintptr, value TAlign) {
   paintBox_SetAlign.Call(obj, uintptr(value))
}

func PaintBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := paintBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func PaintBox_SetAnchors(obj uintptr, value TAnchors) {
   paintBox_SetAnchors.Call(obj, uintptr(value))
}

func PaintBox_GetColor(obj uintptr) TColor {
    ret, _, _ := paintBox_GetColor.Call(obj)
    return TColor(ret)
}

func PaintBox_SetColor(obj uintptr, value TColor) {
   paintBox_SetColor.Call(obj, uintptr(value))
}

func PaintBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetConstraints.Call(obj)
    return ret
}

func PaintBox_SetConstraints(obj uintptr, value uintptr) {
   paintBox_SetConstraints.Call(obj, value)
}

func PaintBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := paintBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func PaintBox_SetDragCursor(obj uintptr, value TCursor) {
   paintBox_SetDragCursor.Call(obj, uintptr(value))
}

func PaintBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := paintBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func PaintBox_SetDragMode(obj uintptr, value TDragMode) {
   paintBox_SetDragMode.Call(obj, uintptr(value))
}

func PaintBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := paintBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetEnabled(obj uintptr, value bool) {
   paintBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetFont.Call(obj)
    return ret
}

func PaintBox_SetFont(obj uintptr, value uintptr) {
   paintBox_SetFont.Call(obj, value)
}

func PaintBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := paintBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetParentColor(obj uintptr, value bool) {
   paintBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := paintBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetParentFont(obj uintptr, value bool) {
   paintBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := paintBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetParentShowHint(obj uintptr, value bool) {
   paintBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetPopupMenu.Call(obj)
    return ret
}

func PaintBox_SetPopupMenu(obj uintptr, value uintptr) {
   paintBox_SetPopupMenu.Call(obj, value)
}

func PaintBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := paintBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetShowHint(obj uintptr, value bool) {
   paintBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func PaintBox_GetVisible(obj uintptr) bool {
    ret, _, _ := paintBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_SetVisible(obj uintptr, value bool) {
   paintBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func PaintBox_SetOnClick(obj uintptr, fn interface{}) {
    paintBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnDblClick(obj uintptr, fn interface{}) {
    paintBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    paintBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnDragOver(obj uintptr, fn interface{}) {
    paintBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    paintBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    paintBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    paintBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    paintBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    paintBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    paintBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func PaintBox_SetOnPaint(obj uintptr, fn interface{}) {
    paintBox_SetOnPaint.Call(obj, addEventToMap(fn))
}

func PaintBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetAction.Call(obj)
    return ret
}

func PaintBox_SetAction(obj uintptr, value uintptr) {
   paintBox_SetAction.Call(obj, value)
}

func PaintBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := paintBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func PaintBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   paintBox_SetBiDiMode.Call(obj, uintptr(value))
}

func PaintBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    paintBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_SetBoundsRect(obj uintptr, value TRect) {
   paintBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func PaintBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := paintBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func PaintBox_SetClientHeight(obj uintptr, value int32) {
   paintBox_SetClientHeight.Call(obj, uintptr(value))
}

func PaintBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    paintBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    paintBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func PaintBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := paintBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func PaintBox_SetClientWidth(obj uintptr, value int32) {
   paintBox_SetClientWidth.Call(obj, uintptr(value))
}

func PaintBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := paintBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func PaintBox_SetControlState(obj uintptr, value TControlState) {
   paintBox_SetControlState.Call(obj, uintptr(value))
}

func PaintBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := paintBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func PaintBox_SetControlStyle(obj uintptr, value TControlStyle) {
   paintBox_SetControlStyle.Call(obj, uintptr(value))
}

func PaintBox_GetFloating(obj uintptr) bool {
    ret, _, _ := paintBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func PaintBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetParent.Call(obj)
    return ret
}

func PaintBox_SetParent(obj uintptr, value uintptr) {
   paintBox_SetParent.Call(obj, value)
}

func PaintBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := paintBox_GetLeft.Call(obj)
    return int32(ret)
}

func PaintBox_SetLeft(obj uintptr, value int32) {
   paintBox_SetLeft.Call(obj, uintptr(value))
}

func PaintBox_GetTop(obj uintptr) int32 {
    ret, _, _ := paintBox_GetTop.Call(obj)
    return int32(ret)
}

func PaintBox_SetTop(obj uintptr, value int32) {
   paintBox_SetTop.Call(obj, uintptr(value))
}

func PaintBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := paintBox_GetWidth.Call(obj)
    return int32(ret)
}

func PaintBox_SetWidth(obj uintptr, value int32) {
   paintBox_SetWidth.Call(obj, uintptr(value))
}

func PaintBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := paintBox_GetHeight.Call(obj)
    return int32(ret)
}

func PaintBox_SetHeight(obj uintptr, value int32) {
   paintBox_SetHeight.Call(obj, uintptr(value))
}

func PaintBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := paintBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func PaintBox_SetCursor(obj uintptr, value TCursor) {
   paintBox_SetCursor.Call(obj, uintptr(value))
}

func PaintBox_GetHint(obj uintptr) string {
    ret, _, _ := paintBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func PaintBox_SetHint(obj uintptr, value string) {
   paintBox_SetHint.Call(obj, GoStrToDStr(value))
}

func PaintBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := paintBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func PaintBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := paintBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PaintBox_SetComponentIndex(obj uintptr, value int32) {
   paintBox_SetComponentIndex.Call(obj, uintptr(value))
}

func PaintBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetOwner.Call(obj)
    return ret
}

func PaintBox_GetName(obj uintptr) string {
    ret, _, _ := paintBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PaintBox_SetName(obj uintptr, value string) {
   paintBox_SetName.Call(obj, GoStrToDStr(value))
}

func PaintBox_GetTag(obj uintptr) int {
    ret, _, _ := paintBox_GetTag.Call(obj)
    return int(ret)
}

func PaintBox_SetTag(obj uintptr, value int) {
   paintBox_SetTag.Call(obj, uintptr(value))
}

func PaintBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func PaintBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   paintBox_SetAnchorSideLeft.Call(obj, value)
}

func PaintBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetAnchorSideTop.Call(obj)
    return ret
}

func PaintBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   paintBox_SetAnchorSideTop.Call(obj, value)
}

func PaintBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetAnchorSideRight.Call(obj)
    return ret
}

func PaintBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   paintBox_SetAnchorSideRight.Call(obj, value)
}

func PaintBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func PaintBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   paintBox_SetAnchorSideBottom.Call(obj, value)
}

func PaintBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := paintBox_GetBorderSpacing.Call(obj)
    return ret
}

func PaintBox_SetBorderSpacing(obj uintptr, value uintptr) {
   paintBox_SetBorderSpacing.Call(obj, value)
}

func PaintBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := paintBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PaintBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := paintBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func PaintBox_StaticClassType() TClass {
    r, _, _:= paintBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTimer ---------------------------

func Timer_Create(obj uintptr) uintptr {
    ret, _, _ := timer_Create.Call(obj)
    return ret
}

func Timer_Free(obj uintptr) {
    timer_Free.Call(obj)
}

func Timer_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := timer_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Timer_GetNamePath(obj uintptr) string {
    ret, _, _ := timer_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Timer_HasParent(obj uintptr) bool {
    ret, _, _ := timer_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Timer_Assign(obj uintptr, Source uintptr)  {
    timer_Assign.Call(obj, Source )
}

func Timer_ClassType(obj uintptr) TClass {
    ret, _, _ := timer_ClassType.Call(obj)
    return TClass(ret)
}

func Timer_ClassName(obj uintptr) string {
    ret, _, _ := timer_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Timer_InstanceSize(obj uintptr) int32 {
    ret, _, _ := timer_InstanceSize.Call(obj)
    return int32(ret)
}

func Timer_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := timer_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Timer_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := timer_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Timer_GetHashCode(obj uintptr) int32 {
    ret, _, _ := timer_GetHashCode.Call(obj)
    return int32(ret)
}

func Timer_ToString(obj uintptr) string {
    ret, _, _ := timer_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Timer_GetEnabled(obj uintptr) bool {
    ret, _, _ := timer_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Timer_SetEnabled(obj uintptr, value bool) {
   timer_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Timer_GetInterval(obj uintptr) uint32 {
    ret, _, _ := timer_GetInterval.Call(obj)
    return uint32(ret)
}

func Timer_SetInterval(obj uintptr, value uint32) {
   timer_SetInterval.Call(obj, uintptr(value))
}

func Timer_SetOnTimer(obj uintptr, fn interface{}) {
    timer_SetOnTimer.Call(obj, addEventToMap(fn))
}

func Timer_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := timer_GetComponentCount.Call(obj)
    return int32(ret)
}

func Timer_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := timer_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Timer_SetComponentIndex(obj uintptr, value int32) {
   timer_SetComponentIndex.Call(obj, uintptr(value))
}

func Timer_GetOwner(obj uintptr) uintptr {
    ret, _, _ := timer_GetOwner.Call(obj)
    return ret
}

func Timer_GetName(obj uintptr) string {
    ret, _, _ := timer_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Timer_SetName(obj uintptr, value string) {
   timer_SetName.Call(obj, GoStrToDStr(value))
}

func Timer_GetTag(obj uintptr) int {
    ret, _, _ := timer_GetTag.Call(obj)
    return int(ret)
}

func Timer_SetTag(obj uintptr, value int) {
   timer_SetTag.Call(obj, uintptr(value))
}

func Timer_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := timer_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Timer_StaticClassType() TClass {
    r, _, _:= timer_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TList ---------------------------

func List_Create() uintptr {
    ret, _, _ := list_Create.Call()
    return ret
}

func List_Free(obj uintptr) {
    list_Free.Call(obj)
}

func List_Add(obj uintptr, Item uintptr) int32 {
    ret, _, _ := list_Add.Call(obj, Item )
    return int32(ret)
}

func List_Clear(obj uintptr)  {
    list_Clear.Call(obj)
}

func List_Delete(obj uintptr, Index int32)  {
    list_Delete.Call(obj, uintptr(Index) )
}

func List_Expand(obj uintptr) uintptr {
    ret, _, _ := list_Expand.Call(obj)
    return ret
}

func List_IndexOf(obj uintptr, Item uintptr) int32 {
    ret, _, _ := list_IndexOf.Call(obj, Item )
    return int32(ret)
}

func List_Insert(obj uintptr, Index int32, Item uintptr)  {
    list_Insert.Call(obj, uintptr(Index) , Item )
}

func List_Move(obj uintptr, CurIndex int32, NewIndex int32)  {
    list_Move.Call(obj, uintptr(CurIndex) , uintptr(NewIndex) )
}

func List_ClassType(obj uintptr) TClass {
    ret, _, _ := list_ClassType.Call(obj)
    return TClass(ret)
}

func List_ClassName(obj uintptr) string {
    ret, _, _ := list_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func List_InstanceSize(obj uintptr) int32 {
    ret, _, _ := list_InstanceSize.Call(obj)
    return int32(ret)
}

func List_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := list_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func List_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := list_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func List_GetHashCode(obj uintptr) int32 {
    ret, _, _ := list_GetHashCode.Call(obj)
    return int32(ret)
}

func List_ToString(obj uintptr) string {
    ret, _, _ := list_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func List_GetCapacity(obj uintptr) int32 {
    ret, _, _ := list_GetCapacity.Call(obj)
    return int32(ret)
}

func List_SetCapacity(obj uintptr, value int32) {
   list_SetCapacity.Call(obj, uintptr(value))
}

func List_GetCount(obj uintptr) int32 {
    ret, _, _ := list_GetCount.Call(obj)
    return int32(ret)
}

func List_SetCount(obj uintptr, value int32) {
   list_SetCount.Call(obj, uintptr(value))
}

func List_GetList(obj uintptr) uintptr {
    ret, _, _ := list_GetList.Call(obj)
    return ret
}

func List_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := list_GetItems.Call(obj, uintptr(Index))
    return ret
}

func List_SetItems(obj uintptr, Index int32, value uintptr) {
   list_SetItems.Call(obj, uintptr(Index), value)
}

func List_StaticClassType() TClass {
    r, _, _:= list_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TComponent ---------------------------

func Component_Create(obj uintptr) uintptr {
    ret, _, _ := component_Create.Call(obj)
    return ret
}

func Component_Free(obj uintptr) {
    component_Free.Call(obj)
}

func Component_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := component_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Component_GetNamePath(obj uintptr) string {
    ret, _, _ := component_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Component_HasParent(obj uintptr) bool {
    ret, _, _ := component_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Component_Assign(obj uintptr, Source uintptr)  {
    component_Assign.Call(obj, Source )
}

func Component_ClassType(obj uintptr) TClass {
    ret, _, _ := component_ClassType.Call(obj)
    return TClass(ret)
}

func Component_ClassName(obj uintptr) string {
    ret, _, _ := component_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Component_InstanceSize(obj uintptr) int32 {
    ret, _, _ := component_InstanceSize.Call(obj)
    return int32(ret)
}

func Component_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := component_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Component_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := component_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Component_GetHashCode(obj uintptr) int32 {
    ret, _, _ := component_GetHashCode.Call(obj)
    return int32(ret)
}

func Component_ToString(obj uintptr) string {
    ret, _, _ := component_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Component_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := component_GetComponentCount.Call(obj)
    return int32(ret)
}

func Component_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := component_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Component_SetComponentIndex(obj uintptr, value int32) {
   component_SetComponentIndex.Call(obj, uintptr(value))
}

func Component_GetOwner(obj uintptr) uintptr {
    ret, _, _ := component_GetOwner.Call(obj)
    return ret
}

func Component_GetName(obj uintptr) string {
    ret, _, _ := component_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Component_SetName(obj uintptr, value string) {
   component_SetName.Call(obj, GoStrToDStr(value))
}

func Component_GetTag(obj uintptr) int {
    ret, _, _ := component_GetTag.Call(obj)
    return int(ret)
}

func Component_SetTag(obj uintptr, value int) {
   component_SetTag.Call(obj, uintptr(value))
}

func Component_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := component_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Component_StaticClassType() TClass {
    r, _, _:= component_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TParaAttributes ---------------------------

func ParaAttributes_Assign(obj uintptr, Source uintptr)  {
    paraAttributes_Assign.Call(obj, Source )
}

func ParaAttributes_GetNamePath(obj uintptr) string {
    ret, _, _ := paraAttributes_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ParaAttributes_ClassType(obj uintptr) TClass {
    ret, _, _ := paraAttributes_ClassType.Call(obj)
    return TClass(ret)
}

func ParaAttributes_ClassName(obj uintptr) string {
    ret, _, _ := paraAttributes_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ParaAttributes_InstanceSize(obj uintptr) int32 {
    ret, _, _ := paraAttributes_InstanceSize.Call(obj)
    return int32(ret)
}

func ParaAttributes_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := paraAttributes_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ParaAttributes_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := paraAttributes_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ParaAttributes_GetHashCode(obj uintptr) int32 {
    ret, _, _ := paraAttributes_GetHashCode.Call(obj)
    return int32(ret)
}

func ParaAttributes_ToString(obj uintptr) string {
    ret, _, _ := paraAttributes_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ParaAttributes_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := paraAttributes_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func ParaAttributes_SetAlignment(obj uintptr, value TAlignment) {
   paraAttributes_SetAlignment.Call(obj, uintptr(value))
}

func ParaAttributes_GetFirstIndent(obj uintptr) int32 {
    ret, _, _ := paraAttributes_GetFirstIndent.Call(obj)
    return int32(ret)
}

func ParaAttributes_SetFirstIndent(obj uintptr, value int32) {
   paraAttributes_SetFirstIndent.Call(obj, uintptr(value))
}

func ParaAttributes_GetLeftIndent(obj uintptr) int32 {
    ret, _, _ := paraAttributes_GetLeftIndent.Call(obj)
    return int32(ret)
}

func ParaAttributes_SetLeftIndent(obj uintptr, value int32) {
   paraAttributes_SetLeftIndent.Call(obj, uintptr(value))
}

func ParaAttributes_GetNumbering(obj uintptr) TNumberingStyle {
    ret, _, _ := paraAttributes_GetNumbering.Call(obj)
    return TNumberingStyle(ret)
}

func ParaAttributes_SetNumbering(obj uintptr, value TNumberingStyle) {
   paraAttributes_SetNumbering.Call(obj, uintptr(value))
}

func ParaAttributes_GetRightIndent(obj uintptr) int32 {
    ret, _, _ := paraAttributes_GetRightIndent.Call(obj)
    return int32(ret)
}

func ParaAttributes_SetRightIndent(obj uintptr, value int32) {
   paraAttributes_SetRightIndent.Call(obj, uintptr(value))
}

func ParaAttributes_GetTabCount(obj uintptr) int32 {
    ret, _, _ := paraAttributes_GetTabCount.Call(obj)
    return int32(ret)
}

func ParaAttributes_SetTabCount(obj uintptr, value int32) {
   paraAttributes_SetTabCount.Call(obj, uintptr(value))
}

func ParaAttributes_GetTab(obj uintptr, Index uint8) int32 {
    ret, _, _ := paraAttributes_GetTab.Call(obj, uintptr(Index))
    return int32(ret)
}

func ParaAttributes_SetTab(obj uintptr, Index uint8, value int32) {
   paraAttributes_SetTab.Call(obj, uintptr(Index), uintptr(value))
}

func ParaAttributes_StaticClassType() TClass {
    r, _, _:= paraAttributes_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTextAttributes ---------------------------

func TextAttributes_Assign(obj uintptr, Source uintptr)  {
    textAttributes_Assign.Call(obj, Source )
}

func TextAttributes_GetNamePath(obj uintptr) string {
    ret, _, _ := textAttributes_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TextAttributes_ClassType(obj uintptr) TClass {
    ret, _, _ := textAttributes_ClassType.Call(obj)
    return TClass(ret)
}

func TextAttributes_ClassName(obj uintptr) string {
    ret, _, _ := textAttributes_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TextAttributes_InstanceSize(obj uintptr) int32 {
    ret, _, _ := textAttributes_InstanceSize.Call(obj)
    return int32(ret)
}

func TextAttributes_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := textAttributes_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TextAttributes_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := textAttributes_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TextAttributes_GetHashCode(obj uintptr) int32 {
    ret, _, _ := textAttributes_GetHashCode.Call(obj)
    return int32(ret)
}

func TextAttributes_ToString(obj uintptr) string {
    ret, _, _ := textAttributes_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TextAttributes_GetCharset(obj uintptr) TFontCharset {
    ret, _, _ := textAttributes_GetCharset.Call(obj)
    return TFontCharset(ret)
}

func TextAttributes_SetCharset(obj uintptr, value TFontCharset) {
   textAttributes_SetCharset.Call(obj, uintptr(value))
}

func TextAttributes_GetColor(obj uintptr) TColor {
    ret, _, _ := textAttributes_GetColor.Call(obj)
    return TColor(ret)
}

func TextAttributes_SetColor(obj uintptr, value TColor) {
   textAttributes_SetColor.Call(obj, uintptr(value))
}

func TextAttributes_GetName(obj uintptr) string {
    ret, _, _ := textAttributes_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TextAttributes_SetName(obj uintptr, value string) {
   textAttributes_SetName.Call(obj, GoStrToDStr(value))
}

func TextAttributes_GetPitch(obj uintptr) TFontPitch {
    ret, _, _ := textAttributes_GetPitch.Call(obj)
    return TFontPitch(ret)
}

func TextAttributes_SetPitch(obj uintptr, value TFontPitch) {
   textAttributes_SetPitch.Call(obj, uintptr(value))
}

func TextAttributes_GetSize(obj uintptr) int32 {
    ret, _, _ := textAttributes_GetSize.Call(obj)
    return int32(ret)
}

func TextAttributes_SetSize(obj uintptr, value int32) {
   textAttributes_SetSize.Call(obj, uintptr(value))
}

func TextAttributes_GetStyle(obj uintptr) TFontStyles {
    ret, _, _ := textAttributes_GetStyle.Call(obj)
    return TFontStyles(ret)
}

func TextAttributes_SetStyle(obj uintptr, value TFontStyles) {
   textAttributes_SetStyle.Call(obj, uintptr(value))
}

func TextAttributes_GetHeight(obj uintptr) int32 {
    ret, _, _ := textAttributes_GetHeight.Call(obj)
    return int32(ret)
}

func TextAttributes_SetHeight(obj uintptr, value int32) {
   textAttributes_SetHeight.Call(obj, uintptr(value))
}

func TextAttributes_StaticClassType() TClass {
    r, _, _:= textAttributes_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TIconOptions ---------------------------

func IconOptions_Assign(obj uintptr, Source uintptr)  {
    iconOptions_Assign.Call(obj, Source )
}

func IconOptions_GetNamePath(obj uintptr) string {
    ret, _, _ := iconOptions_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func IconOptions_ClassType(obj uintptr) TClass {
    ret, _, _ := iconOptions_ClassType.Call(obj)
    return TClass(ret)
}

func IconOptions_ClassName(obj uintptr) string {
    ret, _, _ := iconOptions_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func IconOptions_InstanceSize(obj uintptr) int32 {
    ret, _, _ := iconOptions_InstanceSize.Call(obj)
    return int32(ret)
}

func IconOptions_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := iconOptions_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func IconOptions_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := iconOptions_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func IconOptions_GetHashCode(obj uintptr) int32 {
    ret, _, _ := iconOptions_GetHashCode.Call(obj)
    return int32(ret)
}

func IconOptions_ToString(obj uintptr) string {
    ret, _, _ := iconOptions_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func IconOptions_GetArrangement(obj uintptr) TIconArrangement {
    ret, _, _ := iconOptions_GetArrangement.Call(obj)
    return TIconArrangement(ret)
}

func IconOptions_SetArrangement(obj uintptr, value TIconArrangement) {
   iconOptions_SetArrangement.Call(obj, uintptr(value))
}

func IconOptions_GetAutoArrange(obj uintptr) bool {
    ret, _, _ := iconOptions_GetAutoArrange.Call(obj)
    return DBoolToGoBool(ret)
}

func IconOptions_SetAutoArrange(obj uintptr, value bool) {
   iconOptions_SetAutoArrange.Call(obj, GoBoolToDBool(value))
}

func IconOptions_StaticClassType() TClass {
    r, _, _:= iconOptions_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- Exception ---------------------------

func Exception_ToString(obj uintptr) string {
    ret, _, _ := exception_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Exception_ClassType(obj uintptr) TClass {
    ret, _, _ := exception_ClassType.Call(obj)
    return TClass(ret)
}

func Exception_ClassName(obj uintptr) string {
    ret, _, _ := exception_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Exception_InstanceSize(obj uintptr) int32 {
    ret, _, _ := exception_InstanceSize.Call(obj)
    return int32(ret)
}

func Exception_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := exception_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Exception_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := exception_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Exception_GetHashCode(obj uintptr) int32 {
    ret, _, _ := exception_GetHashCode.Call(obj)
    return int32(ret)
}

func Exception_GetMessage(obj uintptr) string {
    ret, _, _ := exception_GetMessage.Call(obj)
    return DStrToGoStr(ret)
}

func Exception_SetMessage(obj uintptr, value string) {
   exception_SetMessage.Call(obj, GoStrToDStr(value))
}

func Exception_StaticClassType() TClass {
    r, _, _:= exception_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TScrollBar ---------------------------

func ScrollBar_Create(obj uintptr) uintptr {
    ret, _, _ := scrollBar_Create.Call(obj)
    return ret
}

func ScrollBar_Free(obj uintptr) {
    scrollBar_Free.Call(obj)
}

func ScrollBar_SetParams(obj uintptr, APosition int32, AMin int32, AMax int32)  {
    scrollBar_SetParams.Call(obj, uintptr(APosition) , uintptr(AMin) , uintptr(AMax) )
}

func ScrollBar_CanFocus(obj uintptr) bool {
    ret, _, _ := scrollBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := scrollBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ScrollBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := scrollBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ScrollBar_DisableAlign(obj uintptr)  {
    scrollBar_DisableAlign.Call(obj)
}

func ScrollBar_EnableAlign(obj uintptr)  {
    scrollBar_EnableAlign.Call(obj)
}

func ScrollBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := scrollBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ScrollBar_FlipChildren(obj uintptr, AllLevels bool)  {
    scrollBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ScrollBar_Focused(obj uintptr) bool {
    ret, _, _ := scrollBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := scrollBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_InsertControl(obj uintptr, AControl uintptr)  {
    scrollBar_InsertControl.Call(obj, AControl )
}

func ScrollBar_Invalidate(obj uintptr)  {
    scrollBar_Invalidate.Call(obj)
}

func ScrollBar_RemoveControl(obj uintptr, AControl uintptr)  {
    scrollBar_RemoveControl.Call(obj, AControl )
}

func ScrollBar_Realign(obj uintptr)  {
    scrollBar_Realign.Call(obj)
}

func ScrollBar_Repaint(obj uintptr)  {
    scrollBar_Repaint.Call(obj)
}

func ScrollBar_ScaleBy(obj uintptr, M int32, D int32)  {
    scrollBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ScrollBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    scrollBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ScrollBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    scrollBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ScrollBar_SetFocus(obj uintptr)  {
    scrollBar_SetFocus.Call(obj)
}

func ScrollBar_Update(obj uintptr)  {
    scrollBar_Update.Call(obj)
}

func ScrollBar_BringToFront(obj uintptr)  {
    scrollBar_BringToFront.Call(obj)
}

func ScrollBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    scrollBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    scrollBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_Dragging(obj uintptr) bool {
    ret, _, _ := scrollBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_HasParent(obj uintptr) bool {
    ret, _, _ := scrollBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_Hide(obj uintptr)  {
    scrollBar_Hide.Call(obj)
}

func ScrollBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := scrollBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ScrollBar_Refresh(obj uintptr)  {
    scrollBar_Refresh.Call(obj)
}

func ScrollBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    scrollBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    scrollBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_SendToBack(obj uintptr)  {
    scrollBar_SendToBack.Call(obj)
}

func ScrollBar_Show(obj uintptr)  {
    scrollBar_Show.Call(obj)
}

func ScrollBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := scrollBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ScrollBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetTextLen.Call(obj)
    return int32(ret)
}

func ScrollBar_SetTextBuf(obj uintptr, Buffer string)  {
    scrollBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ScrollBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := scrollBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ScrollBar_GetNamePath(obj uintptr) string {
    ret, _, _ := scrollBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBar_Assign(obj uintptr, Source uintptr)  {
    scrollBar_Assign.Call(obj, Source )
}

func ScrollBar_ClassType(obj uintptr) TClass {
    ret, _, _ := scrollBar_ClassType.Call(obj)
    return TClass(ret)
}

func ScrollBar_ClassName(obj uintptr) string {
    ret, _, _ := scrollBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := scrollBar_InstanceSize.Call(obj)
    return int32(ret)
}

func ScrollBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := scrollBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ScrollBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := scrollBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ScrollBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetHashCode.Call(obj)
    return int32(ret)
}

func ScrollBar_ToString(obj uintptr) string {
    ret, _, _ := scrollBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    scrollBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ScrollBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    scrollBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ScrollBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    scrollBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ScrollBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    scrollBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ScrollBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    scrollBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ScrollBar_AnchorClient(obj uintptr, ASpace int32)  {
    scrollBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ScrollBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := scrollBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func ScrollBar_SetAlign(obj uintptr, value TAlign) {
   scrollBar_SetAlign.Call(obj, uintptr(value))
}

func ScrollBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := scrollBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ScrollBar_SetAnchors(obj uintptr, value TAnchors) {
   scrollBar_SetAnchors.Call(obj, uintptr(value))
}

func ScrollBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := scrollBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ScrollBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   scrollBar_SetBiDiMode.Call(obj, uintptr(value))
}

func ScrollBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetConstraints.Call(obj)
    return ret
}

func ScrollBar_SetConstraints(obj uintptr, value uintptr) {
   scrollBar_SetConstraints.Call(obj, value)
}

func ScrollBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := scrollBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetDoubleBuffered(obj uintptr, value bool) {
   scrollBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := scrollBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ScrollBar_SetDragCursor(obj uintptr, value TCursor) {
   scrollBar_SetDragCursor.Call(obj, uintptr(value))
}

func ScrollBar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := scrollBar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ScrollBar_SetDragKind(obj uintptr, value TDragKind) {
   scrollBar_SetDragKind.Call(obj, uintptr(value))
}

func ScrollBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := scrollBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ScrollBar_SetDragMode(obj uintptr, value TDragMode) {
   scrollBar_SetDragMode.Call(obj, uintptr(value))
}

func ScrollBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := scrollBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetEnabled(obj uintptr, value bool) {
   scrollBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetLargeChange(obj uintptr) TScrollBarInc {
    ret, _, _ := scrollBar_GetLargeChange.Call(obj)
    return TScrollBarInc(ret)
}

func ScrollBar_SetLargeChange(obj uintptr, value TScrollBarInc) {
   scrollBar_SetLargeChange.Call(obj, uintptr(value))
}

func ScrollBar_GetMax(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetMax.Call(obj)
    return int32(ret)
}

func ScrollBar_SetMax(obj uintptr, value int32) {
   scrollBar_SetMax.Call(obj, uintptr(value))
}

func ScrollBar_GetMin(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetMin.Call(obj)
    return int32(ret)
}

func ScrollBar_SetMin(obj uintptr, value int32) {
   scrollBar_SetMin.Call(obj, uintptr(value))
}

func ScrollBar_GetPageSize(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetPageSize.Call(obj)
    return int32(ret)
}

func ScrollBar_SetPageSize(obj uintptr, value int32) {
   scrollBar_SetPageSize.Call(obj, uintptr(value))
}

func ScrollBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := scrollBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   scrollBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := scrollBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetParentShowHint(obj uintptr, value bool) {
   scrollBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetPopupMenu.Call(obj)
    return ret
}

func ScrollBar_SetPopupMenu(obj uintptr, value uintptr) {
   scrollBar_SetPopupMenu.Call(obj, value)
}

func ScrollBar_GetPosition(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetPosition.Call(obj)
    return int32(ret)
}

func ScrollBar_SetPosition(obj uintptr, value int32) {
   scrollBar_SetPosition.Call(obj, uintptr(value))
}

func ScrollBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := scrollBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetShowHint(obj uintptr, value bool) {
   scrollBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetSmallChange(obj uintptr) TScrollBarInc {
    ret, _, _ := scrollBar_GetSmallChange.Call(obj)
    return TScrollBarInc(ret)
}

func ScrollBar_SetSmallChange(obj uintptr, value TScrollBarInc) {
   scrollBar_SetSmallChange.Call(obj, uintptr(value))
}

func ScrollBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := scrollBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ScrollBar_SetTabOrder(obj uintptr, value TTabOrder) {
   scrollBar_SetTabOrder.Call(obj, uintptr(value))
}

func ScrollBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := scrollBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetTabStop(obj uintptr, value bool) {
   scrollBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetVisible(obj uintptr) bool {
    ret, _, _ := scrollBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetVisible(obj uintptr, value bool) {
   scrollBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    scrollBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnChange(obj uintptr, fn interface{}) {
    scrollBar_SetOnChange.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    scrollBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnDragOver(obj uintptr, fn interface{}) {
    scrollBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    scrollBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnEnter(obj uintptr, fn interface{}) {
    scrollBar_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnExit(obj uintptr, fn interface{}) {
    scrollBar_SetOnExit.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnKeyDown(obj uintptr, fn interface{}) {
    scrollBar_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnKeyPress(obj uintptr, fn interface{}) {
    scrollBar_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ScrollBar_SetOnKeyUp(obj uintptr, fn interface{}) {
    scrollBar_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ScrollBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ScrollBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := scrollBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetDockSite(obj uintptr, value bool) {
   scrollBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := scrollBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ScrollBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetBrush.Call(obj)
    return ret
}

func ScrollBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetControlCount.Call(obj)
    return int32(ret)
}

func ScrollBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := scrollBar_GetHandle.Call(obj)
    return HWND(ret)
}

func ScrollBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := scrollBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ScrollBar_SetParentWindow(obj uintptr, value HWND) {
   scrollBar_SetParentWindow.Call(obj, uintptr(value))
}

func ScrollBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := scrollBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_SetUseDockManager(obj uintptr, value bool) {
   scrollBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ScrollBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetAction.Call(obj)
    return ret
}

func ScrollBar_SetAction(obj uintptr, value uintptr) {
   scrollBar_SetAction.Call(obj, value)
}

func ScrollBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    scrollBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_SetBoundsRect(obj uintptr, value TRect) {
   scrollBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ScrollBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func ScrollBar_SetClientHeight(obj uintptr, value int32) {
   scrollBar_SetClientHeight.Call(obj, uintptr(value))
}

func ScrollBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    scrollBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    scrollBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func ScrollBar_SetClientWidth(obj uintptr, value int32) {
   scrollBar_SetClientWidth.Call(obj, uintptr(value))
}

func ScrollBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := scrollBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func ScrollBar_SetControlState(obj uintptr, value TControlState) {
   scrollBar_SetControlState.Call(obj, uintptr(value))
}

func ScrollBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := scrollBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ScrollBar_SetControlStyle(obj uintptr, value TControlStyle) {
   scrollBar_SetControlStyle.Call(obj, uintptr(value))
}

func ScrollBar_GetFloating(obj uintptr) bool {
    ret, _, _ := scrollBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetParent.Call(obj)
    return ret
}

func ScrollBar_SetParent(obj uintptr, value uintptr) {
   scrollBar_SetParent.Call(obj, value)
}

func ScrollBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetLeft.Call(obj)
    return int32(ret)
}

func ScrollBar_SetLeft(obj uintptr, value int32) {
   scrollBar_SetLeft.Call(obj, uintptr(value))
}

func ScrollBar_GetTop(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetTop.Call(obj)
    return int32(ret)
}

func ScrollBar_SetTop(obj uintptr, value int32) {
   scrollBar_SetTop.Call(obj, uintptr(value))
}

func ScrollBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetWidth.Call(obj)
    return int32(ret)
}

func ScrollBar_SetWidth(obj uintptr, value int32) {
   scrollBar_SetWidth.Call(obj, uintptr(value))
}

func ScrollBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetHeight.Call(obj)
    return int32(ret)
}

func ScrollBar_SetHeight(obj uintptr, value int32) {
   scrollBar_SetHeight.Call(obj, uintptr(value))
}

func ScrollBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := scrollBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func ScrollBar_SetCursor(obj uintptr, value TCursor) {
   scrollBar_SetCursor.Call(obj, uintptr(value))
}

func ScrollBar_GetHint(obj uintptr) string {
    ret, _, _ := scrollBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBar_SetHint(obj uintptr, value string) {
   scrollBar_SetHint.Call(obj, GoStrToDStr(value))
}

func ScrollBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func ScrollBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := scrollBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ScrollBar_SetComponentIndex(obj uintptr, value int32) {
   scrollBar_SetComponentIndex.Call(obj, uintptr(value))
}

func ScrollBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetOwner.Call(obj)
    return ret
}

func ScrollBar_GetName(obj uintptr) string {
    ret, _, _ := scrollBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBar_SetName(obj uintptr, value string) {
   scrollBar_SetName.Call(obj, GoStrToDStr(value))
}

func ScrollBar_GetTag(obj uintptr) int {
    ret, _, _ := scrollBar_GetTag.Call(obj)
    return int(ret)
}

func ScrollBar_SetTag(obj uintptr, value int) {
   scrollBar_SetTag.Call(obj, uintptr(value))
}

func ScrollBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func ScrollBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   scrollBar_SetAnchorSideLeft.Call(obj, value)
}

func ScrollBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetAnchorSideTop.Call(obj)
    return ret
}

func ScrollBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   scrollBar_SetAnchorSideTop.Call(obj, value)
}

func ScrollBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetAnchorSideRight.Call(obj)
    return ret
}

func ScrollBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   scrollBar_SetAnchorSideRight.Call(obj, value)
}

func ScrollBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func ScrollBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   scrollBar_SetAnchorSideBottom.Call(obj, value)
}

func ScrollBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetChildSizing.Call(obj)
    return ret
}

func ScrollBar_SetChildSizing(obj uintptr, value uintptr) {
   scrollBar_SetChildSizing.Call(obj, value)
}

func ScrollBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := scrollBar_GetBorderSpacing.Call(obj)
    return ret
}

func ScrollBar_SetBorderSpacing(obj uintptr, value uintptr) {
   scrollBar_SetBorderSpacing.Call(obj, value)
}

func ScrollBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := scrollBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ScrollBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := scrollBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ScrollBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := scrollBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ScrollBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := scrollBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ScrollBar_StaticClassType() TClass {
    r, _, _:= scrollBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TMaskEdit ---------------------------

func MaskEdit_Create(obj uintptr) uintptr {
    ret, _, _ := maskEdit_Create.Call(obj)
    return ret
}

func MaskEdit_Free(obj uintptr) {
    maskEdit_Free.Call(obj)
}

func MaskEdit_ValidateEdit(obj uintptr)  {
    maskEdit_ValidateEdit.Call(obj)
}

func MaskEdit_Clear(obj uintptr)  {
    maskEdit_Clear.Call(obj)
}

func MaskEdit_GetTextLen(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetTextLen.Call(obj)
    return int32(ret)
}

func MaskEdit_ClearSelection(obj uintptr)  {
    maskEdit_ClearSelection.Call(obj)
}

func MaskEdit_CopyToClipboard(obj uintptr)  {
    maskEdit_CopyToClipboard.Call(obj)
}

func MaskEdit_CutToClipboard(obj uintptr)  {
    maskEdit_CutToClipboard.Call(obj)
}

func MaskEdit_PasteFromClipboard(obj uintptr)  {
    maskEdit_PasteFromClipboard.Call(obj)
}

func MaskEdit_Undo(obj uintptr)  {
    maskEdit_Undo.Call(obj)
}

func MaskEdit_SelectAll(obj uintptr)  {
    maskEdit_SelectAll.Call(obj)
}

func MaskEdit_CanFocus(obj uintptr) bool {
    ret, _, _ := maskEdit_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := maskEdit_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func MaskEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := maskEdit_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func MaskEdit_DisableAlign(obj uintptr)  {
    maskEdit_DisableAlign.Call(obj)
}

func MaskEdit_EnableAlign(obj uintptr)  {
    maskEdit_EnableAlign.Call(obj)
}

func MaskEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := maskEdit_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func MaskEdit_FlipChildren(obj uintptr, AllLevels bool)  {
    maskEdit_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func MaskEdit_Focused(obj uintptr) bool {
    ret, _, _ := maskEdit_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_HandleAllocated(obj uintptr) bool {
    ret, _, _ := maskEdit_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_InsertControl(obj uintptr, AControl uintptr)  {
    maskEdit_InsertControl.Call(obj, AControl )
}

func MaskEdit_Invalidate(obj uintptr)  {
    maskEdit_Invalidate.Call(obj)
}

func MaskEdit_RemoveControl(obj uintptr, AControl uintptr)  {
    maskEdit_RemoveControl.Call(obj, AControl )
}

func MaskEdit_Realign(obj uintptr)  {
    maskEdit_Realign.Call(obj)
}

func MaskEdit_Repaint(obj uintptr)  {
    maskEdit_Repaint.Call(obj)
}

func MaskEdit_ScaleBy(obj uintptr, M int32, D int32)  {
    maskEdit_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func MaskEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    maskEdit_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func MaskEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    maskEdit_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func MaskEdit_SetFocus(obj uintptr)  {
    maskEdit_SetFocus.Call(obj)
}

func MaskEdit_Update(obj uintptr)  {
    maskEdit_Update.Call(obj)
}

func MaskEdit_BringToFront(obj uintptr)  {
    maskEdit_BringToFront.Call(obj)
}

func MaskEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    maskEdit_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    maskEdit_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_Dragging(obj uintptr) bool {
    ret, _, _ := maskEdit_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_HasParent(obj uintptr) bool {
    ret, _, _ := maskEdit_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_Hide(obj uintptr)  {
    maskEdit_Hide.Call(obj)
}

func MaskEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := maskEdit_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func MaskEdit_Refresh(obj uintptr)  {
    maskEdit_Refresh.Call(obj)
}

func MaskEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    maskEdit_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    maskEdit_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_SendToBack(obj uintptr)  {
    maskEdit_SendToBack.Call(obj)
}

func MaskEdit_Show(obj uintptr)  {
    maskEdit_Show.Call(obj)
}

func MaskEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := maskEdit_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func MaskEdit_SetTextBuf(obj uintptr, Buffer string)  {
    maskEdit_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func MaskEdit_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := maskEdit_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func MaskEdit_GetNamePath(obj uintptr) string {
    ret, _, _ := maskEdit_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_Assign(obj uintptr, Source uintptr)  {
    maskEdit_Assign.Call(obj, Source )
}

func MaskEdit_ClassType(obj uintptr) TClass {
    ret, _, _ := maskEdit_ClassType.Call(obj)
    return TClass(ret)
}

func MaskEdit_ClassName(obj uintptr) string {
    ret, _, _ := maskEdit_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_InstanceSize(obj uintptr) int32 {
    ret, _, _ := maskEdit_InstanceSize.Call(obj)
    return int32(ret)
}

func MaskEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := maskEdit_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func MaskEdit_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := maskEdit_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func MaskEdit_GetHashCode(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetHashCode.Call(obj)
    return int32(ret)
}

func MaskEdit_ToString(obj uintptr) string {
    ret, _, _ := maskEdit_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    maskEdit_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MaskEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    maskEdit_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func MaskEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    maskEdit_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func MaskEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    maskEdit_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func MaskEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    maskEdit_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func MaskEdit_AnchorClient(obj uintptr, ASpace int32)  {
    maskEdit_AnchorClient.Call(obj, uintptr(ASpace) )
}

func MaskEdit_GetAlign(obj uintptr) TAlign {
    ret, _, _ := maskEdit_GetAlign.Call(obj)
    return TAlign(ret)
}

func MaskEdit_SetAlign(obj uintptr, value TAlign) {
   maskEdit_SetAlign.Call(obj, uintptr(value))
}

func MaskEdit_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := maskEdit_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func MaskEdit_SetAlignment(obj uintptr, value TAlignment) {
   maskEdit_SetAlignment.Call(obj, uintptr(value))
}

func MaskEdit_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := maskEdit_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func MaskEdit_SetAnchors(obj uintptr, value TAnchors) {
   maskEdit_SetAnchors.Call(obj, uintptr(value))
}

func MaskEdit_GetAutoSelect(obj uintptr) bool {
    ret, _, _ := maskEdit_GetAutoSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetAutoSelect(obj uintptr, value bool) {
   maskEdit_SetAutoSelect.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetAutoSize(obj uintptr) bool {
    ret, _, _ := maskEdit_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetAutoSize(obj uintptr, value bool) {
   maskEdit_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := maskEdit_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func MaskEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
   maskEdit_SetBiDiMode.Call(obj, uintptr(value))
}

func MaskEdit_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := maskEdit_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func MaskEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
   maskEdit_SetBorderStyle.Call(obj, uintptr(value))
}

func MaskEdit_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := maskEdit_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func MaskEdit_SetCharCase(obj uintptr, value TEditCharCase) {
   maskEdit_SetCharCase.Call(obj, uintptr(value))
}

func MaskEdit_GetColor(obj uintptr) TColor {
    ret, _, _ := maskEdit_GetColor.Call(obj)
    return TColor(ret)
}

func MaskEdit_SetColor(obj uintptr, value TColor) {
   maskEdit_SetColor.Call(obj, uintptr(value))
}

func MaskEdit_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetConstraints.Call(obj)
    return ret
}

func MaskEdit_SetConstraints(obj uintptr, value uintptr) {
   maskEdit_SetConstraints.Call(obj, value)
}

func MaskEdit_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := maskEdit_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetDoubleBuffered(obj uintptr, value bool) {
   maskEdit_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := maskEdit_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func MaskEdit_SetDragCursor(obj uintptr, value TCursor) {
   maskEdit_SetDragCursor.Call(obj, uintptr(value))
}

func MaskEdit_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := maskEdit_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func MaskEdit_SetDragKind(obj uintptr, value TDragKind) {
   maskEdit_SetDragKind.Call(obj, uintptr(value))
}

func MaskEdit_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := maskEdit_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func MaskEdit_SetDragMode(obj uintptr, value TDragMode) {
   maskEdit_SetDragMode.Call(obj, uintptr(value))
}

func MaskEdit_GetEnabled(obj uintptr) bool {
    ret, _, _ := maskEdit_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetEnabled(obj uintptr, value bool) {
   maskEdit_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetFont(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetFont.Call(obj)
    return ret
}

func MaskEdit_SetFont(obj uintptr, value uintptr) {
   maskEdit_SetFont.Call(obj, value)
}

func MaskEdit_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetMaxLength.Call(obj)
    return int32(ret)
}

func MaskEdit_SetMaxLength(obj uintptr, value int32) {
   maskEdit_SetMaxLength.Call(obj, uintptr(value))
}

func MaskEdit_GetParentColor(obj uintptr) bool {
    ret, _, _ := maskEdit_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetParentColor(obj uintptr, value bool) {
   maskEdit_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := maskEdit_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
   maskEdit_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentFont(obj uintptr) bool {
    ret, _, _ := maskEdit_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetParentFont(obj uintptr, value bool) {
   maskEdit_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := maskEdit_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetParentShowHint(obj uintptr, value bool) {
   maskEdit_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetPasswordChar(obj uintptr) uint16 {
    ret, _, _ := maskEdit_GetPasswordChar.Call(obj)
    return uint16(ret)
}

func MaskEdit_SetPasswordChar(obj uintptr, value uint16) {
   maskEdit_SetPasswordChar.Call(obj, uintptr(value))
}

func MaskEdit_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetPopupMenu.Call(obj)
    return ret
}

func MaskEdit_SetPopupMenu(obj uintptr, value uintptr) {
   maskEdit_SetPopupMenu.Call(obj, value)
}

func MaskEdit_GetReadOnly(obj uintptr) bool {
    ret, _, _ := maskEdit_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetReadOnly(obj uintptr, value bool) {
   maskEdit_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetShowHint(obj uintptr) bool {
    ret, _, _ := maskEdit_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetShowHint(obj uintptr, value bool) {
   maskEdit_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := maskEdit_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func MaskEdit_SetTabOrder(obj uintptr, value TTabOrder) {
   maskEdit_SetTabOrder.Call(obj, uintptr(value))
}

func MaskEdit_GetTabStop(obj uintptr) bool {
    ret, _, _ := maskEdit_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetTabStop(obj uintptr, value bool) {
   maskEdit_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetText(obj uintptr) string {
    ret, _, _ := maskEdit_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetText(obj uintptr, value string) {
   maskEdit_SetText.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetTextHint(obj uintptr) string {
    ret, _, _ := maskEdit_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetTextHint(obj uintptr, value string) {
   maskEdit_SetTextHint.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetVisible(obj uintptr) bool {
    ret, _, _ := maskEdit_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetVisible(obj uintptr, value bool) {
   maskEdit_SetVisible.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_SetOnChange(obj uintptr, fn interface{}) {
    maskEdit_SetOnChange.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnClick(obj uintptr, fn interface{}) {
    maskEdit_SetOnClick.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnDblClick(obj uintptr, fn interface{}) {
    maskEdit_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
    maskEdit_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnDragOver(obj uintptr, fn interface{}) {
    maskEdit_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnEndDock(obj uintptr, fn interface{}) {
    maskEdit_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
    maskEdit_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnEnter(obj uintptr, fn interface{}) {
    maskEdit_SetOnEnter.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnExit(obj uintptr, fn interface{}) {
    maskEdit_SetOnExit.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
    maskEdit_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
    maskEdit_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
    maskEdit_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
    maskEdit_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
    maskEdit_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
    maskEdit_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
    maskEdit_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
    maskEdit_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func MaskEdit_SetOnStartDock(obj uintptr, fn interface{}) {
    maskEdit_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func MaskEdit_GetIsMasked(obj uintptr) bool {
    ret, _, _ := maskEdit_GetIsMasked.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_GetEditText(obj uintptr) string {
    ret, _, _ := maskEdit_GetEditText.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetEditText(obj uintptr, value string) {
   maskEdit_SetEditText.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetCanUndo(obj uintptr) bool {
    ret, _, _ := maskEdit_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_GetModified(obj uintptr) bool {
    ret, _, _ := maskEdit_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetModified(obj uintptr, value bool) {
   maskEdit_SetModified.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetSelLength(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetSelLength.Call(obj)
    return int32(ret)
}

func MaskEdit_SetSelLength(obj uintptr, value int32) {
   maskEdit_SetSelLength.Call(obj, uintptr(value))
}

func MaskEdit_GetSelStart(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetSelStart.Call(obj)
    return int32(ret)
}

func MaskEdit_SetSelStart(obj uintptr, value int32) {
   maskEdit_SetSelStart.Call(obj, uintptr(value))
}

func MaskEdit_GetSelText(obj uintptr) string {
    ret, _, _ := maskEdit_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetSelText(obj uintptr, value string) {
   maskEdit_SetSelText.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetDockClientCount.Call(obj)
    return int32(ret)
}

func MaskEdit_GetDockSite(obj uintptr) bool {
    ret, _, _ := maskEdit_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetDockSite(obj uintptr, value bool) {
   maskEdit_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := maskEdit_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func MaskEdit_GetBrush(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetBrush.Call(obj)
    return ret
}

func MaskEdit_GetControlCount(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetControlCount.Call(obj)
    return int32(ret)
}

func MaskEdit_GetHandle(obj uintptr) HWND {
    ret, _, _ := maskEdit_GetHandle.Call(obj)
    return HWND(ret)
}

func MaskEdit_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := maskEdit_GetParentWindow.Call(obj)
    return HWND(ret)
}

func MaskEdit_SetParentWindow(obj uintptr, value HWND) {
   maskEdit_SetParentWindow.Call(obj, uintptr(value))
}

func MaskEdit_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := maskEdit_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_SetUseDockManager(obj uintptr, value bool) {
   maskEdit_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func MaskEdit_GetAction(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetAction.Call(obj)
    return ret
}

func MaskEdit_SetAction(obj uintptr, value uintptr) {
   maskEdit_SetAction.Call(obj, value)
}

func MaskEdit_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    maskEdit_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_SetBoundsRect(obj uintptr, value TRect) {
   maskEdit_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func MaskEdit_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetClientHeight.Call(obj)
    return int32(ret)
}

func MaskEdit_SetClientHeight(obj uintptr, value int32) {
   maskEdit_SetClientHeight.Call(obj, uintptr(value))
}

func MaskEdit_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    maskEdit_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_GetClientRect(obj uintptr) TRect {
    var ret TRect
    maskEdit_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func MaskEdit_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetClientWidth.Call(obj)
    return int32(ret)
}

func MaskEdit_SetClientWidth(obj uintptr, value int32) {
   maskEdit_SetClientWidth.Call(obj, uintptr(value))
}

func MaskEdit_GetControlState(obj uintptr) TControlState {
    ret, _, _ := maskEdit_GetControlState.Call(obj)
    return TControlState(ret)
}

func MaskEdit_SetControlState(obj uintptr, value TControlState) {
   maskEdit_SetControlState.Call(obj, uintptr(value))
}

func MaskEdit_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := maskEdit_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func MaskEdit_SetControlStyle(obj uintptr, value TControlStyle) {
   maskEdit_SetControlStyle.Call(obj, uintptr(value))
}

func MaskEdit_GetFloating(obj uintptr) bool {
    ret, _, _ := maskEdit_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func MaskEdit_GetParent(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetParent.Call(obj)
    return ret
}

func MaskEdit_SetParent(obj uintptr, value uintptr) {
   maskEdit_SetParent.Call(obj, value)
}

func MaskEdit_GetLeft(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetLeft.Call(obj)
    return int32(ret)
}

func MaskEdit_SetLeft(obj uintptr, value int32) {
   maskEdit_SetLeft.Call(obj, uintptr(value))
}

func MaskEdit_GetTop(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetTop.Call(obj)
    return int32(ret)
}

func MaskEdit_SetTop(obj uintptr, value int32) {
   maskEdit_SetTop.Call(obj, uintptr(value))
}

func MaskEdit_GetWidth(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetWidth.Call(obj)
    return int32(ret)
}

func MaskEdit_SetWidth(obj uintptr, value int32) {
   maskEdit_SetWidth.Call(obj, uintptr(value))
}

func MaskEdit_GetHeight(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetHeight.Call(obj)
    return int32(ret)
}

func MaskEdit_SetHeight(obj uintptr, value int32) {
   maskEdit_SetHeight.Call(obj, uintptr(value))
}

func MaskEdit_GetCursor(obj uintptr) TCursor {
    ret, _, _ := maskEdit_GetCursor.Call(obj)
    return TCursor(ret)
}

func MaskEdit_SetCursor(obj uintptr, value TCursor) {
   maskEdit_SetCursor.Call(obj, uintptr(value))
}

func MaskEdit_GetHint(obj uintptr) string {
    ret, _, _ := maskEdit_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetHint(obj uintptr, value string) {
   maskEdit_SetHint.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetComponentCount.Call(obj)
    return int32(ret)
}

func MaskEdit_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := maskEdit_GetComponentIndex.Call(obj)
    return int32(ret)
}

func MaskEdit_SetComponentIndex(obj uintptr, value int32) {
   maskEdit_SetComponentIndex.Call(obj, uintptr(value))
}

func MaskEdit_GetOwner(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetOwner.Call(obj)
    return ret
}

func MaskEdit_GetName(obj uintptr) string {
    ret, _, _ := maskEdit_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func MaskEdit_SetName(obj uintptr, value string) {
   maskEdit_SetName.Call(obj, GoStrToDStr(value))
}

func MaskEdit_GetTag(obj uintptr) int {
    ret, _, _ := maskEdit_GetTag.Call(obj)
    return int(ret)
}

func MaskEdit_SetTag(obj uintptr, value int) {
   maskEdit_SetTag.Call(obj, uintptr(value))
}

func MaskEdit_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetAnchorSideLeft.Call(obj)
    return ret
}

func MaskEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
   maskEdit_SetAnchorSideLeft.Call(obj, value)
}

func MaskEdit_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetAnchorSideTop.Call(obj)
    return ret
}

func MaskEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
   maskEdit_SetAnchorSideTop.Call(obj, value)
}

func MaskEdit_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetAnchorSideRight.Call(obj)
    return ret
}

func MaskEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
   maskEdit_SetAnchorSideRight.Call(obj, value)
}

func MaskEdit_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetAnchorSideBottom.Call(obj)
    return ret
}

func MaskEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
   maskEdit_SetAnchorSideBottom.Call(obj, value)
}

func MaskEdit_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetChildSizing.Call(obj)
    return ret
}

func MaskEdit_SetChildSizing(obj uintptr, value uintptr) {
   maskEdit_SetChildSizing.Call(obj, value)
}

func MaskEdit_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := maskEdit_GetBorderSpacing.Call(obj)
    return ret
}

func MaskEdit_SetBorderSpacing(obj uintptr, value uintptr) {
   maskEdit_SetBorderSpacing.Call(obj, value)
}

func MaskEdit_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := maskEdit_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func MaskEdit_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := maskEdit_GetControls.Call(obj, uintptr(Index))
    return ret
}

func MaskEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := maskEdit_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func MaskEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := maskEdit_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func MaskEdit_StaticClassType() TClass {
    r, _, _:= maskEdit_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TShape ---------------------------

func Shape_Create(obj uintptr) uintptr {
    ret, _, _ := shape_Create.Call(obj)
    return ret
}

func Shape_Free(obj uintptr) {
    shape_Free.Call(obj)
}

func Shape_BringToFront(obj uintptr)  {
    shape_BringToFront.Call(obj)
}

func Shape_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    shape_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    shape_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_Dragging(obj uintptr) bool {
    ret, _, _ := shape_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_HasParent(obj uintptr) bool {
    ret, _, _ := shape_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_Hide(obj uintptr)  {
    shape_Hide.Call(obj)
}

func Shape_Invalidate(obj uintptr)  {
    shape_Invalidate.Call(obj)
}

func Shape_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := shape_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Shape_Refresh(obj uintptr)  {
    shape_Refresh.Call(obj)
}

func Shape_Repaint(obj uintptr)  {
    shape_Repaint.Call(obj)
}

func Shape_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    shape_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    shape_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_SendToBack(obj uintptr)  {
    shape_SendToBack.Call(obj)
}

func Shape_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    shape_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Shape_Show(obj uintptr)  {
    shape_Show.Call(obj)
}

func Shape_Update(obj uintptr)  {
    shape_Update.Call(obj)
}

func Shape_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := shape_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Shape_GetTextLen(obj uintptr) int32 {
    ret, _, _ := shape_GetTextLen.Call(obj)
    return int32(ret)
}

func Shape_SetTextBuf(obj uintptr, Buffer string)  {
    shape_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Shape_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := shape_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Shape_GetNamePath(obj uintptr) string {
    ret, _, _ := shape_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Shape_Assign(obj uintptr, Source uintptr)  {
    shape_Assign.Call(obj, Source )
}

func Shape_ClassType(obj uintptr) TClass {
    ret, _, _ := shape_ClassType.Call(obj)
    return TClass(ret)
}

func Shape_ClassName(obj uintptr) string {
    ret, _, _ := shape_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Shape_InstanceSize(obj uintptr) int32 {
    ret, _, _ := shape_InstanceSize.Call(obj)
    return int32(ret)
}

func Shape_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := shape_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Shape_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := shape_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Shape_GetHashCode(obj uintptr) int32 {
    ret, _, _ := shape_GetHashCode.Call(obj)
    return int32(ret)
}

func Shape_ToString(obj uintptr) string {
    ret, _, _ := shape_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Shape_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    shape_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Shape_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    shape_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Shape_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    shape_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Shape_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    shape_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Shape_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    shape_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Shape_AnchorClient(obj uintptr, ASpace int32)  {
    shape_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Shape_GetAlign(obj uintptr) TAlign {
    ret, _, _ := shape_GetAlign.Call(obj)
    return TAlign(ret)
}

func Shape_SetAlign(obj uintptr, value TAlign) {
   shape_SetAlign.Call(obj, uintptr(value))
}

func Shape_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := shape_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Shape_SetAnchors(obj uintptr, value TAnchors) {
   shape_SetAnchors.Call(obj, uintptr(value))
}

func Shape_GetBrush(obj uintptr) uintptr {
    ret, _, _ := shape_GetBrush.Call(obj)
    return ret
}

func Shape_SetBrush(obj uintptr, value uintptr) {
   shape_SetBrush.Call(obj, value)
}

func Shape_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := shape_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Shape_SetDragCursor(obj uintptr, value TCursor) {
   shape_SetDragCursor.Call(obj, uintptr(value))
}

func Shape_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := shape_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Shape_SetDragKind(obj uintptr, value TDragKind) {
   shape_SetDragKind.Call(obj, uintptr(value))
}

func Shape_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := shape_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Shape_SetDragMode(obj uintptr, value TDragMode) {
   shape_SetDragMode.Call(obj, uintptr(value))
}

func Shape_GetEnabled(obj uintptr) bool {
    ret, _, _ := shape_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_SetEnabled(obj uintptr, value bool) {
   shape_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Shape_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := shape_GetConstraints.Call(obj)
    return ret
}

func Shape_SetConstraints(obj uintptr, value uintptr) {
   shape_SetConstraints.Call(obj, value)
}

func Shape_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := shape_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_SetParentShowHint(obj uintptr, value bool) {
   shape_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Shape_GetPen(obj uintptr) uintptr {
    ret, _, _ := shape_GetPen.Call(obj)
    return ret
}

func Shape_SetPen(obj uintptr, value uintptr) {
   shape_SetPen.Call(obj, value)
}

func Shape_GetShape(obj uintptr) TShapeType {
    ret, _, _ := shape_GetShape.Call(obj)
    return TShapeType(ret)
}

func Shape_SetShape(obj uintptr, value TShapeType) {
   shape_SetShape.Call(obj, uintptr(value))
}

func Shape_GetShowHint(obj uintptr) bool {
    ret, _, _ := shape_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_SetShowHint(obj uintptr, value bool) {
   shape_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Shape_GetVisible(obj uintptr) bool {
    ret, _, _ := shape_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_SetVisible(obj uintptr, value bool) {
   shape_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Shape_SetOnDragDrop(obj uintptr, fn interface{}) {
    shape_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Shape_SetOnDragOver(obj uintptr, fn interface{}) {
    shape_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Shape_SetOnEndDrag(obj uintptr, fn interface{}) {
    shape_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Shape_SetOnMouseDown(obj uintptr, fn interface{}) {
    shape_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Shape_SetOnMouseEnter(obj uintptr, fn interface{}) {
    shape_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Shape_SetOnMouseLeave(obj uintptr, fn interface{}) {
    shape_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Shape_SetOnMouseMove(obj uintptr, fn interface{}) {
    shape_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Shape_SetOnMouseUp(obj uintptr, fn interface{}) {
    shape_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Shape_GetAction(obj uintptr) uintptr {
    ret, _, _ := shape_GetAction.Call(obj)
    return ret
}

func Shape_SetAction(obj uintptr, value uintptr) {
   shape_SetAction.Call(obj, value)
}

func Shape_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := shape_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Shape_SetBiDiMode(obj uintptr, value TBiDiMode) {
   shape_SetBiDiMode.Call(obj, uintptr(value))
}

func Shape_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    shape_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_SetBoundsRect(obj uintptr, value TRect) {
   shape_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Shape_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := shape_GetClientHeight.Call(obj)
    return int32(ret)
}

func Shape_SetClientHeight(obj uintptr, value int32) {
   shape_SetClientHeight.Call(obj, uintptr(value))
}

func Shape_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    shape_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_GetClientRect(obj uintptr) TRect {
    var ret TRect
    shape_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Shape_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := shape_GetClientWidth.Call(obj)
    return int32(ret)
}

func Shape_SetClientWidth(obj uintptr, value int32) {
   shape_SetClientWidth.Call(obj, uintptr(value))
}

func Shape_GetControlState(obj uintptr) TControlState {
    ret, _, _ := shape_GetControlState.Call(obj)
    return TControlState(ret)
}

func Shape_SetControlState(obj uintptr, value TControlState) {
   shape_SetControlState.Call(obj, uintptr(value))
}

func Shape_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := shape_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Shape_SetControlStyle(obj uintptr, value TControlStyle) {
   shape_SetControlStyle.Call(obj, uintptr(value))
}

func Shape_GetFloating(obj uintptr) bool {
    ret, _, _ := shape_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Shape_GetParent(obj uintptr) uintptr {
    ret, _, _ := shape_GetParent.Call(obj)
    return ret
}

func Shape_SetParent(obj uintptr, value uintptr) {
   shape_SetParent.Call(obj, value)
}

func Shape_GetLeft(obj uintptr) int32 {
    ret, _, _ := shape_GetLeft.Call(obj)
    return int32(ret)
}

func Shape_SetLeft(obj uintptr, value int32) {
   shape_SetLeft.Call(obj, uintptr(value))
}

func Shape_GetTop(obj uintptr) int32 {
    ret, _, _ := shape_GetTop.Call(obj)
    return int32(ret)
}

func Shape_SetTop(obj uintptr, value int32) {
   shape_SetTop.Call(obj, uintptr(value))
}

func Shape_GetWidth(obj uintptr) int32 {
    ret, _, _ := shape_GetWidth.Call(obj)
    return int32(ret)
}

func Shape_SetWidth(obj uintptr, value int32) {
   shape_SetWidth.Call(obj, uintptr(value))
}

func Shape_GetHeight(obj uintptr) int32 {
    ret, _, _ := shape_GetHeight.Call(obj)
    return int32(ret)
}

func Shape_SetHeight(obj uintptr, value int32) {
   shape_SetHeight.Call(obj, uintptr(value))
}

func Shape_GetCursor(obj uintptr) TCursor {
    ret, _, _ := shape_GetCursor.Call(obj)
    return TCursor(ret)
}

func Shape_SetCursor(obj uintptr, value TCursor) {
   shape_SetCursor.Call(obj, uintptr(value))
}

func Shape_GetHint(obj uintptr) string {
    ret, _, _ := shape_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Shape_SetHint(obj uintptr, value string) {
   shape_SetHint.Call(obj, GoStrToDStr(value))
}

func Shape_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := shape_GetComponentCount.Call(obj)
    return int32(ret)
}

func Shape_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := shape_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Shape_SetComponentIndex(obj uintptr, value int32) {
   shape_SetComponentIndex.Call(obj, uintptr(value))
}

func Shape_GetOwner(obj uintptr) uintptr {
    ret, _, _ := shape_GetOwner.Call(obj)
    return ret
}

func Shape_GetName(obj uintptr) string {
    ret, _, _ := shape_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Shape_SetName(obj uintptr, value string) {
   shape_SetName.Call(obj, GoStrToDStr(value))
}

func Shape_GetTag(obj uintptr) int {
    ret, _, _ := shape_GetTag.Call(obj)
    return int(ret)
}

func Shape_SetTag(obj uintptr, value int) {
   shape_SetTag.Call(obj, uintptr(value))
}

func Shape_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := shape_GetAnchorSideLeft.Call(obj)
    return ret
}

func Shape_SetAnchorSideLeft(obj uintptr, value uintptr) {
   shape_SetAnchorSideLeft.Call(obj, value)
}

func Shape_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := shape_GetAnchorSideTop.Call(obj)
    return ret
}

func Shape_SetAnchorSideTop(obj uintptr, value uintptr) {
   shape_SetAnchorSideTop.Call(obj, value)
}

func Shape_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := shape_GetAnchorSideRight.Call(obj)
    return ret
}

func Shape_SetAnchorSideRight(obj uintptr, value uintptr) {
   shape_SetAnchorSideRight.Call(obj, value)
}

func Shape_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := shape_GetAnchorSideBottom.Call(obj)
    return ret
}

func Shape_SetAnchorSideBottom(obj uintptr, value uintptr) {
   shape_SetAnchorSideBottom.Call(obj, value)
}

func Shape_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := shape_GetBorderSpacing.Call(obj)
    return ret
}

func Shape_SetBorderSpacing(obj uintptr, value uintptr) {
   shape_SetBorderSpacing.Call(obj, value)
}

func Shape_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := shape_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Shape_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := shape_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Shape_StaticClassType() TClass {
    r, _, _:= shape_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TBevel ---------------------------

func Bevel_Create(obj uintptr) uintptr {
    ret, _, _ := bevel_Create.Call(obj)
    return ret
}

func Bevel_Free(obj uintptr) {
    bevel_Free.Call(obj)
}

func Bevel_BringToFront(obj uintptr)  {
    bevel_BringToFront.Call(obj)
}

func Bevel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    bevel_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    bevel_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_Dragging(obj uintptr) bool {
    ret, _, _ := bevel_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_HasParent(obj uintptr) bool {
    ret, _, _ := bevel_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_Hide(obj uintptr)  {
    bevel_Hide.Call(obj)
}

func Bevel_Invalidate(obj uintptr)  {
    bevel_Invalidate.Call(obj)
}

func Bevel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := bevel_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Bevel_Refresh(obj uintptr)  {
    bevel_Refresh.Call(obj)
}

func Bevel_Repaint(obj uintptr)  {
    bevel_Repaint.Call(obj)
}

func Bevel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    bevel_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    bevel_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_SendToBack(obj uintptr)  {
    bevel_SendToBack.Call(obj)
}

func Bevel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    bevel_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Bevel_Show(obj uintptr)  {
    bevel_Show.Call(obj)
}

func Bevel_Update(obj uintptr)  {
    bevel_Update.Call(obj)
}

func Bevel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := bevel_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Bevel_GetTextLen(obj uintptr) int32 {
    ret, _, _ := bevel_GetTextLen.Call(obj)
    return int32(ret)
}

func Bevel_SetTextBuf(obj uintptr, Buffer string)  {
    bevel_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Bevel_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := bevel_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Bevel_GetNamePath(obj uintptr) string {
    ret, _, _ := bevel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Bevel_Assign(obj uintptr, Source uintptr)  {
    bevel_Assign.Call(obj, Source )
}

func Bevel_ClassType(obj uintptr) TClass {
    ret, _, _ := bevel_ClassType.Call(obj)
    return TClass(ret)
}

func Bevel_ClassName(obj uintptr) string {
    ret, _, _ := bevel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Bevel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := bevel_InstanceSize.Call(obj)
    return int32(ret)
}

func Bevel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := bevel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Bevel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := bevel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Bevel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := bevel_GetHashCode.Call(obj)
    return int32(ret)
}

func Bevel_ToString(obj uintptr) string {
    ret, _, _ := bevel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Bevel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    bevel_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Bevel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    bevel_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Bevel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    bevel_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Bevel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    bevel_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Bevel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    bevel_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Bevel_AnchorClient(obj uintptr, ASpace int32)  {
    bevel_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Bevel_GetAlign(obj uintptr) TAlign {
    ret, _, _ := bevel_GetAlign.Call(obj)
    return TAlign(ret)
}

func Bevel_SetAlign(obj uintptr, value TAlign) {
   bevel_SetAlign.Call(obj, uintptr(value))
}

func Bevel_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := bevel_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Bevel_SetAnchors(obj uintptr, value TAnchors) {
   bevel_SetAnchors.Call(obj, uintptr(value))
}

func Bevel_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := bevel_GetConstraints.Call(obj)
    return ret
}

func Bevel_SetConstraints(obj uintptr, value uintptr) {
   bevel_SetConstraints.Call(obj, value)
}

func Bevel_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := bevel_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_SetParentShowHint(obj uintptr, value bool) {
   bevel_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Bevel_GetShape(obj uintptr) TBevelShape {
    ret, _, _ := bevel_GetShape.Call(obj)
    return TBevelShape(ret)
}

func Bevel_SetShape(obj uintptr, value TBevelShape) {
   bevel_SetShape.Call(obj, uintptr(value))
}

func Bevel_GetShowHint(obj uintptr) bool {
    ret, _, _ := bevel_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_SetShowHint(obj uintptr, value bool) {
   bevel_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Bevel_GetStyle(obj uintptr) TBevelStyle {
    ret, _, _ := bevel_GetStyle.Call(obj)
    return TBevelStyle(ret)
}

func Bevel_SetStyle(obj uintptr, value TBevelStyle) {
   bevel_SetStyle.Call(obj, uintptr(value))
}

func Bevel_GetVisible(obj uintptr) bool {
    ret, _, _ := bevel_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_SetVisible(obj uintptr, value bool) {
   bevel_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Bevel_GetEnabled(obj uintptr) bool {
    ret, _, _ := bevel_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_SetEnabled(obj uintptr, value bool) {
   bevel_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Bevel_GetAction(obj uintptr) uintptr {
    ret, _, _ := bevel_GetAction.Call(obj)
    return ret
}

func Bevel_SetAction(obj uintptr, value uintptr) {
   bevel_SetAction.Call(obj, value)
}

func Bevel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := bevel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Bevel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   bevel_SetBiDiMode.Call(obj, uintptr(value))
}

func Bevel_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    bevel_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_SetBoundsRect(obj uintptr, value TRect) {
   bevel_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Bevel_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := bevel_GetClientHeight.Call(obj)
    return int32(ret)
}

func Bevel_SetClientHeight(obj uintptr, value int32) {
   bevel_SetClientHeight.Call(obj, uintptr(value))
}

func Bevel_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    bevel_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_GetClientRect(obj uintptr) TRect {
    var ret TRect
    bevel_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Bevel_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := bevel_GetClientWidth.Call(obj)
    return int32(ret)
}

func Bevel_SetClientWidth(obj uintptr, value int32) {
   bevel_SetClientWidth.Call(obj, uintptr(value))
}

func Bevel_GetControlState(obj uintptr) TControlState {
    ret, _, _ := bevel_GetControlState.Call(obj)
    return TControlState(ret)
}

func Bevel_SetControlState(obj uintptr, value TControlState) {
   bevel_SetControlState.Call(obj, uintptr(value))
}

func Bevel_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := bevel_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Bevel_SetControlStyle(obj uintptr, value TControlStyle) {
   bevel_SetControlStyle.Call(obj, uintptr(value))
}

func Bevel_GetFloating(obj uintptr) bool {
    ret, _, _ := bevel_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Bevel_GetParent(obj uintptr) uintptr {
    ret, _, _ := bevel_GetParent.Call(obj)
    return ret
}

func Bevel_SetParent(obj uintptr, value uintptr) {
   bevel_SetParent.Call(obj, value)
}

func Bevel_GetLeft(obj uintptr) int32 {
    ret, _, _ := bevel_GetLeft.Call(obj)
    return int32(ret)
}

func Bevel_SetLeft(obj uintptr, value int32) {
   bevel_SetLeft.Call(obj, uintptr(value))
}

func Bevel_GetTop(obj uintptr) int32 {
    ret, _, _ := bevel_GetTop.Call(obj)
    return int32(ret)
}

func Bevel_SetTop(obj uintptr, value int32) {
   bevel_SetTop.Call(obj, uintptr(value))
}

func Bevel_GetWidth(obj uintptr) int32 {
    ret, _, _ := bevel_GetWidth.Call(obj)
    return int32(ret)
}

func Bevel_SetWidth(obj uintptr, value int32) {
   bevel_SetWidth.Call(obj, uintptr(value))
}

func Bevel_GetHeight(obj uintptr) int32 {
    ret, _, _ := bevel_GetHeight.Call(obj)
    return int32(ret)
}

func Bevel_SetHeight(obj uintptr, value int32) {
   bevel_SetHeight.Call(obj, uintptr(value))
}

func Bevel_GetCursor(obj uintptr) TCursor {
    ret, _, _ := bevel_GetCursor.Call(obj)
    return TCursor(ret)
}

func Bevel_SetCursor(obj uintptr, value TCursor) {
   bevel_SetCursor.Call(obj, uintptr(value))
}

func Bevel_GetHint(obj uintptr) string {
    ret, _, _ := bevel_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Bevel_SetHint(obj uintptr, value string) {
   bevel_SetHint.Call(obj, GoStrToDStr(value))
}

func Bevel_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := bevel_GetComponentCount.Call(obj)
    return int32(ret)
}

func Bevel_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := bevel_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Bevel_SetComponentIndex(obj uintptr, value int32) {
   bevel_SetComponentIndex.Call(obj, uintptr(value))
}

func Bevel_GetOwner(obj uintptr) uintptr {
    ret, _, _ := bevel_GetOwner.Call(obj)
    return ret
}

func Bevel_GetName(obj uintptr) string {
    ret, _, _ := bevel_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Bevel_SetName(obj uintptr, value string) {
   bevel_SetName.Call(obj, GoStrToDStr(value))
}

func Bevel_GetTag(obj uintptr) int {
    ret, _, _ := bevel_GetTag.Call(obj)
    return int(ret)
}

func Bevel_SetTag(obj uintptr, value int) {
   bevel_SetTag.Call(obj, uintptr(value))
}

func Bevel_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := bevel_GetAnchorSideLeft.Call(obj)
    return ret
}

func Bevel_SetAnchorSideLeft(obj uintptr, value uintptr) {
   bevel_SetAnchorSideLeft.Call(obj, value)
}

func Bevel_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := bevel_GetAnchorSideTop.Call(obj)
    return ret
}

func Bevel_SetAnchorSideTop(obj uintptr, value uintptr) {
   bevel_SetAnchorSideTop.Call(obj, value)
}

func Bevel_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := bevel_GetAnchorSideRight.Call(obj)
    return ret
}

func Bevel_SetAnchorSideRight(obj uintptr, value uintptr) {
   bevel_SetAnchorSideRight.Call(obj, value)
}

func Bevel_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := bevel_GetAnchorSideBottom.Call(obj)
    return ret
}

func Bevel_SetAnchorSideBottom(obj uintptr, value uintptr) {
   bevel_SetAnchorSideBottom.Call(obj, value)
}

func Bevel_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := bevel_GetBorderSpacing.Call(obj)
    return ret
}

func Bevel_SetBorderSpacing(obj uintptr, value uintptr) {
   bevel_SetBorderSpacing.Call(obj, value)
}

func Bevel_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := bevel_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Bevel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := bevel_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Bevel_StaticClassType() TClass {
    r, _, _:= bevel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TScrollBox ---------------------------

func ScrollBox_Create(obj uintptr) uintptr {
    ret, _, _ := scrollBox_Create.Call(obj)
    return ret
}

func ScrollBox_Free(obj uintptr) {
    scrollBox_Free.Call(obj)
}

func ScrollBox_ScrollInView(obj uintptr, AControl uintptr)  {
    scrollBox_ScrollInView.Call(obj, AControl )
}

func ScrollBox_CanFocus(obj uintptr) bool {
    ret, _, _ := scrollBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := scrollBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ScrollBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := scrollBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ScrollBox_DisableAlign(obj uintptr)  {
    scrollBox_DisableAlign.Call(obj)
}

func ScrollBox_EnableAlign(obj uintptr)  {
    scrollBox_EnableAlign.Call(obj)
}

func ScrollBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := scrollBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ScrollBox_FlipChildren(obj uintptr, AllLevels bool)  {
    scrollBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ScrollBox_Focused(obj uintptr) bool {
    ret, _, _ := scrollBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := scrollBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_InsertControl(obj uintptr, AControl uintptr)  {
    scrollBox_InsertControl.Call(obj, AControl )
}

func ScrollBox_Invalidate(obj uintptr)  {
    scrollBox_Invalidate.Call(obj)
}

func ScrollBox_RemoveControl(obj uintptr, AControl uintptr)  {
    scrollBox_RemoveControl.Call(obj, AControl )
}

func ScrollBox_Realign(obj uintptr)  {
    scrollBox_Realign.Call(obj)
}

func ScrollBox_Repaint(obj uintptr)  {
    scrollBox_Repaint.Call(obj)
}

func ScrollBox_ScaleBy(obj uintptr, M int32, D int32)  {
    scrollBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ScrollBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    scrollBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ScrollBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    scrollBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ScrollBox_SetFocus(obj uintptr)  {
    scrollBox_SetFocus.Call(obj)
}

func ScrollBox_Update(obj uintptr)  {
    scrollBox_Update.Call(obj)
}

func ScrollBox_BringToFront(obj uintptr)  {
    scrollBox_BringToFront.Call(obj)
}

func ScrollBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    scrollBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    scrollBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_Dragging(obj uintptr) bool {
    ret, _, _ := scrollBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_HasParent(obj uintptr) bool {
    ret, _, _ := scrollBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_Hide(obj uintptr)  {
    scrollBox_Hide.Call(obj)
}

func ScrollBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := scrollBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ScrollBox_Refresh(obj uintptr)  {
    scrollBox_Refresh.Call(obj)
}

func ScrollBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    scrollBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    scrollBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_SendToBack(obj uintptr)  {
    scrollBox_SendToBack.Call(obj)
}

func ScrollBox_Show(obj uintptr)  {
    scrollBox_Show.Call(obj)
}

func ScrollBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := scrollBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ScrollBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetTextLen.Call(obj)
    return int32(ret)
}

func ScrollBox_SetTextBuf(obj uintptr, Buffer string)  {
    scrollBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ScrollBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := scrollBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ScrollBox_GetNamePath(obj uintptr) string {
    ret, _, _ := scrollBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBox_Assign(obj uintptr, Source uintptr)  {
    scrollBox_Assign.Call(obj, Source )
}

func ScrollBox_ClassType(obj uintptr) TClass {
    ret, _, _ := scrollBox_ClassType.Call(obj)
    return TClass(ret)
}

func ScrollBox_ClassName(obj uintptr) string {
    ret, _, _ := scrollBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := scrollBox_InstanceSize.Call(obj)
    return int32(ret)
}

func ScrollBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := scrollBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ScrollBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := scrollBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ScrollBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetHashCode.Call(obj)
    return int32(ret)
}

func ScrollBox_ToString(obj uintptr) string {
    ret, _, _ := scrollBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    scrollBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ScrollBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    scrollBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ScrollBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    scrollBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ScrollBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    scrollBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ScrollBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    scrollBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ScrollBox_AnchorClient(obj uintptr, ASpace int32)  {
    scrollBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ScrollBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := scrollBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func ScrollBox_SetAlign(obj uintptr, value TAlign) {
   scrollBox_SetAlign.Call(obj, uintptr(value))
}

func ScrollBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := scrollBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ScrollBox_SetAnchors(obj uintptr, value TAnchors) {
   scrollBox_SetAnchors.Call(obj, uintptr(value))
}

func ScrollBox_GetAutoScroll(obj uintptr) bool {
    ret, _, _ := scrollBox_GetAutoScroll.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetAutoScroll(obj uintptr, value bool) {
   scrollBox_SetAutoScroll.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetAutoSize(obj uintptr) bool {
    ret, _, _ := scrollBox_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetAutoSize(obj uintptr, value bool) {
   scrollBox_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := scrollBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ScrollBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   scrollBox_SetBiDiMode.Call(obj, uintptr(value))
}

func ScrollBox_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := scrollBox_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func ScrollBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
   scrollBox_SetBorderStyle.Call(obj, uintptr(value))
}

func ScrollBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetConstraints.Call(obj)
    return ret
}

func ScrollBox_SetConstraints(obj uintptr, value uintptr) {
   scrollBox_SetConstraints.Call(obj, value)
}

func ScrollBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := scrollBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetDockSite(obj uintptr, value bool) {
   scrollBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := scrollBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetDoubleBuffered(obj uintptr, value bool) {
   scrollBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := scrollBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ScrollBox_SetDragCursor(obj uintptr, value TCursor) {
   scrollBox_SetDragCursor.Call(obj, uintptr(value))
}

func ScrollBox_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := scrollBox_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ScrollBox_SetDragKind(obj uintptr, value TDragKind) {
   scrollBox_SetDragKind.Call(obj, uintptr(value))
}

func ScrollBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := scrollBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ScrollBox_SetDragMode(obj uintptr, value TDragMode) {
   scrollBox_SetDragMode.Call(obj, uintptr(value))
}

func ScrollBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := scrollBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetEnabled(obj uintptr, value bool) {
   scrollBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetColor(obj uintptr) TColor {
    ret, _, _ := scrollBox_GetColor.Call(obj)
    return TColor(ret)
}

func ScrollBox_SetColor(obj uintptr, value TColor) {
   scrollBox_SetColor.Call(obj, uintptr(value))
}

func ScrollBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetFont.Call(obj)
    return ret
}

func ScrollBox_SetFont(obj uintptr, value uintptr) {
   scrollBox_SetFont.Call(obj, value)
}

func ScrollBox_GetParentBackground(obj uintptr) bool {
    ret, _, _ := scrollBox_GetParentBackground.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetParentBackground(obj uintptr, value bool) {
   scrollBox_SetParentBackground.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := scrollBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetParentColor(obj uintptr, value bool) {
   scrollBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := scrollBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   scrollBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := scrollBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetParentFont(obj uintptr, value bool) {
   scrollBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := scrollBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetParentShowHint(obj uintptr, value bool) {
   scrollBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetPopupMenu.Call(obj)
    return ret
}

func ScrollBox_SetPopupMenu(obj uintptr, value uintptr) {
   scrollBox_SetPopupMenu.Call(obj, value)
}

func ScrollBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := scrollBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetShowHint(obj uintptr, value bool) {
   scrollBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := scrollBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ScrollBox_SetTabOrder(obj uintptr, value TTabOrder) {
   scrollBox_SetTabOrder.Call(obj, uintptr(value))
}

func ScrollBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := scrollBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetTabStop(obj uintptr, value bool) {
   scrollBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetVisible(obj uintptr) bool {
    ret, _, _ := scrollBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetVisible(obj uintptr, value bool) {
   scrollBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_SetOnClick(obj uintptr, fn interface{}) {
    scrollBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnDblClick(obj uintptr, fn interface{}) {
    scrollBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnDockDrop(obj uintptr, fn interface{}) {
    scrollBox_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    scrollBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnDragOver(obj uintptr, fn interface{}) {
    scrollBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    scrollBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnEnter(obj uintptr, fn interface{}) {
    scrollBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnExit(obj uintptr, fn interface{}) {
    scrollBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    scrollBox_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseWheel(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseWheel.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    scrollBox_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnResize(obj uintptr, fn interface{}) {
    scrollBox_SetOnResize.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnUnDock(obj uintptr, fn interface{}) {
    scrollBox_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func ScrollBox_SetOnAlignPosition(obj uintptr, fn interface{}) {
    scrollBox_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func ScrollBox_GetHorzScrollBar(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetHorzScrollBar.Call(obj)
    return ret
}

func ScrollBox_SetHorzScrollBar(obj uintptr, value uintptr) {
   scrollBox_SetHorzScrollBar.Call(obj, value)
}

func ScrollBox_GetVertScrollBar(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetVertScrollBar.Call(obj)
    return ret
}

func ScrollBox_SetVertScrollBar(obj uintptr, value uintptr) {
   scrollBox_SetVertScrollBar.Call(obj, value)
}

func ScrollBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ScrollBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := scrollBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ScrollBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetBrush.Call(obj)
    return ret
}

func ScrollBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetControlCount.Call(obj)
    return int32(ret)
}

func ScrollBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := scrollBox_GetHandle.Call(obj)
    return HWND(ret)
}

func ScrollBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := scrollBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ScrollBox_SetParentWindow(obj uintptr, value HWND) {
   scrollBox_SetParentWindow.Call(obj, uintptr(value))
}

func ScrollBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := scrollBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_SetUseDockManager(obj uintptr, value bool) {
   scrollBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ScrollBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetAction.Call(obj)
    return ret
}

func ScrollBox_SetAction(obj uintptr, value uintptr) {
   scrollBox_SetAction.Call(obj, value)
}

func ScrollBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    scrollBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_SetBoundsRect(obj uintptr, value TRect) {
   scrollBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ScrollBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func ScrollBox_SetClientHeight(obj uintptr, value int32) {
   scrollBox_SetClientHeight.Call(obj, uintptr(value))
}

func ScrollBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    scrollBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    scrollBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ScrollBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func ScrollBox_SetClientWidth(obj uintptr, value int32) {
   scrollBox_SetClientWidth.Call(obj, uintptr(value))
}

func ScrollBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := scrollBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func ScrollBox_SetControlState(obj uintptr, value TControlState) {
   scrollBox_SetControlState.Call(obj, uintptr(value))
}

func ScrollBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := scrollBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ScrollBox_SetControlStyle(obj uintptr, value TControlStyle) {
   scrollBox_SetControlStyle.Call(obj, uintptr(value))
}

func ScrollBox_GetFloating(obj uintptr) bool {
    ret, _, _ := scrollBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ScrollBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetParent.Call(obj)
    return ret
}

func ScrollBox_SetParent(obj uintptr, value uintptr) {
   scrollBox_SetParent.Call(obj, value)
}

func ScrollBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetLeft.Call(obj)
    return int32(ret)
}

func ScrollBox_SetLeft(obj uintptr, value int32) {
   scrollBox_SetLeft.Call(obj, uintptr(value))
}

func ScrollBox_GetTop(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetTop.Call(obj)
    return int32(ret)
}

func ScrollBox_SetTop(obj uintptr, value int32) {
   scrollBox_SetTop.Call(obj, uintptr(value))
}

func ScrollBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetWidth.Call(obj)
    return int32(ret)
}

func ScrollBox_SetWidth(obj uintptr, value int32) {
   scrollBox_SetWidth.Call(obj, uintptr(value))
}

func ScrollBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetHeight.Call(obj)
    return int32(ret)
}

func ScrollBox_SetHeight(obj uintptr, value int32) {
   scrollBox_SetHeight.Call(obj, uintptr(value))
}

func ScrollBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := scrollBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func ScrollBox_SetCursor(obj uintptr, value TCursor) {
   scrollBox_SetCursor.Call(obj, uintptr(value))
}

func ScrollBox_GetHint(obj uintptr) string {
    ret, _, _ := scrollBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBox_SetHint(obj uintptr, value string) {
   scrollBox_SetHint.Call(obj, GoStrToDStr(value))
}

func ScrollBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func ScrollBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := scrollBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ScrollBox_SetComponentIndex(obj uintptr, value int32) {
   scrollBox_SetComponentIndex.Call(obj, uintptr(value))
}

func ScrollBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetOwner.Call(obj)
    return ret
}

func ScrollBox_GetName(obj uintptr) string {
    ret, _, _ := scrollBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ScrollBox_SetName(obj uintptr, value string) {
   scrollBox_SetName.Call(obj, GoStrToDStr(value))
}

func ScrollBox_GetTag(obj uintptr) int {
    ret, _, _ := scrollBox_GetTag.Call(obj)
    return int(ret)
}

func ScrollBox_SetTag(obj uintptr, value int) {
   scrollBox_SetTag.Call(obj, uintptr(value))
}

func ScrollBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func ScrollBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   scrollBox_SetAnchorSideLeft.Call(obj, value)
}

func ScrollBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetAnchorSideTop.Call(obj)
    return ret
}

func ScrollBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   scrollBox_SetAnchorSideTop.Call(obj, value)
}

func ScrollBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetAnchorSideRight.Call(obj)
    return ret
}

func ScrollBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   scrollBox_SetAnchorSideRight.Call(obj, value)
}

func ScrollBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func ScrollBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   scrollBox_SetAnchorSideBottom.Call(obj, value)
}

func ScrollBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetChildSizing.Call(obj)
    return ret
}

func ScrollBox_SetChildSizing(obj uintptr, value uintptr) {
   scrollBox_SetChildSizing.Call(obj, value)
}

func ScrollBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := scrollBox_GetBorderSpacing.Call(obj)
    return ret
}

func ScrollBox_SetBorderSpacing(obj uintptr, value uintptr) {
   scrollBox_SetBorderSpacing.Call(obj, value)
}

func ScrollBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := scrollBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ScrollBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := scrollBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ScrollBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := scrollBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ScrollBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := scrollBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ScrollBox_StaticClassType() TClass {
    r, _, _:= scrollBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCheckListBox ---------------------------

func CheckListBox_Create(obj uintptr) uintptr {
    ret, _, _ := checkListBox_Create.Call(obj)
    return ret
}

func CheckListBox_Free(obj uintptr) {
    checkListBox_Free.Call(obj)
}

func CheckListBox_CheckAll(obj uintptr, AState TCheckBoxState, AllowGrayed bool, AllowDisabled bool)  {
    checkListBox_CheckAll.Call(obj, uintptr(AState) , GoBoolToDBool(AllowGrayed) , GoBoolToDBool(AllowDisabled) )
}

func CheckListBox_AddItem(obj uintptr, Item string, AObject uintptr)  {
    checkListBox_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func CheckListBox_Clear(obj uintptr)  {
    checkListBox_Clear.Call(obj)
}

func CheckListBox_ClearSelection(obj uintptr)  {
    checkListBox_ClearSelection.Call(obj)
}

func CheckListBox_DeleteSelected(obj uintptr)  {
    checkListBox_DeleteSelected.Call(obj)
}

func CheckListBox_ItemAtPos(obj uintptr, Pos TPoint, Existing bool) int32 {
    ret, _, _ := checkListBox_ItemAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(Existing) )
    return int32(ret)
}

func CheckListBox_ItemRect(obj uintptr, Index int32) TRect {
    var ret TRect
    checkListBox_ItemRect.Call(obj, uintptr(Index) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_SelectAll(obj uintptr)  {
    checkListBox_SelectAll.Call(obj)
}

func CheckListBox_CanFocus(obj uintptr) bool {
    ret, _, _ := checkListBox_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := checkListBox_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func CheckListBox_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := checkListBox_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func CheckListBox_DisableAlign(obj uintptr)  {
    checkListBox_DisableAlign.Call(obj)
}

func CheckListBox_EnableAlign(obj uintptr)  {
    checkListBox_EnableAlign.Call(obj)
}

func CheckListBox_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := checkListBox_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func CheckListBox_FlipChildren(obj uintptr, AllLevels bool)  {
    checkListBox_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func CheckListBox_Focused(obj uintptr) bool {
    ret, _, _ := checkListBox_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_HandleAllocated(obj uintptr) bool {
    ret, _, _ := checkListBox_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_InsertControl(obj uintptr, AControl uintptr)  {
    checkListBox_InsertControl.Call(obj, AControl )
}

func CheckListBox_Invalidate(obj uintptr)  {
    checkListBox_Invalidate.Call(obj)
}

func CheckListBox_RemoveControl(obj uintptr, AControl uintptr)  {
    checkListBox_RemoveControl.Call(obj, AControl )
}

func CheckListBox_Realign(obj uintptr)  {
    checkListBox_Realign.Call(obj)
}

func CheckListBox_Repaint(obj uintptr)  {
    checkListBox_Repaint.Call(obj)
}

func CheckListBox_ScaleBy(obj uintptr, M int32, D int32)  {
    checkListBox_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func CheckListBox_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    checkListBox_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func CheckListBox_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    checkListBox_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func CheckListBox_SetFocus(obj uintptr)  {
    checkListBox_SetFocus.Call(obj)
}

func CheckListBox_Update(obj uintptr)  {
    checkListBox_Update.Call(obj)
}

func CheckListBox_BringToFront(obj uintptr)  {
    checkListBox_BringToFront.Call(obj)
}

func CheckListBox_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    checkListBox_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    checkListBox_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_Dragging(obj uintptr) bool {
    ret, _, _ := checkListBox_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_HasParent(obj uintptr) bool {
    ret, _, _ := checkListBox_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_Hide(obj uintptr)  {
    checkListBox_Hide.Call(obj)
}

func CheckListBox_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := checkListBox_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func CheckListBox_Refresh(obj uintptr)  {
    checkListBox_Refresh.Call(obj)
}

func CheckListBox_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    checkListBox_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    checkListBox_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_SendToBack(obj uintptr)  {
    checkListBox_SendToBack.Call(obj)
}

func CheckListBox_Show(obj uintptr)  {
    checkListBox_Show.Call(obj)
}

func CheckListBox_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := checkListBox_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func CheckListBox_GetTextLen(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetTextLen.Call(obj)
    return int32(ret)
}

func CheckListBox_SetTextBuf(obj uintptr, Buffer string)  {
    checkListBox_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func CheckListBox_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := checkListBox_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func CheckListBox_GetNamePath(obj uintptr) string {
    ret, _, _ := checkListBox_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CheckListBox_Assign(obj uintptr, Source uintptr)  {
    checkListBox_Assign.Call(obj, Source )
}

func CheckListBox_ClassType(obj uintptr) TClass {
    ret, _, _ := checkListBox_ClassType.Call(obj)
    return TClass(ret)
}

func CheckListBox_ClassName(obj uintptr) string {
    ret, _, _ := checkListBox_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CheckListBox_InstanceSize(obj uintptr) int32 {
    ret, _, _ := checkListBox_InstanceSize.Call(obj)
    return int32(ret)
}

func CheckListBox_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := checkListBox_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CheckListBox_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := checkListBox_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CheckListBox_GetHashCode(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetHashCode.Call(obj)
    return int32(ret)
}

func CheckListBox_ToString(obj uintptr) string {
    ret, _, _ := checkListBox_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CheckListBox_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    checkListBox_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CheckListBox_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    checkListBox_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CheckListBox_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    checkListBox_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func CheckListBox_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    checkListBox_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func CheckListBox_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    checkListBox_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func CheckListBox_AnchorClient(obj uintptr, ASpace int32)  {
    checkListBox_AnchorClient.Call(obj, uintptr(ASpace) )
}

func CheckListBox_SetOnClickCheck(obj uintptr, fn interface{}) {
    checkListBox_SetOnClickCheck.Call(obj, addEventToMap(fn))
}

func CheckListBox_GetAlign(obj uintptr) TAlign {
    ret, _, _ := checkListBox_GetAlign.Call(obj)
    return TAlign(ret)
}

func CheckListBox_SetAlign(obj uintptr, value TAlign) {
   checkListBox_SetAlign.Call(obj, uintptr(value))
}

func CheckListBox_GetAllowGrayed(obj uintptr) bool {
    ret, _, _ := checkListBox_GetAllowGrayed.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetAllowGrayed(obj uintptr, value bool) {
   checkListBox_SetAllowGrayed.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := checkListBox_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func CheckListBox_SetAnchors(obj uintptr, value TAnchors) {
   checkListBox_SetAnchors.Call(obj, uintptr(value))
}

func CheckListBox_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := checkListBox_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func CheckListBox_SetBiDiMode(obj uintptr, value TBiDiMode) {
   checkListBox_SetBiDiMode.Call(obj, uintptr(value))
}

func CheckListBox_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := checkListBox_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func CheckListBox_SetBorderStyle(obj uintptr, value TBorderStyle) {
   checkListBox_SetBorderStyle.Call(obj, uintptr(value))
}

func CheckListBox_GetColor(obj uintptr) TColor {
    ret, _, _ := checkListBox_GetColor.Call(obj)
    return TColor(ret)
}

func CheckListBox_SetColor(obj uintptr, value TColor) {
   checkListBox_SetColor.Call(obj, uintptr(value))
}

func CheckListBox_GetColumns(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetColumns.Call(obj)
    return int32(ret)
}

func CheckListBox_SetColumns(obj uintptr, value int32) {
   checkListBox_SetColumns.Call(obj, uintptr(value))
}

func CheckListBox_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetConstraints.Call(obj)
    return ret
}

func CheckListBox_SetConstraints(obj uintptr, value uintptr) {
   checkListBox_SetConstraints.Call(obj, value)
}

func CheckListBox_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := checkListBox_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetDoubleBuffered(obj uintptr, value bool) {
   checkListBox_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := checkListBox_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func CheckListBox_SetDragCursor(obj uintptr, value TCursor) {
   checkListBox_SetDragCursor.Call(obj, uintptr(value))
}

func CheckListBox_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := checkListBox_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func CheckListBox_SetDragMode(obj uintptr, value TDragMode) {
   checkListBox_SetDragMode.Call(obj, uintptr(value))
}

func CheckListBox_GetEnabled(obj uintptr) bool {
    ret, _, _ := checkListBox_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetEnabled(obj uintptr, value bool) {
   checkListBox_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetFont(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetFont.Call(obj)
    return ret
}

func CheckListBox_SetFont(obj uintptr, value uintptr) {
   checkListBox_SetFont.Call(obj, value)
}

func CheckListBox_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetItemHeight.Call(obj)
    return int32(ret)
}

func CheckListBox_SetItemHeight(obj uintptr, value int32) {
   checkListBox_SetItemHeight.Call(obj, uintptr(value))
}

func CheckListBox_GetItems(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetItems.Call(obj)
    return ret
}

func CheckListBox_SetItems(obj uintptr, value uintptr) {
   checkListBox_SetItems.Call(obj, value)
}

func CheckListBox_GetParentColor(obj uintptr) bool {
    ret, _, _ := checkListBox_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetParentColor(obj uintptr, value bool) {
   checkListBox_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := checkListBox_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetParentDoubleBuffered(obj uintptr, value bool) {
   checkListBox_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentFont(obj uintptr) bool {
    ret, _, _ := checkListBox_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetParentFont(obj uintptr, value bool) {
   checkListBox_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := checkListBox_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetParentShowHint(obj uintptr, value bool) {
   checkListBox_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetPopupMenu.Call(obj)
    return ret
}

func CheckListBox_SetPopupMenu(obj uintptr, value uintptr) {
   checkListBox_SetPopupMenu.Call(obj, value)
}

func CheckListBox_GetShowHint(obj uintptr) bool {
    ret, _, _ := checkListBox_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetShowHint(obj uintptr, value bool) {
   checkListBox_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetSorted(obj uintptr) bool {
    ret, _, _ := checkListBox_GetSorted.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetSorted(obj uintptr, value bool) {
   checkListBox_SetSorted.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetStyle(obj uintptr) TListBoxStyle {
    ret, _, _ := checkListBox_GetStyle.Call(obj)
    return TListBoxStyle(ret)
}

func CheckListBox_SetStyle(obj uintptr, value TListBoxStyle) {
   checkListBox_SetStyle.Call(obj, uintptr(value))
}

func CheckListBox_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := checkListBox_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func CheckListBox_SetTabOrder(obj uintptr, value TTabOrder) {
   checkListBox_SetTabOrder.Call(obj, uintptr(value))
}

func CheckListBox_GetTabStop(obj uintptr) bool {
    ret, _, _ := checkListBox_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetTabStop(obj uintptr, value bool) {
   checkListBox_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetVisible(obj uintptr) bool {
    ret, _, _ := checkListBox_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetVisible(obj uintptr, value bool) {
   checkListBox_SetVisible.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_SetOnClick(obj uintptr, fn interface{}) {
    checkListBox_SetOnClick.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnContextPopup(obj uintptr, fn interface{}) {
    checkListBox_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnDblClick(obj uintptr, fn interface{}) {
    checkListBox_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnDragDrop(obj uintptr, fn interface{}) {
    checkListBox_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnDragOver(obj uintptr, fn interface{}) {
    checkListBox_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnEndDrag(obj uintptr, fn interface{}) {
    checkListBox_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnEnter(obj uintptr, fn interface{}) {
    checkListBox_SetOnEnter.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnExit(obj uintptr, fn interface{}) {
    checkListBox_SetOnExit.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnKeyDown(obj uintptr, fn interface{}) {
    checkListBox_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnKeyPress(obj uintptr, fn interface{}) {
    checkListBox_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnKeyUp(obj uintptr, fn interface{}) {
    checkListBox_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMeasureItem(obj uintptr, fn interface{}) {
    checkListBox_SetOnMeasureItem.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMouseDown(obj uintptr, fn interface{}) {
    checkListBox_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMouseEnter(obj uintptr, fn interface{}) {
    checkListBox_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMouseLeave(obj uintptr, fn interface{}) {
    checkListBox_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMouseMove(obj uintptr, fn interface{}) {
    checkListBox_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func CheckListBox_SetOnMouseUp(obj uintptr, fn interface{}) {
    checkListBox_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func CheckListBox_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetCanvas.Call(obj)
    return ret
}

func CheckListBox_GetCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetTopIndex(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetTopIndex.Call(obj)
    return int32(ret)
}

func CheckListBox_SetTopIndex(obj uintptr, value int32) {
   checkListBox_SetTopIndex.Call(obj, uintptr(value))
}

func CheckListBox_GetMultiSelect(obj uintptr) bool {
    ret, _, _ := checkListBox_GetMultiSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetMultiSelect(obj uintptr, value bool) {
   checkListBox_SetMultiSelect.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetSelCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetSelCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetItemIndex.Call(obj)
    return int32(ret)
}

func CheckListBox_SetItemIndex(obj uintptr, value int32) {
   checkListBox_SetItemIndex.Call(obj, uintptr(value))
}

func CheckListBox_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetDockClientCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetDockSite(obj uintptr) bool {
    ret, _, _ := checkListBox_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetDockSite(obj uintptr, value bool) {
   checkListBox_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := checkListBox_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetBrush(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetBrush.Call(obj)
    return ret
}

func CheckListBox_GetControlCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetControlCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetHandle(obj uintptr) HWND {
    ret, _, _ := checkListBox_GetHandle.Call(obj)
    return HWND(ret)
}

func CheckListBox_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := checkListBox_GetParentWindow.Call(obj)
    return HWND(ret)
}

func CheckListBox_SetParentWindow(obj uintptr, value HWND) {
   checkListBox_SetParentWindow.Call(obj, uintptr(value))
}

func CheckListBox_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := checkListBox_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_SetUseDockManager(obj uintptr, value bool) {
   checkListBox_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func CheckListBox_GetAction(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetAction.Call(obj)
    return ret
}

func CheckListBox_SetAction(obj uintptr, value uintptr) {
   checkListBox_SetAction.Call(obj, value)
}

func CheckListBox_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    checkListBox_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_SetBoundsRect(obj uintptr, value TRect) {
   checkListBox_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CheckListBox_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetClientHeight.Call(obj)
    return int32(ret)
}

func CheckListBox_SetClientHeight(obj uintptr, value int32) {
   checkListBox_SetClientHeight.Call(obj, uintptr(value))
}

func CheckListBox_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    checkListBox_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_GetClientRect(obj uintptr) TRect {
    var ret TRect
    checkListBox_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CheckListBox_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetClientWidth.Call(obj)
    return int32(ret)
}

func CheckListBox_SetClientWidth(obj uintptr, value int32) {
   checkListBox_SetClientWidth.Call(obj, uintptr(value))
}

func CheckListBox_GetControlState(obj uintptr) TControlState {
    ret, _, _ := checkListBox_GetControlState.Call(obj)
    return TControlState(ret)
}

func CheckListBox_SetControlState(obj uintptr, value TControlState) {
   checkListBox_SetControlState.Call(obj, uintptr(value))
}

func CheckListBox_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := checkListBox_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func CheckListBox_SetControlStyle(obj uintptr, value TControlStyle) {
   checkListBox_SetControlStyle.Call(obj, uintptr(value))
}

func CheckListBox_GetFloating(obj uintptr) bool {
    ret, _, _ := checkListBox_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func CheckListBox_GetParent(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetParent.Call(obj)
    return ret
}

func CheckListBox_SetParent(obj uintptr, value uintptr) {
   checkListBox_SetParent.Call(obj, value)
}

func CheckListBox_GetLeft(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetLeft.Call(obj)
    return int32(ret)
}

func CheckListBox_SetLeft(obj uintptr, value int32) {
   checkListBox_SetLeft.Call(obj, uintptr(value))
}

func CheckListBox_GetTop(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetTop.Call(obj)
    return int32(ret)
}

func CheckListBox_SetTop(obj uintptr, value int32) {
   checkListBox_SetTop.Call(obj, uintptr(value))
}

func CheckListBox_GetWidth(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetWidth.Call(obj)
    return int32(ret)
}

func CheckListBox_SetWidth(obj uintptr, value int32) {
   checkListBox_SetWidth.Call(obj, uintptr(value))
}

func CheckListBox_GetHeight(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetHeight.Call(obj)
    return int32(ret)
}

func CheckListBox_SetHeight(obj uintptr, value int32) {
   checkListBox_SetHeight.Call(obj, uintptr(value))
}

func CheckListBox_GetCursor(obj uintptr) TCursor {
    ret, _, _ := checkListBox_GetCursor.Call(obj)
    return TCursor(ret)
}

func CheckListBox_SetCursor(obj uintptr, value TCursor) {
   checkListBox_SetCursor.Call(obj, uintptr(value))
}

func CheckListBox_GetHint(obj uintptr) string {
    ret, _, _ := checkListBox_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func CheckListBox_SetHint(obj uintptr, value string) {
   checkListBox_SetHint.Call(obj, GoStrToDStr(value))
}

func CheckListBox_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetComponentCount.Call(obj)
    return int32(ret)
}

func CheckListBox_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := checkListBox_GetComponentIndex.Call(obj)
    return int32(ret)
}

func CheckListBox_SetComponentIndex(obj uintptr, value int32) {
   checkListBox_SetComponentIndex.Call(obj, uintptr(value))
}

func CheckListBox_GetOwner(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetOwner.Call(obj)
    return ret
}

func CheckListBox_GetName(obj uintptr) string {
    ret, _, _ := checkListBox_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func CheckListBox_SetName(obj uintptr, value string) {
   checkListBox_SetName.Call(obj, GoStrToDStr(value))
}

func CheckListBox_GetTag(obj uintptr) int {
    ret, _, _ := checkListBox_GetTag.Call(obj)
    return int(ret)
}

func CheckListBox_SetTag(obj uintptr, value int) {
   checkListBox_SetTag.Call(obj, uintptr(value))
}

func CheckListBox_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetAnchorSideLeft.Call(obj)
    return ret
}

func CheckListBox_SetAnchorSideLeft(obj uintptr, value uintptr) {
   checkListBox_SetAnchorSideLeft.Call(obj, value)
}

func CheckListBox_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetAnchorSideTop.Call(obj)
    return ret
}

func CheckListBox_SetAnchorSideTop(obj uintptr, value uintptr) {
   checkListBox_SetAnchorSideTop.Call(obj, value)
}

func CheckListBox_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetAnchorSideRight.Call(obj)
    return ret
}

func CheckListBox_SetAnchorSideRight(obj uintptr, value uintptr) {
   checkListBox_SetAnchorSideRight.Call(obj, value)
}

func CheckListBox_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetAnchorSideBottom.Call(obj)
    return ret
}

func CheckListBox_SetAnchorSideBottom(obj uintptr, value uintptr) {
   checkListBox_SetAnchorSideBottom.Call(obj, value)
}

func CheckListBox_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetChildSizing.Call(obj)
    return ret
}

func CheckListBox_SetChildSizing(obj uintptr, value uintptr) {
   checkListBox_SetChildSizing.Call(obj, value)
}

func CheckListBox_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := checkListBox_GetBorderSpacing.Call(obj)
    return ret
}

func CheckListBox_SetBorderSpacing(obj uintptr, value uintptr) {
   checkListBox_SetBorderSpacing.Call(obj, value)
}

func CheckListBox_GetChecked(obj uintptr, Index int32) bool {
    ret, _, _ := checkListBox_GetChecked.Call(obj, uintptr(Index))
    return DBoolToGoBool(ret)
}

func CheckListBox_SetChecked(obj uintptr, Index int32, value bool) {
   checkListBox_SetChecked.Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetItemEnabled(obj uintptr, Index int32) bool {
    ret, _, _ := checkListBox_GetItemEnabled.Call(obj, uintptr(Index))
    return DBoolToGoBool(ret)
}

func CheckListBox_SetItemEnabled(obj uintptr, Index int32, value bool) {
   checkListBox_SetItemEnabled.Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetState(obj uintptr, Index int32) TCheckBoxState {
    ret, _, _ := checkListBox_GetState.Call(obj, uintptr(Index))
    return TCheckBoxState(ret)
}

func CheckListBox_SetState(obj uintptr, Index int32, value TCheckBoxState) {
   checkListBox_SetState.Call(obj, uintptr(Index), uintptr(value))
}

func CheckListBox_GetHeader(obj uintptr, Index int32) bool {
    ret, _, _ := checkListBox_GetHeader.Call(obj, uintptr(Index))
    return DBoolToGoBool(ret)
}

func CheckListBox_SetHeader(obj uintptr, Index int32, value bool) {
   checkListBox_SetHeader.Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetSelected(obj uintptr, Index int32) bool {
    ret, _, _ := checkListBox_GetSelected.Call(obj, uintptr(Index))
    return DBoolToGoBool(ret)
}

func CheckListBox_SetSelected(obj uintptr, Index int32, value bool) {
   checkListBox_SetSelected.Call(obj, uintptr(Index), GoBoolToDBool(value))
}

func CheckListBox_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := checkListBox_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func CheckListBox_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := checkListBox_GetControls.Call(obj, uintptr(Index))
    return ret
}

func CheckListBox_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := checkListBox_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func CheckListBox_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := checkListBox_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func CheckListBox_StaticClassType() TClass {
    r, _, _:= checkListBox_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TGauge ---------------------------

func Gauge_Create(obj uintptr) uintptr {
    ret, _, _ := gauge_Create.Call(obj)
    return ret
}

func Gauge_Free(obj uintptr) {
    gauge_Free.Call(obj)
}

func Gauge_AddProgress(obj uintptr, Value int32)  {
    gauge_AddProgress.Call(obj, uintptr(Value) )
}

func Gauge_BringToFront(obj uintptr)  {
    gauge_BringToFront.Call(obj)
}

func Gauge_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    gauge_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    gauge_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_Dragging(obj uintptr) bool {
    ret, _, _ := gauge_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_HasParent(obj uintptr) bool {
    ret, _, _ := gauge_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_Hide(obj uintptr)  {
    gauge_Hide.Call(obj)
}

func Gauge_Invalidate(obj uintptr)  {
    gauge_Invalidate.Call(obj)
}

func Gauge_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := gauge_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Gauge_Refresh(obj uintptr)  {
    gauge_Refresh.Call(obj)
}

func Gauge_Repaint(obj uintptr)  {
    gauge_Repaint.Call(obj)
}

func Gauge_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    gauge_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    gauge_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_SendToBack(obj uintptr)  {
    gauge_SendToBack.Call(obj)
}

func Gauge_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    gauge_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Gauge_Show(obj uintptr)  {
    gauge_Show.Call(obj)
}

func Gauge_Update(obj uintptr)  {
    gauge_Update.Call(obj)
}

func Gauge_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := gauge_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Gauge_GetTextLen(obj uintptr) int32 {
    ret, _, _ := gauge_GetTextLen.Call(obj)
    return int32(ret)
}

func Gauge_SetTextBuf(obj uintptr, Buffer string)  {
    gauge_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Gauge_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := gauge_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Gauge_GetNamePath(obj uintptr) string {
    ret, _, _ := gauge_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Gauge_Assign(obj uintptr, Source uintptr)  {
    gauge_Assign.Call(obj, Source )
}

func Gauge_ClassType(obj uintptr) TClass {
    ret, _, _ := gauge_ClassType.Call(obj)
    return TClass(ret)
}

func Gauge_ClassName(obj uintptr) string {
    ret, _, _ := gauge_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Gauge_InstanceSize(obj uintptr) int32 {
    ret, _, _ := gauge_InstanceSize.Call(obj)
    return int32(ret)
}

func Gauge_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := gauge_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Gauge_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := gauge_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Gauge_GetHashCode(obj uintptr) int32 {
    ret, _, _ := gauge_GetHashCode.Call(obj)
    return int32(ret)
}

func Gauge_ToString(obj uintptr) string {
    ret, _, _ := gauge_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Gauge_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    gauge_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Gauge_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    gauge_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Gauge_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    gauge_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Gauge_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    gauge_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Gauge_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    gauge_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Gauge_AnchorClient(obj uintptr, ASpace int32)  {
    gauge_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Gauge_GetPercentDone(obj uintptr) int32 {
    ret, _, _ := gauge_GetPercentDone.Call(obj)
    return int32(ret)
}

func Gauge_GetAlign(obj uintptr) TAlign {
    ret, _, _ := gauge_GetAlign.Call(obj)
    return TAlign(ret)
}

func Gauge_SetAlign(obj uintptr, value TAlign) {
   gauge_SetAlign.Call(obj, uintptr(value))
}

func Gauge_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := gauge_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Gauge_SetAnchors(obj uintptr, value TAnchors) {
   gauge_SetAnchors.Call(obj, uintptr(value))
}

func Gauge_GetBackColor(obj uintptr) TColor {
    ret, _, _ := gauge_GetBackColor.Call(obj)
    return TColor(ret)
}

func Gauge_SetBackColor(obj uintptr, value TColor) {
   gauge_SetBackColor.Call(obj, uintptr(value))
}

func Gauge_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := gauge_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func Gauge_SetBorderStyle(obj uintptr, value TBorderStyle) {
   gauge_SetBorderStyle.Call(obj, uintptr(value))
}

func Gauge_GetColor(obj uintptr) TColor {
    ret, _, _ := gauge_GetColor.Call(obj)
    return TColor(ret)
}

func Gauge_SetColor(obj uintptr, value TColor) {
   gauge_SetColor.Call(obj, uintptr(value))
}

func Gauge_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := gauge_GetConstraints.Call(obj)
    return ret
}

func Gauge_SetConstraints(obj uintptr, value uintptr) {
   gauge_SetConstraints.Call(obj, value)
}

func Gauge_GetEnabled(obj uintptr) bool {
    ret, _, _ := gauge_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetEnabled(obj uintptr, value bool) {
   gauge_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetForeColor(obj uintptr) TColor {
    ret, _, _ := gauge_GetForeColor.Call(obj)
    return TColor(ret)
}

func Gauge_SetForeColor(obj uintptr, value TColor) {
   gauge_SetForeColor.Call(obj, uintptr(value))
}

func Gauge_GetFont(obj uintptr) uintptr {
    ret, _, _ := gauge_GetFont.Call(obj)
    return ret
}

func Gauge_SetFont(obj uintptr, value uintptr) {
   gauge_SetFont.Call(obj, value)
}

func Gauge_GetMinValue(obj uintptr) int32 {
    ret, _, _ := gauge_GetMinValue.Call(obj)
    return int32(ret)
}

func Gauge_SetMinValue(obj uintptr, value int32) {
   gauge_SetMinValue.Call(obj, uintptr(value))
}

func Gauge_GetMaxValue(obj uintptr) int32 {
    ret, _, _ := gauge_GetMaxValue.Call(obj)
    return int32(ret)
}

func Gauge_SetMaxValue(obj uintptr, value int32) {
   gauge_SetMaxValue.Call(obj, uintptr(value))
}

func Gauge_GetParentColor(obj uintptr) bool {
    ret, _, _ := gauge_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetParentColor(obj uintptr, value bool) {
   gauge_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetParentFont(obj uintptr) bool {
    ret, _, _ := gauge_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetParentFont(obj uintptr, value bool) {
   gauge_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := gauge_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetParentShowHint(obj uintptr, value bool) {
   gauge_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := gauge_GetPopupMenu.Call(obj)
    return ret
}

func Gauge_SetPopupMenu(obj uintptr, value uintptr) {
   gauge_SetPopupMenu.Call(obj, value)
}

func Gauge_GetProgress(obj uintptr) int32 {
    ret, _, _ := gauge_GetProgress.Call(obj)
    return int32(ret)
}

func Gauge_SetProgress(obj uintptr, value int32) {
   gauge_SetProgress.Call(obj, uintptr(value))
}

func Gauge_GetShowHint(obj uintptr) bool {
    ret, _, _ := gauge_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetShowHint(obj uintptr, value bool) {
   gauge_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetShowText(obj uintptr) bool {
    ret, _, _ := gauge_GetShowText.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetShowText(obj uintptr, value bool) {
   gauge_SetShowText.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetVisible(obj uintptr) bool {
    ret, _, _ := gauge_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_SetVisible(obj uintptr, value bool) {
   gauge_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Gauge_GetAction(obj uintptr) uintptr {
    ret, _, _ := gauge_GetAction.Call(obj)
    return ret
}

func Gauge_SetAction(obj uintptr, value uintptr) {
   gauge_SetAction.Call(obj, value)
}

func Gauge_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := gauge_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Gauge_SetBiDiMode(obj uintptr, value TBiDiMode) {
   gauge_SetBiDiMode.Call(obj, uintptr(value))
}

func Gauge_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    gauge_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_SetBoundsRect(obj uintptr, value TRect) {
   gauge_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Gauge_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := gauge_GetClientHeight.Call(obj)
    return int32(ret)
}

func Gauge_SetClientHeight(obj uintptr, value int32) {
   gauge_SetClientHeight.Call(obj, uintptr(value))
}

func Gauge_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    gauge_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_GetClientRect(obj uintptr) TRect {
    var ret TRect
    gauge_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Gauge_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := gauge_GetClientWidth.Call(obj)
    return int32(ret)
}

func Gauge_SetClientWidth(obj uintptr, value int32) {
   gauge_SetClientWidth.Call(obj, uintptr(value))
}

func Gauge_GetControlState(obj uintptr) TControlState {
    ret, _, _ := gauge_GetControlState.Call(obj)
    return TControlState(ret)
}

func Gauge_SetControlState(obj uintptr, value TControlState) {
   gauge_SetControlState.Call(obj, uintptr(value))
}

func Gauge_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := gauge_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Gauge_SetControlStyle(obj uintptr, value TControlStyle) {
   gauge_SetControlStyle.Call(obj, uintptr(value))
}

func Gauge_GetFloating(obj uintptr) bool {
    ret, _, _ := gauge_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Gauge_GetParent(obj uintptr) uintptr {
    ret, _, _ := gauge_GetParent.Call(obj)
    return ret
}

func Gauge_SetParent(obj uintptr, value uintptr) {
   gauge_SetParent.Call(obj, value)
}

func Gauge_GetLeft(obj uintptr) int32 {
    ret, _, _ := gauge_GetLeft.Call(obj)
    return int32(ret)
}

func Gauge_SetLeft(obj uintptr, value int32) {
   gauge_SetLeft.Call(obj, uintptr(value))
}

func Gauge_GetTop(obj uintptr) int32 {
    ret, _, _ := gauge_GetTop.Call(obj)
    return int32(ret)
}

func Gauge_SetTop(obj uintptr, value int32) {
   gauge_SetTop.Call(obj, uintptr(value))
}

func Gauge_GetWidth(obj uintptr) int32 {
    ret, _, _ := gauge_GetWidth.Call(obj)
    return int32(ret)
}

func Gauge_SetWidth(obj uintptr, value int32) {
   gauge_SetWidth.Call(obj, uintptr(value))
}

func Gauge_GetHeight(obj uintptr) int32 {
    ret, _, _ := gauge_GetHeight.Call(obj)
    return int32(ret)
}

func Gauge_SetHeight(obj uintptr, value int32) {
   gauge_SetHeight.Call(obj, uintptr(value))
}

func Gauge_GetCursor(obj uintptr) TCursor {
    ret, _, _ := gauge_GetCursor.Call(obj)
    return TCursor(ret)
}

func Gauge_SetCursor(obj uintptr, value TCursor) {
   gauge_SetCursor.Call(obj, uintptr(value))
}

func Gauge_GetHint(obj uintptr) string {
    ret, _, _ := gauge_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Gauge_SetHint(obj uintptr, value string) {
   gauge_SetHint.Call(obj, GoStrToDStr(value))
}

func Gauge_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := gauge_GetComponentCount.Call(obj)
    return int32(ret)
}

func Gauge_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := gauge_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Gauge_SetComponentIndex(obj uintptr, value int32) {
   gauge_SetComponentIndex.Call(obj, uintptr(value))
}

func Gauge_GetOwner(obj uintptr) uintptr {
    ret, _, _ := gauge_GetOwner.Call(obj)
    return ret
}

func Gauge_GetName(obj uintptr) string {
    ret, _, _ := gauge_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Gauge_SetName(obj uintptr, value string) {
   gauge_SetName.Call(obj, GoStrToDStr(value))
}

func Gauge_GetTag(obj uintptr) int {
    ret, _, _ := gauge_GetTag.Call(obj)
    return int(ret)
}

func Gauge_SetTag(obj uintptr, value int) {
   gauge_SetTag.Call(obj, uintptr(value))
}

func Gauge_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := gauge_GetAnchorSideLeft.Call(obj)
    return ret
}

func Gauge_SetAnchorSideLeft(obj uintptr, value uintptr) {
   gauge_SetAnchorSideLeft.Call(obj, value)
}

func Gauge_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := gauge_GetAnchorSideTop.Call(obj)
    return ret
}

func Gauge_SetAnchorSideTop(obj uintptr, value uintptr) {
   gauge_SetAnchorSideTop.Call(obj, value)
}

func Gauge_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := gauge_GetAnchorSideRight.Call(obj)
    return ret
}

func Gauge_SetAnchorSideRight(obj uintptr, value uintptr) {
   gauge_SetAnchorSideRight.Call(obj, value)
}

func Gauge_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := gauge_GetAnchorSideBottom.Call(obj)
    return ret
}

func Gauge_SetAnchorSideBottom(obj uintptr, value uintptr) {
   gauge_SetAnchorSideBottom.Call(obj, value)
}

func Gauge_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := gauge_GetBorderSpacing.Call(obj)
    return ret
}

func Gauge_SetBorderSpacing(obj uintptr, value uintptr) {
   gauge_SetBorderSpacing.Call(obj, value)
}

func Gauge_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := gauge_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Gauge_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := gauge_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Gauge_StaticClassType() TClass {
    r, _, _:= gauge_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TImageButton ---------------------------

func ImageButton_Create(obj uintptr) uintptr {
    ret, _, _ := imageButton_Create.Call(obj)
    return ret
}

func ImageButton_Free(obj uintptr) {
    imageButton_Free.Call(obj)
}

func ImageButton_Click(obj uintptr)  {
    imageButton_Click.Call(obj)
}

func ImageButton_BringToFront(obj uintptr)  {
    imageButton_BringToFront.Call(obj)
}

func ImageButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    imageButton_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    imageButton_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_Dragging(obj uintptr) bool {
    ret, _, _ := imageButton_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_HasParent(obj uintptr) bool {
    ret, _, _ := imageButton_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_Hide(obj uintptr)  {
    imageButton_Hide.Call(obj)
}

func ImageButton_Invalidate(obj uintptr)  {
    imageButton_Invalidate.Call(obj)
}

func ImageButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := imageButton_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ImageButton_Refresh(obj uintptr)  {
    imageButton_Refresh.Call(obj)
}

func ImageButton_Repaint(obj uintptr)  {
    imageButton_Repaint.Call(obj)
}

func ImageButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    imageButton_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    imageButton_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_SendToBack(obj uintptr)  {
    imageButton_SendToBack.Call(obj)
}

func ImageButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    imageButton_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ImageButton_Show(obj uintptr)  {
    imageButton_Show.Call(obj)
}

func ImageButton_Update(obj uintptr)  {
    imageButton_Update.Call(obj)
}

func ImageButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := imageButton_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ImageButton_GetTextLen(obj uintptr) int32 {
    ret, _, _ := imageButton_GetTextLen.Call(obj)
    return int32(ret)
}

func ImageButton_SetTextBuf(obj uintptr, Buffer string)  {
    imageButton_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ImageButton_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := imageButton_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ImageButton_GetNamePath(obj uintptr) string {
    ret, _, _ := imageButton_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_Assign(obj uintptr, Source uintptr)  {
    imageButton_Assign.Call(obj, Source )
}

func ImageButton_ClassType(obj uintptr) TClass {
    ret, _, _ := imageButton_ClassType.Call(obj)
    return TClass(ret)
}

func ImageButton_ClassName(obj uintptr) string {
    ret, _, _ := imageButton_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_InstanceSize(obj uintptr) int32 {
    ret, _, _ := imageButton_InstanceSize.Call(obj)
    return int32(ret)
}

func ImageButton_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := imageButton_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ImageButton_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := imageButton_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ImageButton_GetHashCode(obj uintptr) int32 {
    ret, _, _ := imageButton_GetHashCode.Call(obj)
    return int32(ret)
}

func ImageButton_ToString(obj uintptr) string {
    ret, _, _ := imageButton_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    imageButton_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ImageButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    imageButton_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ImageButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    imageButton_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ImageButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    imageButton_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ImageButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    imageButton_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ImageButton_AnchorClient(obj uintptr, ASpace int32)  {
    imageButton_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ImageButton_GetAction(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetAction.Call(obj)
    return ret
}

func ImageButton_SetAction(obj uintptr, value uintptr) {
   imageButton_SetAction.Call(obj, value)
}

func ImageButton_GetAlign(obj uintptr) TAlign {
    ret, _, _ := imageButton_GetAlign.Call(obj)
    return TAlign(ret)
}

func ImageButton_SetAlign(obj uintptr, value TAlign) {
   imageButton_SetAlign.Call(obj, uintptr(value))
}

func ImageButton_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := imageButton_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ImageButton_SetAnchors(obj uintptr, value TAnchors) {
   imageButton_SetAnchors.Call(obj, uintptr(value))
}

func ImageButton_GetAutoSize(obj uintptr) bool {
    ret, _, _ := imageButton_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetAutoSize(obj uintptr, value bool) {
   imageButton_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetConstraints.Call(obj)
    return ret
}

func ImageButton_SetConstraints(obj uintptr, value uintptr) {
   imageButton_SetConstraints.Call(obj, value)
}

func ImageButton_GetCaption(obj uintptr) string {
    ret, _, _ := imageButton_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_SetCaption(obj uintptr, value string) {
   imageButton_SetCaption.Call(obj, GoStrToDStr(value))
}

func ImageButton_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := imageButton_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ImageButton_SetDragCursor(obj uintptr, value TCursor) {
   imageButton_SetDragCursor.Call(obj, uintptr(value))
}

func ImageButton_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := imageButton_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ImageButton_SetDragKind(obj uintptr, value TDragKind) {
   imageButton_SetDragKind.Call(obj, uintptr(value))
}

func ImageButton_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := imageButton_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ImageButton_SetDragMode(obj uintptr, value TDragMode) {
   imageButton_SetDragMode.Call(obj, uintptr(value))
}

func ImageButton_GetEnabled(obj uintptr) bool {
    ret, _, _ := imageButton_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetEnabled(obj uintptr, value bool) {
   imageButton_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetFont(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetFont.Call(obj)
    return ret
}

func ImageButton_SetFont(obj uintptr, value uintptr) {
   imageButton_SetFont.Call(obj, value)
}

func ImageButton_GetImageCount(obj uintptr) int32 {
    ret, _, _ := imageButton_GetImageCount.Call(obj)
    return int32(ret)
}

func ImageButton_SetImageCount(obj uintptr, value int32) {
   imageButton_SetImageCount.Call(obj, uintptr(value))
}

func ImageButton_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := imageButton_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func ImageButton_SetModalResult(obj uintptr, value TModalResult) {
   imageButton_SetModalResult.Call(obj, uintptr(value))
}

func ImageButton_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := imageButton_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetParentShowHint(obj uintptr, value bool) {
   imageButton_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetParentFont(obj uintptr) bool {
    ret, _, _ := imageButton_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetParentFont(obj uintptr, value bool) {
   imageButton_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetPicture(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetPicture.Call(obj)
    return ret
}

func ImageButton_SetPicture(obj uintptr, value uintptr) {
   imageButton_SetPicture.Call(obj, value)
}

func ImageButton_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetPopupMenu.Call(obj)
    return ret
}

func ImageButton_SetPopupMenu(obj uintptr, value uintptr) {
   imageButton_SetPopupMenu.Call(obj, value)
}

func ImageButton_GetShowHint(obj uintptr) bool {
    ret, _, _ := imageButton_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetShowHint(obj uintptr, value bool) {
   imageButton_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetShowCaption(obj uintptr) bool {
    ret, _, _ := imageButton_GetShowCaption.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetShowCaption(obj uintptr, value bool) {
   imageButton_SetShowCaption.Call(obj, GoBoolToDBool(value))
}

func ImageButton_GetVisible(obj uintptr) bool {
    ret, _, _ := imageButton_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_SetVisible(obj uintptr, value bool) {
   imageButton_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ImageButton_SetOnClick(obj uintptr, fn interface{}) {
    imageButton_SetOnClick.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnContextPopup(obj uintptr, fn interface{}) {
    imageButton_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnDblClick(obj uintptr, fn interface{}) {
    imageButton_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnDragDrop(obj uintptr, fn interface{}) {
    imageButton_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnDragOver(obj uintptr, fn interface{}) {
    imageButton_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnEndDock(obj uintptr, fn interface{}) {
    imageButton_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnEndDrag(obj uintptr, fn interface{}) {
    imageButton_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnMouseDown(obj uintptr, fn interface{}) {
    imageButton_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
    imageButton_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
    imageButton_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnMouseMove(obj uintptr, fn interface{}) {
    imageButton_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ImageButton_SetOnMouseUp(obj uintptr, fn interface{}) {
    imageButton_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ImageButton_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := imageButton_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ImageButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
   imageButton_SetBiDiMode.Call(obj, uintptr(value))
}

func ImageButton_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    imageButton_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_SetBoundsRect(obj uintptr, value TRect) {
   imageButton_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ImageButton_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := imageButton_GetClientHeight.Call(obj)
    return int32(ret)
}

func ImageButton_SetClientHeight(obj uintptr, value int32) {
   imageButton_SetClientHeight.Call(obj, uintptr(value))
}

func ImageButton_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    imageButton_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_GetClientRect(obj uintptr) TRect {
    var ret TRect
    imageButton_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ImageButton_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := imageButton_GetClientWidth.Call(obj)
    return int32(ret)
}

func ImageButton_SetClientWidth(obj uintptr, value int32) {
   imageButton_SetClientWidth.Call(obj, uintptr(value))
}

func ImageButton_GetControlState(obj uintptr) TControlState {
    ret, _, _ := imageButton_GetControlState.Call(obj)
    return TControlState(ret)
}

func ImageButton_SetControlState(obj uintptr, value TControlState) {
   imageButton_SetControlState.Call(obj, uintptr(value))
}

func ImageButton_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := imageButton_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ImageButton_SetControlStyle(obj uintptr, value TControlStyle) {
   imageButton_SetControlStyle.Call(obj, uintptr(value))
}

func ImageButton_GetFloating(obj uintptr) bool {
    ret, _, _ := imageButton_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ImageButton_GetParent(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetParent.Call(obj)
    return ret
}

func ImageButton_SetParent(obj uintptr, value uintptr) {
   imageButton_SetParent.Call(obj, value)
}

func ImageButton_GetLeft(obj uintptr) int32 {
    ret, _, _ := imageButton_GetLeft.Call(obj)
    return int32(ret)
}

func ImageButton_SetLeft(obj uintptr, value int32) {
   imageButton_SetLeft.Call(obj, uintptr(value))
}

func ImageButton_GetTop(obj uintptr) int32 {
    ret, _, _ := imageButton_GetTop.Call(obj)
    return int32(ret)
}

func ImageButton_SetTop(obj uintptr, value int32) {
   imageButton_SetTop.Call(obj, uintptr(value))
}

func ImageButton_GetWidth(obj uintptr) int32 {
    ret, _, _ := imageButton_GetWidth.Call(obj)
    return int32(ret)
}

func ImageButton_SetWidth(obj uintptr, value int32) {
   imageButton_SetWidth.Call(obj, uintptr(value))
}

func ImageButton_GetHeight(obj uintptr) int32 {
    ret, _, _ := imageButton_GetHeight.Call(obj)
    return int32(ret)
}

func ImageButton_SetHeight(obj uintptr, value int32) {
   imageButton_SetHeight.Call(obj, uintptr(value))
}

func ImageButton_GetCursor(obj uintptr) TCursor {
    ret, _, _ := imageButton_GetCursor.Call(obj)
    return TCursor(ret)
}

func ImageButton_SetCursor(obj uintptr, value TCursor) {
   imageButton_SetCursor.Call(obj, uintptr(value))
}

func ImageButton_GetHint(obj uintptr) string {
    ret, _, _ := imageButton_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_SetHint(obj uintptr, value string) {
   imageButton_SetHint.Call(obj, GoStrToDStr(value))
}

func ImageButton_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := imageButton_GetComponentCount.Call(obj)
    return int32(ret)
}

func ImageButton_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := imageButton_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ImageButton_SetComponentIndex(obj uintptr, value int32) {
   imageButton_SetComponentIndex.Call(obj, uintptr(value))
}

func ImageButton_GetOwner(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetOwner.Call(obj)
    return ret
}

func ImageButton_GetName(obj uintptr) string {
    ret, _, _ := imageButton_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ImageButton_SetName(obj uintptr, value string) {
   imageButton_SetName.Call(obj, GoStrToDStr(value))
}

func ImageButton_GetTag(obj uintptr) int {
    ret, _, _ := imageButton_GetTag.Call(obj)
    return int(ret)
}

func ImageButton_SetTag(obj uintptr, value int) {
   imageButton_SetTag.Call(obj, uintptr(value))
}

func ImageButton_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetAnchorSideLeft.Call(obj)
    return ret
}

func ImageButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
   imageButton_SetAnchorSideLeft.Call(obj, value)
}

func ImageButton_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetAnchorSideTop.Call(obj)
    return ret
}

func ImageButton_SetAnchorSideTop(obj uintptr, value uintptr) {
   imageButton_SetAnchorSideTop.Call(obj, value)
}

func ImageButton_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetAnchorSideRight.Call(obj)
    return ret
}

func ImageButton_SetAnchorSideRight(obj uintptr, value uintptr) {
   imageButton_SetAnchorSideRight.Call(obj, value)
}

func ImageButton_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetAnchorSideBottom.Call(obj)
    return ret
}

func ImageButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
   imageButton_SetAnchorSideBottom.Call(obj, value)
}

func ImageButton_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := imageButton_GetBorderSpacing.Call(obj)
    return ret
}

func ImageButton_SetBorderSpacing(obj uintptr, value uintptr) {
   imageButton_SetBorderSpacing.Call(obj, value)
}

func ImageButton_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := imageButton_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ImageButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := imageButton_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ImageButton_StaticClassType() TClass {
    r, _, _:= imageButton_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TFindDialog ---------------------------

func FindDialog_Create(obj uintptr) uintptr {
    ret, _, _ := findDialog_Create.Call(obj)
    return ret
}

func FindDialog_Free(obj uintptr) {
    findDialog_Free.Call(obj)
}

func FindDialog_CloseDialog(obj uintptr)  {
    findDialog_CloseDialog.Call(obj)
}

func FindDialog_Execute(obj uintptr) bool {
    ret, _, _ := findDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func FindDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := findDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func FindDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := findDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func FindDialog_HasParent(obj uintptr) bool {
    ret, _, _ := findDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func FindDialog_Assign(obj uintptr, Source uintptr)  {
    findDialog_Assign.Call(obj, Source )
}

func FindDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := findDialog_ClassType.Call(obj)
    return TClass(ret)
}

func FindDialog_ClassName(obj uintptr) string {
    ret, _, _ := findDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func FindDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := findDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func FindDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := findDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func FindDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := findDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func FindDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := findDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func FindDialog_ToString(obj uintptr) string {
    ret, _, _ := findDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func FindDialog_GetLeft(obj uintptr) int32 {
    ret, _, _ := findDialog_GetLeft.Call(obj)
    return int32(ret)
}

func FindDialog_SetLeft(obj uintptr, value int32) {
   findDialog_SetLeft.Call(obj, uintptr(value))
}

func FindDialog_GetPosition(obj uintptr) TPoint {
    var ret TPoint
    findDialog_GetPosition.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FindDialog_SetPosition(obj uintptr, value TPoint) {
   findDialog_SetPosition.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func FindDialog_GetTop(obj uintptr) int32 {
    ret, _, _ := findDialog_GetTop.Call(obj)
    return int32(ret)
}

func FindDialog_SetTop(obj uintptr, value int32) {
   findDialog_SetTop.Call(obj, uintptr(value))
}

func FindDialog_GetFindText(obj uintptr) string {
    ret, _, _ := findDialog_GetFindText.Call(obj)
    return DStrToGoStr(ret)
}

func FindDialog_SetFindText(obj uintptr, value string) {
   findDialog_SetFindText.Call(obj, GoStrToDStr(value))
}

func FindDialog_GetOptions(obj uintptr) TFindOptions {
    ret, _, _ := findDialog_GetOptions.Call(obj)
    return TFindOptions(ret)
}

func FindDialog_SetOptions(obj uintptr, value TFindOptions) {
   findDialog_SetOptions.Call(obj, uintptr(value))
}

func FindDialog_SetOnFind(obj uintptr, fn interface{}) {
    findDialog_SetOnFind.Call(obj, addEventToMap(fn))
}

func FindDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := findDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func FindDialog_SetOnClose(obj uintptr, fn interface{}) {
    findDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func FindDialog_SetOnShow(obj uintptr, fn interface{}) {
    findDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func FindDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := findDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func FindDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := findDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func FindDialog_SetComponentIndex(obj uintptr, value int32) {
   findDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func FindDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := findDialog_GetOwner.Call(obj)
    return ret
}

func FindDialog_GetName(obj uintptr) string {
    ret, _, _ := findDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func FindDialog_SetName(obj uintptr, value string) {
   findDialog_SetName.Call(obj, GoStrToDStr(value))
}

func FindDialog_GetTag(obj uintptr) int {
    ret, _, _ := findDialog_GetTag.Call(obj)
    return int(ret)
}

func FindDialog_SetTag(obj uintptr, value int) {
   findDialog_SetTag.Call(obj, uintptr(value))
}

func FindDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := findDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func FindDialog_StaticClassType() TClass {
    r, _, _:= findDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TReplaceDialog ---------------------------

func ReplaceDialog_Create(obj uintptr) uintptr {
    ret, _, _ := replaceDialog_Create.Call(obj)
    return ret
}

func ReplaceDialog_Free(obj uintptr) {
    replaceDialog_Free.Call(obj)
}

func ReplaceDialog_CloseDialog(obj uintptr)  {
    replaceDialog_CloseDialog.Call(obj)
}

func ReplaceDialog_Execute(obj uintptr) bool {
    ret, _, _ := replaceDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func ReplaceDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := replaceDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ReplaceDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := replaceDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_HasParent(obj uintptr) bool {
    ret, _, _ := replaceDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ReplaceDialog_Assign(obj uintptr, Source uintptr)  {
    replaceDialog_Assign.Call(obj, Source )
}

func ReplaceDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := replaceDialog_ClassType.Call(obj)
    return TClass(ret)
}

func ReplaceDialog_ClassName(obj uintptr) string {
    ret, _, _ := replaceDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := replaceDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func ReplaceDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := replaceDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ReplaceDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := replaceDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ReplaceDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := replaceDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func ReplaceDialog_ToString(obj uintptr) string {
    ret, _, _ := replaceDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_GetReplaceText(obj uintptr) string {
    ret, _, _ := replaceDialog_GetReplaceText.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_SetReplaceText(obj uintptr, value string) {
   replaceDialog_SetReplaceText.Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_SetOnReplace(obj uintptr, fn interface{}) {
    replaceDialog_SetOnReplace.Call(obj, addEventToMap(fn))
}

func ReplaceDialog_GetLeft(obj uintptr) int32 {
    ret, _, _ := replaceDialog_GetLeft.Call(obj)
    return int32(ret)
}

func ReplaceDialog_SetLeft(obj uintptr, value int32) {
   replaceDialog_SetLeft.Call(obj, uintptr(value))
}

func ReplaceDialog_GetPosition(obj uintptr) TPoint {
    var ret TPoint
    replaceDialog_GetPosition.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ReplaceDialog_SetPosition(obj uintptr, value TPoint) {
   replaceDialog_SetPosition.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ReplaceDialog_GetTop(obj uintptr) int32 {
    ret, _, _ := replaceDialog_GetTop.Call(obj)
    return int32(ret)
}

func ReplaceDialog_SetTop(obj uintptr, value int32) {
   replaceDialog_SetTop.Call(obj, uintptr(value))
}

func ReplaceDialog_GetFindText(obj uintptr) string {
    ret, _, _ := replaceDialog_GetFindText.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_SetFindText(obj uintptr, value string) {
   replaceDialog_SetFindText.Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_GetOptions(obj uintptr) TFindOptions {
    ret, _, _ := replaceDialog_GetOptions.Call(obj)
    return TFindOptions(ret)
}

func ReplaceDialog_SetOptions(obj uintptr, value TFindOptions) {
   replaceDialog_SetOptions.Call(obj, uintptr(value))
}

func ReplaceDialog_SetOnFind(obj uintptr, fn interface{}) {
    replaceDialog_SetOnFind.Call(obj, addEventToMap(fn))
}

func ReplaceDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := replaceDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func ReplaceDialog_SetOnClose(obj uintptr, fn interface{}) {
    replaceDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func ReplaceDialog_SetOnShow(obj uintptr, fn interface{}) {
    replaceDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func ReplaceDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := replaceDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func ReplaceDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := replaceDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ReplaceDialog_SetComponentIndex(obj uintptr, value int32) {
   replaceDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func ReplaceDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := replaceDialog_GetOwner.Call(obj)
    return ret
}

func ReplaceDialog_GetName(obj uintptr) string {
    ret, _, _ := replaceDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ReplaceDialog_SetName(obj uintptr, value string) {
   replaceDialog_SetName.Call(obj, GoStrToDStr(value))
}

func ReplaceDialog_GetTag(obj uintptr) int {
    ret, _, _ := replaceDialog_GetTag.Call(obj)
    return int(ret)
}

func ReplaceDialog_SetTag(obj uintptr, value int) {
   replaceDialog_SetTag.Call(obj, uintptr(value))
}

func ReplaceDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := replaceDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ReplaceDialog_StaticClassType() TClass {
    r, _, _:= replaceDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPrinterSetupDialog ---------------------------

func PrinterSetupDialog_Create(obj uintptr) uintptr {
    ret, _, _ := printerSetupDialog_Create.Call(obj)
    return ret
}

func PrinterSetupDialog_Free(obj uintptr) {
    printerSetupDialog_Free.Call(obj)
}

func PrinterSetupDialog_Execute(obj uintptr) bool {
    ret, _, _ := printerSetupDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func PrinterSetupDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := printerSetupDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PrinterSetupDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := printerSetupDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PrinterSetupDialog_HasParent(obj uintptr) bool {
    ret, _, _ := printerSetupDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PrinterSetupDialog_Assign(obj uintptr, Source uintptr)  {
    printerSetupDialog_Assign.Call(obj, Source )
}

func PrinterSetupDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := printerSetupDialog_ClassType.Call(obj)
    return TClass(ret)
}

func PrinterSetupDialog_ClassName(obj uintptr) string {
    ret, _, _ := printerSetupDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PrinterSetupDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := printerSetupDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func PrinterSetupDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := printerSetupDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PrinterSetupDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := printerSetupDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PrinterSetupDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := printerSetupDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func PrinterSetupDialog_ToString(obj uintptr) string {
    ret, _, _ := printerSetupDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PrinterSetupDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := printerSetupDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func PrinterSetupDialog_SetOnClose(obj uintptr, fn interface{}) {
    printerSetupDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func PrinterSetupDialog_SetOnShow(obj uintptr, fn interface{}) {
    printerSetupDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func PrinterSetupDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := printerSetupDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func PrinterSetupDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := printerSetupDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PrinterSetupDialog_SetComponentIndex(obj uintptr, value int32) {
   printerSetupDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func PrinterSetupDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := printerSetupDialog_GetOwner.Call(obj)
    return ret
}

func PrinterSetupDialog_GetName(obj uintptr) string {
    ret, _, _ := printerSetupDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PrinterSetupDialog_SetName(obj uintptr, value string) {
   printerSetupDialog_SetName.Call(obj, GoStrToDStr(value))
}

func PrinterSetupDialog_GetTag(obj uintptr) int {
    ret, _, _ := printerSetupDialog_GetTag.Call(obj)
    return int(ret)
}

func PrinterSetupDialog_SetTag(obj uintptr, value int) {
   printerSetupDialog_SetTag.Call(obj, uintptr(value))
}

func PrinterSetupDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := printerSetupDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PrinterSetupDialog_StaticClassType() TClass {
    r, _, _:= printerSetupDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPageSetupDialog ---------------------------

func PageSetupDialog_Create(obj uintptr) uintptr {
    ret, _, _ := pageSetupDialog_Create.Call(obj)
    return ret
}

func PageSetupDialog_Free(obj uintptr) {
    pageSetupDialog_Free.Call(obj)
}

func PageSetupDialog_Execute(obj uintptr) bool {
    ret, _, _ := pageSetupDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func PageSetupDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := pageSetupDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func PageSetupDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := pageSetupDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func PageSetupDialog_HasParent(obj uintptr) bool {
    ret, _, _ := pageSetupDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func PageSetupDialog_Assign(obj uintptr, Source uintptr)  {
    pageSetupDialog_Assign.Call(obj, Source )
}

func PageSetupDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := pageSetupDialog_ClassType.Call(obj)
    return TClass(ret)
}

func PageSetupDialog_ClassName(obj uintptr) string {
    ret, _, _ := pageSetupDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func PageSetupDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func PageSetupDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := pageSetupDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func PageSetupDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := pageSetupDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func PageSetupDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func PageSetupDialog_ToString(obj uintptr) string {
    ret, _, _ := pageSetupDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func PageSetupDialog_GetMarginLeft(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetMarginLeft.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetMarginLeft(obj uintptr, value int32) {
   pageSetupDialog_SetMarginLeft.Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginTop(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetMarginTop.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetMarginTop(obj uintptr, value int32) {
   pageSetupDialog_SetMarginTop.Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginRight(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetMarginRight.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetMarginRight(obj uintptr, value int32) {
   pageSetupDialog_SetMarginRight.Call(obj, uintptr(value))
}

func PageSetupDialog_GetMarginBottom(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetMarginBottom.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetMarginBottom(obj uintptr, value int32) {
   pageSetupDialog_SetMarginBottom.Call(obj, uintptr(value))
}

func PageSetupDialog_GetOptions(obj uintptr) TPageSetupDialogOptions {
    ret, _, _ := pageSetupDialog_GetOptions.Call(obj)
    return TPageSetupDialogOptions(ret)
}

func PageSetupDialog_SetOptions(obj uintptr, value TPageSetupDialogOptions) {
   pageSetupDialog_SetOptions.Call(obj, uintptr(value))
}

func PageSetupDialog_GetPageWidth(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetPageWidth.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetPageWidth(obj uintptr, value int32) {
   pageSetupDialog_SetPageWidth.Call(obj, uintptr(value))
}

func PageSetupDialog_GetPageHeight(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetPageHeight.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetPageHeight(obj uintptr, value int32) {
   pageSetupDialog_SetPageHeight.Call(obj, uintptr(value))
}

func PageSetupDialog_GetUnits(obj uintptr) TPageMeasureUnits {
    ret, _, _ := pageSetupDialog_GetUnits.Call(obj)
    return TPageMeasureUnits(ret)
}

func PageSetupDialog_GetHandle(obj uintptr) HWND {
    ret, _, _ := pageSetupDialog_GetHandle.Call(obj)
    return HWND(ret)
}

func PageSetupDialog_SetOnClose(obj uintptr, fn interface{}) {
    pageSetupDialog_SetOnClose.Call(obj, addEventToMap(fn))
}

func PageSetupDialog_SetOnShow(obj uintptr, fn interface{}) {
    pageSetupDialog_SetOnShow.Call(obj, addEventToMap(fn))
}

func PageSetupDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func PageSetupDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := pageSetupDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func PageSetupDialog_SetComponentIndex(obj uintptr, value int32) {
   pageSetupDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func PageSetupDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := pageSetupDialog_GetOwner.Call(obj)
    return ret
}

func PageSetupDialog_GetName(obj uintptr) string {
    ret, _, _ := pageSetupDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func PageSetupDialog_SetName(obj uintptr, value string) {
   pageSetupDialog_SetName.Call(obj, GoStrToDStr(value))
}

func PageSetupDialog_GetTag(obj uintptr) int {
    ret, _, _ := pageSetupDialog_GetTag.Call(obj)
    return int(ret)
}

func PageSetupDialog_SetTag(obj uintptr, value int) {
   pageSetupDialog_SetTag.Call(obj, uintptr(value))
}

func PageSetupDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := pageSetupDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func PageSetupDialog_StaticClassType() TClass {
    r, _, _:= pageSetupDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TDragObject ---------------------------

func DragObject_Create(obj uintptr) uintptr {
    ret, _, _ := dragObject_Create.Call(obj)
    return ret
}

func DragObject_Free(obj uintptr) {
    dragObject_Free.Call(obj)
}

func DragObject_Assign(obj uintptr, Source uintptr)  {
    dragObject_Assign.Call(obj, Source )
}

func DragObject_HideDragImage(obj uintptr)  {
    dragObject_HideDragImage.Call(obj)
}

func DragObject_ShowDragImage(obj uintptr)  {
    dragObject_ShowDragImage.Call(obj)
}

func DragObject_ClassType(obj uintptr) TClass {
    ret, _, _ := dragObject_ClassType.Call(obj)
    return TClass(ret)
}

func DragObject_ClassName(obj uintptr) string {
    ret, _, _ := dragObject_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func DragObject_InstanceSize(obj uintptr) int32 {
    ret, _, _ := dragObject_InstanceSize.Call(obj)
    return int32(ret)
}

func DragObject_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := dragObject_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func DragObject_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := dragObject_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func DragObject_GetHashCode(obj uintptr) int32 {
    ret, _, _ := dragObject_GetHashCode.Call(obj)
    return int32(ret)
}

func DragObject_ToString(obj uintptr) string {
    ret, _, _ := dragObject_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func DragObject_GetAlwaysShowDragImages(obj uintptr) bool {
    ret, _, _ := dragObject_GetAlwaysShowDragImages.Call(obj)
    return DBoolToGoBool(ret)
}

func DragObject_SetAlwaysShowDragImages(obj uintptr, value bool) {
   dragObject_SetAlwaysShowDragImages.Call(obj, GoBoolToDBool(value))
}

func DragObject_GetDragPos(obj uintptr) TPoint {
    var ret TPoint
    dragObject_GetDragPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragObject_SetDragPos(obj uintptr, value TPoint) {
   dragObject_SetDragPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragObject_GetDragTarget(obj uintptr) uintptr {
    ret, _, _ := dragObject_GetDragTarget.Call(obj)
    return ret
}

func DragObject_SetDragTarget(obj uintptr, value uintptr) {
   dragObject_SetDragTarget.Call(obj, value)
}

func DragObject_GetDragTargetPos(obj uintptr) TPoint {
    var ret TPoint
    dragObject_GetDragTargetPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragObject_SetDragTargetPos(obj uintptr, value TPoint) {
   dragObject_SetDragTargetPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragObject_GetDropped(obj uintptr) bool {
    ret, _, _ := dragObject_GetDropped.Call(obj)
    return DBoolToGoBool(ret)
}

func DragObject_StaticClassType() TClass {
    r, _, _:= dragObject_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TDragDockObject ---------------------------

func DragDockObject_Create(obj uintptr) uintptr {
    ret, _, _ := dragDockObject_Create.Call(obj)
    return ret
}

func DragDockObject_Free(obj uintptr) {
    dragDockObject_Free.Call(obj)
}

func DragDockObject_Assign(obj uintptr, Source uintptr)  {
    dragDockObject_Assign.Call(obj, Source )
}

func DragDockObject_HideDragImage(obj uintptr)  {
    dragDockObject_HideDragImage.Call(obj)
}

func DragDockObject_ShowDragImage(obj uintptr)  {
    dragDockObject_ShowDragImage.Call(obj)
}

func DragDockObject_ClassType(obj uintptr) TClass {
    ret, _, _ := dragDockObject_ClassType.Call(obj)
    return TClass(ret)
}

func DragDockObject_ClassName(obj uintptr) string {
    ret, _, _ := dragDockObject_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func DragDockObject_InstanceSize(obj uintptr) int32 {
    ret, _, _ := dragDockObject_InstanceSize.Call(obj)
    return int32(ret)
}

func DragDockObject_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := dragDockObject_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func DragDockObject_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := dragDockObject_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func DragDockObject_GetHashCode(obj uintptr) int32 {
    ret, _, _ := dragDockObject_GetHashCode.Call(obj)
    return int32(ret)
}

func DragDockObject_ToString(obj uintptr) string {
    ret, _, _ := dragDockObject_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func DragDockObject_GetDockRect(obj uintptr) TRect {
    var ret TRect
    dragDockObject_GetDockRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragDockObject_SetDockRect(obj uintptr, value TRect) {
   dragDockObject_SetDockRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDropAlign(obj uintptr) TAlign {
    ret, _, _ := dragDockObject_GetDropAlign.Call(obj)
    return TAlign(ret)
}

func DragDockObject_GetDropOnControl(obj uintptr) uintptr {
    ret, _, _ := dragDockObject_GetDropOnControl.Call(obj)
    return ret
}

func DragDockObject_GetEraseDockRect(obj uintptr) TRect {
    var ret TRect
    dragDockObject_GetEraseDockRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragDockObject_SetEraseDockRect(obj uintptr, value TRect) {
   dragDockObject_SetEraseDockRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetFloating(obj uintptr) bool {
    ret, _, _ := dragDockObject_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func DragDockObject_SetFloating(obj uintptr, value bool) {
   dragDockObject_SetFloating.Call(obj, GoBoolToDBool(value))
}

func DragDockObject_GetControl(obj uintptr) uintptr {
    ret, _, _ := dragDockObject_GetControl.Call(obj)
    return ret
}

func DragDockObject_SetControl(obj uintptr, value uintptr) {
   dragDockObject_SetControl.Call(obj, value)
}

func DragDockObject_GetAlwaysShowDragImages(obj uintptr) bool {
    ret, _, _ := dragDockObject_GetAlwaysShowDragImages.Call(obj)
    return DBoolToGoBool(ret)
}

func DragDockObject_SetAlwaysShowDragImages(obj uintptr, value bool) {
   dragDockObject_SetAlwaysShowDragImages.Call(obj, GoBoolToDBool(value))
}

func DragDockObject_GetDragPos(obj uintptr) TPoint {
    var ret TPoint
    dragDockObject_GetDragPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragDockObject_SetDragPos(obj uintptr, value TPoint) {
   dragDockObject_SetDragPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDragTarget(obj uintptr) uintptr {
    ret, _, _ := dragDockObject_GetDragTarget.Call(obj)
    return ret
}

func DragDockObject_SetDragTarget(obj uintptr, value uintptr) {
   dragDockObject_SetDragTarget.Call(obj, value)
}

func DragDockObject_GetDragTargetPos(obj uintptr) TPoint {
    var ret TPoint
    dragDockObject_GetDragTargetPos.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DragDockObject_SetDragTargetPos(obj uintptr, value TPoint) {
   dragDockObject_SetDragTargetPos.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DragDockObject_GetDropped(obj uintptr) bool {
    ret, _, _ := dragDockObject_GetDropped.Call(obj)
    return DBoolToGoBool(ret)
}

func DragDockObject_StaticClassType() TClass {
    r, _, _:= dragDockObject_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TStringGrid ---------------------------

func StringGrid_Create(obj uintptr) uintptr {
    ret, _, _ := stringGrid_Create.Call(obj)
    return ret
}

func StringGrid_Free(obj uintptr) {
    stringGrid_Free.Call(obj)
}

func StringGrid_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
    var ret TRect
    stringGrid_CellRect.Call(obj, uintptr(ACol) , uintptr(ARow) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_MouseToCell(obj uintptr, X int32, Y int32, ACol *int32, ARow *int32)  {
    stringGrid_MouseToCell.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(ACol)), uintptr(unsafe.Pointer(ARow)))
}

func StringGrid_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
    var ret TGridCoord
    stringGrid_MouseCoord.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_CanFocus(obj uintptr) bool {
    ret, _, _ := stringGrid_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := stringGrid_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func StringGrid_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := stringGrid_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func StringGrid_DisableAlign(obj uintptr)  {
    stringGrid_DisableAlign.Call(obj)
}

func StringGrid_EnableAlign(obj uintptr)  {
    stringGrid_EnableAlign.Call(obj)
}

func StringGrid_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := stringGrid_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func StringGrid_FlipChildren(obj uintptr, AllLevels bool)  {
    stringGrid_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func StringGrid_Focused(obj uintptr) bool {
    ret, _, _ := stringGrid_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_HandleAllocated(obj uintptr) bool {
    ret, _, _ := stringGrid_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_InsertControl(obj uintptr, AControl uintptr)  {
    stringGrid_InsertControl.Call(obj, AControl )
}

func StringGrid_Invalidate(obj uintptr)  {
    stringGrid_Invalidate.Call(obj)
}

func StringGrid_RemoveControl(obj uintptr, AControl uintptr)  {
    stringGrid_RemoveControl.Call(obj, AControl )
}

func StringGrid_Realign(obj uintptr)  {
    stringGrid_Realign.Call(obj)
}

func StringGrid_Repaint(obj uintptr)  {
    stringGrid_Repaint.Call(obj)
}

func StringGrid_ScaleBy(obj uintptr, M int32, D int32)  {
    stringGrid_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func StringGrid_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    stringGrid_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func StringGrid_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    stringGrid_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func StringGrid_SetFocus(obj uintptr)  {
    stringGrid_SetFocus.Call(obj)
}

func StringGrid_Update(obj uintptr)  {
    stringGrid_Update.Call(obj)
}

func StringGrid_BringToFront(obj uintptr)  {
    stringGrid_BringToFront.Call(obj)
}

func StringGrid_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    stringGrid_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    stringGrid_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_Dragging(obj uintptr) bool {
    ret, _, _ := stringGrid_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_HasParent(obj uintptr) bool {
    ret, _, _ := stringGrid_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_Hide(obj uintptr)  {
    stringGrid_Hide.Call(obj)
}

func StringGrid_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := stringGrid_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func StringGrid_Refresh(obj uintptr)  {
    stringGrid_Refresh.Call(obj)
}

func StringGrid_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    stringGrid_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    stringGrid_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_SendToBack(obj uintptr)  {
    stringGrid_SendToBack.Call(obj)
}

func StringGrid_Show(obj uintptr)  {
    stringGrid_Show.Call(obj)
}

func StringGrid_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := stringGrid_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func StringGrid_GetTextLen(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetTextLen.Call(obj)
    return int32(ret)
}

func StringGrid_SetTextBuf(obj uintptr, Buffer string)  {
    stringGrid_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func StringGrid_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := stringGrid_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func StringGrid_GetNamePath(obj uintptr) string {
    ret, _, _ := stringGrid_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func StringGrid_Assign(obj uintptr, Source uintptr)  {
    stringGrid_Assign.Call(obj, Source )
}

func StringGrid_ClassType(obj uintptr) TClass {
    ret, _, _ := stringGrid_ClassType.Call(obj)
    return TClass(ret)
}

func StringGrid_ClassName(obj uintptr) string {
    ret, _, _ := stringGrid_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func StringGrid_InstanceSize(obj uintptr) int32 {
    ret, _, _ := stringGrid_InstanceSize.Call(obj)
    return int32(ret)
}

func StringGrid_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := stringGrid_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func StringGrid_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := stringGrid_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func StringGrid_GetHashCode(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetHashCode.Call(obj)
    return int32(ret)
}

func StringGrid_ToString(obj uintptr) string {
    ret, _, _ := stringGrid_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func StringGrid_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    stringGrid_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StringGrid_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    stringGrid_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func StringGrid_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    stringGrid_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func StringGrid_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    stringGrid_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func StringGrid_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    stringGrid_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func StringGrid_AnchorClient(obj uintptr, ASpace int32)  {
    stringGrid_AnchorClient.Call(obj, uintptr(ASpace) )
}

func StringGrid_GetAlign(obj uintptr) TAlign {
    ret, _, _ := stringGrid_GetAlign.Call(obj)
    return TAlign(ret)
}

func StringGrid_SetAlign(obj uintptr, value TAlign) {
   stringGrid_SetAlign.Call(obj, uintptr(value))
}

func StringGrid_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := stringGrid_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func StringGrid_SetAnchors(obj uintptr, value TAnchors) {
   stringGrid_SetAnchors.Call(obj, uintptr(value))
}

func StringGrid_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := stringGrid_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func StringGrid_SetBiDiMode(obj uintptr, value TBiDiMode) {
   stringGrid_SetBiDiMode.Call(obj, uintptr(value))
}

func StringGrid_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := stringGrid_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func StringGrid_SetBorderStyle(obj uintptr, value TBorderStyle) {
   stringGrid_SetBorderStyle.Call(obj, uintptr(value))
}

func StringGrid_GetColor(obj uintptr) TColor {
    ret, _, _ := stringGrid_GetColor.Call(obj)
    return TColor(ret)
}

func StringGrid_SetColor(obj uintptr, value TColor) {
   stringGrid_SetColor.Call(obj, uintptr(value))
}

func StringGrid_GetColCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetColCount.Call(obj)
    return int32(ret)
}

func StringGrid_SetColCount(obj uintptr, value int32) {
   stringGrid_SetColCount.Call(obj, uintptr(value))
}

func StringGrid_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetConstraints.Call(obj)
    return ret
}

func StringGrid_SetConstraints(obj uintptr, value uintptr) {
   stringGrid_SetConstraints.Call(obj, value)
}

func StringGrid_GetDefaultColWidth(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetDefaultColWidth.Call(obj)
    return int32(ret)
}

func StringGrid_SetDefaultColWidth(obj uintptr, value int32) {
   stringGrid_SetDefaultColWidth.Call(obj, uintptr(value))
}

func StringGrid_GetDefaultRowHeight(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetDefaultRowHeight.Call(obj)
    return int32(ret)
}

func StringGrid_SetDefaultRowHeight(obj uintptr, value int32) {
   stringGrid_SetDefaultRowHeight.Call(obj, uintptr(value))
}

func StringGrid_GetDefaultDrawing(obj uintptr) bool {
    ret, _, _ := stringGrid_GetDefaultDrawing.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetDefaultDrawing(obj uintptr, value bool) {
   stringGrid_SetDefaultDrawing.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := stringGrid_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetDoubleBuffered(obj uintptr, value bool) {
   stringGrid_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := stringGrid_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func StringGrid_SetDragCursor(obj uintptr, value TCursor) {
   stringGrid_SetDragCursor.Call(obj, uintptr(value))
}

func StringGrid_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := stringGrid_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func StringGrid_SetDragKind(obj uintptr, value TDragKind) {
   stringGrid_SetDragKind.Call(obj, uintptr(value))
}

func StringGrid_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := stringGrid_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func StringGrid_SetDragMode(obj uintptr, value TDragMode) {
   stringGrid_SetDragMode.Call(obj, uintptr(value))
}

func StringGrid_GetEnabled(obj uintptr) bool {
    ret, _, _ := stringGrid_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetEnabled(obj uintptr, value bool) {
   stringGrid_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetFixedColor(obj uintptr) TColor {
    ret, _, _ := stringGrid_GetFixedColor.Call(obj)
    return TColor(ret)
}

func StringGrid_SetFixedColor(obj uintptr, value TColor) {
   stringGrid_SetFixedColor.Call(obj, uintptr(value))
}

func StringGrid_GetFixedCols(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetFixedCols.Call(obj)
    return int32(ret)
}

func StringGrid_SetFixedCols(obj uintptr, value int32) {
   stringGrid_SetFixedCols.Call(obj, uintptr(value))
}

func StringGrid_GetRowCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetRowCount.Call(obj)
    return int32(ret)
}

func StringGrid_SetRowCount(obj uintptr, value int32) {
   stringGrid_SetRowCount.Call(obj, uintptr(value))
}

func StringGrid_GetFixedRows(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetFixedRows.Call(obj)
    return int32(ret)
}

func StringGrid_SetFixedRows(obj uintptr, value int32) {
   stringGrid_SetFixedRows.Call(obj, uintptr(value))
}

func StringGrid_GetFont(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetFont.Call(obj)
    return ret
}

func StringGrid_SetFont(obj uintptr, value uintptr) {
   stringGrid_SetFont.Call(obj, value)
}

func StringGrid_GetGridLineWidth(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetGridLineWidth.Call(obj)
    return int32(ret)
}

func StringGrid_SetGridLineWidth(obj uintptr, value int32) {
   stringGrid_SetGridLineWidth.Call(obj, uintptr(value))
}

func StringGrid_GetOptions(obj uintptr) TGridOptions {
    ret, _, _ := stringGrid_GetOptions.Call(obj)
    return TGridOptions(ret)
}

func StringGrid_SetOptions(obj uintptr, value TGridOptions) {
   stringGrid_SetOptions.Call(obj, uintptr(value))
}

func StringGrid_GetParentColor(obj uintptr) bool {
    ret, _, _ := stringGrid_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetParentColor(obj uintptr, value bool) {
   stringGrid_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := stringGrid_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetParentDoubleBuffered(obj uintptr, value bool) {
   stringGrid_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentFont(obj uintptr) bool {
    ret, _, _ := stringGrid_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetParentFont(obj uintptr, value bool) {
   stringGrid_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := stringGrid_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetParentShowHint(obj uintptr, value bool) {
   stringGrid_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetPopupMenu.Call(obj)
    return ret
}

func StringGrid_SetPopupMenu(obj uintptr, value uintptr) {
   stringGrid_SetPopupMenu.Call(obj, value)
}

func StringGrid_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := stringGrid_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func StringGrid_SetScrollBars(obj uintptr, value TScrollStyle) {
   stringGrid_SetScrollBars.Call(obj, uintptr(value))
}

func StringGrid_GetShowHint(obj uintptr) bool {
    ret, _, _ := stringGrid_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetShowHint(obj uintptr, value bool) {
   stringGrid_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := stringGrid_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func StringGrid_SetTabOrder(obj uintptr, value TTabOrder) {
   stringGrid_SetTabOrder.Call(obj, uintptr(value))
}

func StringGrid_GetVisible(obj uintptr) bool {
    ret, _, _ := stringGrid_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetVisible(obj uintptr, value bool) {
   stringGrid_SetVisible.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetVisibleColCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetVisibleColCount.Call(obj)
    return int32(ret)
}

func StringGrid_GetVisibleRowCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetVisibleRowCount.Call(obj)
    return int32(ret)
}

func StringGrid_SetOnClick(obj uintptr, fn interface{}) {
    stringGrid_SetOnClick.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnColumnMoved(obj uintptr, fn interface{}) {
    stringGrid_SetOnColumnMoved.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnContextPopup(obj uintptr, fn interface{}) {
    stringGrid_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnDblClick(obj uintptr, fn interface{}) {
    stringGrid_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnDragDrop(obj uintptr, fn interface{}) {
    stringGrid_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnDragOver(obj uintptr, fn interface{}) {
    stringGrid_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnDrawCell(obj uintptr, fn interface{}) {
    stringGrid_SetOnDrawCell.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnEndDock(obj uintptr, fn interface{}) {
    stringGrid_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnEndDrag(obj uintptr, fn interface{}) {
    stringGrid_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnEnter(obj uintptr, fn interface{}) {
    stringGrid_SetOnEnter.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnExit(obj uintptr, fn interface{}) {
    stringGrid_SetOnExit.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnGetEditMask(obj uintptr, fn interface{}) {
    stringGrid_SetOnGetEditMask.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnGetEditText(obj uintptr, fn interface{}) {
    stringGrid_SetOnGetEditText.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnKeyDown(obj uintptr, fn interface{}) {
    stringGrid_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnKeyPress(obj uintptr, fn interface{}) {
    stringGrid_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnKeyUp(obj uintptr, fn interface{}) {
    stringGrid_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseDown(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseEnter(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseLeave(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseMove(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseUp(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    stringGrid_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnRowMoved(obj uintptr, fn interface{}) {
    stringGrid_SetOnRowMoved.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnSelectCell(obj uintptr, fn interface{}) {
    stringGrid_SetOnSelectCell.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnSetEditText(obj uintptr, fn interface{}) {
    stringGrid_SetOnSetEditText.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnStartDock(obj uintptr, fn interface{}) {
    stringGrid_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func StringGrid_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
    stringGrid_SetOnTopLeftChanged.Call(obj, addEventToMap(fn))
}

func StringGrid_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetCanvas.Call(obj)
    return ret
}

func StringGrid_GetCol(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetCol.Call(obj)
    return int32(ret)
}

func StringGrid_SetCol(obj uintptr, value int32) {
   stringGrid_SetCol.Call(obj, uintptr(value))
}

func StringGrid_GetEditorMode(obj uintptr) bool {
    ret, _, _ := stringGrid_GetEditorMode.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetEditorMode(obj uintptr, value bool) {
   stringGrid_SetEditorMode.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetGridHeight(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetGridHeight.Call(obj)
    return int32(ret)
}

func StringGrid_GetGridWidth(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetGridWidth.Call(obj)
    return int32(ret)
}

func StringGrid_GetLeftCol(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetLeftCol.Call(obj)
    return int32(ret)
}

func StringGrid_SetLeftCol(obj uintptr, value int32) {
   stringGrid_SetLeftCol.Call(obj, uintptr(value))
}

func StringGrid_GetSelection(obj uintptr) TGridRect {
    var ret TGridRect
    stringGrid_GetSelection.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_SetSelection(obj uintptr, value TGridRect) {
   stringGrid_SetSelection.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StringGrid_GetRow(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetRow.Call(obj)
    return int32(ret)
}

func StringGrid_SetRow(obj uintptr, value int32) {
   stringGrid_SetRow.Call(obj, uintptr(value))
}

func StringGrid_GetTopRow(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetTopRow.Call(obj)
    return int32(ret)
}

func StringGrid_SetTopRow(obj uintptr, value int32) {
   stringGrid_SetTopRow.Call(obj, uintptr(value))
}

func StringGrid_GetTabStop(obj uintptr) bool {
    ret, _, _ := stringGrid_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetTabStop(obj uintptr, value bool) {
   stringGrid_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetDockClientCount.Call(obj)
    return int32(ret)
}

func StringGrid_GetDockSite(obj uintptr) bool {
    ret, _, _ := stringGrid_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetDockSite(obj uintptr, value bool) {
   stringGrid_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := stringGrid_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func StringGrid_GetBrush(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetBrush.Call(obj)
    return ret
}

func StringGrid_GetControlCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetControlCount.Call(obj)
    return int32(ret)
}

func StringGrid_GetHandle(obj uintptr) HWND {
    ret, _, _ := stringGrid_GetHandle.Call(obj)
    return HWND(ret)
}

func StringGrid_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := stringGrid_GetParentWindow.Call(obj)
    return HWND(ret)
}

func StringGrid_SetParentWindow(obj uintptr, value HWND) {
   stringGrid_SetParentWindow.Call(obj, uintptr(value))
}

func StringGrid_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := stringGrid_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_SetUseDockManager(obj uintptr, value bool) {
   stringGrid_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func StringGrid_GetAction(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetAction.Call(obj)
    return ret
}

func StringGrid_SetAction(obj uintptr, value uintptr) {
   stringGrid_SetAction.Call(obj, value)
}

func StringGrid_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    stringGrid_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_SetBoundsRect(obj uintptr, value TRect) {
   stringGrid_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func StringGrid_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetClientHeight.Call(obj)
    return int32(ret)
}

func StringGrid_SetClientHeight(obj uintptr, value int32) {
   stringGrid_SetClientHeight.Call(obj, uintptr(value))
}

func StringGrid_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    stringGrid_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_GetClientRect(obj uintptr) TRect {
    var ret TRect
    stringGrid_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func StringGrid_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetClientWidth.Call(obj)
    return int32(ret)
}

func StringGrid_SetClientWidth(obj uintptr, value int32) {
   stringGrid_SetClientWidth.Call(obj, uintptr(value))
}

func StringGrid_GetControlState(obj uintptr) TControlState {
    ret, _, _ := stringGrid_GetControlState.Call(obj)
    return TControlState(ret)
}

func StringGrid_SetControlState(obj uintptr, value TControlState) {
   stringGrid_SetControlState.Call(obj, uintptr(value))
}

func StringGrid_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := stringGrid_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func StringGrid_SetControlStyle(obj uintptr, value TControlStyle) {
   stringGrid_SetControlStyle.Call(obj, uintptr(value))
}

func StringGrid_GetFloating(obj uintptr) bool {
    ret, _, _ := stringGrid_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func StringGrid_GetParent(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetParent.Call(obj)
    return ret
}

func StringGrid_SetParent(obj uintptr, value uintptr) {
   stringGrid_SetParent.Call(obj, value)
}

func StringGrid_GetLeft(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetLeft.Call(obj)
    return int32(ret)
}

func StringGrid_SetLeft(obj uintptr, value int32) {
   stringGrid_SetLeft.Call(obj, uintptr(value))
}

func StringGrid_GetTop(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetTop.Call(obj)
    return int32(ret)
}

func StringGrid_SetTop(obj uintptr, value int32) {
   stringGrid_SetTop.Call(obj, uintptr(value))
}

func StringGrid_GetWidth(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetWidth.Call(obj)
    return int32(ret)
}

func StringGrid_SetWidth(obj uintptr, value int32) {
   stringGrid_SetWidth.Call(obj, uintptr(value))
}

func StringGrid_GetHeight(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetHeight.Call(obj)
    return int32(ret)
}

func StringGrid_SetHeight(obj uintptr, value int32) {
   stringGrid_SetHeight.Call(obj, uintptr(value))
}

func StringGrid_GetCursor(obj uintptr) TCursor {
    ret, _, _ := stringGrid_GetCursor.Call(obj)
    return TCursor(ret)
}

func StringGrid_SetCursor(obj uintptr, value TCursor) {
   stringGrid_SetCursor.Call(obj, uintptr(value))
}

func StringGrid_GetHint(obj uintptr) string {
    ret, _, _ := stringGrid_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func StringGrid_SetHint(obj uintptr, value string) {
   stringGrid_SetHint.Call(obj, GoStrToDStr(value))
}

func StringGrid_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetComponentCount.Call(obj)
    return int32(ret)
}

func StringGrid_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := stringGrid_GetComponentIndex.Call(obj)
    return int32(ret)
}

func StringGrid_SetComponentIndex(obj uintptr, value int32) {
   stringGrid_SetComponentIndex.Call(obj, uintptr(value))
}

func StringGrid_GetOwner(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetOwner.Call(obj)
    return ret
}

func StringGrid_GetName(obj uintptr) string {
    ret, _, _ := stringGrid_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func StringGrid_SetName(obj uintptr, value string) {
   stringGrid_SetName.Call(obj, GoStrToDStr(value))
}

func StringGrid_GetTag(obj uintptr) int {
    ret, _, _ := stringGrid_GetTag.Call(obj)
    return int(ret)
}

func StringGrid_SetTag(obj uintptr, value int) {
   stringGrid_SetTag.Call(obj, uintptr(value))
}

func StringGrid_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetAnchorSideLeft.Call(obj)
    return ret
}

func StringGrid_SetAnchorSideLeft(obj uintptr, value uintptr) {
   stringGrid_SetAnchorSideLeft.Call(obj, value)
}

func StringGrid_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetAnchorSideTop.Call(obj)
    return ret
}

func StringGrid_SetAnchorSideTop(obj uintptr, value uintptr) {
   stringGrid_SetAnchorSideTop.Call(obj, value)
}

func StringGrid_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetAnchorSideRight.Call(obj)
    return ret
}

func StringGrid_SetAnchorSideRight(obj uintptr, value uintptr) {
   stringGrid_SetAnchorSideRight.Call(obj, value)
}

func StringGrid_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetAnchorSideBottom.Call(obj)
    return ret
}

func StringGrid_SetAnchorSideBottom(obj uintptr, value uintptr) {
   stringGrid_SetAnchorSideBottom.Call(obj, value)
}

func StringGrid_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetChildSizing.Call(obj)
    return ret
}

func StringGrid_SetChildSizing(obj uintptr, value uintptr) {
   stringGrid_SetChildSizing.Call(obj, value)
}

func StringGrid_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := stringGrid_GetBorderSpacing.Call(obj)
    return ret
}

func StringGrid_SetBorderSpacing(obj uintptr, value uintptr) {
   stringGrid_SetBorderSpacing.Call(obj, value)
}

func StringGrid_GetCells(obj uintptr, ACol int32, ARow int32) string {
    ret, _, _ := stringGrid_GetCells.Call(obj, uintptr(ACol), uintptr(ARow))
    return DStrToGoStr(ret)
}

func StringGrid_SetCells(obj uintptr, ACol int32, ARow int32, value string) {
   stringGrid_SetCells.Call(obj, uintptr(ACol), uintptr(ARow), GoStrToDStr(value))
}

func StringGrid_GetCols(obj uintptr, Index int32) uintptr {
    ret, _, _ := stringGrid_GetCols.Call(obj, uintptr(Index))
    return ret
}

func StringGrid_SetCols(obj uintptr, Index int32, value uintptr) {
   stringGrid_SetCols.Call(obj, uintptr(Index), value)
}

func StringGrid_GetObjects(obj uintptr, ACol int32, ARow int32) uintptr {
    ret, _, _ := stringGrid_GetObjects.Call(obj, uintptr(ACol), uintptr(ARow))
    return ret
}

func StringGrid_SetObjects(obj uintptr, ACol int32, ARow int32, value uintptr) {
   stringGrid_SetObjects.Call(obj, uintptr(ACol), uintptr(ARow), value)
}

func StringGrid_GetRows(obj uintptr, Index int32) uintptr {
    ret, _, _ := stringGrid_GetRows.Call(obj, uintptr(Index))
    return ret
}

func StringGrid_SetRows(obj uintptr, Index int32, value uintptr) {
   stringGrid_SetRows.Call(obj, uintptr(Index), value)
}

func StringGrid_GetColWidths(obj uintptr, Index int32) int32 {
    ret, _, _ := stringGrid_GetColWidths.Call(obj, uintptr(Index))
    return int32(ret)
}

func StringGrid_SetColWidths(obj uintptr, Index int32, value int32) {
   stringGrid_SetColWidths.Call(obj, uintptr(Index), uintptr(value))
}

func StringGrid_GetRowHeights(obj uintptr, Index int32) int32 {
    ret, _, _ := stringGrid_GetRowHeights.Call(obj, uintptr(Index))
    return int32(ret)
}

func StringGrid_SetRowHeights(obj uintptr, Index int32, value int32) {
   stringGrid_SetRowHeights.Call(obj, uintptr(Index), uintptr(value))
}

func StringGrid_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := stringGrid_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func StringGrid_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := stringGrid_GetControls.Call(obj, uintptr(Index))
    return ret
}

func StringGrid_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := stringGrid_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func StringGrid_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := stringGrid_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func StringGrid_StaticClassType() TClass {
    r, _, _:= stringGrid_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TDrawGrid ---------------------------

func DrawGrid_Create(obj uintptr) uintptr {
    ret, _, _ := drawGrid_Create.Call(obj)
    return ret
}

func DrawGrid_Free(obj uintptr) {
    drawGrid_Free.Call(obj)
}

func DrawGrid_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
    var ret TRect
    drawGrid_CellRect.Call(obj, uintptr(ACol) , uintptr(ARow) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_MouseToCell(obj uintptr, X int32, Y int32, ACol *int32, ARow *int32)  {
    drawGrid_MouseToCell.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(ACol)), uintptr(unsafe.Pointer(ARow)))
}

func DrawGrid_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
    var ret TGridCoord
    drawGrid_MouseCoord.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_CanFocus(obj uintptr) bool {
    ret, _, _ := drawGrid_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := drawGrid_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func DrawGrid_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := drawGrid_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func DrawGrid_DisableAlign(obj uintptr)  {
    drawGrid_DisableAlign.Call(obj)
}

func DrawGrid_EnableAlign(obj uintptr)  {
    drawGrid_EnableAlign.Call(obj)
}

func DrawGrid_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := drawGrid_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func DrawGrid_FlipChildren(obj uintptr, AllLevels bool)  {
    drawGrid_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func DrawGrid_Focused(obj uintptr) bool {
    ret, _, _ := drawGrid_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_HandleAllocated(obj uintptr) bool {
    ret, _, _ := drawGrid_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_InsertControl(obj uintptr, AControl uintptr)  {
    drawGrid_InsertControl.Call(obj, AControl )
}

func DrawGrid_Invalidate(obj uintptr)  {
    drawGrid_Invalidate.Call(obj)
}

func DrawGrid_RemoveControl(obj uintptr, AControl uintptr)  {
    drawGrid_RemoveControl.Call(obj, AControl )
}

func DrawGrid_Realign(obj uintptr)  {
    drawGrid_Realign.Call(obj)
}

func DrawGrid_Repaint(obj uintptr)  {
    drawGrid_Repaint.Call(obj)
}

func DrawGrid_ScaleBy(obj uintptr, M int32, D int32)  {
    drawGrid_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func DrawGrid_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    drawGrid_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func DrawGrid_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    drawGrid_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func DrawGrid_SetFocus(obj uintptr)  {
    drawGrid_SetFocus.Call(obj)
}

func DrawGrid_Update(obj uintptr)  {
    drawGrid_Update.Call(obj)
}

func DrawGrid_BringToFront(obj uintptr)  {
    drawGrid_BringToFront.Call(obj)
}

func DrawGrid_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    drawGrid_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    drawGrid_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_Dragging(obj uintptr) bool {
    ret, _, _ := drawGrid_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_HasParent(obj uintptr) bool {
    ret, _, _ := drawGrid_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_Hide(obj uintptr)  {
    drawGrid_Hide.Call(obj)
}

func DrawGrid_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := drawGrid_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func DrawGrid_Refresh(obj uintptr)  {
    drawGrid_Refresh.Call(obj)
}

func DrawGrid_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    drawGrid_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    drawGrid_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_SendToBack(obj uintptr)  {
    drawGrid_SendToBack.Call(obj)
}

func DrawGrid_Show(obj uintptr)  {
    drawGrid_Show.Call(obj)
}

func DrawGrid_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := drawGrid_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func DrawGrid_GetTextLen(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetTextLen.Call(obj)
    return int32(ret)
}

func DrawGrid_SetTextBuf(obj uintptr, Buffer string)  {
    drawGrid_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func DrawGrid_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := drawGrid_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func DrawGrid_GetNamePath(obj uintptr) string {
    ret, _, _ := drawGrid_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func DrawGrid_Assign(obj uintptr, Source uintptr)  {
    drawGrid_Assign.Call(obj, Source )
}

func DrawGrid_ClassType(obj uintptr) TClass {
    ret, _, _ := drawGrid_ClassType.Call(obj)
    return TClass(ret)
}

func DrawGrid_ClassName(obj uintptr) string {
    ret, _, _ := drawGrid_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func DrawGrid_InstanceSize(obj uintptr) int32 {
    ret, _, _ := drawGrid_InstanceSize.Call(obj)
    return int32(ret)
}

func DrawGrid_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := drawGrid_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func DrawGrid_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := drawGrid_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func DrawGrid_GetHashCode(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetHashCode.Call(obj)
    return int32(ret)
}

func DrawGrid_ToString(obj uintptr) string {
    ret, _, _ := drawGrid_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func DrawGrid_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    drawGrid_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func DrawGrid_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    drawGrid_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func DrawGrid_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    drawGrid_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func DrawGrid_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    drawGrid_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func DrawGrid_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    drawGrid_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func DrawGrid_AnchorClient(obj uintptr, ASpace int32)  {
    drawGrid_AnchorClient.Call(obj, uintptr(ASpace) )
}

func DrawGrid_GetAlign(obj uintptr) TAlign {
    ret, _, _ := drawGrid_GetAlign.Call(obj)
    return TAlign(ret)
}

func DrawGrid_SetAlign(obj uintptr, value TAlign) {
   drawGrid_SetAlign.Call(obj, uintptr(value))
}

func DrawGrid_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := drawGrid_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func DrawGrid_SetAnchors(obj uintptr, value TAnchors) {
   drawGrid_SetAnchors.Call(obj, uintptr(value))
}

func DrawGrid_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := drawGrid_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func DrawGrid_SetBiDiMode(obj uintptr, value TBiDiMode) {
   drawGrid_SetBiDiMode.Call(obj, uintptr(value))
}

func DrawGrid_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := drawGrid_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func DrawGrid_SetBorderStyle(obj uintptr, value TBorderStyle) {
   drawGrid_SetBorderStyle.Call(obj, uintptr(value))
}

func DrawGrid_GetColor(obj uintptr) TColor {
    ret, _, _ := drawGrid_GetColor.Call(obj)
    return TColor(ret)
}

func DrawGrid_SetColor(obj uintptr, value TColor) {
   drawGrid_SetColor.Call(obj, uintptr(value))
}

func DrawGrid_GetColCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetColCount.Call(obj)
    return int32(ret)
}

func DrawGrid_SetColCount(obj uintptr, value int32) {
   drawGrid_SetColCount.Call(obj, uintptr(value))
}

func DrawGrid_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetConstraints.Call(obj)
    return ret
}

func DrawGrid_SetConstraints(obj uintptr, value uintptr) {
   drawGrid_SetConstraints.Call(obj, value)
}

func DrawGrid_GetDefaultColWidth(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetDefaultColWidth.Call(obj)
    return int32(ret)
}

func DrawGrid_SetDefaultColWidth(obj uintptr, value int32) {
   drawGrid_SetDefaultColWidth.Call(obj, uintptr(value))
}

func DrawGrid_GetDefaultRowHeight(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetDefaultRowHeight.Call(obj)
    return int32(ret)
}

func DrawGrid_SetDefaultRowHeight(obj uintptr, value int32) {
   drawGrid_SetDefaultRowHeight.Call(obj, uintptr(value))
}

func DrawGrid_GetDefaultDrawing(obj uintptr) bool {
    ret, _, _ := drawGrid_GetDefaultDrawing.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetDefaultDrawing(obj uintptr, value bool) {
   drawGrid_SetDefaultDrawing.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := drawGrid_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetDoubleBuffered(obj uintptr, value bool) {
   drawGrid_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := drawGrid_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func DrawGrid_SetDragCursor(obj uintptr, value TCursor) {
   drawGrid_SetDragCursor.Call(obj, uintptr(value))
}

func DrawGrid_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := drawGrid_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func DrawGrid_SetDragKind(obj uintptr, value TDragKind) {
   drawGrid_SetDragKind.Call(obj, uintptr(value))
}

func DrawGrid_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := drawGrid_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func DrawGrid_SetDragMode(obj uintptr, value TDragMode) {
   drawGrid_SetDragMode.Call(obj, uintptr(value))
}

func DrawGrid_GetEnabled(obj uintptr) bool {
    ret, _, _ := drawGrid_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetEnabled(obj uintptr, value bool) {
   drawGrid_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetFixedColor(obj uintptr) TColor {
    ret, _, _ := drawGrid_GetFixedColor.Call(obj)
    return TColor(ret)
}

func DrawGrid_SetFixedColor(obj uintptr, value TColor) {
   drawGrid_SetFixedColor.Call(obj, uintptr(value))
}

func DrawGrid_GetFixedCols(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetFixedCols.Call(obj)
    return int32(ret)
}

func DrawGrid_SetFixedCols(obj uintptr, value int32) {
   drawGrid_SetFixedCols.Call(obj, uintptr(value))
}

func DrawGrid_GetRowCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetRowCount.Call(obj)
    return int32(ret)
}

func DrawGrid_SetRowCount(obj uintptr, value int32) {
   drawGrid_SetRowCount.Call(obj, uintptr(value))
}

func DrawGrid_GetFixedRows(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetFixedRows.Call(obj)
    return int32(ret)
}

func DrawGrid_SetFixedRows(obj uintptr, value int32) {
   drawGrid_SetFixedRows.Call(obj, uintptr(value))
}

func DrawGrid_GetFont(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetFont.Call(obj)
    return ret
}

func DrawGrid_SetFont(obj uintptr, value uintptr) {
   drawGrid_SetFont.Call(obj, value)
}

func DrawGrid_GetGridLineWidth(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetGridLineWidth.Call(obj)
    return int32(ret)
}

func DrawGrid_SetGridLineWidth(obj uintptr, value int32) {
   drawGrid_SetGridLineWidth.Call(obj, uintptr(value))
}

func DrawGrid_GetOptions(obj uintptr) TGridOptions {
    ret, _, _ := drawGrid_GetOptions.Call(obj)
    return TGridOptions(ret)
}

func DrawGrid_SetOptions(obj uintptr, value TGridOptions) {
   drawGrid_SetOptions.Call(obj, uintptr(value))
}

func DrawGrid_GetParentColor(obj uintptr) bool {
    ret, _, _ := drawGrid_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetParentColor(obj uintptr, value bool) {
   drawGrid_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := drawGrid_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetParentDoubleBuffered(obj uintptr, value bool) {
   drawGrid_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentFont(obj uintptr) bool {
    ret, _, _ := drawGrid_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetParentFont(obj uintptr, value bool) {
   drawGrid_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := drawGrid_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetParentShowHint(obj uintptr, value bool) {
   drawGrid_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetPopupMenu.Call(obj)
    return ret
}

func DrawGrid_SetPopupMenu(obj uintptr, value uintptr) {
   drawGrid_SetPopupMenu.Call(obj, value)
}

func DrawGrid_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := drawGrid_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func DrawGrid_SetScrollBars(obj uintptr, value TScrollStyle) {
   drawGrid_SetScrollBars.Call(obj, uintptr(value))
}

func DrawGrid_GetShowHint(obj uintptr) bool {
    ret, _, _ := drawGrid_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetShowHint(obj uintptr, value bool) {
   drawGrid_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := drawGrid_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func DrawGrid_SetTabOrder(obj uintptr, value TTabOrder) {
   drawGrid_SetTabOrder.Call(obj, uintptr(value))
}

func DrawGrid_GetVisible(obj uintptr) bool {
    ret, _, _ := drawGrid_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetVisible(obj uintptr, value bool) {
   drawGrid_SetVisible.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetVisibleColCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetVisibleColCount.Call(obj)
    return int32(ret)
}

func DrawGrid_GetVisibleRowCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetVisibleRowCount.Call(obj)
    return int32(ret)
}

func DrawGrid_SetOnClick(obj uintptr, fn interface{}) {
    drawGrid_SetOnClick.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnColumnMoved(obj uintptr, fn interface{}) {
    drawGrid_SetOnColumnMoved.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnContextPopup(obj uintptr, fn interface{}) {
    drawGrid_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnDblClick(obj uintptr, fn interface{}) {
    drawGrid_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnDragDrop(obj uintptr, fn interface{}) {
    drawGrid_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnDragOver(obj uintptr, fn interface{}) {
    drawGrid_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnDrawCell(obj uintptr, fn interface{}) {
    drawGrid_SetOnDrawCell.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnEndDock(obj uintptr, fn interface{}) {
    drawGrid_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnEndDrag(obj uintptr, fn interface{}) {
    drawGrid_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnEnter(obj uintptr, fn interface{}) {
    drawGrid_SetOnEnter.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnExit(obj uintptr, fn interface{}) {
    drawGrid_SetOnExit.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnGetEditMask(obj uintptr, fn interface{}) {
    drawGrid_SetOnGetEditMask.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnGetEditText(obj uintptr, fn interface{}) {
    drawGrid_SetOnGetEditText.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnKeyDown(obj uintptr, fn interface{}) {
    drawGrid_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnKeyPress(obj uintptr, fn interface{}) {
    drawGrid_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnKeyUp(obj uintptr, fn interface{}) {
    drawGrid_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseDown(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseEnter(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseLeave(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseMove(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseUp(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    drawGrid_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnRowMoved(obj uintptr, fn interface{}) {
    drawGrid_SetOnRowMoved.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnSelectCell(obj uintptr, fn interface{}) {
    drawGrid_SetOnSelectCell.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnSetEditText(obj uintptr, fn interface{}) {
    drawGrid_SetOnSetEditText.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnStartDock(obj uintptr, fn interface{}) {
    drawGrid_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func DrawGrid_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
    drawGrid_SetOnTopLeftChanged.Call(obj, addEventToMap(fn))
}

func DrawGrid_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetCanvas.Call(obj)
    return ret
}

func DrawGrid_GetCol(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetCol.Call(obj)
    return int32(ret)
}

func DrawGrid_SetCol(obj uintptr, value int32) {
   drawGrid_SetCol.Call(obj, uintptr(value))
}

func DrawGrid_GetEditorMode(obj uintptr) bool {
    ret, _, _ := drawGrid_GetEditorMode.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetEditorMode(obj uintptr, value bool) {
   drawGrid_SetEditorMode.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetGridHeight(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetGridHeight.Call(obj)
    return int32(ret)
}

func DrawGrid_GetGridWidth(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetGridWidth.Call(obj)
    return int32(ret)
}

func DrawGrid_GetLeftCol(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetLeftCol.Call(obj)
    return int32(ret)
}

func DrawGrid_SetLeftCol(obj uintptr, value int32) {
   drawGrid_SetLeftCol.Call(obj, uintptr(value))
}

func DrawGrid_GetSelection(obj uintptr) TGridRect {
    var ret TGridRect
    drawGrid_GetSelection.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_SetSelection(obj uintptr, value TGridRect) {
   drawGrid_SetSelection.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DrawGrid_GetRow(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetRow.Call(obj)
    return int32(ret)
}

func DrawGrid_SetRow(obj uintptr, value int32) {
   drawGrid_SetRow.Call(obj, uintptr(value))
}

func DrawGrid_GetTopRow(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetTopRow.Call(obj)
    return int32(ret)
}

func DrawGrid_SetTopRow(obj uintptr, value int32) {
   drawGrid_SetTopRow.Call(obj, uintptr(value))
}

func DrawGrid_GetTabStop(obj uintptr) bool {
    ret, _, _ := drawGrid_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetTabStop(obj uintptr, value bool) {
   drawGrid_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetDockClientCount.Call(obj)
    return int32(ret)
}

func DrawGrid_GetDockSite(obj uintptr) bool {
    ret, _, _ := drawGrid_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetDockSite(obj uintptr, value bool) {
   drawGrid_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := drawGrid_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func DrawGrid_GetBrush(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetBrush.Call(obj)
    return ret
}

func DrawGrid_GetControlCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetControlCount.Call(obj)
    return int32(ret)
}

func DrawGrid_GetHandle(obj uintptr) HWND {
    ret, _, _ := drawGrid_GetHandle.Call(obj)
    return HWND(ret)
}

func DrawGrid_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := drawGrid_GetParentWindow.Call(obj)
    return HWND(ret)
}

func DrawGrid_SetParentWindow(obj uintptr, value HWND) {
   drawGrid_SetParentWindow.Call(obj, uintptr(value))
}

func DrawGrid_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := drawGrid_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_SetUseDockManager(obj uintptr, value bool) {
   drawGrid_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func DrawGrid_GetAction(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetAction.Call(obj)
    return ret
}

func DrawGrid_SetAction(obj uintptr, value uintptr) {
   drawGrid_SetAction.Call(obj, value)
}

func DrawGrid_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    drawGrid_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_SetBoundsRect(obj uintptr, value TRect) {
   drawGrid_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func DrawGrid_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetClientHeight.Call(obj)
    return int32(ret)
}

func DrawGrid_SetClientHeight(obj uintptr, value int32) {
   drawGrid_SetClientHeight.Call(obj, uintptr(value))
}

func DrawGrid_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    drawGrid_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_GetClientRect(obj uintptr) TRect {
    var ret TRect
    drawGrid_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func DrawGrid_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetClientWidth.Call(obj)
    return int32(ret)
}

func DrawGrid_SetClientWidth(obj uintptr, value int32) {
   drawGrid_SetClientWidth.Call(obj, uintptr(value))
}

func DrawGrid_GetControlState(obj uintptr) TControlState {
    ret, _, _ := drawGrid_GetControlState.Call(obj)
    return TControlState(ret)
}

func DrawGrid_SetControlState(obj uintptr, value TControlState) {
   drawGrid_SetControlState.Call(obj, uintptr(value))
}

func DrawGrid_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := drawGrid_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func DrawGrid_SetControlStyle(obj uintptr, value TControlStyle) {
   drawGrid_SetControlStyle.Call(obj, uintptr(value))
}

func DrawGrid_GetFloating(obj uintptr) bool {
    ret, _, _ := drawGrid_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func DrawGrid_GetParent(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetParent.Call(obj)
    return ret
}

func DrawGrid_SetParent(obj uintptr, value uintptr) {
   drawGrid_SetParent.Call(obj, value)
}

func DrawGrid_GetLeft(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetLeft.Call(obj)
    return int32(ret)
}

func DrawGrid_SetLeft(obj uintptr, value int32) {
   drawGrid_SetLeft.Call(obj, uintptr(value))
}

func DrawGrid_GetTop(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetTop.Call(obj)
    return int32(ret)
}

func DrawGrid_SetTop(obj uintptr, value int32) {
   drawGrid_SetTop.Call(obj, uintptr(value))
}

func DrawGrid_GetWidth(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetWidth.Call(obj)
    return int32(ret)
}

func DrawGrid_SetWidth(obj uintptr, value int32) {
   drawGrid_SetWidth.Call(obj, uintptr(value))
}

func DrawGrid_GetHeight(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetHeight.Call(obj)
    return int32(ret)
}

func DrawGrid_SetHeight(obj uintptr, value int32) {
   drawGrid_SetHeight.Call(obj, uintptr(value))
}

func DrawGrid_GetCursor(obj uintptr) TCursor {
    ret, _, _ := drawGrid_GetCursor.Call(obj)
    return TCursor(ret)
}

func DrawGrid_SetCursor(obj uintptr, value TCursor) {
   drawGrid_SetCursor.Call(obj, uintptr(value))
}

func DrawGrid_GetHint(obj uintptr) string {
    ret, _, _ := drawGrid_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func DrawGrid_SetHint(obj uintptr, value string) {
   drawGrid_SetHint.Call(obj, GoStrToDStr(value))
}

func DrawGrid_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetComponentCount.Call(obj)
    return int32(ret)
}

func DrawGrid_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := drawGrid_GetComponentIndex.Call(obj)
    return int32(ret)
}

func DrawGrid_SetComponentIndex(obj uintptr, value int32) {
   drawGrid_SetComponentIndex.Call(obj, uintptr(value))
}

func DrawGrid_GetOwner(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetOwner.Call(obj)
    return ret
}

func DrawGrid_GetName(obj uintptr) string {
    ret, _, _ := drawGrid_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func DrawGrid_SetName(obj uintptr, value string) {
   drawGrid_SetName.Call(obj, GoStrToDStr(value))
}

func DrawGrid_GetTag(obj uintptr) int {
    ret, _, _ := drawGrid_GetTag.Call(obj)
    return int(ret)
}

func DrawGrid_SetTag(obj uintptr, value int) {
   drawGrid_SetTag.Call(obj, uintptr(value))
}

func DrawGrid_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetAnchorSideLeft.Call(obj)
    return ret
}

func DrawGrid_SetAnchorSideLeft(obj uintptr, value uintptr) {
   drawGrid_SetAnchorSideLeft.Call(obj, value)
}

func DrawGrid_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetAnchorSideTop.Call(obj)
    return ret
}

func DrawGrid_SetAnchorSideTop(obj uintptr, value uintptr) {
   drawGrid_SetAnchorSideTop.Call(obj, value)
}

func DrawGrid_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetAnchorSideRight.Call(obj)
    return ret
}

func DrawGrid_SetAnchorSideRight(obj uintptr, value uintptr) {
   drawGrid_SetAnchorSideRight.Call(obj, value)
}

func DrawGrid_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetAnchorSideBottom.Call(obj)
    return ret
}

func DrawGrid_SetAnchorSideBottom(obj uintptr, value uintptr) {
   drawGrid_SetAnchorSideBottom.Call(obj, value)
}

func DrawGrid_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetChildSizing.Call(obj)
    return ret
}

func DrawGrid_SetChildSizing(obj uintptr, value uintptr) {
   drawGrid_SetChildSizing.Call(obj, value)
}

func DrawGrid_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := drawGrid_GetBorderSpacing.Call(obj)
    return ret
}

func DrawGrid_SetBorderSpacing(obj uintptr, value uintptr) {
   drawGrid_SetBorderSpacing.Call(obj, value)
}

func DrawGrid_GetColWidths(obj uintptr, Index int32) int32 {
    ret, _, _ := drawGrid_GetColWidths.Call(obj, uintptr(Index))
    return int32(ret)
}

func DrawGrid_SetColWidths(obj uintptr, Index int32, value int32) {
   drawGrid_SetColWidths.Call(obj, uintptr(Index), uintptr(value))
}

func DrawGrid_GetRowHeights(obj uintptr, Index int32) int32 {
    ret, _, _ := drawGrid_GetRowHeights.Call(obj, uintptr(Index))
    return int32(ret)
}

func DrawGrid_SetRowHeights(obj uintptr, Index int32, value int32) {
   drawGrid_SetRowHeights.Call(obj, uintptr(Index), uintptr(value))
}

func DrawGrid_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := drawGrid_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func DrawGrid_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := drawGrid_GetControls.Call(obj, uintptr(Index))
    return ret
}

func DrawGrid_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := drawGrid_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func DrawGrid_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := drawGrid_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func DrawGrid_StaticClassType() TClass {
    r, _, _:= drawGrid_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TValueListEditor ---------------------------

func ValueListEditor_Create(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_Create.Call(obj)
    return ret
}

func ValueListEditor_Free(obj uintptr) {
    valueListEditor_Free.Call(obj)
}

func ValueListEditor_Refresh(obj uintptr)  {
    valueListEditor_Refresh.Call(obj)
}

func ValueListEditor_CellRect(obj uintptr, ACol int32, ARow int32) TRect {
    var ret TRect
    valueListEditor_CellRect.Call(obj, uintptr(ACol) , uintptr(ARow) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_MouseToCell(obj uintptr, X int32, Y int32, ACol *int32, ARow *int32)  {
    valueListEditor_MouseToCell.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(ACol)), uintptr(unsafe.Pointer(ARow)))
}

func ValueListEditor_MouseCoord(obj uintptr, X int32, Y int32) TGridCoord {
    var ret TGridCoord
    valueListEditor_MouseCoord.Call(obj, uintptr(X) , uintptr(Y) , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_CanFocus(obj uintptr) bool {
    ret, _, _ := valueListEditor_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := valueListEditor_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ValueListEditor_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := valueListEditor_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ValueListEditor_DisableAlign(obj uintptr)  {
    valueListEditor_DisableAlign.Call(obj)
}

func ValueListEditor_EnableAlign(obj uintptr)  {
    valueListEditor_EnableAlign.Call(obj)
}

func ValueListEditor_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := valueListEditor_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ValueListEditor_FlipChildren(obj uintptr, AllLevels bool)  {
    valueListEditor_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ValueListEditor_Focused(obj uintptr) bool {
    ret, _, _ := valueListEditor_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_HandleAllocated(obj uintptr) bool {
    ret, _, _ := valueListEditor_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_InsertControl(obj uintptr, AControl uintptr)  {
    valueListEditor_InsertControl.Call(obj, AControl )
}

func ValueListEditor_Invalidate(obj uintptr)  {
    valueListEditor_Invalidate.Call(obj)
}

func ValueListEditor_RemoveControl(obj uintptr, AControl uintptr)  {
    valueListEditor_RemoveControl.Call(obj, AControl )
}

func ValueListEditor_Realign(obj uintptr)  {
    valueListEditor_Realign.Call(obj)
}

func ValueListEditor_Repaint(obj uintptr)  {
    valueListEditor_Repaint.Call(obj)
}

func ValueListEditor_ScaleBy(obj uintptr, M int32, D int32)  {
    valueListEditor_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ValueListEditor_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    valueListEditor_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ValueListEditor_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    valueListEditor_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ValueListEditor_SetFocus(obj uintptr)  {
    valueListEditor_SetFocus.Call(obj)
}

func ValueListEditor_Update(obj uintptr)  {
    valueListEditor_Update.Call(obj)
}

func ValueListEditor_BringToFront(obj uintptr)  {
    valueListEditor_BringToFront.Call(obj)
}

func ValueListEditor_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    valueListEditor_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    valueListEditor_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_Dragging(obj uintptr) bool {
    ret, _, _ := valueListEditor_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_HasParent(obj uintptr) bool {
    ret, _, _ := valueListEditor_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_Hide(obj uintptr)  {
    valueListEditor_Hide.Call(obj)
}

func ValueListEditor_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := valueListEditor_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ValueListEditor_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    valueListEditor_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    valueListEditor_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_SendToBack(obj uintptr)  {
    valueListEditor_SendToBack.Call(obj)
}

func ValueListEditor_Show(obj uintptr)  {
    valueListEditor_Show.Call(obj)
}

func ValueListEditor_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := valueListEditor_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ValueListEditor_GetTextLen(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetTextLen.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetTextBuf(obj uintptr, Buffer string)  {
    valueListEditor_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ValueListEditor_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := valueListEditor_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ValueListEditor_GetNamePath(obj uintptr) string {
    ret, _, _ := valueListEditor_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ValueListEditor_Assign(obj uintptr, Source uintptr)  {
    valueListEditor_Assign.Call(obj, Source )
}

func ValueListEditor_ClassType(obj uintptr) TClass {
    ret, _, _ := valueListEditor_ClassType.Call(obj)
    return TClass(ret)
}

func ValueListEditor_ClassName(obj uintptr) string {
    ret, _, _ := valueListEditor_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ValueListEditor_InstanceSize(obj uintptr) int32 {
    ret, _, _ := valueListEditor_InstanceSize.Call(obj)
    return int32(ret)
}

func ValueListEditor_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := valueListEditor_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ValueListEditor_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := valueListEditor_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ValueListEditor_GetHashCode(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetHashCode.Call(obj)
    return int32(ret)
}

func ValueListEditor_ToString(obj uintptr) string {
    ret, _, _ := valueListEditor_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ValueListEditor_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    valueListEditor_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ValueListEditor_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    valueListEditor_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ValueListEditor_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    valueListEditor_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ValueListEditor_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    valueListEditor_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ValueListEditor_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    valueListEditor_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ValueListEditor_AnchorClient(obj uintptr, ASpace int32)  {
    valueListEditor_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ValueListEditor_GetColCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetColCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetColCount(obj uintptr, value int32) {
   valueListEditor_SetColCount.Call(obj, uintptr(value))
}

func ValueListEditor_GetRowCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetRowCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetVisibleColCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetVisibleColCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetVisibleRowCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetVisibleRowCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetAlign(obj uintptr) TAlign {
    ret, _, _ := valueListEditor_GetAlign.Call(obj)
    return TAlign(ret)
}

func ValueListEditor_SetAlign(obj uintptr, value TAlign) {
   valueListEditor_SetAlign.Call(obj, uintptr(value))
}

func ValueListEditor_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := valueListEditor_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ValueListEditor_SetAnchors(obj uintptr, value TAnchors) {
   valueListEditor_SetAnchors.Call(obj, uintptr(value))
}

func ValueListEditor_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := valueListEditor_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ValueListEditor_SetBiDiMode(obj uintptr, value TBiDiMode) {
   valueListEditor_SetBiDiMode.Call(obj, uintptr(value))
}

func ValueListEditor_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := valueListEditor_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func ValueListEditor_SetBorderStyle(obj uintptr, value TBorderStyle) {
   valueListEditor_SetBorderStyle.Call(obj, uintptr(value))
}

func ValueListEditor_GetColor(obj uintptr) TColor {
    ret, _, _ := valueListEditor_GetColor.Call(obj)
    return TColor(ret)
}

func ValueListEditor_SetColor(obj uintptr, value TColor) {
   valueListEditor_SetColor.Call(obj, uintptr(value))
}

func ValueListEditor_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetConstraints.Call(obj)
    return ret
}

func ValueListEditor_SetConstraints(obj uintptr, value uintptr) {
   valueListEditor_SetConstraints.Call(obj, value)
}

func ValueListEditor_GetDefaultColWidth(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetDefaultColWidth.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetDefaultColWidth(obj uintptr, value int32) {
   valueListEditor_SetDefaultColWidth.Call(obj, uintptr(value))
}

func ValueListEditor_GetDefaultDrawing(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetDefaultDrawing.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetDefaultDrawing(obj uintptr, value bool) {
   valueListEditor_SetDefaultDrawing.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDefaultRowHeight(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetDefaultRowHeight.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetDefaultRowHeight(obj uintptr, value int32) {
   valueListEditor_SetDefaultRowHeight.Call(obj, uintptr(value))
}

func ValueListEditor_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetDoubleBuffered(obj uintptr, value bool) {
   valueListEditor_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := valueListEditor_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ValueListEditor_SetDragCursor(obj uintptr, value TCursor) {
   valueListEditor_SetDragCursor.Call(obj, uintptr(value))
}

func ValueListEditor_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := valueListEditor_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ValueListEditor_SetDragKind(obj uintptr, value TDragKind) {
   valueListEditor_SetDragKind.Call(obj, uintptr(value))
}

func ValueListEditor_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := valueListEditor_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ValueListEditor_SetDragMode(obj uintptr, value TDragMode) {
   valueListEditor_SetDragMode.Call(obj, uintptr(value))
}

func ValueListEditor_GetEnabled(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetEnabled(obj uintptr, value bool) {
   valueListEditor_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetFixedColor(obj uintptr) TColor {
    ret, _, _ := valueListEditor_GetFixedColor.Call(obj)
    return TColor(ret)
}

func ValueListEditor_SetFixedColor(obj uintptr, value TColor) {
   valueListEditor_SetFixedColor.Call(obj, uintptr(value))
}

func ValueListEditor_GetFixedCols(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetFixedCols.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetFixedCols(obj uintptr, value int32) {
   valueListEditor_SetFixedCols.Call(obj, uintptr(value))
}

func ValueListEditor_GetFont(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetFont.Call(obj)
    return ret
}

func ValueListEditor_SetFont(obj uintptr, value uintptr) {
   valueListEditor_SetFont.Call(obj, value)
}

func ValueListEditor_GetGridLineWidth(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetGridLineWidth.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetGridLineWidth(obj uintptr, value int32) {
   valueListEditor_SetGridLineWidth.Call(obj, uintptr(value))
}

func ValueListEditor_GetOptions(obj uintptr) TGridOptions {
    ret, _, _ := valueListEditor_GetOptions.Call(obj)
    return TGridOptions(ret)
}

func ValueListEditor_SetOptions(obj uintptr, value TGridOptions) {
   valueListEditor_SetOptions.Call(obj, uintptr(value))
}

func ValueListEditor_GetParentColor(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentColor(obj uintptr, value bool) {
   valueListEditor_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentDoubleBuffered(obj uintptr, value bool) {
   valueListEditor_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentFont(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentFont(obj uintptr, value bool) {
   valueListEditor_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetParentShowHint(obj uintptr, value bool) {
   valueListEditor_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetPopupMenu.Call(obj)
    return ret
}

func ValueListEditor_SetPopupMenu(obj uintptr, value uintptr) {
   valueListEditor_SetPopupMenu.Call(obj, value)
}

func ValueListEditor_GetScrollBars(obj uintptr) TScrollStyle {
    ret, _, _ := valueListEditor_GetScrollBars.Call(obj)
    return TScrollStyle(ret)
}

func ValueListEditor_SetScrollBars(obj uintptr, value TScrollStyle) {
   valueListEditor_SetScrollBars.Call(obj, uintptr(value))
}

func ValueListEditor_GetShowHint(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetShowHint(obj uintptr, value bool) {
   valueListEditor_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetStrings(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetStrings.Call(obj)
    return ret
}

func ValueListEditor_SetStrings(obj uintptr, value uintptr) {
   valueListEditor_SetStrings.Call(obj, value)
}

func ValueListEditor_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := valueListEditor_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ValueListEditor_SetTabOrder(obj uintptr, value TTabOrder) {
   valueListEditor_SetTabOrder.Call(obj, uintptr(value))
}

func ValueListEditor_GetVisible(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetVisible(obj uintptr, value bool) {
   valueListEditor_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_SetOnClick(obj uintptr, fn interface{}) {
    valueListEditor_SetOnClick.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnContextPopup(obj uintptr, fn interface{}) {
    valueListEditor_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnDblClick(obj uintptr, fn interface{}) {
    valueListEditor_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnDragDrop(obj uintptr, fn interface{}) {
    valueListEditor_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnDragOver(obj uintptr, fn interface{}) {
    valueListEditor_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnDrawCell(obj uintptr, fn interface{}) {
    valueListEditor_SetOnDrawCell.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnEndDock(obj uintptr, fn interface{}) {
    valueListEditor_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnEndDrag(obj uintptr, fn interface{}) {
    valueListEditor_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnEnter(obj uintptr, fn interface{}) {
    valueListEditor_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnExit(obj uintptr, fn interface{}) {
    valueListEditor_SetOnExit.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnGetEditMask(obj uintptr, fn interface{}) {
    valueListEditor_SetOnGetEditMask.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnGetEditText(obj uintptr, fn interface{}) {
    valueListEditor_SetOnGetEditText.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnKeyDown(obj uintptr, fn interface{}) {
    valueListEditor_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnKeyPress(obj uintptr, fn interface{}) {
    valueListEditor_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnKeyUp(obj uintptr, fn interface{}) {
    valueListEditor_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseDown(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseEnter(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseLeave(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseMove(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseUp(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    valueListEditor_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnRowMoved(obj uintptr, fn interface{}) {
    valueListEditor_SetOnRowMoved.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnSelectCell(obj uintptr, fn interface{}) {
    valueListEditor_SetOnSelectCell.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnSetEditText(obj uintptr, fn interface{}) {
    valueListEditor_SetOnSetEditText.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnStartDock(obj uintptr, fn interface{}) {
    valueListEditor_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func ValueListEditor_SetOnTopLeftChanged(obj uintptr, fn interface{}) {
    valueListEditor_SetOnTopLeftChanged.Call(obj, addEventToMap(fn))
}

func ValueListEditor_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetCanvas.Call(obj)
    return ret
}

func ValueListEditor_GetCol(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetCol.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetCol(obj uintptr, value int32) {
   valueListEditor_SetCol.Call(obj, uintptr(value))
}

func ValueListEditor_GetEditorMode(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetEditorMode.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetEditorMode(obj uintptr, value bool) {
   valueListEditor_SetEditorMode.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetGridHeight(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetGridHeight.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetGridWidth(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetGridWidth.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetLeftCol(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetLeftCol.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetLeftCol(obj uintptr, value int32) {
   valueListEditor_SetLeftCol.Call(obj, uintptr(value))
}

func ValueListEditor_GetSelection(obj uintptr) TGridRect {
    var ret TGridRect
    valueListEditor_GetSelection.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_SetSelection(obj uintptr, value TGridRect) {
   valueListEditor_SetSelection.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ValueListEditor_GetRow(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetRow.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetRow(obj uintptr, value int32) {
   valueListEditor_SetRow.Call(obj, uintptr(value))
}

func ValueListEditor_GetTopRow(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetTopRow.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetTopRow(obj uintptr, value int32) {
   valueListEditor_SetTopRow.Call(obj, uintptr(value))
}

func ValueListEditor_GetTabStop(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetTabStop(obj uintptr, value bool) {
   valueListEditor_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetDockSite(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetDockSite(obj uintptr, value bool) {
   valueListEditor_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetBrush(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetBrush.Call(obj)
    return ret
}

func ValueListEditor_GetControlCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetControlCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetHandle(obj uintptr) HWND {
    ret, _, _ := valueListEditor_GetHandle.Call(obj)
    return HWND(ret)
}

func ValueListEditor_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := valueListEditor_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ValueListEditor_SetParentWindow(obj uintptr, value HWND) {
   valueListEditor_SetParentWindow.Call(obj, uintptr(value))
}

func ValueListEditor_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_SetUseDockManager(obj uintptr, value bool) {
   valueListEditor_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ValueListEditor_GetAction(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetAction.Call(obj)
    return ret
}

func ValueListEditor_SetAction(obj uintptr, value uintptr) {
   valueListEditor_SetAction.Call(obj, value)
}

func ValueListEditor_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    valueListEditor_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_SetBoundsRect(obj uintptr, value TRect) {
   valueListEditor_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ValueListEditor_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetClientHeight.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetClientHeight(obj uintptr, value int32) {
   valueListEditor_SetClientHeight.Call(obj, uintptr(value))
}

func ValueListEditor_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    valueListEditor_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_GetClientRect(obj uintptr) TRect {
    var ret TRect
    valueListEditor_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ValueListEditor_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetClientWidth.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetClientWidth(obj uintptr, value int32) {
   valueListEditor_SetClientWidth.Call(obj, uintptr(value))
}

func ValueListEditor_GetControlState(obj uintptr) TControlState {
    ret, _, _ := valueListEditor_GetControlState.Call(obj)
    return TControlState(ret)
}

func ValueListEditor_SetControlState(obj uintptr, value TControlState) {
   valueListEditor_SetControlState.Call(obj, uintptr(value))
}

func ValueListEditor_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := valueListEditor_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ValueListEditor_SetControlStyle(obj uintptr, value TControlStyle) {
   valueListEditor_SetControlStyle.Call(obj, uintptr(value))
}

func ValueListEditor_GetFloating(obj uintptr) bool {
    ret, _, _ := valueListEditor_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ValueListEditor_GetParent(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetParent.Call(obj)
    return ret
}

func ValueListEditor_SetParent(obj uintptr, value uintptr) {
   valueListEditor_SetParent.Call(obj, value)
}

func ValueListEditor_GetLeft(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetLeft.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetLeft(obj uintptr, value int32) {
   valueListEditor_SetLeft.Call(obj, uintptr(value))
}

func ValueListEditor_GetTop(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetTop.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetTop(obj uintptr, value int32) {
   valueListEditor_SetTop.Call(obj, uintptr(value))
}

func ValueListEditor_GetWidth(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetWidth.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetWidth(obj uintptr, value int32) {
   valueListEditor_SetWidth.Call(obj, uintptr(value))
}

func ValueListEditor_GetHeight(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetHeight.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetHeight(obj uintptr, value int32) {
   valueListEditor_SetHeight.Call(obj, uintptr(value))
}

func ValueListEditor_GetCursor(obj uintptr) TCursor {
    ret, _, _ := valueListEditor_GetCursor.Call(obj)
    return TCursor(ret)
}

func ValueListEditor_SetCursor(obj uintptr, value TCursor) {
   valueListEditor_SetCursor.Call(obj, uintptr(value))
}

func ValueListEditor_GetHint(obj uintptr) string {
    ret, _, _ := valueListEditor_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ValueListEditor_SetHint(obj uintptr, value string) {
   valueListEditor_SetHint.Call(obj, GoStrToDStr(value))
}

func ValueListEditor_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetComponentCount.Call(obj)
    return int32(ret)
}

func ValueListEditor_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := valueListEditor_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ValueListEditor_SetComponentIndex(obj uintptr, value int32) {
   valueListEditor_SetComponentIndex.Call(obj, uintptr(value))
}

func ValueListEditor_GetOwner(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetOwner.Call(obj)
    return ret
}

func ValueListEditor_GetName(obj uintptr) string {
    ret, _, _ := valueListEditor_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ValueListEditor_SetName(obj uintptr, value string) {
   valueListEditor_SetName.Call(obj, GoStrToDStr(value))
}

func ValueListEditor_GetTag(obj uintptr) int {
    ret, _, _ := valueListEditor_GetTag.Call(obj)
    return int(ret)
}

func ValueListEditor_SetTag(obj uintptr, value int) {
   valueListEditor_SetTag.Call(obj, uintptr(value))
}

func ValueListEditor_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetAnchorSideLeft.Call(obj)
    return ret
}

func ValueListEditor_SetAnchorSideLeft(obj uintptr, value uintptr) {
   valueListEditor_SetAnchorSideLeft.Call(obj, value)
}

func ValueListEditor_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetAnchorSideTop.Call(obj)
    return ret
}

func ValueListEditor_SetAnchorSideTop(obj uintptr, value uintptr) {
   valueListEditor_SetAnchorSideTop.Call(obj, value)
}

func ValueListEditor_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetAnchorSideRight.Call(obj)
    return ret
}

func ValueListEditor_SetAnchorSideRight(obj uintptr, value uintptr) {
   valueListEditor_SetAnchorSideRight.Call(obj, value)
}

func ValueListEditor_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetAnchorSideBottom.Call(obj)
    return ret
}

func ValueListEditor_SetAnchorSideBottom(obj uintptr, value uintptr) {
   valueListEditor_SetAnchorSideBottom.Call(obj, value)
}

func ValueListEditor_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetChildSizing.Call(obj)
    return ret
}

func ValueListEditor_SetChildSizing(obj uintptr, value uintptr) {
   valueListEditor_SetChildSizing.Call(obj, value)
}

func ValueListEditor_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := valueListEditor_GetBorderSpacing.Call(obj)
    return ret
}

func ValueListEditor_SetBorderSpacing(obj uintptr, value uintptr) {
   valueListEditor_SetBorderSpacing.Call(obj, value)
}

func ValueListEditor_GetCells(obj uintptr, ACol int32, ARow int32) string {
    ret, _, _ := valueListEditor_GetCells.Call(obj, uintptr(ACol), uintptr(ARow))
    return DStrToGoStr(ret)
}

func ValueListEditor_SetCells(obj uintptr, ACol int32, ARow int32, value string) {
   valueListEditor_SetCells.Call(obj, uintptr(ACol), uintptr(ARow), GoStrToDStr(value))
}

func ValueListEditor_GetValues(obj uintptr, Key string) string {
    ret, _, _ := valueListEditor_GetValues.Call(obj, GoStrToDStr(Key))
    return DStrToGoStr(ret)
}

func ValueListEditor_SetValues(obj uintptr, Key string, value string) {
   valueListEditor_SetValues.Call(obj, GoStrToDStr(Key), GoStrToDStr(value))
}

func ValueListEditor_GetColWidths(obj uintptr, Index int32) int32 {
    ret, _, _ := valueListEditor_GetColWidths.Call(obj, uintptr(Index))
    return int32(ret)
}

func ValueListEditor_SetColWidths(obj uintptr, Index int32, value int32) {
   valueListEditor_SetColWidths.Call(obj, uintptr(Index), uintptr(value))
}

func ValueListEditor_GetRowHeights(obj uintptr, Index int32) int32 {
    ret, _, _ := valueListEditor_GetRowHeights.Call(obj, uintptr(Index))
    return int32(ret)
}

func ValueListEditor_SetRowHeights(obj uintptr, Index int32, value int32) {
   valueListEditor_SetRowHeights.Call(obj, uintptr(Index), uintptr(value))
}

func ValueListEditor_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := valueListEditor_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ValueListEditor_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := valueListEditor_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ValueListEditor_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := valueListEditor_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ValueListEditor_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := valueListEditor_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ValueListEditor_StaticClassType() TClass {
    r, _, _:= valueListEditor_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- THeaderControl ---------------------------

func HeaderControl_Create(obj uintptr) uintptr {
    ret, _, _ := headerControl_Create.Call(obj)
    return ret
}

func HeaderControl_Free(obj uintptr) {
    headerControl_Free.Call(obj)
}

func HeaderControl_FlipChildren(obj uintptr, AllLevels bool)  {
    headerControl_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func HeaderControl_CanFocus(obj uintptr) bool {
    ret, _, _ := headerControl_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := headerControl_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func HeaderControl_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := headerControl_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func HeaderControl_DisableAlign(obj uintptr)  {
    headerControl_DisableAlign.Call(obj)
}

func HeaderControl_EnableAlign(obj uintptr)  {
    headerControl_EnableAlign.Call(obj)
}

func HeaderControl_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := headerControl_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func HeaderControl_Focused(obj uintptr) bool {
    ret, _, _ := headerControl_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_HandleAllocated(obj uintptr) bool {
    ret, _, _ := headerControl_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_InsertControl(obj uintptr, AControl uintptr)  {
    headerControl_InsertControl.Call(obj, AControl )
}

func HeaderControl_Invalidate(obj uintptr)  {
    headerControl_Invalidate.Call(obj)
}

func HeaderControl_RemoveControl(obj uintptr, AControl uintptr)  {
    headerControl_RemoveControl.Call(obj, AControl )
}

func HeaderControl_Realign(obj uintptr)  {
    headerControl_Realign.Call(obj)
}

func HeaderControl_Repaint(obj uintptr)  {
    headerControl_Repaint.Call(obj)
}

func HeaderControl_ScaleBy(obj uintptr, M int32, D int32)  {
    headerControl_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func HeaderControl_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    headerControl_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func HeaderControl_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    headerControl_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func HeaderControl_SetFocus(obj uintptr)  {
    headerControl_SetFocus.Call(obj)
}

func HeaderControl_Update(obj uintptr)  {
    headerControl_Update.Call(obj)
}

func HeaderControl_BringToFront(obj uintptr)  {
    headerControl_BringToFront.Call(obj)
}

func HeaderControl_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    headerControl_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    headerControl_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_Dragging(obj uintptr) bool {
    ret, _, _ := headerControl_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_HasParent(obj uintptr) bool {
    ret, _, _ := headerControl_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_Hide(obj uintptr)  {
    headerControl_Hide.Call(obj)
}

func HeaderControl_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := headerControl_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func HeaderControl_Refresh(obj uintptr)  {
    headerControl_Refresh.Call(obj)
}

func HeaderControl_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    headerControl_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    headerControl_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_SendToBack(obj uintptr)  {
    headerControl_SendToBack.Call(obj)
}

func HeaderControl_Show(obj uintptr)  {
    headerControl_Show.Call(obj)
}

func HeaderControl_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := headerControl_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func HeaderControl_GetTextLen(obj uintptr) int32 {
    ret, _, _ := headerControl_GetTextLen.Call(obj)
    return int32(ret)
}

func HeaderControl_SetTextBuf(obj uintptr, Buffer string)  {
    headerControl_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func HeaderControl_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := headerControl_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func HeaderControl_GetNamePath(obj uintptr) string {
    ret, _, _ := headerControl_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderControl_Assign(obj uintptr, Source uintptr)  {
    headerControl_Assign.Call(obj, Source )
}

func HeaderControl_ClassType(obj uintptr) TClass {
    ret, _, _ := headerControl_ClassType.Call(obj)
    return TClass(ret)
}

func HeaderControl_ClassName(obj uintptr) string {
    ret, _, _ := headerControl_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderControl_InstanceSize(obj uintptr) int32 {
    ret, _, _ := headerControl_InstanceSize.Call(obj)
    return int32(ret)
}

func HeaderControl_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := headerControl_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func HeaderControl_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := headerControl_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func HeaderControl_GetHashCode(obj uintptr) int32 {
    ret, _, _ := headerControl_GetHashCode.Call(obj)
    return int32(ret)
}

func HeaderControl_ToString(obj uintptr) string {
    ret, _, _ := headerControl_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderControl_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    headerControl_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func HeaderControl_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    headerControl_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func HeaderControl_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    headerControl_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func HeaderControl_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    headerControl_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func HeaderControl_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    headerControl_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func HeaderControl_AnchorClient(obj uintptr, ASpace int32)  {
    headerControl_AnchorClient.Call(obj, uintptr(ASpace) )
}

func HeaderControl_GetAlign(obj uintptr) TAlign {
    ret, _, _ := headerControl_GetAlign.Call(obj)
    return TAlign(ret)
}

func HeaderControl_SetAlign(obj uintptr, value TAlign) {
   headerControl_SetAlign.Call(obj, uintptr(value))
}

func HeaderControl_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := headerControl_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func HeaderControl_SetAnchors(obj uintptr, value TAnchors) {
   headerControl_SetAnchors.Call(obj, uintptr(value))
}

func HeaderControl_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := headerControl_GetBorderWidth.Call(obj)
    return int32(ret)
}

func HeaderControl_SetBorderWidth(obj uintptr, value int32) {
   headerControl_SetBorderWidth.Call(obj, uintptr(value))
}

func HeaderControl_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := headerControl_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetDoubleBuffered(obj uintptr, value bool) {
   headerControl_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := headerControl_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func HeaderControl_SetDragCursor(obj uintptr, value TCursor) {
   headerControl_SetDragCursor.Call(obj, uintptr(value))
}

func HeaderControl_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := headerControl_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func HeaderControl_SetDragKind(obj uintptr, value TDragKind) {
   headerControl_SetDragKind.Call(obj, uintptr(value))
}

func HeaderControl_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := headerControl_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func HeaderControl_SetDragMode(obj uintptr, value TDragMode) {
   headerControl_SetDragMode.Call(obj, uintptr(value))
}

func HeaderControl_GetEnabled(obj uintptr) bool {
    ret, _, _ := headerControl_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetEnabled(obj uintptr, value bool) {
   headerControl_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetFont(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetFont.Call(obj)
    return ret
}

func HeaderControl_SetFont(obj uintptr, value uintptr) {
   headerControl_SetFont.Call(obj, value)
}

func HeaderControl_GetImages(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetImages.Call(obj)
    return ret
}

func HeaderControl_SetImages(obj uintptr, value uintptr) {
   headerControl_SetImages.Call(obj, value)
}

func HeaderControl_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetConstraints.Call(obj)
    return ret
}

func HeaderControl_SetConstraints(obj uintptr, value uintptr) {
   headerControl_SetConstraints.Call(obj, value)
}

func HeaderControl_GetSections(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetSections.Call(obj)
    return ret
}

func HeaderControl_SetSections(obj uintptr, value uintptr) {
   headerControl_SetSections.Call(obj, value)
}

func HeaderControl_GetShowHint(obj uintptr) bool {
    ret, _, _ := headerControl_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetShowHint(obj uintptr, value bool) {
   headerControl_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := headerControl_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetParentDoubleBuffered(obj uintptr, value bool) {
   headerControl_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentFont(obj uintptr) bool {
    ret, _, _ := headerControl_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetParentFont(obj uintptr, value bool) {
   headerControl_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := headerControl_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetParentShowHint(obj uintptr, value bool) {
   headerControl_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetPopupMenu.Call(obj)
    return ret
}

func HeaderControl_SetPopupMenu(obj uintptr, value uintptr) {
   headerControl_SetPopupMenu.Call(obj, value)
}

func HeaderControl_GetVisible(obj uintptr) bool {
    ret, _, _ := headerControl_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetVisible(obj uintptr, value bool) {
   headerControl_SetVisible.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_SetOnContextPopup(obj uintptr, fn interface{}) {
    headerControl_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnDragDrop(obj uintptr, fn interface{}) {
    headerControl_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnDragOver(obj uintptr, fn interface{}) {
    headerControl_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnEndDock(obj uintptr, fn interface{}) {
    headerControl_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnEndDrag(obj uintptr, fn interface{}) {
    headerControl_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnMouseDown(obj uintptr, fn interface{}) {
    headerControl_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnMouseEnter(obj uintptr, fn interface{}) {
    headerControl_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnMouseLeave(obj uintptr, fn interface{}) {
    headerControl_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnMouseMove(obj uintptr, fn interface{}) {
    headerControl_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnMouseUp(obj uintptr, fn interface{}) {
    headerControl_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnResize(obj uintptr, fn interface{}) {
    headerControl_SetOnResize.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnSectionClick(obj uintptr, fn interface{}) {
    headerControl_SetOnSectionClick.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnSectionResize(obj uintptr, fn interface{}) {
    headerControl_SetOnSectionResize.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnSectionTrack(obj uintptr, fn interface{}) {
    headerControl_SetOnSectionTrack.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnSectionDrag(obj uintptr, fn interface{}) {
    headerControl_SetOnSectionDrag.Call(obj, addEventToMap(fn))
}

func HeaderControl_SetOnSectionEndDrag(obj uintptr, fn interface{}) {
    headerControl_SetOnSectionEndDrag.Call(obj, addEventToMap(fn))
}

func HeaderControl_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetCanvas.Call(obj)
    return ret
}

func HeaderControl_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := headerControl_GetDockClientCount.Call(obj)
    return int32(ret)
}

func HeaderControl_GetDockSite(obj uintptr) bool {
    ret, _, _ := headerControl_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetDockSite(obj uintptr, value bool) {
   headerControl_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := headerControl_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := headerControl_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func HeaderControl_GetBrush(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetBrush.Call(obj)
    return ret
}

func HeaderControl_GetControlCount(obj uintptr) int32 {
    ret, _, _ := headerControl_GetControlCount.Call(obj)
    return int32(ret)
}

func HeaderControl_GetHandle(obj uintptr) HWND {
    ret, _, _ := headerControl_GetHandle.Call(obj)
    return HWND(ret)
}

func HeaderControl_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := headerControl_GetParentWindow.Call(obj)
    return HWND(ret)
}

func HeaderControl_SetParentWindow(obj uintptr, value HWND) {
   headerControl_SetParentWindow.Call(obj, uintptr(value))
}

func HeaderControl_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := headerControl_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func HeaderControl_SetTabOrder(obj uintptr, value TTabOrder) {
   headerControl_SetTabOrder.Call(obj, uintptr(value))
}

func HeaderControl_GetTabStop(obj uintptr) bool {
    ret, _, _ := headerControl_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetTabStop(obj uintptr, value bool) {
   headerControl_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := headerControl_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_SetUseDockManager(obj uintptr, value bool) {
   headerControl_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func HeaderControl_GetAction(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetAction.Call(obj)
    return ret
}

func HeaderControl_SetAction(obj uintptr, value uintptr) {
   headerControl_SetAction.Call(obj, value)
}

func HeaderControl_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    headerControl_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_SetBoundsRect(obj uintptr, value TRect) {
   headerControl_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func HeaderControl_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := headerControl_GetClientHeight.Call(obj)
    return int32(ret)
}

func HeaderControl_SetClientHeight(obj uintptr, value int32) {
   headerControl_SetClientHeight.Call(obj, uintptr(value))
}

func HeaderControl_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    headerControl_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_GetClientRect(obj uintptr) TRect {
    var ret TRect
    headerControl_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func HeaderControl_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := headerControl_GetClientWidth.Call(obj)
    return int32(ret)
}

func HeaderControl_SetClientWidth(obj uintptr, value int32) {
   headerControl_SetClientWidth.Call(obj, uintptr(value))
}

func HeaderControl_GetControlState(obj uintptr) TControlState {
    ret, _, _ := headerControl_GetControlState.Call(obj)
    return TControlState(ret)
}

func HeaderControl_SetControlState(obj uintptr, value TControlState) {
   headerControl_SetControlState.Call(obj, uintptr(value))
}

func HeaderControl_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := headerControl_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func HeaderControl_SetControlStyle(obj uintptr, value TControlStyle) {
   headerControl_SetControlStyle.Call(obj, uintptr(value))
}

func HeaderControl_GetFloating(obj uintptr) bool {
    ret, _, _ := headerControl_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func HeaderControl_GetParent(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetParent.Call(obj)
    return ret
}

func HeaderControl_SetParent(obj uintptr, value uintptr) {
   headerControl_SetParent.Call(obj, value)
}

func HeaderControl_GetLeft(obj uintptr) int32 {
    ret, _, _ := headerControl_GetLeft.Call(obj)
    return int32(ret)
}

func HeaderControl_SetLeft(obj uintptr, value int32) {
   headerControl_SetLeft.Call(obj, uintptr(value))
}

func HeaderControl_GetTop(obj uintptr) int32 {
    ret, _, _ := headerControl_GetTop.Call(obj)
    return int32(ret)
}

func HeaderControl_SetTop(obj uintptr, value int32) {
   headerControl_SetTop.Call(obj, uintptr(value))
}

func HeaderControl_GetWidth(obj uintptr) int32 {
    ret, _, _ := headerControl_GetWidth.Call(obj)
    return int32(ret)
}

func HeaderControl_SetWidth(obj uintptr, value int32) {
   headerControl_SetWidth.Call(obj, uintptr(value))
}

func HeaderControl_GetHeight(obj uintptr) int32 {
    ret, _, _ := headerControl_GetHeight.Call(obj)
    return int32(ret)
}

func HeaderControl_SetHeight(obj uintptr, value int32) {
   headerControl_SetHeight.Call(obj, uintptr(value))
}

func HeaderControl_GetCursor(obj uintptr) TCursor {
    ret, _, _ := headerControl_GetCursor.Call(obj)
    return TCursor(ret)
}

func HeaderControl_SetCursor(obj uintptr, value TCursor) {
   headerControl_SetCursor.Call(obj, uintptr(value))
}

func HeaderControl_GetHint(obj uintptr) string {
    ret, _, _ := headerControl_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderControl_SetHint(obj uintptr, value string) {
   headerControl_SetHint.Call(obj, GoStrToDStr(value))
}

func HeaderControl_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := headerControl_GetComponentCount.Call(obj)
    return int32(ret)
}

func HeaderControl_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := headerControl_GetComponentIndex.Call(obj)
    return int32(ret)
}

func HeaderControl_SetComponentIndex(obj uintptr, value int32) {
   headerControl_SetComponentIndex.Call(obj, uintptr(value))
}

func HeaderControl_GetOwner(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetOwner.Call(obj)
    return ret
}

func HeaderControl_GetName(obj uintptr) string {
    ret, _, _ := headerControl_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderControl_SetName(obj uintptr, value string) {
   headerControl_SetName.Call(obj, GoStrToDStr(value))
}

func HeaderControl_GetTag(obj uintptr) int {
    ret, _, _ := headerControl_GetTag.Call(obj)
    return int(ret)
}

func HeaderControl_SetTag(obj uintptr, value int) {
   headerControl_SetTag.Call(obj, uintptr(value))
}

func HeaderControl_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetAnchorSideLeft.Call(obj)
    return ret
}

func HeaderControl_SetAnchorSideLeft(obj uintptr, value uintptr) {
   headerControl_SetAnchorSideLeft.Call(obj, value)
}

func HeaderControl_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetAnchorSideTop.Call(obj)
    return ret
}

func HeaderControl_SetAnchorSideTop(obj uintptr, value uintptr) {
   headerControl_SetAnchorSideTop.Call(obj, value)
}

func HeaderControl_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetAnchorSideRight.Call(obj)
    return ret
}

func HeaderControl_SetAnchorSideRight(obj uintptr, value uintptr) {
   headerControl_SetAnchorSideRight.Call(obj, value)
}

func HeaderControl_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetAnchorSideBottom.Call(obj)
    return ret
}

func HeaderControl_SetAnchorSideBottom(obj uintptr, value uintptr) {
   headerControl_SetAnchorSideBottom.Call(obj, value)
}

func HeaderControl_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetChildSizing.Call(obj)
    return ret
}

func HeaderControl_SetChildSizing(obj uintptr, value uintptr) {
   headerControl_SetChildSizing.Call(obj, value)
}

func HeaderControl_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := headerControl_GetBorderSpacing.Call(obj)
    return ret
}

func HeaderControl_SetBorderSpacing(obj uintptr, value uintptr) {
   headerControl_SetBorderSpacing.Call(obj, value)
}

func HeaderControl_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := headerControl_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func HeaderControl_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := headerControl_GetControls.Call(obj, uintptr(Index))
    return ret
}

func HeaderControl_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := headerControl_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func HeaderControl_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := headerControl_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func HeaderControl_StaticClassType() TClass {
    r, _, _:= headerControl_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- THeaderSection ---------------------------

func HeaderSection_Create(obj uintptr) uintptr {
    ret, _, _ := headerSection_Create.Call(obj)
    return ret
}

func HeaderSection_Free(obj uintptr) {
    headerSection_Free.Call(obj)
}

func HeaderSection_Assign(obj uintptr, Source uintptr)  {
    headerSection_Assign.Call(obj, Source )
}

func HeaderSection_GetNamePath(obj uintptr) string {
    ret, _, _ := headerSection_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSection_ClassType(obj uintptr) TClass {
    ret, _, _ := headerSection_ClassType.Call(obj)
    return TClass(ret)
}

func HeaderSection_ClassName(obj uintptr) string {
    ret, _, _ := headerSection_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSection_InstanceSize(obj uintptr) int32 {
    ret, _, _ := headerSection_InstanceSize.Call(obj)
    return int32(ret)
}

func HeaderSection_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := headerSection_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func HeaderSection_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := headerSection_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func HeaderSection_GetHashCode(obj uintptr) int32 {
    ret, _, _ := headerSection_GetHashCode.Call(obj)
    return int32(ret)
}

func HeaderSection_ToString(obj uintptr) string {
    ret, _, _ := headerSection_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSection_GetLeft(obj uintptr) int32 {
    ret, _, _ := headerSection_GetLeft.Call(obj)
    return int32(ret)
}

func HeaderSection_GetRight(obj uintptr) int32 {
    ret, _, _ := headerSection_GetRight.Call(obj)
    return int32(ret)
}

func HeaderSection_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := headerSection_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func HeaderSection_SetAlignment(obj uintptr, value TAlignment) {
   headerSection_SetAlignment.Call(obj, uintptr(value))
}

func HeaderSection_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := headerSection_GetImageIndex.Call(obj)
    return int32(ret)
}

func HeaderSection_SetImageIndex(obj uintptr, value int32) {
   headerSection_SetImageIndex.Call(obj, uintptr(value))
}

func HeaderSection_GetMaxWidth(obj uintptr) int32 {
    ret, _, _ := headerSection_GetMaxWidth.Call(obj)
    return int32(ret)
}

func HeaderSection_SetMaxWidth(obj uintptr, value int32) {
   headerSection_SetMaxWidth.Call(obj, uintptr(value))
}

func HeaderSection_GetMinWidth(obj uintptr) int32 {
    ret, _, _ := headerSection_GetMinWidth.Call(obj)
    return int32(ret)
}

func HeaderSection_SetMinWidth(obj uintptr, value int32) {
   headerSection_SetMinWidth.Call(obj, uintptr(value))
}

func HeaderSection_GetText(obj uintptr) string {
    ret, _, _ := headerSection_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSection_SetText(obj uintptr, value string) {
   headerSection_SetText.Call(obj, GoStrToDStr(value))
}

func HeaderSection_GetWidth(obj uintptr) int32 {
    ret, _, _ := headerSection_GetWidth.Call(obj)
    return int32(ret)
}

func HeaderSection_SetWidth(obj uintptr, value int32) {
   headerSection_SetWidth.Call(obj, uintptr(value))
}

func HeaderSection_GetCollection(obj uintptr) uintptr {
    ret, _, _ := headerSection_GetCollection.Call(obj)
    return ret
}

func HeaderSection_SetCollection(obj uintptr, value uintptr) {
   headerSection_SetCollection.Call(obj, value)
}

func HeaderSection_GetIndex(obj uintptr) int32 {
    ret, _, _ := headerSection_GetIndex.Call(obj)
    return int32(ret)
}

func HeaderSection_SetIndex(obj uintptr, value int32) {
   headerSection_SetIndex.Call(obj, uintptr(value))
}

func HeaderSection_GetDisplayName(obj uintptr) string {
    ret, _, _ := headerSection_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSection_SetDisplayName(obj uintptr, value string) {
   headerSection_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func HeaderSection_StaticClassType() TClass {
    r, _, _:= headerSection_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- THeaderSections ---------------------------

func HeaderSections_Create(obj uintptr) uintptr {
    ret, _, _ := headerSections_Create.Call(obj)
    return ret
}

func HeaderSections_Free(obj uintptr) {
    headerSections_Free.Call(obj)
}

func HeaderSections_Add(obj uintptr) uintptr {
    ret, _, _ := headerSections_Add.Call(obj)
    return ret
}

func HeaderSections_AddItem(obj uintptr, Item uintptr, Index int32) uintptr {
    ret, _, _ := headerSections_AddItem.Call(obj, Item , uintptr(Index) )
    return ret
}

func HeaderSections_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := headerSections_Insert.Call(obj, uintptr(Index) )
    return ret
}

func HeaderSections_Owner(obj uintptr) uintptr {
    ret, _, _ := headerSections_Owner.Call(obj)
    return ret
}

func HeaderSections_Assign(obj uintptr, Source uintptr)  {
    headerSections_Assign.Call(obj, Source )
}

func HeaderSections_BeginUpdate(obj uintptr)  {
    headerSections_BeginUpdate.Call(obj)
}

func HeaderSections_Clear(obj uintptr)  {
    headerSections_Clear.Call(obj)
}

func HeaderSections_Delete(obj uintptr, Index int32)  {
    headerSections_Delete.Call(obj, uintptr(Index) )
}

func HeaderSections_EndUpdate(obj uintptr)  {
    headerSections_EndUpdate.Call(obj)
}

func HeaderSections_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := headerSections_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func HeaderSections_GetNamePath(obj uintptr) string {
    ret, _, _ := headerSections_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSections_ClassType(obj uintptr) TClass {
    ret, _, _ := headerSections_ClassType.Call(obj)
    return TClass(ret)
}

func HeaderSections_ClassName(obj uintptr) string {
    ret, _, _ := headerSections_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSections_InstanceSize(obj uintptr) int32 {
    ret, _, _ := headerSections_InstanceSize.Call(obj)
    return int32(ret)
}

func HeaderSections_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := headerSections_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func HeaderSections_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := headerSections_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func HeaderSections_GetHashCode(obj uintptr) int32 {
    ret, _, _ := headerSections_GetHashCode.Call(obj)
    return int32(ret)
}

func HeaderSections_ToString(obj uintptr) string {
    ret, _, _ := headerSections_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func HeaderSections_GetCount(obj uintptr) int32 {
    ret, _, _ := headerSections_GetCount.Call(obj)
    return int32(ret)
}

func HeaderSections_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := headerSections_GetItems.Call(obj, uintptr(Index))
    return ret
}

func HeaderSections_SetItems(obj uintptr, Index int32, value uintptr) {
   headerSections_SetItems.Call(obj, uintptr(Index), value)
}

func HeaderSections_StaticClassType() TClass {
    r, _, _:= headerSections_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TLabeledEdit ---------------------------

func LabeledEdit_Create(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_Create.Call(obj)
    return ret
}

func LabeledEdit_Free(obj uintptr) {
    labeledEdit_Free.Call(obj)
}

func LabeledEdit_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    labeledEdit_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func LabeledEdit_Clear(obj uintptr)  {
    labeledEdit_Clear.Call(obj)
}

func LabeledEdit_ClearSelection(obj uintptr)  {
    labeledEdit_ClearSelection.Call(obj)
}

func LabeledEdit_CopyToClipboard(obj uintptr)  {
    labeledEdit_CopyToClipboard.Call(obj)
}

func LabeledEdit_CutToClipboard(obj uintptr)  {
    labeledEdit_CutToClipboard.Call(obj)
}

func LabeledEdit_PasteFromClipboard(obj uintptr)  {
    labeledEdit_PasteFromClipboard.Call(obj)
}

func LabeledEdit_Undo(obj uintptr)  {
    labeledEdit_Undo.Call(obj)
}

func LabeledEdit_SelectAll(obj uintptr)  {
    labeledEdit_SelectAll.Call(obj)
}

func LabeledEdit_CanFocus(obj uintptr) bool {
    ret, _, _ := labeledEdit_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := labeledEdit_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func LabeledEdit_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := labeledEdit_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func LabeledEdit_DisableAlign(obj uintptr)  {
    labeledEdit_DisableAlign.Call(obj)
}

func LabeledEdit_EnableAlign(obj uintptr)  {
    labeledEdit_EnableAlign.Call(obj)
}

func LabeledEdit_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := labeledEdit_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func LabeledEdit_FlipChildren(obj uintptr, AllLevels bool)  {
    labeledEdit_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func LabeledEdit_Focused(obj uintptr) bool {
    ret, _, _ := labeledEdit_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_HandleAllocated(obj uintptr) bool {
    ret, _, _ := labeledEdit_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_InsertControl(obj uintptr, AControl uintptr)  {
    labeledEdit_InsertControl.Call(obj, AControl )
}

func LabeledEdit_Invalidate(obj uintptr)  {
    labeledEdit_Invalidate.Call(obj)
}

func LabeledEdit_RemoveControl(obj uintptr, AControl uintptr)  {
    labeledEdit_RemoveControl.Call(obj, AControl )
}

func LabeledEdit_Realign(obj uintptr)  {
    labeledEdit_Realign.Call(obj)
}

func LabeledEdit_Repaint(obj uintptr)  {
    labeledEdit_Repaint.Call(obj)
}

func LabeledEdit_ScaleBy(obj uintptr, M int32, D int32)  {
    labeledEdit_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func LabeledEdit_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    labeledEdit_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func LabeledEdit_SetFocus(obj uintptr)  {
    labeledEdit_SetFocus.Call(obj)
}

func LabeledEdit_Update(obj uintptr)  {
    labeledEdit_Update.Call(obj)
}

func LabeledEdit_BringToFront(obj uintptr)  {
    labeledEdit_BringToFront.Call(obj)
}

func LabeledEdit_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    labeledEdit_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    labeledEdit_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_Dragging(obj uintptr) bool {
    ret, _, _ := labeledEdit_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_HasParent(obj uintptr) bool {
    ret, _, _ := labeledEdit_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_Hide(obj uintptr)  {
    labeledEdit_Hide.Call(obj)
}

func LabeledEdit_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := labeledEdit_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func LabeledEdit_Refresh(obj uintptr)  {
    labeledEdit_Refresh.Call(obj)
}

func LabeledEdit_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    labeledEdit_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    labeledEdit_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_SendToBack(obj uintptr)  {
    labeledEdit_SendToBack.Call(obj)
}

func LabeledEdit_Show(obj uintptr)  {
    labeledEdit_Show.Call(obj)
}

func LabeledEdit_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := labeledEdit_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func LabeledEdit_GetTextLen(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetTextLen.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetTextBuf(obj uintptr, Buffer string)  {
    labeledEdit_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func LabeledEdit_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := labeledEdit_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func LabeledEdit_GetNamePath(obj uintptr) string {
    ret, _, _ := labeledEdit_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_Assign(obj uintptr, Source uintptr)  {
    labeledEdit_Assign.Call(obj, Source )
}

func LabeledEdit_ClassType(obj uintptr) TClass {
    ret, _, _ := labeledEdit_ClassType.Call(obj)
    return TClass(ret)
}

func LabeledEdit_ClassName(obj uintptr) string {
    ret, _, _ := labeledEdit_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_InstanceSize(obj uintptr) int32 {
    ret, _, _ := labeledEdit_InstanceSize.Call(obj)
    return int32(ret)
}

func LabeledEdit_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := labeledEdit_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func LabeledEdit_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := labeledEdit_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func LabeledEdit_GetHashCode(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetHashCode.Call(obj)
    return int32(ret)
}

func LabeledEdit_ToString(obj uintptr) string {
    ret, _, _ := labeledEdit_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    labeledEdit_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func LabeledEdit_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    labeledEdit_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func LabeledEdit_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    labeledEdit_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func LabeledEdit_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    labeledEdit_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func LabeledEdit_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    labeledEdit_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func LabeledEdit_AnchorClient(obj uintptr, ASpace int32)  {
    labeledEdit_AnchorClient.Call(obj, uintptr(ASpace) )
}

func LabeledEdit_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := labeledEdit_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func LabeledEdit_SetAlignment(obj uintptr, value TAlignment) {
   labeledEdit_SetAlignment.Call(obj, uintptr(value))
}

func LabeledEdit_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := labeledEdit_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func LabeledEdit_SetAnchors(obj uintptr, value TAnchors) {
   labeledEdit_SetAnchors.Call(obj, uintptr(value))
}

func LabeledEdit_GetAutoSelect(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetAutoSelect.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetAutoSelect(obj uintptr, value bool) {
   labeledEdit_SetAutoSelect.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetAutoSize(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetAutoSize(obj uintptr, value bool) {
   labeledEdit_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := labeledEdit_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func LabeledEdit_SetBiDiMode(obj uintptr, value TBiDiMode) {
   labeledEdit_SetBiDiMode.Call(obj, uintptr(value))
}

func LabeledEdit_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := labeledEdit_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func LabeledEdit_SetBorderStyle(obj uintptr, value TBorderStyle) {
   labeledEdit_SetBorderStyle.Call(obj, uintptr(value))
}

func LabeledEdit_GetCharCase(obj uintptr) TEditCharCase {
    ret, _, _ := labeledEdit_GetCharCase.Call(obj)
    return TEditCharCase(ret)
}

func LabeledEdit_SetCharCase(obj uintptr, value TEditCharCase) {
   labeledEdit_SetCharCase.Call(obj, uintptr(value))
}

func LabeledEdit_GetColor(obj uintptr) TColor {
    ret, _, _ := labeledEdit_GetColor.Call(obj)
    return TColor(ret)
}

func LabeledEdit_SetColor(obj uintptr, value TColor) {
   labeledEdit_SetColor.Call(obj, uintptr(value))
}

func LabeledEdit_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetConstraints.Call(obj)
    return ret
}

func LabeledEdit_SetConstraints(obj uintptr, value uintptr) {
   labeledEdit_SetConstraints.Call(obj, value)
}

func LabeledEdit_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetDoubleBuffered(obj uintptr, value bool) {
   labeledEdit_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := labeledEdit_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func LabeledEdit_SetDragCursor(obj uintptr, value TCursor) {
   labeledEdit_SetDragCursor.Call(obj, uintptr(value))
}

func LabeledEdit_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := labeledEdit_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func LabeledEdit_SetDragMode(obj uintptr, value TDragMode) {
   labeledEdit_SetDragMode.Call(obj, uintptr(value))
}

func LabeledEdit_GetEditLabel(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetEditLabel.Call(obj)
    return ret
}

func LabeledEdit_GetEnabled(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetEnabled(obj uintptr, value bool) {
   labeledEdit_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetFont(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetFont.Call(obj)
    return ret
}

func LabeledEdit_SetFont(obj uintptr, value uintptr) {
   labeledEdit_SetFont.Call(obj, value)
}

func LabeledEdit_GetHideSelection(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetHideSelection.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetHideSelection(obj uintptr, value bool) {
   labeledEdit_SetHideSelection.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetLabelPosition(obj uintptr) TLabelPosition {
    ret, _, _ := labeledEdit_GetLabelPosition.Call(obj)
    return TLabelPosition(ret)
}

func LabeledEdit_SetLabelPosition(obj uintptr, value TLabelPosition) {
   labeledEdit_SetLabelPosition.Call(obj, uintptr(value))
}

func LabeledEdit_GetLabelSpacing(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetLabelSpacing.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetLabelSpacing(obj uintptr, value int32) {
   labeledEdit_SetLabelSpacing.Call(obj, uintptr(value))
}

func LabeledEdit_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetMaxLength.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetMaxLength(obj uintptr, value int32) {
   labeledEdit_SetMaxLength.Call(obj, uintptr(value))
}

func LabeledEdit_GetNumbersOnly(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetNumbersOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetNumbersOnly(obj uintptr, value bool) {
   labeledEdit_SetNumbersOnly.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentColor(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentColor(obj uintptr, value bool) {
   labeledEdit_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentDoubleBuffered(obj uintptr, value bool) {
   labeledEdit_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentFont(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentFont(obj uintptr, value bool) {
   labeledEdit_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetParentShowHint(obj uintptr, value bool) {
   labeledEdit_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetPasswordChar(obj uintptr) uint16 {
    ret, _, _ := labeledEdit_GetPasswordChar.Call(obj)
    return uint16(ret)
}

func LabeledEdit_SetPasswordChar(obj uintptr, value uint16) {
   labeledEdit_SetPasswordChar.Call(obj, uintptr(value))
}

func LabeledEdit_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetPopupMenu.Call(obj)
    return ret
}

func LabeledEdit_SetPopupMenu(obj uintptr, value uintptr) {
   labeledEdit_SetPopupMenu.Call(obj, value)
}

func LabeledEdit_GetReadOnly(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetReadOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetReadOnly(obj uintptr, value bool) {
   labeledEdit_SetReadOnly.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetShowHint(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetShowHint(obj uintptr, value bool) {
   labeledEdit_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := labeledEdit_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func LabeledEdit_SetTabOrder(obj uintptr, value TTabOrder) {
   labeledEdit_SetTabOrder.Call(obj, uintptr(value))
}

func LabeledEdit_GetTabStop(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetTabStop(obj uintptr, value bool) {
   labeledEdit_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetText(obj uintptr) string {
    ret, _, _ := labeledEdit_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_SetText(obj uintptr, value string) {
   labeledEdit_SetText.Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetTextHint(obj uintptr) string {
    ret, _, _ := labeledEdit_GetTextHint.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_SetTextHint(obj uintptr, value string) {
   labeledEdit_SetTextHint.Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetVisible(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetVisible(obj uintptr, value bool) {
   labeledEdit_SetVisible.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_SetOnChange(obj uintptr, fn interface{}) {
    labeledEdit_SetOnChange.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnClick(obj uintptr, fn interface{}) {
    labeledEdit_SetOnClick.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnDblClick(obj uintptr, fn interface{}) {
    labeledEdit_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnDragDrop(obj uintptr, fn interface{}) {
    labeledEdit_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnDragOver(obj uintptr, fn interface{}) {
    labeledEdit_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnEndDrag(obj uintptr, fn interface{}) {
    labeledEdit_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnEnter(obj uintptr, fn interface{}) {
    labeledEdit_SetOnEnter.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnExit(obj uintptr, fn interface{}) {
    labeledEdit_SetOnExit.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnKeyDown(obj uintptr, fn interface{}) {
    labeledEdit_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnKeyPress(obj uintptr, fn interface{}) {
    labeledEdit_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnKeyUp(obj uintptr, fn interface{}) {
    labeledEdit_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnMouseDown(obj uintptr, fn interface{}) {
    labeledEdit_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnMouseEnter(obj uintptr, fn interface{}) {
    labeledEdit_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnMouseLeave(obj uintptr, fn interface{}) {
    labeledEdit_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnMouseMove(obj uintptr, fn interface{}) {
    labeledEdit_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func LabeledEdit_SetOnMouseUp(obj uintptr, fn interface{}) {
    labeledEdit_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func LabeledEdit_GetCanUndo(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetCanUndo.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_GetModified(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetModified.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetModified(obj uintptr, value bool) {
   labeledEdit_SetModified.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetSelLength(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetSelLength.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetSelLength(obj uintptr, value int32) {
   labeledEdit_SetSelLength.Call(obj, uintptr(value))
}

func LabeledEdit_GetSelStart(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetSelStart.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetSelStart(obj uintptr, value int32) {
   labeledEdit_SetSelStart.Call(obj, uintptr(value))
}

func LabeledEdit_GetSelText(obj uintptr) string {
    ret, _, _ := labeledEdit_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_SetSelText(obj uintptr, value string) {
   labeledEdit_SetSelText.Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetDockClientCount.Call(obj)
    return int32(ret)
}

func LabeledEdit_GetDockSite(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetDockSite(obj uintptr, value bool) {
   labeledEdit_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func LabeledEdit_GetBrush(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetBrush.Call(obj)
    return ret
}

func LabeledEdit_GetControlCount(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetControlCount.Call(obj)
    return int32(ret)
}

func LabeledEdit_GetHandle(obj uintptr) HWND {
    ret, _, _ := labeledEdit_GetHandle.Call(obj)
    return HWND(ret)
}

func LabeledEdit_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := labeledEdit_GetParentWindow.Call(obj)
    return HWND(ret)
}

func LabeledEdit_SetParentWindow(obj uintptr, value HWND) {
   labeledEdit_SetParentWindow.Call(obj, uintptr(value))
}

func LabeledEdit_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_SetUseDockManager(obj uintptr, value bool) {
   labeledEdit_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func LabeledEdit_GetAction(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetAction.Call(obj)
    return ret
}

func LabeledEdit_SetAction(obj uintptr, value uintptr) {
   labeledEdit_SetAction.Call(obj, value)
}

func LabeledEdit_GetAlign(obj uintptr) TAlign {
    ret, _, _ := labeledEdit_GetAlign.Call(obj)
    return TAlign(ret)
}

func LabeledEdit_SetAlign(obj uintptr, value TAlign) {
   labeledEdit_SetAlign.Call(obj, uintptr(value))
}

func LabeledEdit_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    labeledEdit_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_SetBoundsRect(obj uintptr, value TRect) {
   labeledEdit_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func LabeledEdit_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetClientHeight.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetClientHeight(obj uintptr, value int32) {
   labeledEdit_SetClientHeight.Call(obj, uintptr(value))
}

func LabeledEdit_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    labeledEdit_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_GetClientRect(obj uintptr) TRect {
    var ret TRect
    labeledEdit_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func LabeledEdit_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetClientWidth.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetClientWidth(obj uintptr, value int32) {
   labeledEdit_SetClientWidth.Call(obj, uintptr(value))
}

func LabeledEdit_GetControlState(obj uintptr) TControlState {
    ret, _, _ := labeledEdit_GetControlState.Call(obj)
    return TControlState(ret)
}

func LabeledEdit_SetControlState(obj uintptr, value TControlState) {
   labeledEdit_SetControlState.Call(obj, uintptr(value))
}

func LabeledEdit_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := labeledEdit_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func LabeledEdit_SetControlStyle(obj uintptr, value TControlStyle) {
   labeledEdit_SetControlStyle.Call(obj, uintptr(value))
}

func LabeledEdit_GetFloating(obj uintptr) bool {
    ret, _, _ := labeledEdit_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func LabeledEdit_GetParent(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetParent.Call(obj)
    return ret
}

func LabeledEdit_SetParent(obj uintptr, value uintptr) {
   labeledEdit_SetParent.Call(obj, value)
}

func LabeledEdit_GetLeft(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetLeft.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetLeft(obj uintptr, value int32) {
   labeledEdit_SetLeft.Call(obj, uintptr(value))
}

func LabeledEdit_GetTop(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetTop.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetTop(obj uintptr, value int32) {
   labeledEdit_SetTop.Call(obj, uintptr(value))
}

func LabeledEdit_GetWidth(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetWidth.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetWidth(obj uintptr, value int32) {
   labeledEdit_SetWidth.Call(obj, uintptr(value))
}

func LabeledEdit_GetHeight(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetHeight.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetHeight(obj uintptr, value int32) {
   labeledEdit_SetHeight.Call(obj, uintptr(value))
}

func LabeledEdit_GetCursor(obj uintptr) TCursor {
    ret, _, _ := labeledEdit_GetCursor.Call(obj)
    return TCursor(ret)
}

func LabeledEdit_SetCursor(obj uintptr, value TCursor) {
   labeledEdit_SetCursor.Call(obj, uintptr(value))
}

func LabeledEdit_GetHint(obj uintptr) string {
    ret, _, _ := labeledEdit_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_SetHint(obj uintptr, value string) {
   labeledEdit_SetHint.Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetComponentCount.Call(obj)
    return int32(ret)
}

func LabeledEdit_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := labeledEdit_GetComponentIndex.Call(obj)
    return int32(ret)
}

func LabeledEdit_SetComponentIndex(obj uintptr, value int32) {
   labeledEdit_SetComponentIndex.Call(obj, uintptr(value))
}

func LabeledEdit_GetOwner(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetOwner.Call(obj)
    return ret
}

func LabeledEdit_GetName(obj uintptr) string {
    ret, _, _ := labeledEdit_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func LabeledEdit_SetName(obj uintptr, value string) {
   labeledEdit_SetName.Call(obj, GoStrToDStr(value))
}

func LabeledEdit_GetTag(obj uintptr) int {
    ret, _, _ := labeledEdit_GetTag.Call(obj)
    return int(ret)
}

func LabeledEdit_SetTag(obj uintptr, value int) {
   labeledEdit_SetTag.Call(obj, uintptr(value))
}

func LabeledEdit_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetAnchorSideLeft.Call(obj)
    return ret
}

func LabeledEdit_SetAnchorSideLeft(obj uintptr, value uintptr) {
   labeledEdit_SetAnchorSideLeft.Call(obj, value)
}

func LabeledEdit_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetAnchorSideTop.Call(obj)
    return ret
}

func LabeledEdit_SetAnchorSideTop(obj uintptr, value uintptr) {
   labeledEdit_SetAnchorSideTop.Call(obj, value)
}

func LabeledEdit_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetAnchorSideRight.Call(obj)
    return ret
}

func LabeledEdit_SetAnchorSideRight(obj uintptr, value uintptr) {
   labeledEdit_SetAnchorSideRight.Call(obj, value)
}

func LabeledEdit_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetAnchorSideBottom.Call(obj)
    return ret
}

func LabeledEdit_SetAnchorSideBottom(obj uintptr, value uintptr) {
   labeledEdit_SetAnchorSideBottom.Call(obj, value)
}

func LabeledEdit_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetChildSizing.Call(obj)
    return ret
}

func LabeledEdit_SetChildSizing(obj uintptr, value uintptr) {
   labeledEdit_SetChildSizing.Call(obj, value)
}

func LabeledEdit_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := labeledEdit_GetBorderSpacing.Call(obj)
    return ret
}

func LabeledEdit_SetBorderSpacing(obj uintptr, value uintptr) {
   labeledEdit_SetBorderSpacing.Call(obj, value)
}

func LabeledEdit_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := labeledEdit_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func LabeledEdit_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := labeledEdit_GetControls.Call(obj, uintptr(Index))
    return ret
}

func LabeledEdit_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := labeledEdit_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func LabeledEdit_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := labeledEdit_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func LabeledEdit_StaticClassType() TClass {
    r, _, _:= labeledEdit_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TBoundLabel ---------------------------

func BoundLabel_Create(obj uintptr) uintptr {
    ret, _, _ := boundLabel_Create.Call(obj)
    return ret
}

func BoundLabel_Free(obj uintptr) {
    boundLabel_Free.Call(obj)
}

func BoundLabel_BringToFront(obj uintptr)  {
    boundLabel_BringToFront.Call(obj)
}

func BoundLabel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    boundLabel_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    boundLabel_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_Dragging(obj uintptr) bool {
    ret, _, _ := boundLabel_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_HasParent(obj uintptr) bool {
    ret, _, _ := boundLabel_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_Hide(obj uintptr)  {
    boundLabel_Hide.Call(obj)
}

func BoundLabel_Invalidate(obj uintptr)  {
    boundLabel_Invalidate.Call(obj)
}

func BoundLabel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := boundLabel_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func BoundLabel_Refresh(obj uintptr)  {
    boundLabel_Refresh.Call(obj)
}

func BoundLabel_Repaint(obj uintptr)  {
    boundLabel_Repaint.Call(obj)
}

func BoundLabel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    boundLabel_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    boundLabel_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_SendToBack(obj uintptr)  {
    boundLabel_SendToBack.Call(obj)
}

func BoundLabel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    boundLabel_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func BoundLabel_Show(obj uintptr)  {
    boundLabel_Show.Call(obj)
}

func BoundLabel_Update(obj uintptr)  {
    boundLabel_Update.Call(obj)
}

func BoundLabel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := boundLabel_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func BoundLabel_GetTextLen(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetTextLen.Call(obj)
    return int32(ret)
}

func BoundLabel_SetTextBuf(obj uintptr, Buffer string)  {
    boundLabel_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func BoundLabel_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := boundLabel_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func BoundLabel_GetNamePath(obj uintptr) string {
    ret, _, _ := boundLabel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_Assign(obj uintptr, Source uintptr)  {
    boundLabel_Assign.Call(obj, Source )
}

func BoundLabel_ClassType(obj uintptr) TClass {
    ret, _, _ := boundLabel_ClassType.Call(obj)
    return TClass(ret)
}

func BoundLabel_ClassName(obj uintptr) string {
    ret, _, _ := boundLabel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := boundLabel_InstanceSize.Call(obj)
    return int32(ret)
}

func BoundLabel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := boundLabel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func BoundLabel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := boundLabel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func BoundLabel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetHashCode.Call(obj)
    return int32(ret)
}

func BoundLabel_ToString(obj uintptr) string {
    ret, _, _ := boundLabel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    boundLabel_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func BoundLabel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    boundLabel_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func BoundLabel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    boundLabel_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func BoundLabel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    boundLabel_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func BoundLabel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    boundLabel_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func BoundLabel_AnchorClient(obj uintptr, ASpace int32)  {
    boundLabel_AnchorClient.Call(obj, uintptr(ASpace) )
}

func BoundLabel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := boundLabel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func BoundLabel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   boundLabel_SetBiDiMode.Call(obj, uintptr(value))
}

func BoundLabel_GetCaption(obj uintptr) string {
    ret, _, _ := boundLabel_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_SetCaption(obj uintptr, value string) {
   boundLabel_SetCaption.Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetColor(obj uintptr) TColor {
    ret, _, _ := boundLabel_GetColor.Call(obj)
    return TColor(ret)
}

func BoundLabel_SetColor(obj uintptr, value TColor) {
   boundLabel_SetColor.Call(obj, uintptr(value))
}

func BoundLabel_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := boundLabel_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func BoundLabel_SetDragCursor(obj uintptr, value TCursor) {
   boundLabel_SetDragCursor.Call(obj, uintptr(value))
}

func BoundLabel_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := boundLabel_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func BoundLabel_SetDragMode(obj uintptr, value TDragMode) {
   boundLabel_SetDragMode.Call(obj, uintptr(value))
}

func BoundLabel_GetFont(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetFont.Call(obj)
    return ret
}

func BoundLabel_SetFont(obj uintptr, value uintptr) {
   boundLabel_SetFont.Call(obj, value)
}

func BoundLabel_GetHeight(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetHeight.Call(obj)
    return int32(ret)
}

func BoundLabel_SetHeight(obj uintptr, value int32) {
   boundLabel_SetHeight.Call(obj, uintptr(value))
}

func BoundLabel_GetLeft(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetLeft.Call(obj)
    return int32(ret)
}

func BoundLabel_GetParentColor(obj uintptr) bool {
    ret, _, _ := boundLabel_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetParentColor(obj uintptr, value bool) {
   boundLabel_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParentFont(obj uintptr) bool {
    ret, _, _ := boundLabel_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetParentFont(obj uintptr, value bool) {
   boundLabel_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := boundLabel_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetParentShowHint(obj uintptr, value bool) {
   boundLabel_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetPopupMenu.Call(obj)
    return ret
}

func BoundLabel_SetPopupMenu(obj uintptr, value uintptr) {
   boundLabel_SetPopupMenu.Call(obj, value)
}

func BoundLabel_GetShowAccelChar(obj uintptr) bool {
    ret, _, _ := boundLabel_GetShowAccelChar.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetShowAccelChar(obj uintptr, value bool) {
   boundLabel_SetShowAccelChar.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetShowHint(obj uintptr) bool {
    ret, _, _ := boundLabel_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetShowHint(obj uintptr, value bool) {
   boundLabel_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetTop(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetTop.Call(obj)
    return int32(ret)
}

func BoundLabel_GetLayout(obj uintptr) TTextLayout {
    ret, _, _ := boundLabel_GetLayout.Call(obj)
    return TTextLayout(ret)
}

func BoundLabel_SetLayout(obj uintptr, value TTextLayout) {
   boundLabel_SetLayout.Call(obj, uintptr(value))
}

func BoundLabel_GetWordWrap(obj uintptr) bool {
    ret, _, _ := boundLabel_GetWordWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetWordWrap(obj uintptr, value bool) {
   boundLabel_SetWordWrap.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetWidth(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetWidth.Call(obj)
    return int32(ret)
}

func BoundLabel_SetWidth(obj uintptr, value int32) {
   boundLabel_SetWidth.Call(obj, uintptr(value))
}

func BoundLabel_SetOnClick(obj uintptr, fn interface{}) {
    boundLabel_SetOnClick.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnDblClick(obj uintptr, fn interface{}) {
    boundLabel_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnDragDrop(obj uintptr, fn interface{}) {
    boundLabel_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnDragOver(obj uintptr, fn interface{}) {
    boundLabel_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnEndDrag(obj uintptr, fn interface{}) {
    boundLabel_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnMouseDown(obj uintptr, fn interface{}) {
    boundLabel_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnMouseMove(obj uintptr, fn interface{}) {
    boundLabel_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func BoundLabel_SetOnMouseUp(obj uintptr, fn interface{}) {
    boundLabel_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func BoundLabel_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetCanvas.Call(obj)
    return ret
}

func BoundLabel_GetEnabled(obj uintptr) bool {
    ret, _, _ := boundLabel_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetEnabled(obj uintptr, value bool) {
   boundLabel_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetAction(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetAction.Call(obj)
    return ret
}

func BoundLabel_SetAction(obj uintptr, value uintptr) {
   boundLabel_SetAction.Call(obj, value)
}

func BoundLabel_GetAlign(obj uintptr) TAlign {
    ret, _, _ := boundLabel_GetAlign.Call(obj)
    return TAlign(ret)
}

func BoundLabel_SetAlign(obj uintptr, value TAlign) {
   boundLabel_SetAlign.Call(obj, uintptr(value))
}

func BoundLabel_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := boundLabel_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func BoundLabel_SetAnchors(obj uintptr, value TAnchors) {
   boundLabel_SetAnchors.Call(obj, uintptr(value))
}

func BoundLabel_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    boundLabel_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_SetBoundsRect(obj uintptr, value TRect) {
   boundLabel_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func BoundLabel_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetClientHeight.Call(obj)
    return int32(ret)
}

func BoundLabel_SetClientHeight(obj uintptr, value int32) {
   boundLabel_SetClientHeight.Call(obj, uintptr(value))
}

func BoundLabel_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    boundLabel_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_GetClientRect(obj uintptr) TRect {
    var ret TRect
    boundLabel_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func BoundLabel_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetClientWidth.Call(obj)
    return int32(ret)
}

func BoundLabel_SetClientWidth(obj uintptr, value int32) {
   boundLabel_SetClientWidth.Call(obj, uintptr(value))
}

func BoundLabel_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetConstraints.Call(obj)
    return ret
}

func BoundLabel_SetConstraints(obj uintptr, value uintptr) {
   boundLabel_SetConstraints.Call(obj, value)
}

func BoundLabel_GetControlState(obj uintptr) TControlState {
    ret, _, _ := boundLabel_GetControlState.Call(obj)
    return TControlState(ret)
}

func BoundLabel_SetControlState(obj uintptr, value TControlState) {
   boundLabel_SetControlState.Call(obj, uintptr(value))
}

func BoundLabel_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := boundLabel_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func BoundLabel_SetControlStyle(obj uintptr, value TControlStyle) {
   boundLabel_SetControlStyle.Call(obj, uintptr(value))
}

func BoundLabel_GetFloating(obj uintptr) bool {
    ret, _, _ := boundLabel_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_GetVisible(obj uintptr) bool {
    ret, _, _ := boundLabel_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func BoundLabel_SetVisible(obj uintptr, value bool) {
   boundLabel_SetVisible.Call(obj, GoBoolToDBool(value))
}

func BoundLabel_GetParent(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetParent.Call(obj)
    return ret
}

func BoundLabel_SetParent(obj uintptr, value uintptr) {
   boundLabel_SetParent.Call(obj, value)
}

func BoundLabel_GetCursor(obj uintptr) TCursor {
    ret, _, _ := boundLabel_GetCursor.Call(obj)
    return TCursor(ret)
}

func BoundLabel_SetCursor(obj uintptr, value TCursor) {
   boundLabel_SetCursor.Call(obj, uintptr(value))
}

func BoundLabel_GetHint(obj uintptr) string {
    ret, _, _ := boundLabel_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_SetHint(obj uintptr, value string) {
   boundLabel_SetHint.Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetComponentCount.Call(obj)
    return int32(ret)
}

func BoundLabel_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := boundLabel_GetComponentIndex.Call(obj)
    return int32(ret)
}

func BoundLabel_SetComponentIndex(obj uintptr, value int32) {
   boundLabel_SetComponentIndex.Call(obj, uintptr(value))
}

func BoundLabel_GetOwner(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetOwner.Call(obj)
    return ret
}

func BoundLabel_GetName(obj uintptr) string {
    ret, _, _ := boundLabel_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func BoundLabel_SetName(obj uintptr, value string) {
   boundLabel_SetName.Call(obj, GoStrToDStr(value))
}

func BoundLabel_GetTag(obj uintptr) int {
    ret, _, _ := boundLabel_GetTag.Call(obj)
    return int(ret)
}

func BoundLabel_SetTag(obj uintptr, value int) {
   boundLabel_SetTag.Call(obj, uintptr(value))
}

func BoundLabel_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetAnchorSideLeft.Call(obj)
    return ret
}

func BoundLabel_SetAnchorSideLeft(obj uintptr, value uintptr) {
   boundLabel_SetAnchorSideLeft.Call(obj, value)
}

func BoundLabel_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetAnchorSideTop.Call(obj)
    return ret
}

func BoundLabel_SetAnchorSideTop(obj uintptr, value uintptr) {
   boundLabel_SetAnchorSideTop.Call(obj, value)
}

func BoundLabel_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetAnchorSideRight.Call(obj)
    return ret
}

func BoundLabel_SetAnchorSideRight(obj uintptr, value uintptr) {
   boundLabel_SetAnchorSideRight.Call(obj, value)
}

func BoundLabel_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetAnchorSideBottom.Call(obj)
    return ret
}

func BoundLabel_SetAnchorSideBottom(obj uintptr, value uintptr) {
   boundLabel_SetAnchorSideBottom.Call(obj, value)
}

func BoundLabel_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := boundLabel_GetBorderSpacing.Call(obj)
    return ret
}

func BoundLabel_SetBorderSpacing(obj uintptr, value uintptr) {
   boundLabel_SetBorderSpacing.Call(obj, value)
}

func BoundLabel_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := boundLabel_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func BoundLabel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := boundLabel_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func BoundLabel_StaticClassType() TClass {
    r, _, _:= boundLabel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TFlowPanel ---------------------------

func FlowPanel_Create(obj uintptr) uintptr {
    ret, _, _ := flowPanel_Create.Call(obj)
    return ret
}

func FlowPanel_Free(obj uintptr) {
    flowPanel_Free.Call(obj)
}

func FlowPanel_GetControlIndex(obj uintptr, AControl uintptr) int32 {
    ret, _, _ := flowPanel_GetControlIndex.Call(obj, AControl )
    return int32(ret)
}

func FlowPanel_SetControlIndex(obj uintptr, AControl uintptr, Index int32)  {
    flowPanel_SetControlIndex.Call(obj, AControl , uintptr(Index) )
}

func FlowPanel_CanFocus(obj uintptr) bool {
    ret, _, _ := flowPanel_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := flowPanel_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func FlowPanel_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := flowPanel_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func FlowPanel_DisableAlign(obj uintptr)  {
    flowPanel_DisableAlign.Call(obj)
}

func FlowPanel_EnableAlign(obj uintptr)  {
    flowPanel_EnableAlign.Call(obj)
}

func FlowPanel_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := flowPanel_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func FlowPanel_FlipChildren(obj uintptr, AllLevels bool)  {
    flowPanel_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func FlowPanel_Focused(obj uintptr) bool {
    ret, _, _ := flowPanel_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_HandleAllocated(obj uintptr) bool {
    ret, _, _ := flowPanel_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_InsertControl(obj uintptr, AControl uintptr)  {
    flowPanel_InsertControl.Call(obj, AControl )
}

func FlowPanel_Invalidate(obj uintptr)  {
    flowPanel_Invalidate.Call(obj)
}

func FlowPanel_RemoveControl(obj uintptr, AControl uintptr)  {
    flowPanel_RemoveControl.Call(obj, AControl )
}

func FlowPanel_Realign(obj uintptr)  {
    flowPanel_Realign.Call(obj)
}

func FlowPanel_Repaint(obj uintptr)  {
    flowPanel_Repaint.Call(obj)
}

func FlowPanel_ScaleBy(obj uintptr, M int32, D int32)  {
    flowPanel_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func FlowPanel_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    flowPanel_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func FlowPanel_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    flowPanel_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func FlowPanel_SetFocus(obj uintptr)  {
    flowPanel_SetFocus.Call(obj)
}

func FlowPanel_Update(obj uintptr)  {
    flowPanel_Update.Call(obj)
}

func FlowPanel_BringToFront(obj uintptr)  {
    flowPanel_BringToFront.Call(obj)
}

func FlowPanel_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    flowPanel_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    flowPanel_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_Dragging(obj uintptr) bool {
    ret, _, _ := flowPanel_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_HasParent(obj uintptr) bool {
    ret, _, _ := flowPanel_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_Hide(obj uintptr)  {
    flowPanel_Hide.Call(obj)
}

func FlowPanel_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := flowPanel_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func FlowPanel_Refresh(obj uintptr)  {
    flowPanel_Refresh.Call(obj)
}

func FlowPanel_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    flowPanel_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    flowPanel_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_SendToBack(obj uintptr)  {
    flowPanel_SendToBack.Call(obj)
}

func FlowPanel_Show(obj uintptr)  {
    flowPanel_Show.Call(obj)
}

func FlowPanel_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := flowPanel_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func FlowPanel_GetTextLen(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetTextLen.Call(obj)
    return int32(ret)
}

func FlowPanel_SetTextBuf(obj uintptr, Buffer string)  {
    flowPanel_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func FlowPanel_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := flowPanel_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func FlowPanel_GetNamePath(obj uintptr) string {
    ret, _, _ := flowPanel_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_Assign(obj uintptr, Source uintptr)  {
    flowPanel_Assign.Call(obj, Source )
}

func FlowPanel_ClassType(obj uintptr) TClass {
    ret, _, _ := flowPanel_ClassType.Call(obj)
    return TClass(ret)
}

func FlowPanel_ClassName(obj uintptr) string {
    ret, _, _ := flowPanel_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_InstanceSize(obj uintptr) int32 {
    ret, _, _ := flowPanel_InstanceSize.Call(obj)
    return int32(ret)
}

func FlowPanel_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := flowPanel_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func FlowPanel_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := flowPanel_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func FlowPanel_GetHashCode(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetHashCode.Call(obj)
    return int32(ret)
}

func FlowPanel_ToString(obj uintptr) string {
    ret, _, _ := flowPanel_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    flowPanel_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func FlowPanel_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    flowPanel_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func FlowPanel_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    flowPanel_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func FlowPanel_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    flowPanel_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func FlowPanel_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    flowPanel_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func FlowPanel_AnchorClient(obj uintptr, ASpace int32)  {
    flowPanel_AnchorClient.Call(obj, uintptr(ASpace) )
}

func FlowPanel_GetAlign(obj uintptr) TAlign {
    ret, _, _ := flowPanel_GetAlign.Call(obj)
    return TAlign(ret)
}

func FlowPanel_SetAlign(obj uintptr, value TAlign) {
   flowPanel_SetAlign.Call(obj, uintptr(value))
}

func FlowPanel_GetAlignment(obj uintptr) TAlignment {
    ret, _, _ := flowPanel_GetAlignment.Call(obj)
    return TAlignment(ret)
}

func FlowPanel_SetAlignment(obj uintptr, value TAlignment) {
   flowPanel_SetAlignment.Call(obj, uintptr(value))
}

func FlowPanel_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := flowPanel_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func FlowPanel_SetAnchors(obj uintptr, value TAnchors) {
   flowPanel_SetAnchors.Call(obj, uintptr(value))
}

func FlowPanel_GetAutoSize(obj uintptr) bool {
    ret, _, _ := flowPanel_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetAutoSize(obj uintptr, value bool) {
   flowPanel_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetAutoWrap(obj uintptr) bool {
    ret, _, _ := flowPanel_GetAutoWrap.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetAutoWrap(obj uintptr, value bool) {
   flowPanel_SetAutoWrap.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := flowPanel_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func FlowPanel_SetBiDiMode(obj uintptr, value TBiDiMode) {
   flowPanel_SetBiDiMode.Call(obj, uintptr(value))
}

func FlowPanel_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetBorderWidth.Call(obj)
    return int32(ret)
}

func FlowPanel_SetBorderWidth(obj uintptr, value int32) {
   flowPanel_SetBorderWidth.Call(obj, uintptr(value))
}

func FlowPanel_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := flowPanel_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func FlowPanel_SetBorderStyle(obj uintptr, value TBorderStyle) {
   flowPanel_SetBorderStyle.Call(obj, uintptr(value))
}

func FlowPanel_GetCaption(obj uintptr) string {
    ret, _, _ := flowPanel_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_SetCaption(obj uintptr, value string) {
   flowPanel_SetCaption.Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetColor(obj uintptr) TColor {
    ret, _, _ := flowPanel_GetColor.Call(obj)
    return TColor(ret)
}

func FlowPanel_SetColor(obj uintptr, value TColor) {
   flowPanel_SetColor.Call(obj, uintptr(value))
}

func FlowPanel_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetConstraints.Call(obj)
    return ret
}

func FlowPanel_SetConstraints(obj uintptr, value uintptr) {
   flowPanel_SetConstraints.Call(obj, value)
}

func FlowPanel_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := flowPanel_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetUseDockManager(obj uintptr, value bool) {
   flowPanel_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDockSite(obj uintptr) bool {
    ret, _, _ := flowPanel_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetDockSite(obj uintptr, value bool) {
   flowPanel_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := flowPanel_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetDoubleBuffered(obj uintptr, value bool) {
   flowPanel_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := flowPanel_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func FlowPanel_SetDragCursor(obj uintptr, value TCursor) {
   flowPanel_SetDragCursor.Call(obj, uintptr(value))
}

func FlowPanel_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := flowPanel_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func FlowPanel_SetDragKind(obj uintptr, value TDragKind) {
   flowPanel_SetDragKind.Call(obj, uintptr(value))
}

func FlowPanel_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := flowPanel_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func FlowPanel_SetDragMode(obj uintptr, value TDragMode) {
   flowPanel_SetDragMode.Call(obj, uintptr(value))
}

func FlowPanel_GetEnabled(obj uintptr) bool {
    ret, _, _ := flowPanel_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetEnabled(obj uintptr, value bool) {
   flowPanel_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetFlowStyle(obj uintptr) TFlowStyle {
    ret, _, _ := flowPanel_GetFlowStyle.Call(obj)
    return TFlowStyle(ret)
}

func FlowPanel_SetFlowStyle(obj uintptr, value TFlowStyle) {
   flowPanel_SetFlowStyle.Call(obj, uintptr(value))
}

func FlowPanel_GetFullRepaint(obj uintptr) bool {
    ret, _, _ := flowPanel_GetFullRepaint.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetFullRepaint(obj uintptr, value bool) {
   flowPanel_SetFullRepaint.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetFont(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetFont.Call(obj)
    return ret
}

func FlowPanel_SetFont(obj uintptr, value uintptr) {
   flowPanel_SetFont.Call(obj, value)
}

func FlowPanel_GetParentBackground(obj uintptr) bool {
    ret, _, _ := flowPanel_GetParentBackground.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetParentBackground(obj uintptr, value bool) {
   flowPanel_SetParentBackground.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentColor(obj uintptr) bool {
    ret, _, _ := flowPanel_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetParentColor(obj uintptr, value bool) {
   flowPanel_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := flowPanel_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetParentDoubleBuffered(obj uintptr, value bool) {
   flowPanel_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentFont(obj uintptr) bool {
    ret, _, _ := flowPanel_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetParentFont(obj uintptr, value bool) {
   flowPanel_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := flowPanel_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetParentShowHint(obj uintptr, value bool) {
   flowPanel_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetPopupMenu.Call(obj)
    return ret
}

func FlowPanel_SetPopupMenu(obj uintptr, value uintptr) {
   flowPanel_SetPopupMenu.Call(obj, value)
}

func FlowPanel_GetShowHint(obj uintptr) bool {
    ret, _, _ := flowPanel_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetShowHint(obj uintptr, value bool) {
   flowPanel_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := flowPanel_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func FlowPanel_SetTabOrder(obj uintptr, value TTabOrder) {
   flowPanel_SetTabOrder.Call(obj, uintptr(value))
}

func FlowPanel_GetTabStop(obj uintptr) bool {
    ret, _, _ := flowPanel_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetTabStop(obj uintptr, value bool) {
   flowPanel_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_GetVisible(obj uintptr) bool {
    ret, _, _ := flowPanel_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_SetVisible(obj uintptr, value bool) {
   flowPanel_SetVisible.Call(obj, GoBoolToDBool(value))
}

func FlowPanel_SetOnAlignPosition(obj uintptr, fn interface{}) {
    flowPanel_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnClick(obj uintptr, fn interface{}) {
    flowPanel_SetOnClick.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnContextPopup(obj uintptr, fn interface{}) {
    flowPanel_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnDockDrop(obj uintptr, fn interface{}) {
    flowPanel_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnDblClick(obj uintptr, fn interface{}) {
    flowPanel_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnDragDrop(obj uintptr, fn interface{}) {
    flowPanel_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnDragOver(obj uintptr, fn interface{}) {
    flowPanel_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnEndDock(obj uintptr, fn interface{}) {
    flowPanel_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnEndDrag(obj uintptr, fn interface{}) {
    flowPanel_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnEnter(obj uintptr, fn interface{}) {
    flowPanel_SetOnEnter.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnExit(obj uintptr, fn interface{}) {
    flowPanel_SetOnExit.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    flowPanel_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnMouseDown(obj uintptr, fn interface{}) {
    flowPanel_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnMouseEnter(obj uintptr, fn interface{}) {
    flowPanel_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnMouseLeave(obj uintptr, fn interface{}) {
    flowPanel_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnMouseMove(obj uintptr, fn interface{}) {
    flowPanel_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnMouseUp(obj uintptr, fn interface{}) {
    flowPanel_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnResize(obj uintptr, fn interface{}) {
    flowPanel_SetOnResize.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnStartDock(obj uintptr, fn interface{}) {
    flowPanel_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func FlowPanel_SetOnUnDock(obj uintptr, fn interface{}) {
    flowPanel_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func FlowPanel_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetDockClientCount.Call(obj)
    return int32(ret)
}

func FlowPanel_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := flowPanel_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func FlowPanel_GetBrush(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetBrush.Call(obj)
    return ret
}

func FlowPanel_GetControlCount(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetControlCount.Call(obj)
    return int32(ret)
}

func FlowPanel_GetHandle(obj uintptr) HWND {
    ret, _, _ := flowPanel_GetHandle.Call(obj)
    return HWND(ret)
}

func FlowPanel_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := flowPanel_GetParentWindow.Call(obj)
    return HWND(ret)
}

func FlowPanel_SetParentWindow(obj uintptr, value HWND) {
   flowPanel_SetParentWindow.Call(obj, uintptr(value))
}

func FlowPanel_GetAction(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetAction.Call(obj)
    return ret
}

func FlowPanel_SetAction(obj uintptr, value uintptr) {
   flowPanel_SetAction.Call(obj, value)
}

func FlowPanel_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    flowPanel_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_SetBoundsRect(obj uintptr, value TRect) {
   flowPanel_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func FlowPanel_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetClientHeight.Call(obj)
    return int32(ret)
}

func FlowPanel_SetClientHeight(obj uintptr, value int32) {
   flowPanel_SetClientHeight.Call(obj, uintptr(value))
}

func FlowPanel_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    flowPanel_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_GetClientRect(obj uintptr) TRect {
    var ret TRect
    flowPanel_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func FlowPanel_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetClientWidth.Call(obj)
    return int32(ret)
}

func FlowPanel_SetClientWidth(obj uintptr, value int32) {
   flowPanel_SetClientWidth.Call(obj, uintptr(value))
}

func FlowPanel_GetControlState(obj uintptr) TControlState {
    ret, _, _ := flowPanel_GetControlState.Call(obj)
    return TControlState(ret)
}

func FlowPanel_SetControlState(obj uintptr, value TControlState) {
   flowPanel_SetControlState.Call(obj, uintptr(value))
}

func FlowPanel_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := flowPanel_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func FlowPanel_SetControlStyle(obj uintptr, value TControlStyle) {
   flowPanel_SetControlStyle.Call(obj, uintptr(value))
}

func FlowPanel_GetFloating(obj uintptr) bool {
    ret, _, _ := flowPanel_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func FlowPanel_GetParent(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetParent.Call(obj)
    return ret
}

func FlowPanel_SetParent(obj uintptr, value uintptr) {
   flowPanel_SetParent.Call(obj, value)
}

func FlowPanel_GetLeft(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetLeft.Call(obj)
    return int32(ret)
}

func FlowPanel_SetLeft(obj uintptr, value int32) {
   flowPanel_SetLeft.Call(obj, uintptr(value))
}

func FlowPanel_GetTop(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetTop.Call(obj)
    return int32(ret)
}

func FlowPanel_SetTop(obj uintptr, value int32) {
   flowPanel_SetTop.Call(obj, uintptr(value))
}

func FlowPanel_GetWidth(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetWidth.Call(obj)
    return int32(ret)
}

func FlowPanel_SetWidth(obj uintptr, value int32) {
   flowPanel_SetWidth.Call(obj, uintptr(value))
}

func FlowPanel_GetHeight(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetHeight.Call(obj)
    return int32(ret)
}

func FlowPanel_SetHeight(obj uintptr, value int32) {
   flowPanel_SetHeight.Call(obj, uintptr(value))
}

func FlowPanel_GetCursor(obj uintptr) TCursor {
    ret, _, _ := flowPanel_GetCursor.Call(obj)
    return TCursor(ret)
}

func FlowPanel_SetCursor(obj uintptr, value TCursor) {
   flowPanel_SetCursor.Call(obj, uintptr(value))
}

func FlowPanel_GetHint(obj uintptr) string {
    ret, _, _ := flowPanel_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_SetHint(obj uintptr, value string) {
   flowPanel_SetHint.Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetComponentCount.Call(obj)
    return int32(ret)
}

func FlowPanel_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := flowPanel_GetComponentIndex.Call(obj)
    return int32(ret)
}

func FlowPanel_SetComponentIndex(obj uintptr, value int32) {
   flowPanel_SetComponentIndex.Call(obj, uintptr(value))
}

func FlowPanel_GetOwner(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetOwner.Call(obj)
    return ret
}

func FlowPanel_GetName(obj uintptr) string {
    ret, _, _ := flowPanel_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func FlowPanel_SetName(obj uintptr, value string) {
   flowPanel_SetName.Call(obj, GoStrToDStr(value))
}

func FlowPanel_GetTag(obj uintptr) int {
    ret, _, _ := flowPanel_GetTag.Call(obj)
    return int(ret)
}

func FlowPanel_SetTag(obj uintptr, value int) {
   flowPanel_SetTag.Call(obj, uintptr(value))
}

func FlowPanel_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetAnchorSideLeft.Call(obj)
    return ret
}

func FlowPanel_SetAnchorSideLeft(obj uintptr, value uintptr) {
   flowPanel_SetAnchorSideLeft.Call(obj, value)
}

func FlowPanel_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetAnchorSideTop.Call(obj)
    return ret
}

func FlowPanel_SetAnchorSideTop(obj uintptr, value uintptr) {
   flowPanel_SetAnchorSideTop.Call(obj, value)
}

func FlowPanel_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetAnchorSideRight.Call(obj)
    return ret
}

func FlowPanel_SetAnchorSideRight(obj uintptr, value uintptr) {
   flowPanel_SetAnchorSideRight.Call(obj, value)
}

func FlowPanel_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetAnchorSideBottom.Call(obj)
    return ret
}

func FlowPanel_SetAnchorSideBottom(obj uintptr, value uintptr) {
   flowPanel_SetAnchorSideBottom.Call(obj, value)
}

func FlowPanel_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetChildSizing.Call(obj)
    return ret
}

func FlowPanel_SetChildSizing(obj uintptr, value uintptr) {
   flowPanel_SetChildSizing.Call(obj, value)
}

func FlowPanel_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := flowPanel_GetBorderSpacing.Call(obj)
    return ret
}

func FlowPanel_SetBorderSpacing(obj uintptr, value uintptr) {
   flowPanel_SetBorderSpacing.Call(obj, value)
}

func FlowPanel_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := flowPanel_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func FlowPanel_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := flowPanel_GetControls.Call(obj, uintptr(Index))
    return ret
}

func FlowPanel_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := flowPanel_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func FlowPanel_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := flowPanel_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func FlowPanel_StaticClassType() TClass {
    r, _, _:= flowPanel_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCoolBar ---------------------------

func CoolBar_Create(obj uintptr) uintptr {
    ret, _, _ := coolBar_Create.Call(obj)
    return ret
}

func CoolBar_Free(obj uintptr) {
    coolBar_Free.Call(obj)
}

func CoolBar_FlipChildren(obj uintptr, AllLevels bool)  {
    coolBar_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func CoolBar_CanFocus(obj uintptr) bool {
    ret, _, _ := coolBar_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := coolBar_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func CoolBar_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := coolBar_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func CoolBar_DisableAlign(obj uintptr)  {
    coolBar_DisableAlign.Call(obj)
}

func CoolBar_EnableAlign(obj uintptr)  {
    coolBar_EnableAlign.Call(obj)
}

func CoolBar_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := coolBar_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func CoolBar_Focused(obj uintptr) bool {
    ret, _, _ := coolBar_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_HandleAllocated(obj uintptr) bool {
    ret, _, _ := coolBar_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_Invalidate(obj uintptr)  {
    coolBar_Invalidate.Call(obj)
}

func CoolBar_RemoveControl(obj uintptr, AControl uintptr)  {
    coolBar_RemoveControl.Call(obj, AControl )
}

func CoolBar_Realign(obj uintptr)  {
    coolBar_Realign.Call(obj)
}

func CoolBar_Repaint(obj uintptr)  {
    coolBar_Repaint.Call(obj)
}

func CoolBar_ScaleBy(obj uintptr, M int32, D int32)  {
    coolBar_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func CoolBar_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    coolBar_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func CoolBar_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    coolBar_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func CoolBar_SetFocus(obj uintptr)  {
    coolBar_SetFocus.Call(obj)
}

func CoolBar_Update(obj uintptr)  {
    coolBar_Update.Call(obj)
}

func CoolBar_BringToFront(obj uintptr)  {
    coolBar_BringToFront.Call(obj)
}

func CoolBar_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    coolBar_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    coolBar_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_Dragging(obj uintptr) bool {
    ret, _, _ := coolBar_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_HasParent(obj uintptr) bool {
    ret, _, _ := coolBar_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_Hide(obj uintptr)  {
    coolBar_Hide.Call(obj)
}

func CoolBar_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := coolBar_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func CoolBar_Refresh(obj uintptr)  {
    coolBar_Refresh.Call(obj)
}

func CoolBar_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    coolBar_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    coolBar_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_SendToBack(obj uintptr)  {
    coolBar_SendToBack.Call(obj)
}

func CoolBar_Show(obj uintptr)  {
    coolBar_Show.Call(obj)
}

func CoolBar_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := coolBar_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func CoolBar_GetTextLen(obj uintptr) int32 {
    ret, _, _ := coolBar_GetTextLen.Call(obj)
    return int32(ret)
}

func CoolBar_SetTextBuf(obj uintptr, Buffer string)  {
    coolBar_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func CoolBar_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := coolBar_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func CoolBar_GetNamePath(obj uintptr) string {
    ret, _, _ := coolBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBar_Assign(obj uintptr, Source uintptr)  {
    coolBar_Assign.Call(obj, Source )
}

func CoolBar_ClassType(obj uintptr) TClass {
    ret, _, _ := coolBar_ClassType.Call(obj)
    return TClass(ret)
}

func CoolBar_ClassName(obj uintptr) string {
    ret, _, _ := coolBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := coolBar_InstanceSize.Call(obj)
    return int32(ret)
}

func CoolBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := coolBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CoolBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := coolBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CoolBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := coolBar_GetHashCode.Call(obj)
    return int32(ret)
}

func CoolBar_ToString(obj uintptr) string {
    ret, _, _ := coolBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBar_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    coolBar_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CoolBar_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    coolBar_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func CoolBar_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    coolBar_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func CoolBar_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    coolBar_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func CoolBar_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    coolBar_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func CoolBar_AnchorClient(obj uintptr, ASpace int32)  {
    coolBar_AnchorClient.Call(obj, uintptr(ASpace) )
}

func CoolBar_GetAlign(obj uintptr) TAlign {
    ret, _, _ := coolBar_GetAlign.Call(obj)
    return TAlign(ret)
}

func CoolBar_SetAlign(obj uintptr, value TAlign) {
   coolBar_SetAlign.Call(obj, uintptr(value))
}

func CoolBar_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := coolBar_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func CoolBar_SetAnchors(obj uintptr, value TAnchors) {
   coolBar_SetAnchors.Call(obj, uintptr(value))
}

func CoolBar_GetAutoSize(obj uintptr) bool {
    ret, _, _ := coolBar_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetAutoSize(obj uintptr, value bool) {
   coolBar_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetBandBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := coolBar_GetBandBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func CoolBar_SetBandBorderStyle(obj uintptr, value TBorderStyle) {
   coolBar_SetBandBorderStyle.Call(obj, uintptr(value))
}

func CoolBar_GetBandMaximize(obj uintptr) TCoolBandMaximize {
    ret, _, _ := coolBar_GetBandMaximize.Call(obj)
    return TCoolBandMaximize(ret)
}

func CoolBar_SetBandMaximize(obj uintptr, value TCoolBandMaximize) {
   coolBar_SetBandMaximize.Call(obj, uintptr(value))
}

func CoolBar_GetBands(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetBands.Call(obj)
    return ret
}

func CoolBar_SetBands(obj uintptr, value uintptr) {
   coolBar_SetBands.Call(obj, value)
}

func CoolBar_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := coolBar_GetBorderWidth.Call(obj)
    return int32(ret)
}

func CoolBar_SetBorderWidth(obj uintptr, value int32) {
   coolBar_SetBorderWidth.Call(obj, uintptr(value))
}

func CoolBar_GetColor(obj uintptr) TColor {
    ret, _, _ := coolBar_GetColor.Call(obj)
    return TColor(ret)
}

func CoolBar_SetColor(obj uintptr, value TColor) {
   coolBar_SetColor.Call(obj, uintptr(value))
}

func CoolBar_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetConstraints.Call(obj)
    return ret
}

func CoolBar_SetConstraints(obj uintptr, value uintptr) {
   coolBar_SetConstraints.Call(obj, value)
}

func CoolBar_GetDockSite(obj uintptr) bool {
    ret, _, _ := coolBar_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetDockSite(obj uintptr, value bool) {
   coolBar_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := coolBar_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetDoubleBuffered(obj uintptr, value bool) {
   coolBar_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := coolBar_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func CoolBar_SetDragCursor(obj uintptr, value TCursor) {
   coolBar_SetDragCursor.Call(obj, uintptr(value))
}

func CoolBar_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := coolBar_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func CoolBar_SetDragKind(obj uintptr, value TDragKind) {
   coolBar_SetDragKind.Call(obj, uintptr(value))
}

func CoolBar_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := coolBar_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func CoolBar_SetDragMode(obj uintptr, value TDragMode) {
   coolBar_SetDragMode.Call(obj, uintptr(value))
}

func CoolBar_GetEdgeBorders(obj uintptr) TEdgeBorders {
    ret, _, _ := coolBar_GetEdgeBorders.Call(obj)
    return TEdgeBorders(ret)
}

func CoolBar_SetEdgeBorders(obj uintptr, value TEdgeBorders) {
   coolBar_SetEdgeBorders.Call(obj, uintptr(value))
}

func CoolBar_GetEdgeInner(obj uintptr) TEdgeStyle {
    ret, _, _ := coolBar_GetEdgeInner.Call(obj)
    return TEdgeStyle(ret)
}

func CoolBar_SetEdgeInner(obj uintptr, value TEdgeStyle) {
   coolBar_SetEdgeInner.Call(obj, uintptr(value))
}

func CoolBar_GetEdgeOuter(obj uintptr) TEdgeStyle {
    ret, _, _ := coolBar_GetEdgeOuter.Call(obj)
    return TEdgeStyle(ret)
}

func CoolBar_SetEdgeOuter(obj uintptr, value TEdgeStyle) {
   coolBar_SetEdgeOuter.Call(obj, uintptr(value))
}

func CoolBar_GetEnabled(obj uintptr) bool {
    ret, _, _ := coolBar_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetEnabled(obj uintptr, value bool) {
   coolBar_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFixedSize(obj uintptr) bool {
    ret, _, _ := coolBar_GetFixedSize.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetFixedSize(obj uintptr, value bool) {
   coolBar_SetFixedSize.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFixedOrder(obj uintptr) bool {
    ret, _, _ := coolBar_GetFixedOrder.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetFixedOrder(obj uintptr, value bool) {
   coolBar_SetFixedOrder.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetFont(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetFont.Call(obj)
    return ret
}

func CoolBar_SetFont(obj uintptr, value uintptr) {
   coolBar_SetFont.Call(obj, value)
}

func CoolBar_GetImages(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetImages.Call(obj)
    return ret
}

func CoolBar_SetImages(obj uintptr, value uintptr) {
   coolBar_SetImages.Call(obj, value)
}

func CoolBar_GetParentColor(obj uintptr) bool {
    ret, _, _ := coolBar_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetParentColor(obj uintptr, value bool) {
   coolBar_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := coolBar_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetParentDoubleBuffered(obj uintptr, value bool) {
   coolBar_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentFont(obj uintptr) bool {
    ret, _, _ := coolBar_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetParentFont(obj uintptr, value bool) {
   coolBar_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := coolBar_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetParentShowHint(obj uintptr, value bool) {
   coolBar_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetBitmap(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetBitmap.Call(obj)
    return ret
}

func CoolBar_SetBitmap(obj uintptr, value uintptr) {
   coolBar_SetBitmap.Call(obj, value)
}

func CoolBar_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetPopupMenu.Call(obj)
    return ret
}

func CoolBar_SetPopupMenu(obj uintptr, value uintptr) {
   coolBar_SetPopupMenu.Call(obj, value)
}

func CoolBar_GetShowHint(obj uintptr) bool {
    ret, _, _ := coolBar_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetShowHint(obj uintptr, value bool) {
   coolBar_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetShowText(obj uintptr) bool {
    ret, _, _ := coolBar_GetShowText.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetShowText(obj uintptr, value bool) {
   coolBar_SetShowText.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetVertical(obj uintptr) bool {
    ret, _, _ := coolBar_GetVertical.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetVertical(obj uintptr, value bool) {
   coolBar_SetVertical.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetVisible(obj uintptr) bool {
    ret, _, _ := coolBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetVisible(obj uintptr, value bool) {
   coolBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func CoolBar_SetOnChange(obj uintptr, fn interface{}) {
    coolBar_SetOnChange.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnClick(obj uintptr, fn interface{}) {
    coolBar_SetOnClick.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnContextPopup(obj uintptr, fn interface{}) {
    coolBar_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnDblClick(obj uintptr, fn interface{}) {
    coolBar_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnDockDrop(obj uintptr, fn interface{}) {
    coolBar_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnDragDrop(obj uintptr, fn interface{}) {
    coolBar_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnDragOver(obj uintptr, fn interface{}) {
    coolBar_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnEndDock(obj uintptr, fn interface{}) {
    coolBar_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnEndDrag(obj uintptr, fn interface{}) {
    coolBar_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    coolBar_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnMouseDown(obj uintptr, fn interface{}) {
    coolBar_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnMouseEnter(obj uintptr, fn interface{}) {
    coolBar_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnMouseLeave(obj uintptr, fn interface{}) {
    coolBar_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnMouseMove(obj uintptr, fn interface{}) {
    coolBar_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnMouseUp(obj uintptr, fn interface{}) {
    coolBar_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnResize(obj uintptr, fn interface{}) {
    coolBar_SetOnResize.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnStartDock(obj uintptr, fn interface{}) {
    coolBar_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func CoolBar_SetOnUnDock(obj uintptr, fn interface{}) {
    coolBar_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func CoolBar_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := coolBar_GetDockClientCount.Call(obj)
    return int32(ret)
}

func CoolBar_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := coolBar_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := coolBar_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func CoolBar_GetBrush(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetBrush.Call(obj)
    return ret
}

func CoolBar_GetControlCount(obj uintptr) int32 {
    ret, _, _ := coolBar_GetControlCount.Call(obj)
    return int32(ret)
}

func CoolBar_GetHandle(obj uintptr) HWND {
    ret, _, _ := coolBar_GetHandle.Call(obj)
    return HWND(ret)
}

func CoolBar_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := coolBar_GetParentWindow.Call(obj)
    return HWND(ret)
}

func CoolBar_SetParentWindow(obj uintptr, value HWND) {
   coolBar_SetParentWindow.Call(obj, uintptr(value))
}

func CoolBar_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := coolBar_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func CoolBar_SetTabOrder(obj uintptr, value TTabOrder) {
   coolBar_SetTabOrder.Call(obj, uintptr(value))
}

func CoolBar_GetTabStop(obj uintptr) bool {
    ret, _, _ := coolBar_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetTabStop(obj uintptr, value bool) {
   coolBar_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := coolBar_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_SetUseDockManager(obj uintptr, value bool) {
   coolBar_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func CoolBar_GetAction(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetAction.Call(obj)
    return ret
}

func CoolBar_SetAction(obj uintptr, value uintptr) {
   coolBar_SetAction.Call(obj, value)
}

func CoolBar_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := coolBar_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func CoolBar_SetBiDiMode(obj uintptr, value TBiDiMode) {
   coolBar_SetBiDiMode.Call(obj, uintptr(value))
}

func CoolBar_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    coolBar_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_SetBoundsRect(obj uintptr, value TRect) {
   coolBar_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func CoolBar_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := coolBar_GetClientHeight.Call(obj)
    return int32(ret)
}

func CoolBar_SetClientHeight(obj uintptr, value int32) {
   coolBar_SetClientHeight.Call(obj, uintptr(value))
}

func CoolBar_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    coolBar_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_GetClientRect(obj uintptr) TRect {
    var ret TRect
    coolBar_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func CoolBar_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := coolBar_GetClientWidth.Call(obj)
    return int32(ret)
}

func CoolBar_SetClientWidth(obj uintptr, value int32) {
   coolBar_SetClientWidth.Call(obj, uintptr(value))
}

func CoolBar_GetControlState(obj uintptr) TControlState {
    ret, _, _ := coolBar_GetControlState.Call(obj)
    return TControlState(ret)
}

func CoolBar_SetControlState(obj uintptr, value TControlState) {
   coolBar_SetControlState.Call(obj, uintptr(value))
}

func CoolBar_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := coolBar_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func CoolBar_SetControlStyle(obj uintptr, value TControlStyle) {
   coolBar_SetControlStyle.Call(obj, uintptr(value))
}

func CoolBar_GetFloating(obj uintptr) bool {
    ret, _, _ := coolBar_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBar_GetParent(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetParent.Call(obj)
    return ret
}

func CoolBar_SetParent(obj uintptr, value uintptr) {
   coolBar_SetParent.Call(obj, value)
}

func CoolBar_GetLeft(obj uintptr) int32 {
    ret, _, _ := coolBar_GetLeft.Call(obj)
    return int32(ret)
}

func CoolBar_SetLeft(obj uintptr, value int32) {
   coolBar_SetLeft.Call(obj, uintptr(value))
}

func CoolBar_GetTop(obj uintptr) int32 {
    ret, _, _ := coolBar_GetTop.Call(obj)
    return int32(ret)
}

func CoolBar_SetTop(obj uintptr, value int32) {
   coolBar_SetTop.Call(obj, uintptr(value))
}

func CoolBar_GetWidth(obj uintptr) int32 {
    ret, _, _ := coolBar_GetWidth.Call(obj)
    return int32(ret)
}

func CoolBar_SetWidth(obj uintptr, value int32) {
   coolBar_SetWidth.Call(obj, uintptr(value))
}

func CoolBar_GetHeight(obj uintptr) int32 {
    ret, _, _ := coolBar_GetHeight.Call(obj)
    return int32(ret)
}

func CoolBar_SetHeight(obj uintptr, value int32) {
   coolBar_SetHeight.Call(obj, uintptr(value))
}

func CoolBar_GetCursor(obj uintptr) TCursor {
    ret, _, _ := coolBar_GetCursor.Call(obj)
    return TCursor(ret)
}

func CoolBar_SetCursor(obj uintptr, value TCursor) {
   coolBar_SetCursor.Call(obj, uintptr(value))
}

func CoolBar_GetHint(obj uintptr) string {
    ret, _, _ := coolBar_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBar_SetHint(obj uintptr, value string) {
   coolBar_SetHint.Call(obj, GoStrToDStr(value))
}

func CoolBar_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := coolBar_GetComponentCount.Call(obj)
    return int32(ret)
}

func CoolBar_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := coolBar_GetComponentIndex.Call(obj)
    return int32(ret)
}

func CoolBar_SetComponentIndex(obj uintptr, value int32) {
   coolBar_SetComponentIndex.Call(obj, uintptr(value))
}

func CoolBar_GetOwner(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetOwner.Call(obj)
    return ret
}

func CoolBar_GetName(obj uintptr) string {
    ret, _, _ := coolBar_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBar_SetName(obj uintptr, value string) {
   coolBar_SetName.Call(obj, GoStrToDStr(value))
}

func CoolBar_GetTag(obj uintptr) int {
    ret, _, _ := coolBar_GetTag.Call(obj)
    return int(ret)
}

func CoolBar_SetTag(obj uintptr, value int) {
   coolBar_SetTag.Call(obj, uintptr(value))
}

func CoolBar_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetAnchorSideLeft.Call(obj)
    return ret
}

func CoolBar_SetAnchorSideLeft(obj uintptr, value uintptr) {
   coolBar_SetAnchorSideLeft.Call(obj, value)
}

func CoolBar_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetAnchorSideTop.Call(obj)
    return ret
}

func CoolBar_SetAnchorSideTop(obj uintptr, value uintptr) {
   coolBar_SetAnchorSideTop.Call(obj, value)
}

func CoolBar_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetAnchorSideRight.Call(obj)
    return ret
}

func CoolBar_SetAnchorSideRight(obj uintptr, value uintptr) {
   coolBar_SetAnchorSideRight.Call(obj, value)
}

func CoolBar_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetAnchorSideBottom.Call(obj)
    return ret
}

func CoolBar_SetAnchorSideBottom(obj uintptr, value uintptr) {
   coolBar_SetAnchorSideBottom.Call(obj, value)
}

func CoolBar_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetChildSizing.Call(obj)
    return ret
}

func CoolBar_SetChildSizing(obj uintptr, value uintptr) {
   coolBar_SetChildSizing.Call(obj, value)
}

func CoolBar_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := coolBar_GetBorderSpacing.Call(obj)
    return ret
}

func CoolBar_SetBorderSpacing(obj uintptr, value uintptr) {
   coolBar_SetBorderSpacing.Call(obj, value)
}

func CoolBar_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := coolBar_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func CoolBar_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := coolBar_GetControls.Call(obj, uintptr(Index))
    return ret
}

func CoolBar_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := coolBar_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func CoolBar_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := coolBar_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func CoolBar_StaticClassType() TClass {
    r, _, _:= coolBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCoolBands ---------------------------

func CoolBands_Create(obj uintptr) uintptr {
    ret, _, _ := coolBands_Create.Call(obj)
    return ret
}

func CoolBands_Free(obj uintptr) {
    coolBands_Free.Call(obj)
}

func CoolBands_Add(obj uintptr) uintptr {
    ret, _, _ := coolBands_Add.Call(obj)
    return ret
}

func CoolBands_FindBand(obj uintptr, AControl uintptr) uintptr {
    ret, _, _ := coolBands_FindBand.Call(obj, AControl )
    return ret
}

func CoolBands_Owner(obj uintptr) uintptr {
    ret, _, _ := coolBands_Owner.Call(obj)
    return ret
}

func CoolBands_Assign(obj uintptr, Source uintptr)  {
    coolBands_Assign.Call(obj, Source )
}

func CoolBands_BeginUpdate(obj uintptr)  {
    coolBands_BeginUpdate.Call(obj)
}

func CoolBands_Clear(obj uintptr)  {
    coolBands_Clear.Call(obj)
}

func CoolBands_Delete(obj uintptr, Index int32)  {
    coolBands_Delete.Call(obj, uintptr(Index) )
}

func CoolBands_EndUpdate(obj uintptr)  {
    coolBands_EndUpdate.Call(obj)
}

func CoolBands_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := coolBands_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func CoolBands_GetNamePath(obj uintptr) string {
    ret, _, _ := coolBands_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBands_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := coolBands_Insert.Call(obj, uintptr(Index) )
    return ret
}

func CoolBands_ClassType(obj uintptr) TClass {
    ret, _, _ := coolBands_ClassType.Call(obj)
    return TClass(ret)
}

func CoolBands_ClassName(obj uintptr) string {
    ret, _, _ := coolBands_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBands_InstanceSize(obj uintptr) int32 {
    ret, _, _ := coolBands_InstanceSize.Call(obj)
    return int32(ret)
}

func CoolBands_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := coolBands_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CoolBands_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := coolBands_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CoolBands_GetHashCode(obj uintptr) int32 {
    ret, _, _ := coolBands_GetHashCode.Call(obj)
    return int32(ret)
}

func CoolBands_ToString(obj uintptr) string {
    ret, _, _ := coolBands_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBands_GetCount(obj uintptr) int32 {
    ret, _, _ := coolBands_GetCount.Call(obj)
    return int32(ret)
}

func CoolBands_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := coolBands_GetItems.Call(obj, uintptr(Index))
    return ret
}

func CoolBands_SetItems(obj uintptr, Index int32, value uintptr) {
   coolBands_SetItems.Call(obj, uintptr(Index), value)
}

func CoolBands_StaticClassType() TClass {
    r, _, _:= coolBands_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCoolBand ---------------------------

func CoolBand_Create(obj uintptr) uintptr {
    ret, _, _ := coolBand_Create.Call(obj)
    return ret
}

func CoolBand_Free(obj uintptr) {
    coolBand_Free.Call(obj)
}

func CoolBand_Assign(obj uintptr, Source uintptr)  {
    coolBand_Assign.Call(obj, Source )
}

func CoolBand_GetNamePath(obj uintptr) string {
    ret, _, _ := coolBand_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBand_ClassType(obj uintptr) TClass {
    ret, _, _ := coolBand_ClassType.Call(obj)
    return TClass(ret)
}

func CoolBand_ClassName(obj uintptr) string {
    ret, _, _ := coolBand_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBand_InstanceSize(obj uintptr) int32 {
    ret, _, _ := coolBand_InstanceSize.Call(obj)
    return int32(ret)
}

func CoolBand_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := coolBand_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func CoolBand_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := coolBand_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func CoolBand_GetHashCode(obj uintptr) int32 {
    ret, _, _ := coolBand_GetHashCode.Call(obj)
    return int32(ret)
}

func CoolBand_ToString(obj uintptr) string {
    ret, _, _ := coolBand_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBand_GetHeight(obj uintptr) int32 {
    ret, _, _ := coolBand_GetHeight.Call(obj)
    return int32(ret)
}

func CoolBand_GetBitmap(obj uintptr) uintptr {
    ret, _, _ := coolBand_GetBitmap.Call(obj)
    return ret
}

func CoolBand_SetBitmap(obj uintptr, value uintptr) {
   coolBand_SetBitmap.Call(obj, value)
}

func CoolBand_GetBorderStyle(obj uintptr) TBorderStyle {
    ret, _, _ := coolBand_GetBorderStyle.Call(obj)
    return TBorderStyle(ret)
}

func CoolBand_SetBorderStyle(obj uintptr, value TBorderStyle) {
   coolBand_SetBorderStyle.Call(obj, uintptr(value))
}

func CoolBand_GetBreak(obj uintptr) bool {
    ret, _, _ := coolBand_GetBreak.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetBreak(obj uintptr, value bool) {
   coolBand_SetBreak.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetColor(obj uintptr) TColor {
    ret, _, _ := coolBand_GetColor.Call(obj)
    return TColor(ret)
}

func CoolBand_SetColor(obj uintptr, value TColor) {
   coolBand_SetColor.Call(obj, uintptr(value))
}

func CoolBand_GetControl(obj uintptr) uintptr {
    ret, _, _ := coolBand_GetControl.Call(obj)
    return ret
}

func CoolBand_SetControl(obj uintptr, value uintptr) {
   coolBand_SetControl.Call(obj, value)
}

func CoolBand_GetFixedBackground(obj uintptr) bool {
    ret, _, _ := coolBand_GetFixedBackground.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetFixedBackground(obj uintptr, value bool) {
   coolBand_SetFixedBackground.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetFixedSize(obj uintptr) bool {
    ret, _, _ := coolBand_GetFixedSize.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetFixedSize(obj uintptr, value bool) {
   coolBand_SetFixedSize.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetHorizontalOnly(obj uintptr) bool {
    ret, _, _ := coolBand_GetHorizontalOnly.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetHorizontalOnly(obj uintptr, value bool) {
   coolBand_SetHorizontalOnly.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := coolBand_GetImageIndex.Call(obj)
    return int32(ret)
}

func CoolBand_SetImageIndex(obj uintptr, value int32) {
   coolBand_SetImageIndex.Call(obj, uintptr(value))
}

func CoolBand_GetMinHeight(obj uintptr) int32 {
    ret, _, _ := coolBand_GetMinHeight.Call(obj)
    return int32(ret)
}

func CoolBand_SetMinHeight(obj uintptr, value int32) {
   coolBand_SetMinHeight.Call(obj, uintptr(value))
}

func CoolBand_GetMinWidth(obj uintptr) int32 {
    ret, _, _ := coolBand_GetMinWidth.Call(obj)
    return int32(ret)
}

func CoolBand_SetMinWidth(obj uintptr, value int32) {
   coolBand_SetMinWidth.Call(obj, uintptr(value))
}

func CoolBand_GetParentColor(obj uintptr) bool {
    ret, _, _ := coolBand_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetParentColor(obj uintptr, value bool) {
   coolBand_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetParentBitmap(obj uintptr) bool {
    ret, _, _ := coolBand_GetParentBitmap.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetParentBitmap(obj uintptr, value bool) {
   coolBand_SetParentBitmap.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetText(obj uintptr) string {
    ret, _, _ := coolBand_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBand_SetText(obj uintptr, value string) {
   coolBand_SetText.Call(obj, GoStrToDStr(value))
}

func CoolBand_GetVisible(obj uintptr) bool {
    ret, _, _ := coolBand_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func CoolBand_SetVisible(obj uintptr, value bool) {
   coolBand_SetVisible.Call(obj, GoBoolToDBool(value))
}

func CoolBand_GetWidth(obj uintptr) int32 {
    ret, _, _ := coolBand_GetWidth.Call(obj)
    return int32(ret)
}

func CoolBand_SetWidth(obj uintptr, value int32) {
   coolBand_SetWidth.Call(obj, uintptr(value))
}

func CoolBand_GetCollection(obj uintptr) uintptr {
    ret, _, _ := coolBand_GetCollection.Call(obj)
    return ret
}

func CoolBand_SetCollection(obj uintptr, value uintptr) {
   coolBand_SetCollection.Call(obj, value)
}

func CoolBand_GetIndex(obj uintptr) int32 {
    ret, _, _ := coolBand_GetIndex.Call(obj)
    return int32(ret)
}

func CoolBand_SetIndex(obj uintptr, value int32) {
   coolBand_SetIndex.Call(obj, uintptr(value))
}

func CoolBand_GetDisplayName(obj uintptr) string {
    ret, _, _ := coolBand_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func CoolBand_SetDisplayName(obj uintptr, value string) {
   coolBand_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func CoolBand_StaticClassType() TClass {
    r, _, _:= coolBand_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TCollection ---------------------------

func Collection_Create(obj uintptr) uintptr {
    ret, _, _ := collection_Create.Call(obj)
    return ret
}

func Collection_Free(obj uintptr) {
    collection_Free.Call(obj)
}

func Collection_Owner(obj uintptr) uintptr {
    ret, _, _ := collection_Owner.Call(obj)
    return ret
}

func Collection_Add(obj uintptr) uintptr {
    ret, _, _ := collection_Add.Call(obj)
    return ret
}

func Collection_Assign(obj uintptr, Source uintptr)  {
    collection_Assign.Call(obj, Source )
}

func Collection_BeginUpdate(obj uintptr)  {
    collection_BeginUpdate.Call(obj)
}

func Collection_Clear(obj uintptr)  {
    collection_Clear.Call(obj)
}

func Collection_Delete(obj uintptr, Index int32)  {
    collection_Delete.Call(obj, uintptr(Index) )
}

func Collection_EndUpdate(obj uintptr)  {
    collection_EndUpdate.Call(obj)
}

func Collection_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := collection_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func Collection_GetNamePath(obj uintptr) string {
    ret, _, _ := collection_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Collection_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := collection_Insert.Call(obj, uintptr(Index) )
    return ret
}

func Collection_ClassType(obj uintptr) TClass {
    ret, _, _ := collection_ClassType.Call(obj)
    return TClass(ret)
}

func Collection_ClassName(obj uintptr) string {
    ret, _, _ := collection_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Collection_InstanceSize(obj uintptr) int32 {
    ret, _, _ := collection_InstanceSize.Call(obj)
    return int32(ret)
}

func Collection_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := collection_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Collection_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := collection_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Collection_GetHashCode(obj uintptr) int32 {
    ret, _, _ := collection_GetHashCode.Call(obj)
    return int32(ret)
}

func Collection_ToString(obj uintptr) string {
    ret, _, _ := collection_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Collection_GetCount(obj uintptr) int32 {
    ret, _, _ := collection_GetCount.Call(obj)
    return int32(ret)
}

func Collection_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := collection_GetItems.Call(obj, uintptr(Index))
    return ret
}

func Collection_SetItems(obj uintptr, Index int32, value uintptr) {
   collection_SetItems.Call(obj, uintptr(Index), value)
}

func Collection_StaticClassType() TClass {
    r, _, _:= collection_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TPrinter ---------------------------

func Printer_Create() uintptr {
    ret, _, _ := printer_Create.Call()
    return ret
}

func Printer_Free(obj uintptr) {
    printer_Free.Call(obj)
}

func Printer_Abort(obj uintptr)  {
    printer_Abort.Call(obj)
}

func Printer_BeginDoc(obj uintptr)  {
    printer_BeginDoc.Call(obj)
}

func Printer_EndDoc(obj uintptr)  {
    printer_EndDoc.Call(obj)
}

func Printer_NewPage(obj uintptr)  {
    printer_NewPage.Call(obj)
}

func Printer_Refresh(obj uintptr)  {
    printer_Refresh.Call(obj)
}

func Printer_ClassType(obj uintptr) TClass {
    ret, _, _ := printer_ClassType.Call(obj)
    return TClass(ret)
}

func Printer_ClassName(obj uintptr) string {
    ret, _, _ := printer_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Printer_InstanceSize(obj uintptr) int32 {
    ret, _, _ := printer_InstanceSize.Call(obj)
    return int32(ret)
}

func Printer_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := printer_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Printer_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := printer_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Printer_GetHashCode(obj uintptr) int32 {
    ret, _, _ := printer_GetHashCode.Call(obj)
    return int32(ret)
}

func Printer_ToString(obj uintptr) string {
    ret, _, _ := printer_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Printer_GetAborted(obj uintptr) bool {
    ret, _, _ := printer_GetAborted.Call(obj)
    return DBoolToGoBool(ret)
}

func Printer_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := printer_GetCanvas.Call(obj)
    return ret
}

func Printer_GetCopies(obj uintptr) int32 {
    ret, _, _ := printer_GetCopies.Call(obj)
    return int32(ret)
}

func Printer_SetCopies(obj uintptr, value int32) {
   printer_SetCopies.Call(obj, uintptr(value))
}

func Printer_GetFonts(obj uintptr) uintptr {
    ret, _, _ := printer_GetFonts.Call(obj)
    return ret
}

func Printer_GetOrientation(obj uintptr) TPrinterOrientation {
    ret, _, _ := printer_GetOrientation.Call(obj)
    return TPrinterOrientation(ret)
}

func Printer_SetOrientation(obj uintptr, value TPrinterOrientation) {
   printer_SetOrientation.Call(obj, uintptr(value))
}

func Printer_GetPageHeight(obj uintptr) int32 {
    ret, _, _ := printer_GetPageHeight.Call(obj)
    return int32(ret)
}

func Printer_GetPageWidth(obj uintptr) int32 {
    ret, _, _ := printer_GetPageWidth.Call(obj)
    return int32(ret)
}

func Printer_GetPageNumber(obj uintptr) int32 {
    ret, _, _ := printer_GetPageNumber.Call(obj)
    return int32(ret)
}

func Printer_GetPrinterIndex(obj uintptr) int32 {
    ret, _, _ := printer_GetPrinterIndex.Call(obj)
    return int32(ret)
}

func Printer_SetPrinterIndex(obj uintptr, value int32) {
   printer_SetPrinterIndex.Call(obj, uintptr(value))
}

func Printer_GetPrinting(obj uintptr) bool {
    ret, _, _ := printer_GetPrinting.Call(obj)
    return DBoolToGoBool(ret)
}

func Printer_GetPrinters(obj uintptr) uintptr {
    ret, _, _ := printer_GetPrinters.Call(obj)
    return ret
}

func Printer_GetTitle(obj uintptr) string {
    ret, _, _ := printer_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func Printer_SetTitle(obj uintptr, value string) {
   printer_SetTitle.Call(obj, GoStrToDStr(value))
}

func Printer_StaticClassType() TClass {
    r, _, _:= printer_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTaskDialog ---------------------------

func TaskDialog_Create(obj uintptr) uintptr {
    ret, _, _ := taskDialog_Create.Call(obj)
    return ret
}

func TaskDialog_Free(obj uintptr) {
    taskDialog_Free.Call(obj)
}

func TaskDialog_Execute(obj uintptr) bool {
    ret, _, _ := taskDialog_Execute.Call(obj)
    return DBoolToGoBool(ret)
}

func TaskDialog_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := taskDialog_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func TaskDialog_GetNamePath(obj uintptr) string {
    ret, _, _ := taskDialog_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_HasParent(obj uintptr) bool {
    ret, _, _ := taskDialog_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func TaskDialog_Assign(obj uintptr, Source uintptr)  {
    taskDialog_Assign.Call(obj, Source )
}

func TaskDialog_ClassType(obj uintptr) TClass {
    ret, _, _ := taskDialog_ClassType.Call(obj)
    return TClass(ret)
}

func TaskDialog_ClassName(obj uintptr) string {
    ret, _, _ := taskDialog_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_InstanceSize(obj uintptr) int32 {
    ret, _, _ := taskDialog_InstanceSize.Call(obj)
    return int32(ret)
}

func TaskDialog_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := taskDialog_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TaskDialog_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := taskDialog_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TaskDialog_GetHashCode(obj uintptr) int32 {
    ret, _, _ := taskDialog_GetHashCode.Call(obj)
    return int32(ret)
}

func TaskDialog_ToString(obj uintptr) string {
    ret, _, _ := taskDialog_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_GetButtons(obj uintptr) uintptr {
    ret, _, _ := taskDialog_GetButtons.Call(obj)
    return ret
}

func TaskDialog_SetButtons(obj uintptr, value uintptr) {
   taskDialog_SetButtons.Call(obj, value)
}

func TaskDialog_GetCaption(obj uintptr) string {
    ret, _, _ := taskDialog_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetCaption(obj uintptr, value string) {
   taskDialog_SetCaption.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetCommonButtons(obj uintptr) TTaskDialogCommonButtons {
    ret, _, _ := taskDialog_GetCommonButtons.Call(obj)
    return TTaskDialogCommonButtons(ret)
}

func TaskDialog_SetCommonButtons(obj uintptr, value TTaskDialogCommonButtons) {
   taskDialog_SetCommonButtons.Call(obj, uintptr(value))
}

func TaskDialog_GetDefaultButton(obj uintptr) TTaskDialogCommonButton {
    ret, _, _ := taskDialog_GetDefaultButton.Call(obj)
    return TTaskDialogCommonButton(ret)
}

func TaskDialog_SetDefaultButton(obj uintptr, value TTaskDialogCommonButton) {
   taskDialog_SetDefaultButton.Call(obj, uintptr(value))
}

func TaskDialog_GetExpandButtonCaption(obj uintptr) string {
    ret, _, _ := taskDialog_GetExpandButtonCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetExpandButtonCaption(obj uintptr, value string) {
   taskDialog_SetExpandButtonCaption.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetExpandedText(obj uintptr) string {
    ret, _, _ := taskDialog_GetExpandedText.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetExpandedText(obj uintptr, value string) {
   taskDialog_SetExpandedText.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetFlags(obj uintptr) TTaskDialogFlags {
    ret, _, _ := taskDialog_GetFlags.Call(obj)
    return TTaskDialogFlags(ret)
}

func TaskDialog_SetFlags(obj uintptr, value TTaskDialogFlags) {
   taskDialog_SetFlags.Call(obj, uintptr(value))
}

func TaskDialog_GetFooterIcon(obj uintptr) TTaskDialogIcon {
    ret, _, _ := taskDialog_GetFooterIcon.Call(obj)
    return TTaskDialogIcon(ret)
}

func TaskDialog_SetFooterIcon(obj uintptr, value TTaskDialogIcon) {
   taskDialog_SetFooterIcon.Call(obj, uintptr(value))
}

func TaskDialog_GetFooterText(obj uintptr) string {
    ret, _, _ := taskDialog_GetFooterText.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetFooterText(obj uintptr, value string) {
   taskDialog_SetFooterText.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetMainIcon(obj uintptr) TTaskDialogIcon {
    ret, _, _ := taskDialog_GetMainIcon.Call(obj)
    return TTaskDialogIcon(ret)
}

func TaskDialog_SetMainIcon(obj uintptr, value TTaskDialogIcon) {
   taskDialog_SetMainIcon.Call(obj, uintptr(value))
}

func TaskDialog_GetRadioButtons(obj uintptr) uintptr {
    ret, _, _ := taskDialog_GetRadioButtons.Call(obj)
    return ret
}

func TaskDialog_SetRadioButtons(obj uintptr, value uintptr) {
   taskDialog_SetRadioButtons.Call(obj, value)
}

func TaskDialog_GetText(obj uintptr) string {
    ret, _, _ := taskDialog_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetText(obj uintptr, value string) {
   taskDialog_SetText.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetTitle(obj uintptr) string {
    ret, _, _ := taskDialog_GetTitle.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetTitle(obj uintptr, value string) {
   taskDialog_SetTitle.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetVerificationText(obj uintptr) string {
    ret, _, _ := taskDialog_GetVerificationText.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetVerificationText(obj uintptr, value string) {
   taskDialog_SetVerificationText.Call(obj, GoStrToDStr(value))
}

func TaskDialog_SetOnButtonClicked(obj uintptr, fn interface{}) {
    taskDialog_SetOnButtonClicked.Call(obj, addEventToMap(fn))
}

func TaskDialog_GetButton(obj uintptr) uintptr {
    ret, _, _ := taskDialog_GetButton.Call(obj)
    return ret
}

func TaskDialog_SetButton(obj uintptr, value uintptr) {
   taskDialog_SetButton.Call(obj, value)
}

func TaskDialog_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := taskDialog_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func TaskDialog_SetModalResult(obj uintptr, value TModalResult) {
   taskDialog_SetModalResult.Call(obj, uintptr(value))
}

func TaskDialog_GetRadioButton(obj uintptr) uintptr {
    ret, _, _ := taskDialog_GetRadioButton.Call(obj)
    return ret
}

func TaskDialog_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := taskDialog_GetComponentCount.Call(obj)
    return int32(ret)
}

func TaskDialog_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := taskDialog_GetComponentIndex.Call(obj)
    return int32(ret)
}

func TaskDialog_SetComponentIndex(obj uintptr, value int32) {
   taskDialog_SetComponentIndex.Call(obj, uintptr(value))
}

func TaskDialog_GetOwner(obj uintptr) uintptr {
    ret, _, _ := taskDialog_GetOwner.Call(obj)
    return ret
}

func TaskDialog_GetName(obj uintptr) string {
    ret, _, _ := taskDialog_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialog_SetName(obj uintptr, value string) {
   taskDialog_SetName.Call(obj, GoStrToDStr(value))
}

func TaskDialog_GetTag(obj uintptr) int {
    ret, _, _ := taskDialog_GetTag.Call(obj)
    return int(ret)
}

func TaskDialog_SetTag(obj uintptr, value int) {
   taskDialog_SetTag.Call(obj, uintptr(value))
}

func TaskDialog_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := taskDialog_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func TaskDialog_StaticClassType() TClass {
    r, _, _:= taskDialog_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTaskDialogButtons ---------------------------

func TaskDialogButtons_Add(obj uintptr) uintptr {
    ret, _, _ := taskDialogButtons_Add.Call(obj)
    return ret
}

func TaskDialogButtons_FindButton(obj uintptr, AModalResult TModalResult) uintptr {
    ret, _, _ := taskDialogButtons_FindButton.Call(obj, uintptr(AModalResult) )
    return ret
}

func TaskDialogButtons_Owner(obj uintptr) uintptr {
    ret, _, _ := taskDialogButtons_Owner.Call(obj)
    return ret
}

func TaskDialogButtons_Assign(obj uintptr, Source uintptr)  {
    taskDialogButtons_Assign.Call(obj, Source )
}

func TaskDialogButtons_BeginUpdate(obj uintptr)  {
    taskDialogButtons_BeginUpdate.Call(obj)
}

func TaskDialogButtons_Clear(obj uintptr)  {
    taskDialogButtons_Clear.Call(obj)
}

func TaskDialogButtons_Delete(obj uintptr, Index int32)  {
    taskDialogButtons_Delete.Call(obj, uintptr(Index) )
}

func TaskDialogButtons_EndUpdate(obj uintptr)  {
    taskDialogButtons_EndUpdate.Call(obj)
}

func TaskDialogButtons_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := taskDialogButtons_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func TaskDialogButtons_GetNamePath(obj uintptr) string {
    ret, _, _ := taskDialogButtons_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtons_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := taskDialogButtons_Insert.Call(obj, uintptr(Index) )
    return ret
}

func TaskDialogButtons_ClassType(obj uintptr) TClass {
    ret, _, _ := taskDialogButtons_ClassType.Call(obj)
    return TClass(ret)
}

func TaskDialogButtons_ClassName(obj uintptr) string {
    ret, _, _ := taskDialogButtons_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtons_InstanceSize(obj uintptr) int32 {
    ret, _, _ := taskDialogButtons_InstanceSize.Call(obj)
    return int32(ret)
}

func TaskDialogButtons_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := taskDialogButtons_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TaskDialogButtons_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := taskDialogButtons_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TaskDialogButtons_GetHashCode(obj uintptr) int32 {
    ret, _, _ := taskDialogButtons_GetHashCode.Call(obj)
    return int32(ret)
}

func TaskDialogButtons_ToString(obj uintptr) string {
    ret, _, _ := taskDialogButtons_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtons_GetDefaultButton(obj uintptr) uintptr {
    ret, _, _ := taskDialogButtons_GetDefaultButton.Call(obj)
    return ret
}

func TaskDialogButtons_SetDefaultButton(obj uintptr, value uintptr) {
   taskDialogButtons_SetDefaultButton.Call(obj, value)
}

func TaskDialogButtons_GetCount(obj uintptr) int32 {
    ret, _, _ := taskDialogButtons_GetCount.Call(obj)
    return int32(ret)
}

func TaskDialogButtons_GetItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := taskDialogButtons_GetItems.Call(obj, uintptr(Index))
    return ret
}

func TaskDialogButtons_SetItems(obj uintptr, Index int32, value uintptr) {
   taskDialogButtons_SetItems.Call(obj, uintptr(Index), value)
}

func TaskDialogButtons_StaticClassType() TClass {
    r, _, _:= taskDialogButtons_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTaskDialogButtonItem ---------------------------

func TaskDialogButtonItem_Create(obj uintptr) uintptr {
    ret, _, _ := taskDialogButtonItem_Create.Call(obj)
    return ret
}

func TaskDialogButtonItem_Free(obj uintptr) {
    taskDialogButtonItem_Free.Call(obj)
}

func TaskDialogButtonItem_GetNamePath(obj uintptr) string {
    ret, _, _ := taskDialogButtonItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtonItem_Assign(obj uintptr, Source uintptr)  {
    taskDialogButtonItem_Assign.Call(obj, Source )
}

func TaskDialogButtonItem_ClassType(obj uintptr) TClass {
    ret, _, _ := taskDialogButtonItem_ClassType.Call(obj)
    return TClass(ret)
}

func TaskDialogButtonItem_ClassName(obj uintptr) string {
    ret, _, _ := taskDialogButtonItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtonItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := taskDialogButtonItem_InstanceSize.Call(obj)
    return int32(ret)
}

func TaskDialogButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := taskDialogButtonItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := taskDialogButtonItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := taskDialogButtonItem_GetHashCode.Call(obj)
    return int32(ret)
}

func TaskDialogButtonItem_ToString(obj uintptr) string {
    ret, _, _ := taskDialogButtonItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtonItem_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := taskDialogButtonItem_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func TaskDialogButtonItem_SetModalResult(obj uintptr, value TModalResult) {
   taskDialogButtonItem_SetModalResult.Call(obj, uintptr(value))
}

func TaskDialogButtonItem_GetCaption(obj uintptr) string {
    ret, _, _ := taskDialogButtonItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtonItem_SetCaption(obj uintptr, value string) {
   taskDialogButtonItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func TaskDialogButtonItem_GetDefault(obj uintptr) bool {
    ret, _, _ := taskDialogButtonItem_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func TaskDialogButtonItem_SetDefault(obj uintptr, value bool) {
   taskDialogButtonItem_SetDefault.Call(obj, GoBoolToDBool(value))
}

func TaskDialogButtonItem_GetCollection(obj uintptr) uintptr {
    ret, _, _ := taskDialogButtonItem_GetCollection.Call(obj)
    return ret
}

func TaskDialogButtonItem_SetCollection(obj uintptr, value uintptr) {
   taskDialogButtonItem_SetCollection.Call(obj, value)
}

func TaskDialogButtonItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := taskDialogButtonItem_GetIndex.Call(obj)
    return int32(ret)
}

func TaskDialogButtonItem_SetIndex(obj uintptr, value int32) {
   taskDialogButtonItem_SetIndex.Call(obj, uintptr(value))
}

func TaskDialogButtonItem_GetDisplayName(obj uintptr) string {
    ret, _, _ := taskDialogButtonItem_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogButtonItem_SetDisplayName(obj uintptr, value string) {
   taskDialogButtonItem_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func TaskDialogButtonItem_StaticClassType() TClass {
    r, _, _:= taskDialogButtonItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTaskDialogRadioButtonItem ---------------------------

func TaskDialogRadioButtonItem_Create(obj uintptr) uintptr {
    ret, _, _ := taskDialogRadioButtonItem_Create.Call(obj)
    return ret
}

func TaskDialogRadioButtonItem_Free(obj uintptr) {
    taskDialogRadioButtonItem_Free.Call(obj)
}

func TaskDialogRadioButtonItem_GetNamePath(obj uintptr) string {
    ret, _, _ := taskDialogRadioButtonItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_Assign(obj uintptr, Source uintptr)  {
    taskDialogRadioButtonItem_Assign.Call(obj, Source )
}

func TaskDialogRadioButtonItem_ClassType(obj uintptr) TClass {
    ret, _, _ := taskDialogRadioButtonItem_ClassType.Call(obj)
    return TClass(ret)
}

func TaskDialogRadioButtonItem_ClassName(obj uintptr) string {
    ret, _, _ := taskDialogRadioButtonItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := taskDialogRadioButtonItem_InstanceSize.Call(obj)
    return int32(ret)
}

func TaskDialogRadioButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := taskDialogRadioButtonItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := taskDialogRadioButtonItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := taskDialogRadioButtonItem_GetHashCode.Call(obj)
    return int32(ret)
}

func TaskDialogRadioButtonItem_ToString(obj uintptr) string {
    ret, _, _ := taskDialogRadioButtonItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := taskDialogRadioButtonItem_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func TaskDialogRadioButtonItem_SetModalResult(obj uintptr, value TModalResult) {
   taskDialogRadioButtonItem_SetModalResult.Call(obj, uintptr(value))
}

func TaskDialogRadioButtonItem_GetCaption(obj uintptr) string {
    ret, _, _ := taskDialogRadioButtonItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_SetCaption(obj uintptr, value string) {
   taskDialogRadioButtonItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func TaskDialogRadioButtonItem_GetDefault(obj uintptr) bool {
    ret, _, _ := taskDialogRadioButtonItem_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func TaskDialogRadioButtonItem_SetDefault(obj uintptr, value bool) {
   taskDialogRadioButtonItem_SetDefault.Call(obj, GoBoolToDBool(value))
}

func TaskDialogRadioButtonItem_GetCollection(obj uintptr) uintptr {
    ret, _, _ := taskDialogRadioButtonItem_GetCollection.Call(obj)
    return ret
}

func TaskDialogRadioButtonItem_SetCollection(obj uintptr, value uintptr) {
   taskDialogRadioButtonItem_SetCollection.Call(obj, value)
}

func TaskDialogRadioButtonItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := taskDialogRadioButtonItem_GetIndex.Call(obj)
    return int32(ret)
}

func TaskDialogRadioButtonItem_SetIndex(obj uintptr, value int32) {
   taskDialogRadioButtonItem_SetIndex.Call(obj, uintptr(value))
}

func TaskDialogRadioButtonItem_GetDisplayName(obj uintptr) string {
    ret, _, _ := taskDialogRadioButtonItem_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogRadioButtonItem_SetDisplayName(obj uintptr, value string) {
   taskDialogRadioButtonItem_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func TaskDialogRadioButtonItem_StaticClassType() TClass {
    r, _, _:= taskDialogRadioButtonItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TTaskDialogBaseButtonItem ---------------------------

func TaskDialogBaseButtonItem_Create(obj uintptr) uintptr {
    ret, _, _ := taskDialogBaseButtonItem_Create.Call(obj)
    return ret
}

func TaskDialogBaseButtonItem_Free(obj uintptr) {
    taskDialogBaseButtonItem_Free.Call(obj)
}

func TaskDialogBaseButtonItem_GetNamePath(obj uintptr) string {
    ret, _, _ := taskDialogBaseButtonItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_Assign(obj uintptr, Source uintptr)  {
    taskDialogBaseButtonItem_Assign.Call(obj, Source )
}

func TaskDialogBaseButtonItem_ClassType(obj uintptr) TClass {
    ret, _, _ := taskDialogBaseButtonItem_ClassType.Call(obj)
    return TClass(ret)
}

func TaskDialogBaseButtonItem_ClassName(obj uintptr) string {
    ret, _, _ := taskDialogBaseButtonItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := taskDialogBaseButtonItem_InstanceSize.Call(obj)
    return int32(ret)
}

func TaskDialogBaseButtonItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := taskDialogBaseButtonItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := taskDialogBaseButtonItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := taskDialogBaseButtonItem_GetHashCode.Call(obj)
    return int32(ret)
}

func TaskDialogBaseButtonItem_ToString(obj uintptr) string {
    ret, _, _ := taskDialogBaseButtonItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_GetModalResult(obj uintptr) TModalResult {
    ret, _, _ := taskDialogBaseButtonItem_GetModalResult.Call(obj)
    return TModalResult(ret)
}

func TaskDialogBaseButtonItem_SetModalResult(obj uintptr, value TModalResult) {
   taskDialogBaseButtonItem_SetModalResult.Call(obj, uintptr(value))
}

func TaskDialogBaseButtonItem_GetCaption(obj uintptr) string {
    ret, _, _ := taskDialogBaseButtonItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_SetCaption(obj uintptr, value string) {
   taskDialogBaseButtonItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func TaskDialogBaseButtonItem_GetDefault(obj uintptr) bool {
    ret, _, _ := taskDialogBaseButtonItem_GetDefault.Call(obj)
    return DBoolToGoBool(ret)
}

func TaskDialogBaseButtonItem_SetDefault(obj uintptr, value bool) {
   taskDialogBaseButtonItem_SetDefault.Call(obj, GoBoolToDBool(value))
}

func TaskDialogBaseButtonItem_GetCollection(obj uintptr) uintptr {
    ret, _, _ := taskDialogBaseButtonItem_GetCollection.Call(obj)
    return ret
}

func TaskDialogBaseButtonItem_SetCollection(obj uintptr, value uintptr) {
   taskDialogBaseButtonItem_SetCollection.Call(obj, value)
}

func TaskDialogBaseButtonItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := taskDialogBaseButtonItem_GetIndex.Call(obj)
    return int32(ret)
}

func TaskDialogBaseButtonItem_SetIndex(obj uintptr, value int32) {
   taskDialogBaseButtonItem_SetIndex.Call(obj, uintptr(value))
}

func TaskDialogBaseButtonItem_GetDisplayName(obj uintptr) string {
    ret, _, _ := taskDialogBaseButtonItem_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func TaskDialogBaseButtonItem_SetDisplayName(obj uintptr, value string) {
   taskDialogBaseButtonItem_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func TaskDialogBaseButtonItem_StaticClassType() TClass {
    r, _, _:= taskDialogBaseButtonItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TComboBoxEx ---------------------------

func ComboBoxEx_Create(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_Create.Call(obj)
    return ret
}

func ComboBoxEx_Free(obj uintptr) {
    comboBoxEx_Free.Call(obj)
}

func ComboBoxEx_Focused(obj uintptr) bool {
    ret, _, _ := comboBoxEx_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_AddItem(obj uintptr, Item string, AObject uintptr)  {
    comboBoxEx_AddItem.Call(obj, GoStrToDStr(Item) , AObject )
}

func ComboBoxEx_Clear(obj uintptr)  {
    comboBoxEx_Clear.Call(obj)
}

func ComboBoxEx_ClearSelection(obj uintptr)  {
    comboBoxEx_ClearSelection.Call(obj)
}

func ComboBoxEx_DeleteSelected(obj uintptr)  {
    comboBoxEx_DeleteSelected.Call(obj)
}

func ComboBoxEx_SelectAll(obj uintptr)  {
    comboBoxEx_SelectAll.Call(obj)
}

func ComboBoxEx_CanFocus(obj uintptr) bool {
    ret, _, _ := comboBoxEx_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := comboBoxEx_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func ComboBoxEx_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := comboBoxEx_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func ComboBoxEx_DisableAlign(obj uintptr)  {
    comboBoxEx_DisableAlign.Call(obj)
}

func ComboBoxEx_EnableAlign(obj uintptr)  {
    comboBoxEx_EnableAlign.Call(obj)
}

func ComboBoxEx_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := comboBoxEx_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func ComboBoxEx_FlipChildren(obj uintptr, AllLevels bool)  {
    comboBoxEx_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func ComboBoxEx_HandleAllocated(obj uintptr) bool {
    ret, _, _ := comboBoxEx_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_InsertControl(obj uintptr, AControl uintptr)  {
    comboBoxEx_InsertControl.Call(obj, AControl )
}

func ComboBoxEx_Invalidate(obj uintptr)  {
    comboBoxEx_Invalidate.Call(obj)
}

func ComboBoxEx_RemoveControl(obj uintptr, AControl uintptr)  {
    comboBoxEx_RemoveControl.Call(obj, AControl )
}

func ComboBoxEx_Realign(obj uintptr)  {
    comboBoxEx_Realign.Call(obj)
}

func ComboBoxEx_Repaint(obj uintptr)  {
    comboBoxEx_Repaint.Call(obj)
}

func ComboBoxEx_ScaleBy(obj uintptr, M int32, D int32)  {
    comboBoxEx_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func ComboBoxEx_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    comboBoxEx_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func ComboBoxEx_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    comboBoxEx_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func ComboBoxEx_SetFocus(obj uintptr)  {
    comboBoxEx_SetFocus.Call(obj)
}

func ComboBoxEx_Update(obj uintptr)  {
    comboBoxEx_Update.Call(obj)
}

func ComboBoxEx_BringToFront(obj uintptr)  {
    comboBoxEx_BringToFront.Call(obj)
}

func ComboBoxEx_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    comboBoxEx_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    comboBoxEx_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_Dragging(obj uintptr) bool {
    ret, _, _ := comboBoxEx_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_HasParent(obj uintptr) bool {
    ret, _, _ := comboBoxEx_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_Hide(obj uintptr)  {
    comboBoxEx_Hide.Call(obj)
}

func ComboBoxEx_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := comboBoxEx_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func ComboBoxEx_Refresh(obj uintptr)  {
    comboBoxEx_Refresh.Call(obj)
}

func ComboBoxEx_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    comboBoxEx_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    comboBoxEx_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_SendToBack(obj uintptr)  {
    comboBoxEx_SendToBack.Call(obj)
}

func ComboBoxEx_Show(obj uintptr)  {
    comboBoxEx_Show.Call(obj)
}

func ComboBoxEx_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := comboBoxEx_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func ComboBoxEx_GetTextLen(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetTextLen.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetTextBuf(obj uintptr, Buffer string)  {
    comboBoxEx_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func ComboBoxEx_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := comboBoxEx_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func ComboBoxEx_GetNamePath(obj uintptr) string {
    ret, _, _ := comboBoxEx_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_Assign(obj uintptr, Source uintptr)  {
    comboBoxEx_Assign.Call(obj, Source )
}

func ComboBoxEx_ClassType(obj uintptr) TClass {
    ret, _, _ := comboBoxEx_ClassType.Call(obj)
    return TClass(ret)
}

func ComboBoxEx_ClassName(obj uintptr) string {
    ret, _, _ := comboBoxEx_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_InstanceSize(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_InstanceSize.Call(obj)
    return int32(ret)
}

func ComboBoxEx_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := comboBoxEx_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ComboBoxEx_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := comboBoxEx_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ComboBoxEx_GetHashCode(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetHashCode.Call(obj)
    return int32(ret)
}

func ComboBoxEx_ToString(obj uintptr) string {
    ret, _, _ := comboBoxEx_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    comboBoxEx_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ComboBoxEx_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    comboBoxEx_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func ComboBoxEx_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    comboBoxEx_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func ComboBoxEx_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    comboBoxEx_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func ComboBoxEx_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    comboBoxEx_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func ComboBoxEx_AnchorClient(obj uintptr, ASpace int32)  {
    comboBoxEx_AnchorClient.Call(obj, uintptr(ASpace) )
}

func ComboBoxEx_GetAlign(obj uintptr) TAlign {
    ret, _, _ := comboBoxEx_GetAlign.Call(obj)
    return TAlign(ret)
}

func ComboBoxEx_SetAlign(obj uintptr, value TAlign) {
   comboBoxEx_SetAlign.Call(obj, uintptr(value))
}

func ComboBoxEx_GetAutoCompleteOptions(obj uintptr) TAutoCompleteOptions {
    ret, _, _ := comboBoxEx_GetAutoCompleteOptions.Call(obj)
    return TAutoCompleteOptions(ret)
}

func ComboBoxEx_SetAutoCompleteOptions(obj uintptr, value TAutoCompleteOptions) {
   comboBoxEx_SetAutoCompleteOptions.Call(obj, uintptr(value))
}

func ComboBoxEx_GetItemsEx(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetItemsEx.Call(obj)
    return ret
}

func ComboBoxEx_SetItemsEx(obj uintptr, value uintptr) {
   comboBoxEx_SetItemsEx.Call(obj, value)
}

func ComboBoxEx_GetStyle(obj uintptr) TComboBoxExStyle {
    ret, _, _ := comboBoxEx_GetStyle.Call(obj)
    return TComboBoxExStyle(ret)
}

func ComboBoxEx_SetStyle(obj uintptr, value TComboBoxExStyle) {
   comboBoxEx_SetStyle.Call(obj, uintptr(value))
}

func ComboBoxEx_GetStyleEx(obj uintptr) TComboBoxExStyles {
    ret, _, _ := comboBoxEx_GetStyleEx.Call(obj)
    return TComboBoxExStyles(ret)
}

func ComboBoxEx_SetStyleEx(obj uintptr, value TComboBoxExStyles) {
   comboBoxEx_SetStyleEx.Call(obj, uintptr(value))
}

func ComboBoxEx_GetAction(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetAction.Call(obj)
    return ret
}

func ComboBoxEx_SetAction(obj uintptr, value uintptr) {
   comboBoxEx_SetAction.Call(obj, value)
}

func ComboBoxEx_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := comboBoxEx_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func ComboBoxEx_SetAnchors(obj uintptr, value TAnchors) {
   comboBoxEx_SetAnchors.Call(obj, uintptr(value))
}

func ComboBoxEx_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := comboBoxEx_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func ComboBoxEx_SetBiDiMode(obj uintptr, value TBiDiMode) {
   comboBoxEx_SetBiDiMode.Call(obj, uintptr(value))
}

func ComboBoxEx_GetColor(obj uintptr) TColor {
    ret, _, _ := comboBoxEx_GetColor.Call(obj)
    return TColor(ret)
}

func ComboBoxEx_SetColor(obj uintptr, value TColor) {
   comboBoxEx_SetColor.Call(obj, uintptr(value))
}

func ComboBoxEx_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetConstraints.Call(obj)
    return ret
}

func ComboBoxEx_SetConstraints(obj uintptr, value uintptr) {
   comboBoxEx_SetConstraints.Call(obj, value)
}

func ComboBoxEx_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDoubleBuffered(obj uintptr, value bool) {
   comboBoxEx_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := comboBoxEx_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func ComboBoxEx_SetDragCursor(obj uintptr, value TCursor) {
   comboBoxEx_SetDragCursor.Call(obj, uintptr(value))
}

func ComboBoxEx_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := comboBoxEx_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func ComboBoxEx_SetDragKind(obj uintptr, value TDragKind) {
   comboBoxEx_SetDragKind.Call(obj, uintptr(value))
}

func ComboBoxEx_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := comboBoxEx_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func ComboBoxEx_SetDragMode(obj uintptr, value TDragMode) {
   comboBoxEx_SetDragMode.Call(obj, uintptr(value))
}

func ComboBoxEx_GetEnabled(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetEnabled(obj uintptr, value bool) {
   comboBoxEx_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetFont(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetFont.Call(obj)
    return ret
}

func ComboBoxEx_SetFont(obj uintptr, value uintptr) {
   comboBoxEx_SetFont.Call(obj, value)
}

func ComboBoxEx_GetItemHeight(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetItemHeight.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetItemHeight(obj uintptr, value int32) {
   comboBoxEx_SetItemHeight.Call(obj, uintptr(value))
}

func ComboBoxEx_GetMaxLength(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetMaxLength.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetMaxLength(obj uintptr, value int32) {
   comboBoxEx_SetMaxLength.Call(obj, uintptr(value))
}

func ComboBoxEx_GetParentColor(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentColor(obj uintptr, value bool) {
   comboBoxEx_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentDoubleBuffered(obj uintptr, value bool) {
   comboBoxEx_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentFont(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentFont(obj uintptr, value bool) {
   comboBoxEx_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetParentShowHint(obj uintptr, value bool) {
   comboBoxEx_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetPopupMenu.Call(obj)
    return ret
}

func ComboBoxEx_SetPopupMenu(obj uintptr, value uintptr) {
   comboBoxEx_SetPopupMenu.Call(obj, value)
}

func ComboBoxEx_GetShowHint(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetShowHint(obj uintptr, value bool) {
   comboBoxEx_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := comboBoxEx_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func ComboBoxEx_SetTabOrder(obj uintptr, value TTabOrder) {
   comboBoxEx_SetTabOrder.Call(obj, uintptr(value))
}

func ComboBoxEx_GetTabStop(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetTabStop(obj uintptr, value bool) {
   comboBoxEx_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetText(obj uintptr) string {
    ret, _, _ := comboBoxEx_GetText.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_SetText(obj uintptr, value string) {
   comboBoxEx_SetText.Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetVisible(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetVisible(obj uintptr, value bool) {
   comboBoxEx_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_SetOnChange(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnChange.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnClick(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnClick.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnContextPopup(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnDblClick(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnDragDrop(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnDragOver(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnEndDock(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnEndDrag(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnEnter(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnEnter.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnExit(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnExit.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnKeyDown(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnKeyDown.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnKeyPress(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnKeyPress.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnKeyUp(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnKeyUp.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnMouseMove(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnSelect(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnSelect.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_SetOnStartDock(obj uintptr, fn interface{}) {
    comboBoxEx_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func ComboBoxEx_GetImages(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetImages.Call(obj)
    return ret
}

func ComboBoxEx_SetImages(obj uintptr, value uintptr) {
   comboBoxEx_SetImages.Call(obj, value)
}

func ComboBoxEx_GetDropDownCount(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetDropDownCount.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetDropDownCount(obj uintptr, value int32) {
   comboBoxEx_SetDropDownCount.Call(obj, uintptr(value))
}

func ComboBoxEx_GetSelText(obj uintptr) string {
    ret, _, _ := comboBoxEx_GetSelText.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_SetSelText(obj uintptr, value string) {
   comboBoxEx_SetSelText.Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetCanvas(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetCanvas.Call(obj)
    return ret
}

func ComboBoxEx_GetDroppedDown(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetDroppedDown.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDroppedDown(obj uintptr, value bool) {
   comboBoxEx_SetDroppedDown.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetItems(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetItems.Call(obj)
    return ret
}

func ComboBoxEx_SetItems(obj uintptr, value uintptr) {
   comboBoxEx_SetItems.Call(obj, value)
}

func ComboBoxEx_GetSelLength(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetSelLength.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetSelLength(obj uintptr, value int32) {
   comboBoxEx_SetSelLength.Call(obj, uintptr(value))
}

func ComboBoxEx_GetSelStart(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetSelStart.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetSelStart(obj uintptr, value int32) {
   comboBoxEx_SetSelStart.Call(obj, uintptr(value))
}

func ComboBoxEx_GetItemIndex(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetItemIndex.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetItemIndex(obj uintptr, value int32) {
   comboBoxEx_SetItemIndex.Call(obj, uintptr(value))
}

func ComboBoxEx_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetDockClientCount.Call(obj)
    return int32(ret)
}

func ComboBoxEx_GetDockSite(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetDockSite(obj uintptr, value bool) {
   comboBoxEx_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func ComboBoxEx_GetBrush(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetBrush.Call(obj)
    return ret
}

func ComboBoxEx_GetControlCount(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetControlCount.Call(obj)
    return int32(ret)
}

func ComboBoxEx_GetHandle(obj uintptr) HWND {
    ret, _, _ := comboBoxEx_GetHandle.Call(obj)
    return HWND(ret)
}

func ComboBoxEx_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := comboBoxEx_GetParentWindow.Call(obj)
    return HWND(ret)
}

func ComboBoxEx_SetParentWindow(obj uintptr, value HWND) {
   comboBoxEx_SetParentWindow.Call(obj, uintptr(value))
}

func ComboBoxEx_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_SetUseDockManager(obj uintptr, value bool) {
   comboBoxEx_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func ComboBoxEx_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    comboBoxEx_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_SetBoundsRect(obj uintptr, value TRect) {
   comboBoxEx_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func ComboBoxEx_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetClientHeight.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetClientHeight(obj uintptr, value int32) {
   comboBoxEx_SetClientHeight.Call(obj, uintptr(value))
}

func ComboBoxEx_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    comboBoxEx_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_GetClientRect(obj uintptr) TRect {
    var ret TRect
    comboBoxEx_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func ComboBoxEx_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetClientWidth.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetClientWidth(obj uintptr, value int32) {
   comboBoxEx_SetClientWidth.Call(obj, uintptr(value))
}

func ComboBoxEx_GetControlState(obj uintptr) TControlState {
    ret, _, _ := comboBoxEx_GetControlState.Call(obj)
    return TControlState(ret)
}

func ComboBoxEx_SetControlState(obj uintptr, value TControlState) {
   comboBoxEx_SetControlState.Call(obj, uintptr(value))
}

func ComboBoxEx_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := comboBoxEx_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func ComboBoxEx_SetControlStyle(obj uintptr, value TControlStyle) {
   comboBoxEx_SetControlStyle.Call(obj, uintptr(value))
}

func ComboBoxEx_GetFloating(obj uintptr) bool {
    ret, _, _ := comboBoxEx_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func ComboBoxEx_GetParent(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetParent.Call(obj)
    return ret
}

func ComboBoxEx_SetParent(obj uintptr, value uintptr) {
   comboBoxEx_SetParent.Call(obj, value)
}

func ComboBoxEx_GetLeft(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetLeft.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetLeft(obj uintptr, value int32) {
   comboBoxEx_SetLeft.Call(obj, uintptr(value))
}

func ComboBoxEx_GetTop(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetTop.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetTop(obj uintptr, value int32) {
   comboBoxEx_SetTop.Call(obj, uintptr(value))
}

func ComboBoxEx_GetWidth(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetWidth.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetWidth(obj uintptr, value int32) {
   comboBoxEx_SetWidth.Call(obj, uintptr(value))
}

func ComboBoxEx_GetHeight(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetHeight.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetHeight(obj uintptr, value int32) {
   comboBoxEx_SetHeight.Call(obj, uintptr(value))
}

func ComboBoxEx_GetCursor(obj uintptr) TCursor {
    ret, _, _ := comboBoxEx_GetCursor.Call(obj)
    return TCursor(ret)
}

func ComboBoxEx_SetCursor(obj uintptr, value TCursor) {
   comboBoxEx_SetCursor.Call(obj, uintptr(value))
}

func ComboBoxEx_GetHint(obj uintptr) string {
    ret, _, _ := comboBoxEx_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_SetHint(obj uintptr, value string) {
   comboBoxEx_SetHint.Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetComponentCount.Call(obj)
    return int32(ret)
}

func ComboBoxEx_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := comboBoxEx_GetComponentIndex.Call(obj)
    return int32(ret)
}

func ComboBoxEx_SetComponentIndex(obj uintptr, value int32) {
   comboBoxEx_SetComponentIndex.Call(obj, uintptr(value))
}

func ComboBoxEx_GetOwner(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetOwner.Call(obj)
    return ret
}

func ComboBoxEx_GetName(obj uintptr) string {
    ret, _, _ := comboBoxEx_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboBoxEx_SetName(obj uintptr, value string) {
   comboBoxEx_SetName.Call(obj, GoStrToDStr(value))
}

func ComboBoxEx_GetTag(obj uintptr) int {
    ret, _, _ := comboBoxEx_GetTag.Call(obj)
    return int(ret)
}

func ComboBoxEx_SetTag(obj uintptr, value int) {
   comboBoxEx_SetTag.Call(obj, uintptr(value))
}

func ComboBoxEx_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetAnchorSideLeft.Call(obj)
    return ret
}

func ComboBoxEx_SetAnchorSideLeft(obj uintptr, value uintptr) {
   comboBoxEx_SetAnchorSideLeft.Call(obj, value)
}

func ComboBoxEx_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetAnchorSideTop.Call(obj)
    return ret
}

func ComboBoxEx_SetAnchorSideTop(obj uintptr, value uintptr) {
   comboBoxEx_SetAnchorSideTop.Call(obj, value)
}

func ComboBoxEx_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetAnchorSideRight.Call(obj)
    return ret
}

func ComboBoxEx_SetAnchorSideRight(obj uintptr, value uintptr) {
   comboBoxEx_SetAnchorSideRight.Call(obj, value)
}

func ComboBoxEx_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetAnchorSideBottom.Call(obj)
    return ret
}

func ComboBoxEx_SetAnchorSideBottom(obj uintptr, value uintptr) {
   comboBoxEx_SetAnchorSideBottom.Call(obj, value)
}

func ComboBoxEx_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetChildSizing.Call(obj)
    return ret
}

func ComboBoxEx_SetChildSizing(obj uintptr, value uintptr) {
   comboBoxEx_SetChildSizing.Call(obj, value)
}

func ComboBoxEx_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := comboBoxEx_GetBorderSpacing.Call(obj)
    return ret
}

func ComboBoxEx_SetBorderSpacing(obj uintptr, value uintptr) {
   comboBoxEx_SetBorderSpacing.Call(obj, value)
}

func ComboBoxEx_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboBoxEx_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func ComboBoxEx_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboBoxEx_GetControls.Call(obj, uintptr(Index))
    return ret
}

func ComboBoxEx_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := comboBoxEx_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func ComboBoxEx_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := comboBoxEx_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func ComboBoxEx_StaticClassType() TClass {
    r, _, _:= comboBoxEx_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TComboExItems ---------------------------

func ComboExItems_Add(obj uintptr) uintptr {
    ret, _, _ := comboExItems_Add.Call(obj)
    return ret
}

func ComboExItems_AddItem(obj uintptr, Caption string, ImageIndex int32, SelectedImageIndex int32, OverlayImageIndex int32, Indent int32, Data uintptr) uintptr {
    ret, _, _ := comboExItems_AddItem.Call(obj, GoStrToDStr(Caption) , uintptr(ImageIndex) , uintptr(SelectedImageIndex) , uintptr(OverlayImageIndex) , uintptr(Indent) , Data )
    return ret
}

func ComboExItems_Insert(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboExItems_Insert.Call(obj, uintptr(Index) )
    return ret
}

func ComboExItems_Owner(obj uintptr) uintptr {
    ret, _, _ := comboExItems_Owner.Call(obj)
    return ret
}

func ComboExItems_Assign(obj uintptr, Source uintptr)  {
    comboExItems_Assign.Call(obj, Source )
}

func ComboExItems_BeginUpdate(obj uintptr)  {
    comboExItems_BeginUpdate.Call(obj)
}

func ComboExItems_Clear(obj uintptr)  {
    comboExItems_Clear.Call(obj)
}

func ComboExItems_Delete(obj uintptr, Index int32)  {
    comboExItems_Delete.Call(obj, uintptr(Index) )
}

func ComboExItems_EndUpdate(obj uintptr)  {
    comboExItems_EndUpdate.Call(obj)
}

func ComboExItems_FindItemID(obj uintptr, ID int32) uintptr {
    ret, _, _ := comboExItems_FindItemID.Call(obj, uintptr(ID) )
    return ret
}

func ComboExItems_GetNamePath(obj uintptr) string {
    ret, _, _ := comboExItems_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItems_ClassType(obj uintptr) TClass {
    ret, _, _ := comboExItems_ClassType.Call(obj)
    return TClass(ret)
}

func ComboExItems_ClassName(obj uintptr) string {
    ret, _, _ := comboExItems_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItems_InstanceSize(obj uintptr) int32 {
    ret, _, _ := comboExItems_InstanceSize.Call(obj)
    return int32(ret)
}

func ComboExItems_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := comboExItems_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ComboExItems_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := comboExItems_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ComboExItems_GetHashCode(obj uintptr) int32 {
    ret, _, _ := comboExItems_GetHashCode.Call(obj)
    return int32(ret)
}

func ComboExItems_ToString(obj uintptr) string {
    ret, _, _ := comboExItems_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItems_GetCount(obj uintptr) int32 {
    ret, _, _ := comboExItems_GetCount.Call(obj)
    return int32(ret)
}

func ComboExItems_GetComboItems(obj uintptr, Index int32) uintptr {
    ret, _, _ := comboExItems_GetComboItems.Call(obj, uintptr(Index))
    return ret
}

func ComboExItems_StaticClassType() TClass {
    r, _, _:= comboExItems_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TComboExItem ---------------------------

func ComboExItem_Assign(obj uintptr, Source uintptr)  {
    comboExItem_Assign.Call(obj, Source )
}

func ComboExItem_GetNamePath(obj uintptr) string {
    ret, _, _ := comboExItem_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItem_ClassType(obj uintptr) TClass {
    ret, _, _ := comboExItem_ClassType.Call(obj)
    return TClass(ret)
}

func ComboExItem_ClassName(obj uintptr) string {
    ret, _, _ := comboExItem_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItem_InstanceSize(obj uintptr) int32 {
    ret, _, _ := comboExItem_InstanceSize.Call(obj)
    return int32(ret)
}

func ComboExItem_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := comboExItem_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ComboExItem_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := comboExItem_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ComboExItem_GetHashCode(obj uintptr) int32 {
    ret, _, _ := comboExItem_GetHashCode.Call(obj)
    return int32(ret)
}

func ComboExItem_ToString(obj uintptr) string {
    ret, _, _ := comboExItem_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItem_GetIndent(obj uintptr) int32 {
    ret, _, _ := comboExItem_GetIndent.Call(obj)
    return int32(ret)
}

func ComboExItem_SetIndent(obj uintptr, value int32) {
   comboExItem_SetIndent.Call(obj, uintptr(value))
}

func ComboExItem_GetOverlayImageIndex(obj uintptr) int32 {
    ret, _, _ := comboExItem_GetOverlayImageIndex.Call(obj)
    return int32(ret)
}

func ComboExItem_SetOverlayImageIndex(obj uintptr, value int32) {
   comboExItem_SetOverlayImageIndex.Call(obj, uintptr(value))
}

func ComboExItem_GetData(obj uintptr) unsafe.Pointer {
    ret, _, _ := comboExItem_GetData.Call(obj)
    return unsafe.Pointer(ret)
}

func ComboExItem_SetData(obj uintptr, value unsafe.Pointer) {
   comboExItem_SetData.Call(obj, uintptr(value))
}

func ComboExItem_GetCaption(obj uintptr) string {
    ret, _, _ := comboExItem_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItem_SetCaption(obj uintptr, value string) {
   comboExItem_SetCaption.Call(obj, GoStrToDStr(value))
}

func ComboExItem_GetImageIndex(obj uintptr) int32 {
    ret, _, _ := comboExItem_GetImageIndex.Call(obj)
    return int32(ret)
}

func ComboExItem_SetImageIndex(obj uintptr, value int32) {
   comboExItem_SetImageIndex.Call(obj, uintptr(value))
}

func ComboExItem_GetCollection(obj uintptr) uintptr {
    ret, _, _ := comboExItem_GetCollection.Call(obj)
    return ret
}

func ComboExItem_SetCollection(obj uintptr, value uintptr) {
   comboExItem_SetCollection.Call(obj, value)
}

func ComboExItem_GetIndex(obj uintptr) int32 {
    ret, _, _ := comboExItem_GetIndex.Call(obj)
    return int32(ret)
}

func ComboExItem_SetIndex(obj uintptr, value int32) {
   comboExItem_SetIndex.Call(obj, uintptr(value))
}

func ComboExItem_GetDisplayName(obj uintptr) string {
    ret, _, _ := comboExItem_GetDisplayName.Call(obj)
    return DStrToGoStr(ret)
}

func ComboExItem_SetDisplayName(obj uintptr, value string) {
   comboExItem_SetDisplayName.Call(obj, GoStrToDStr(value))
}

func ComboExItem_StaticClassType() TClass {
    r, _, _:= comboExItem_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TFrame ---------------------------

func Frame_Create(obj uintptr) uintptr {
    ret, _, _ := frame_Create.Call(obj)
    return ret
}

func Frame_Free(obj uintptr) {
    frame_Free.Call(obj)
}

func Frame_ScrollInView(obj uintptr, AControl uintptr)  {
    frame_ScrollInView.Call(obj, AControl )
}

func Frame_CanFocus(obj uintptr) bool {
    ret, _, _ := frame_CanFocus.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_ContainsControl(obj uintptr, Control uintptr) bool {
    ret, _, _ := frame_ContainsControl.Call(obj, Control )
    return DBoolToGoBool(ret)
}

func Frame_ControlAtPos(obj uintptr, Pos TPoint, AllowDisabled bool, AllowWinControls bool, AllLevels bool) uintptr {
    ret, _, _ := frame_ControlAtPos.Call(obj, uintptr(unsafe.Pointer(&Pos)), GoBoolToDBool(AllowDisabled) , GoBoolToDBool(AllowWinControls) , GoBoolToDBool(AllLevels) )
    return ret
}

func Frame_DisableAlign(obj uintptr)  {
    frame_DisableAlign.Call(obj)
}

func Frame_EnableAlign(obj uintptr)  {
    frame_EnableAlign.Call(obj)
}

func Frame_FindChildControl(obj uintptr, ControlName string) uintptr {
    ret, _, _ := frame_FindChildControl.Call(obj, GoStrToDStr(ControlName) )
    return ret
}

func Frame_FlipChildren(obj uintptr, AllLevels bool)  {
    frame_FlipChildren.Call(obj, GoBoolToDBool(AllLevels) )
}

func Frame_Focused(obj uintptr) bool {
    ret, _, _ := frame_Focused.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_HandleAllocated(obj uintptr) bool {
    ret, _, _ := frame_HandleAllocated.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_InsertControl(obj uintptr, AControl uintptr)  {
    frame_InsertControl.Call(obj, AControl )
}

func Frame_Invalidate(obj uintptr)  {
    frame_Invalidate.Call(obj)
}

func Frame_RemoveControl(obj uintptr, AControl uintptr)  {
    frame_RemoveControl.Call(obj, AControl )
}

func Frame_Realign(obj uintptr)  {
    frame_Realign.Call(obj)
}

func Frame_Repaint(obj uintptr)  {
    frame_Repaint.Call(obj)
}

func Frame_ScaleBy(obj uintptr, M int32, D int32)  {
    frame_ScaleBy.Call(obj, uintptr(M) , uintptr(D) )
}

func Frame_ScrollBy(obj uintptr, DeltaX int32, DeltaY int32)  {
    frame_ScrollBy.Call(obj, uintptr(DeltaX) , uintptr(DeltaY) )
}

func Frame_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    frame_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func Frame_SetFocus(obj uintptr)  {
    frame_SetFocus.Call(obj)
}

func Frame_Update(obj uintptr)  {
    frame_Update.Call(obj)
}

func Frame_BringToFront(obj uintptr)  {
    frame_BringToFront.Call(obj)
}

func Frame_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    frame_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    frame_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_Dragging(obj uintptr) bool {
    ret, _, _ := frame_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_HasParent(obj uintptr) bool {
    ret, _, _ := frame_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_Hide(obj uintptr)  {
    frame_Hide.Call(obj)
}

func Frame_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := frame_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func Frame_Refresh(obj uintptr)  {
    frame_Refresh.Call(obj)
}

func Frame_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    frame_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    frame_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_SendToBack(obj uintptr)  {
    frame_SendToBack.Call(obj)
}

func Frame_Show(obj uintptr)  {
    frame_Show.Call(obj)
}

func Frame_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := frame_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func Frame_GetTextLen(obj uintptr) int32 {
    ret, _, _ := frame_GetTextLen.Call(obj)
    return int32(ret)
}

func Frame_SetTextBuf(obj uintptr, Buffer string)  {
    frame_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func Frame_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := frame_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func Frame_GetNamePath(obj uintptr) string {
    ret, _, _ := frame_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func Frame_Assign(obj uintptr, Source uintptr)  {
    frame_Assign.Call(obj, Source )
}

func Frame_ClassType(obj uintptr) TClass {
    ret, _, _ := frame_ClassType.Call(obj)
    return TClass(ret)
}

func Frame_ClassName(obj uintptr) string {
    ret, _, _ := frame_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func Frame_InstanceSize(obj uintptr) int32 {
    ret, _, _ := frame_InstanceSize.Call(obj)
    return int32(ret)
}

func Frame_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := frame_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func Frame_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := frame_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func Frame_GetHashCode(obj uintptr) int32 {
    ret, _, _ := frame_GetHashCode.Call(obj)
    return int32(ret)
}

func Frame_ToString(obj uintptr) string {
    ret, _, _ := frame_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func Frame_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    frame_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Frame_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    frame_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func Frame_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    frame_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func Frame_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    frame_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func Frame_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    frame_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func Frame_AnchorClient(obj uintptr, ASpace int32)  {
    frame_AnchorClient.Call(obj, uintptr(ASpace) )
}

func Frame_GetAlign(obj uintptr) TAlign {
    ret, _, _ := frame_GetAlign.Call(obj)
    return TAlign(ret)
}

func Frame_SetAlign(obj uintptr, value TAlign) {
   frame_SetAlign.Call(obj, uintptr(value))
}

func Frame_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := frame_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func Frame_SetAnchors(obj uintptr, value TAnchors) {
   frame_SetAnchors.Call(obj, uintptr(value))
}

func Frame_GetAutoScroll(obj uintptr) bool {
    ret, _, _ := frame_GetAutoScroll.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetAutoScroll(obj uintptr, value bool) {
   frame_SetAutoScroll.Call(obj, GoBoolToDBool(value))
}

func Frame_GetAutoSize(obj uintptr) bool {
    ret, _, _ := frame_GetAutoSize.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetAutoSize(obj uintptr, value bool) {
   frame_SetAutoSize.Call(obj, GoBoolToDBool(value))
}

func Frame_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := frame_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func Frame_SetBiDiMode(obj uintptr, value TBiDiMode) {
   frame_SetBiDiMode.Call(obj, uintptr(value))
}

func Frame_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := frame_GetConstraints.Call(obj)
    return ret
}

func Frame_SetConstraints(obj uintptr, value uintptr) {
   frame_SetConstraints.Call(obj, value)
}

func Frame_GetDockSite(obj uintptr) bool {
    ret, _, _ := frame_GetDockSite.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetDockSite(obj uintptr, value bool) {
   frame_SetDockSite.Call(obj, GoBoolToDBool(value))
}

func Frame_GetDoubleBuffered(obj uintptr) bool {
    ret, _, _ := frame_GetDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetDoubleBuffered(obj uintptr, value bool) {
   frame_SetDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Frame_GetDragCursor(obj uintptr) TCursor {
    ret, _, _ := frame_GetDragCursor.Call(obj)
    return TCursor(ret)
}

func Frame_SetDragCursor(obj uintptr, value TCursor) {
   frame_SetDragCursor.Call(obj, uintptr(value))
}

func Frame_GetDragKind(obj uintptr) TDragKind {
    ret, _, _ := frame_GetDragKind.Call(obj)
    return TDragKind(ret)
}

func Frame_SetDragKind(obj uintptr, value TDragKind) {
   frame_SetDragKind.Call(obj, uintptr(value))
}

func Frame_GetDragMode(obj uintptr) TDragMode {
    ret, _, _ := frame_GetDragMode.Call(obj)
    return TDragMode(ret)
}

func Frame_SetDragMode(obj uintptr, value TDragMode) {
   frame_SetDragMode.Call(obj, uintptr(value))
}

func Frame_GetEnabled(obj uintptr) bool {
    ret, _, _ := frame_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetEnabled(obj uintptr, value bool) {
   frame_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func Frame_GetColor(obj uintptr) TColor {
    ret, _, _ := frame_GetColor.Call(obj)
    return TColor(ret)
}

func Frame_SetColor(obj uintptr, value TColor) {
   frame_SetColor.Call(obj, uintptr(value))
}

func Frame_GetFont(obj uintptr) uintptr {
    ret, _, _ := frame_GetFont.Call(obj)
    return ret
}

func Frame_SetFont(obj uintptr, value uintptr) {
   frame_SetFont.Call(obj, value)
}

func Frame_GetParentColor(obj uintptr) bool {
    ret, _, _ := frame_GetParentColor.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetParentColor(obj uintptr, value bool) {
   frame_SetParentColor.Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentDoubleBuffered(obj uintptr) bool {
    ret, _, _ := frame_GetParentDoubleBuffered.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetParentDoubleBuffered(obj uintptr, value bool) {
   frame_SetParentDoubleBuffered.Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentFont(obj uintptr) bool {
    ret, _, _ := frame_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetParentFont(obj uintptr, value bool) {
   frame_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func Frame_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := frame_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetParentShowHint(obj uintptr, value bool) {
   frame_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func Frame_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := frame_GetPopupMenu.Call(obj)
    return ret
}

func Frame_SetPopupMenu(obj uintptr, value uintptr) {
   frame_SetPopupMenu.Call(obj, value)
}

func Frame_GetShowHint(obj uintptr) bool {
    ret, _, _ := frame_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetShowHint(obj uintptr, value bool) {
   frame_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func Frame_GetTabOrder(obj uintptr) TTabOrder {
    ret, _, _ := frame_GetTabOrder.Call(obj)
    return TTabOrder(ret)
}

func Frame_SetTabOrder(obj uintptr, value TTabOrder) {
   frame_SetTabOrder.Call(obj, uintptr(value))
}

func Frame_GetTabStop(obj uintptr) bool {
    ret, _, _ := frame_GetTabStop.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetTabStop(obj uintptr, value bool) {
   frame_SetTabStop.Call(obj, GoBoolToDBool(value))
}

func Frame_GetVisible(obj uintptr) bool {
    ret, _, _ := frame_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetVisible(obj uintptr, value bool) {
   frame_SetVisible.Call(obj, GoBoolToDBool(value))
}

func Frame_SetOnAlignPosition(obj uintptr, fn interface{}) {
    frame_SetOnAlignPosition.Call(obj, addEventToMap(fn))
}

func Frame_SetOnClick(obj uintptr, fn interface{}) {
    frame_SetOnClick.Call(obj, addEventToMap(fn))
}

func Frame_SetOnContextPopup(obj uintptr, fn interface{}) {
    frame_SetOnContextPopup.Call(obj, addEventToMap(fn))
}

func Frame_SetOnDblClick(obj uintptr, fn interface{}) {
    frame_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func Frame_SetOnDockDrop(obj uintptr, fn interface{}) {
    frame_SetOnDockDrop.Call(obj, addEventToMap(fn))
}

func Frame_SetOnDragDrop(obj uintptr, fn interface{}) {
    frame_SetOnDragDrop.Call(obj, addEventToMap(fn))
}

func Frame_SetOnDragOver(obj uintptr, fn interface{}) {
    frame_SetOnDragOver.Call(obj, addEventToMap(fn))
}

func Frame_SetOnEndDock(obj uintptr, fn interface{}) {
    frame_SetOnEndDock.Call(obj, addEventToMap(fn))
}

func Frame_SetOnEndDrag(obj uintptr, fn interface{}) {
    frame_SetOnEndDrag.Call(obj, addEventToMap(fn))
}

func Frame_SetOnEnter(obj uintptr, fn interface{}) {
    frame_SetOnEnter.Call(obj, addEventToMap(fn))
}

func Frame_SetOnExit(obj uintptr, fn interface{}) {
    frame_SetOnExit.Call(obj, addEventToMap(fn))
}

func Frame_SetOnGetSiteInfo(obj uintptr, fn interface{}) {
    frame_SetOnGetSiteInfo.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseDown(obj uintptr, fn interface{}) {
    frame_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseEnter(obj uintptr, fn interface{}) {
    frame_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseLeave(obj uintptr, fn interface{}) {
    frame_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseMove(obj uintptr, fn interface{}) {
    frame_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseUp(obj uintptr, fn interface{}) {
    frame_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseWheel(obj uintptr, fn interface{}) {
    frame_SetOnMouseWheel.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseWheelDown(obj uintptr, fn interface{}) {
    frame_SetOnMouseWheelDown.Call(obj, addEventToMap(fn))
}

func Frame_SetOnMouseWheelUp(obj uintptr, fn interface{}) {
    frame_SetOnMouseWheelUp.Call(obj, addEventToMap(fn))
}

func Frame_SetOnResize(obj uintptr, fn interface{}) {
    frame_SetOnResize.Call(obj, addEventToMap(fn))
}

func Frame_SetOnStartDock(obj uintptr, fn interface{}) {
    frame_SetOnStartDock.Call(obj, addEventToMap(fn))
}

func Frame_SetOnUnDock(obj uintptr, fn interface{}) {
    frame_SetOnUnDock.Call(obj, addEventToMap(fn))
}

func Frame_GetHorzScrollBar(obj uintptr) uintptr {
    ret, _, _ := frame_GetHorzScrollBar.Call(obj)
    return ret
}

func Frame_SetHorzScrollBar(obj uintptr, value uintptr) {
   frame_SetHorzScrollBar.Call(obj, value)
}

func Frame_GetVertScrollBar(obj uintptr) uintptr {
    ret, _, _ := frame_GetVertScrollBar.Call(obj)
    return ret
}

func Frame_SetVertScrollBar(obj uintptr, value uintptr) {
   frame_SetVertScrollBar.Call(obj, value)
}

func Frame_GetDockClientCount(obj uintptr) int32 {
    ret, _, _ := frame_GetDockClientCount.Call(obj)
    return int32(ret)
}

func Frame_GetMouseInClient(obj uintptr) bool {
    ret, _, _ := frame_GetMouseInClient.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_GetVisibleDockClientCount(obj uintptr) int32 {
    ret, _, _ := frame_GetVisibleDockClientCount.Call(obj)
    return int32(ret)
}

func Frame_GetBrush(obj uintptr) uintptr {
    ret, _, _ := frame_GetBrush.Call(obj)
    return ret
}

func Frame_GetControlCount(obj uintptr) int32 {
    ret, _, _ := frame_GetControlCount.Call(obj)
    return int32(ret)
}

func Frame_GetHandle(obj uintptr) HWND {
    ret, _, _ := frame_GetHandle.Call(obj)
    return HWND(ret)
}

func Frame_GetParentWindow(obj uintptr) HWND {
    ret, _, _ := frame_GetParentWindow.Call(obj)
    return HWND(ret)
}

func Frame_SetParentWindow(obj uintptr, value HWND) {
   frame_SetParentWindow.Call(obj, uintptr(value))
}

func Frame_GetUseDockManager(obj uintptr) bool {
    ret, _, _ := frame_GetUseDockManager.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_SetUseDockManager(obj uintptr, value bool) {
   frame_SetUseDockManager.Call(obj, GoBoolToDBool(value))
}

func Frame_GetAction(obj uintptr) uintptr {
    ret, _, _ := frame_GetAction.Call(obj)
    return ret
}

func Frame_SetAction(obj uintptr, value uintptr) {
   frame_SetAction.Call(obj, value)
}

func Frame_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    frame_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_SetBoundsRect(obj uintptr, value TRect) {
   frame_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func Frame_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := frame_GetClientHeight.Call(obj)
    return int32(ret)
}

func Frame_SetClientHeight(obj uintptr, value int32) {
   frame_SetClientHeight.Call(obj, uintptr(value))
}

func Frame_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    frame_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_GetClientRect(obj uintptr) TRect {
    var ret TRect
    frame_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func Frame_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := frame_GetClientWidth.Call(obj)
    return int32(ret)
}

func Frame_SetClientWidth(obj uintptr, value int32) {
   frame_SetClientWidth.Call(obj, uintptr(value))
}

func Frame_GetControlState(obj uintptr) TControlState {
    ret, _, _ := frame_GetControlState.Call(obj)
    return TControlState(ret)
}

func Frame_SetControlState(obj uintptr, value TControlState) {
   frame_SetControlState.Call(obj, uintptr(value))
}

func Frame_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := frame_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func Frame_SetControlStyle(obj uintptr, value TControlStyle) {
   frame_SetControlStyle.Call(obj, uintptr(value))
}

func Frame_GetFloating(obj uintptr) bool {
    ret, _, _ := frame_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func Frame_GetParent(obj uintptr) uintptr {
    ret, _, _ := frame_GetParent.Call(obj)
    return ret
}

func Frame_SetParent(obj uintptr, value uintptr) {
   frame_SetParent.Call(obj, value)
}

func Frame_GetLeft(obj uintptr) int32 {
    ret, _, _ := frame_GetLeft.Call(obj)
    return int32(ret)
}

func Frame_SetLeft(obj uintptr, value int32) {
   frame_SetLeft.Call(obj, uintptr(value))
}

func Frame_GetTop(obj uintptr) int32 {
    ret, _, _ := frame_GetTop.Call(obj)
    return int32(ret)
}

func Frame_SetTop(obj uintptr, value int32) {
   frame_SetTop.Call(obj, uintptr(value))
}

func Frame_GetWidth(obj uintptr) int32 {
    ret, _, _ := frame_GetWidth.Call(obj)
    return int32(ret)
}

func Frame_SetWidth(obj uintptr, value int32) {
   frame_SetWidth.Call(obj, uintptr(value))
}

func Frame_GetHeight(obj uintptr) int32 {
    ret, _, _ := frame_GetHeight.Call(obj)
    return int32(ret)
}

func Frame_SetHeight(obj uintptr, value int32) {
   frame_SetHeight.Call(obj, uintptr(value))
}

func Frame_GetCursor(obj uintptr) TCursor {
    ret, _, _ := frame_GetCursor.Call(obj)
    return TCursor(ret)
}

func Frame_SetCursor(obj uintptr, value TCursor) {
   frame_SetCursor.Call(obj, uintptr(value))
}

func Frame_GetHint(obj uintptr) string {
    ret, _, _ := frame_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func Frame_SetHint(obj uintptr, value string) {
   frame_SetHint.Call(obj, GoStrToDStr(value))
}

func Frame_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := frame_GetComponentCount.Call(obj)
    return int32(ret)
}

func Frame_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := frame_GetComponentIndex.Call(obj)
    return int32(ret)
}

func Frame_SetComponentIndex(obj uintptr, value int32) {
   frame_SetComponentIndex.Call(obj, uintptr(value))
}

func Frame_GetOwner(obj uintptr) uintptr {
    ret, _, _ := frame_GetOwner.Call(obj)
    return ret
}

func Frame_GetName(obj uintptr) string {
    ret, _, _ := frame_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func Frame_SetName(obj uintptr, value string) {
   frame_SetName.Call(obj, GoStrToDStr(value))
}

func Frame_GetTag(obj uintptr) int {
    ret, _, _ := frame_GetTag.Call(obj)
    return int(ret)
}

func Frame_SetTag(obj uintptr, value int) {
   frame_SetTag.Call(obj, uintptr(value))
}

func Frame_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := frame_GetAnchorSideLeft.Call(obj)
    return ret
}

func Frame_SetAnchorSideLeft(obj uintptr, value uintptr) {
   frame_SetAnchorSideLeft.Call(obj, value)
}

func Frame_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := frame_GetAnchorSideTop.Call(obj)
    return ret
}

func Frame_SetAnchorSideTop(obj uintptr, value uintptr) {
   frame_SetAnchorSideTop.Call(obj, value)
}

func Frame_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := frame_GetAnchorSideRight.Call(obj)
    return ret
}

func Frame_SetAnchorSideRight(obj uintptr, value uintptr) {
   frame_SetAnchorSideRight.Call(obj, value)
}

func Frame_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := frame_GetAnchorSideBottom.Call(obj)
    return ret
}

func Frame_SetAnchorSideBottom(obj uintptr, value uintptr) {
   frame_SetAnchorSideBottom.Call(obj, value)
}

func Frame_GetChildSizing(obj uintptr) uintptr {
    ret, _, _ := frame_GetChildSizing.Call(obj)
    return ret
}

func Frame_SetChildSizing(obj uintptr, value uintptr) {
   frame_SetChildSizing.Call(obj, value)
}

func Frame_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := frame_GetBorderSpacing.Call(obj)
    return ret
}

func Frame_SetBorderSpacing(obj uintptr, value uintptr) {
   frame_SetBorderSpacing.Call(obj, value)
}

func Frame_GetDockClients(obj uintptr, Index int32) uintptr {
    ret, _, _ := frame_GetDockClients.Call(obj, uintptr(Index))
    return ret
}

func Frame_GetControls(obj uintptr, Index int32) uintptr {
    ret, _, _ := frame_GetControls.Call(obj, uintptr(Index))
    return ret
}

func Frame_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := frame_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func Frame_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := frame_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func Frame_StaticClassType() TClass {
    r, _, _:= frame_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TControlScrollBar ---------------------------

func ControlScrollBar_Assign(obj uintptr, Source uintptr)  {
    controlScrollBar_Assign.Call(obj, Source )
}

func ControlScrollBar_IsScrollBarVisible(obj uintptr) bool {
    ret, _, _ := controlScrollBar_IsScrollBarVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ControlScrollBar_GetNamePath(obj uintptr) string {
    ret, _, _ := controlScrollBar_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ControlScrollBar_ClassType(obj uintptr) TClass {
    ret, _, _ := controlScrollBar_ClassType.Call(obj)
    return TClass(ret)
}

func ControlScrollBar_ClassName(obj uintptr) string {
    ret, _, _ := controlScrollBar_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ControlScrollBar_InstanceSize(obj uintptr) int32 {
    ret, _, _ := controlScrollBar_InstanceSize.Call(obj)
    return int32(ret)
}

func ControlScrollBar_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := controlScrollBar_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ControlScrollBar_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := controlScrollBar_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ControlScrollBar_GetHashCode(obj uintptr) int32 {
    ret, _, _ := controlScrollBar_GetHashCode.Call(obj)
    return int32(ret)
}

func ControlScrollBar_ToString(obj uintptr) string {
    ret, _, _ := controlScrollBar_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ControlScrollBar_GetScrollPos(obj uintptr) int32 {
    ret, _, _ := controlScrollBar_GetScrollPos.Call(obj)
    return int32(ret)
}

func ControlScrollBar_GetIncrement(obj uintptr) TScrollBarInc {
    ret, _, _ := controlScrollBar_GetIncrement.Call(obj)
    return TScrollBarInc(ret)
}

func ControlScrollBar_SetIncrement(obj uintptr, value TScrollBarInc) {
   controlScrollBar_SetIncrement.Call(obj, uintptr(value))
}

func ControlScrollBar_GetPosition(obj uintptr) int32 {
    ret, _, _ := controlScrollBar_GetPosition.Call(obj)
    return int32(ret)
}

func ControlScrollBar_SetPosition(obj uintptr, value int32) {
   controlScrollBar_SetPosition.Call(obj, uintptr(value))
}

func ControlScrollBar_GetRange(obj uintptr) int32 {
    ret, _, _ := controlScrollBar_GetRange.Call(obj)
    return int32(ret)
}

func ControlScrollBar_SetRange(obj uintptr, value int32) {
   controlScrollBar_SetRange.Call(obj, uintptr(value))
}

func ControlScrollBar_GetSmooth(obj uintptr) bool {
    ret, _, _ := controlScrollBar_GetSmooth.Call(obj)
    return DBoolToGoBool(ret)
}

func ControlScrollBar_SetSmooth(obj uintptr, value bool) {
   controlScrollBar_SetSmooth.Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_GetTracking(obj uintptr) bool {
    ret, _, _ := controlScrollBar_GetTracking.Call(obj)
    return DBoolToGoBool(ret)
}

func ControlScrollBar_SetTracking(obj uintptr, value bool) {
   controlScrollBar_SetTracking.Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_GetVisible(obj uintptr) bool {
    ret, _, _ := controlScrollBar_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func ControlScrollBar_SetVisible(obj uintptr, value bool) {
   controlScrollBar_SetVisible.Call(obj, GoBoolToDBool(value))
}

func ControlScrollBar_StaticClassType() TClass {
    r, _, _:= controlScrollBar_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TSizeConstraints ---------------------------

func SizeConstraints_Assign(obj uintptr, Source uintptr)  {
    sizeConstraints_Assign.Call(obj, Source )
}

func SizeConstraints_GetNamePath(obj uintptr) string {
    ret, _, _ := sizeConstraints_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func SizeConstraints_ClassType(obj uintptr) TClass {
    ret, _, _ := sizeConstraints_ClassType.Call(obj)
    return TClass(ret)
}

func SizeConstraints_ClassName(obj uintptr) string {
    ret, _, _ := sizeConstraints_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func SizeConstraints_InstanceSize(obj uintptr) int32 {
    ret, _, _ := sizeConstraints_InstanceSize.Call(obj)
    return int32(ret)
}

func SizeConstraints_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := sizeConstraints_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func SizeConstraints_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := sizeConstraints_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func SizeConstraints_GetHashCode(obj uintptr) int32 {
    ret, _, _ := sizeConstraints_GetHashCode.Call(obj)
    return int32(ret)
}

func SizeConstraints_ToString(obj uintptr) string {
    ret, _, _ := sizeConstraints_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func SizeConstraints_SetOnChange(obj uintptr, fn interface{}) {
    sizeConstraints_SetOnChange.Call(obj, addEventToMap(fn))
}

func SizeConstraints_GetMaxHeight(obj uintptr) TConstraintSize {
    ret, _, _ := sizeConstraints_GetMaxHeight.Call(obj)
    return TConstraintSize(ret)
}

func SizeConstraints_SetMaxHeight(obj uintptr, value TConstraintSize) {
   sizeConstraints_SetMaxHeight.Call(obj, uintptr(value))
}

func SizeConstraints_GetMaxWidth(obj uintptr) TConstraintSize {
    ret, _, _ := sizeConstraints_GetMaxWidth.Call(obj)
    return TConstraintSize(ret)
}

func SizeConstraints_SetMaxWidth(obj uintptr, value TConstraintSize) {
   sizeConstraints_SetMaxWidth.Call(obj, uintptr(value))
}

func SizeConstraints_GetMinHeight(obj uintptr) TConstraintSize {
    ret, _, _ := sizeConstraints_GetMinHeight.Call(obj)
    return TConstraintSize(ret)
}

func SizeConstraints_SetMinHeight(obj uintptr, value TConstraintSize) {
   sizeConstraints_SetMinHeight.Call(obj, uintptr(value))
}

func SizeConstraints_GetMinWidth(obj uintptr) TConstraintSize {
    ret, _, _ := sizeConstraints_GetMinWidth.Call(obj)
    return TConstraintSize(ret)
}

func SizeConstraints_SetMinWidth(obj uintptr, value TConstraintSize) {
   sizeConstraints_SetMinWidth.Call(obj, uintptr(value))
}

func SizeConstraints_StaticClassType() TClass {
    r, _, _:= sizeConstraints_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TXButton ---------------------------

func XButton_Create(obj uintptr) uintptr {
    ret, _, _ := xButton_Create.Call(obj)
    return ret
}

func XButton_Free(obj uintptr) {
    xButton_Free.Call(obj)
}

func XButton_BringToFront(obj uintptr)  {
    xButton_BringToFront.Call(obj)
}

func XButton_ClientToScreen(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    xButton_ClientToScreen.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_ClientToParent(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    xButton_ClientToParent.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_Dragging(obj uintptr) bool {
    ret, _, _ := xButton_Dragging.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_HasParent(obj uintptr) bool {
    ret, _, _ := xButton_HasParent.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_Hide(obj uintptr)  {
    xButton_Hide.Call(obj)
}

func XButton_Invalidate(obj uintptr)  {
    xButton_Invalidate.Call(obj)
}

func XButton_Perform(obj uintptr, Msg uint32, WParam uintptr, LParam int) int {
    ret, _, _ := xButton_Perform.Call(obj, uintptr(Msg) , WParam , uintptr(LParam) )
    return int(ret)
}

func XButton_Refresh(obj uintptr)  {
    xButton_Refresh.Call(obj)
}

func XButton_Repaint(obj uintptr)  {
    xButton_Repaint.Call(obj)
}

func XButton_ScreenToClient(obj uintptr, Point TPoint) TPoint {
    var ret TPoint
    xButton_ScreenToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_ParentToClient(obj uintptr, Point TPoint, AParent uintptr) TPoint {
    var ret TPoint
    xButton_ParentToClient.Call(obj, uintptr(unsafe.Pointer(&Point)), AParent , uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_SendToBack(obj uintptr)  {
    xButton_SendToBack.Call(obj)
}

func XButton_SetBounds(obj uintptr, ALeft int32, ATop int32, AWidth int32, AHeight int32)  {
    xButton_SetBounds.Call(obj, uintptr(ALeft) , uintptr(ATop) , uintptr(AWidth) , uintptr(AHeight) )
}

func XButton_Show(obj uintptr)  {
    xButton_Show.Call(obj)
}

func XButton_Update(obj uintptr)  {
    xButton_Update.Call(obj)
}

func XButton_GetTextBuf(obj uintptr, Buffer *string, BufSize int32) int32 {
    if Buffer == nil || BufSize == 0 {
        return 0
    }
    strPtr := getBuff(BufSize)
    ret, _, _ := xButton_GetTextBuf.Call(obj, getBuffPtr(strPtr), uintptr(BufSize) )
    getTextBuf(strPtr, Buffer, int(ret))
    return int32(ret)
}

func XButton_GetTextLen(obj uintptr) int32 {
    ret, _, _ := xButton_GetTextLen.Call(obj)
    return int32(ret)
}

func XButton_SetTextBuf(obj uintptr, Buffer string)  {
    xButton_SetTextBuf.Call(obj, GoStrToDStr(Buffer) )
}

func XButton_FindComponent(obj uintptr, AName string) uintptr {
    ret, _, _ := xButton_FindComponent.Call(obj, GoStrToDStr(AName) )
    return ret
}

func XButton_GetNamePath(obj uintptr) string {
    ret, _, _ := xButton_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_Assign(obj uintptr, Source uintptr)  {
    xButton_Assign.Call(obj, Source )
}

func XButton_ClassType(obj uintptr) TClass {
    ret, _, _ := xButton_ClassType.Call(obj)
    return TClass(ret)
}

func XButton_ClassName(obj uintptr) string {
    ret, _, _ := xButton_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_InstanceSize(obj uintptr) int32 {
    ret, _, _ := xButton_InstanceSize.Call(obj)
    return int32(ret)
}

func XButton_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := xButton_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func XButton_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := xButton_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func XButton_GetHashCode(obj uintptr) int32 {
    ret, _, _ := xButton_GetHashCode.Call(obj)
    return int32(ret)
}

func XButton_ToString(obj uintptr) string {
    ret, _, _ := xButton_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_AnchorToNeighbour(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    xButton_AnchorToNeighbour.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func XButton_AnchorParallel(obj uintptr, ASide TAnchorKind, ASpace int32, ASibling uintptr)  {
    xButton_AnchorParallel.Call(obj, uintptr(ASide) , uintptr(ASpace) , ASibling )
}

func XButton_AnchorHorizontalCenterTo(obj uintptr, ASibling uintptr)  {
    xButton_AnchorHorizontalCenterTo.Call(obj, ASibling )
}

func XButton_AnchorVerticalCenterTo(obj uintptr, ASibling uintptr)  {
    xButton_AnchorVerticalCenterTo.Call(obj, ASibling )
}

func XButton_AnchorAsAlign(obj uintptr, ATheAlign TAlign, ASpace int32)  {
    xButton_AnchorAsAlign.Call(obj, uintptr(ATheAlign) , uintptr(ASpace) )
}

func XButton_AnchorClient(obj uintptr, ASpace int32)  {
    xButton_AnchorClient.Call(obj, uintptr(ASpace) )
}

func XButton_GetCaption(obj uintptr) string {
    ret, _, _ := xButton_GetCaption.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_SetCaption(obj uintptr, value string) {
   xButton_SetCaption.Call(obj, GoStrToDStr(value))
}

func XButton_GetShowCaption(obj uintptr) bool {
    ret, _, _ := xButton_GetShowCaption.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetShowCaption(obj uintptr, value bool) {
   xButton_SetShowCaption.Call(obj, GoBoolToDBool(value))
}

func XButton_GetBackColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetBackColor.Call(obj)
    return TColor(ret)
}

func XButton_SetBackColor(obj uintptr, value TColor) {
   xButton_SetBackColor.Call(obj, uintptr(value))
}

func XButton_GetHoverColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetHoverColor.Call(obj)
    return TColor(ret)
}

func XButton_SetHoverColor(obj uintptr, value TColor) {
   xButton_SetHoverColor.Call(obj, uintptr(value))
}

func XButton_GetDownColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetDownColor.Call(obj)
    return TColor(ret)
}

func XButton_SetDownColor(obj uintptr, value TColor) {
   xButton_SetDownColor.Call(obj, uintptr(value))
}

func XButton_GetBorderWidth(obj uintptr) int32 {
    ret, _, _ := xButton_GetBorderWidth.Call(obj)
    return int32(ret)
}

func XButton_SetBorderWidth(obj uintptr, value int32) {
   xButton_SetBorderWidth.Call(obj, uintptr(value))
}

func XButton_GetBorderColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetBorderColor.Call(obj)
    return TColor(ret)
}

func XButton_SetBorderColor(obj uintptr, value TColor) {
   xButton_SetBorderColor.Call(obj, uintptr(value))
}

func XButton_GetPicture(obj uintptr) uintptr {
    ret, _, _ := xButton_GetPicture.Call(obj)
    return ret
}

func XButton_SetPicture(obj uintptr, value uintptr) {
   xButton_SetPicture.Call(obj, value)
}

func XButton_GetDrawMode(obj uintptr) TDrawImageMode {
    ret, _, _ := xButton_GetDrawMode.Call(obj)
    return TDrawImageMode(ret)
}

func XButton_SetDrawMode(obj uintptr, value TDrawImageMode) {
   xButton_SetDrawMode.Call(obj, uintptr(value))
}

func XButton_GetNormalFontColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetNormalFontColor.Call(obj)
    return TColor(ret)
}

func XButton_SetNormalFontColor(obj uintptr, value TColor) {
   xButton_SetNormalFontColor.Call(obj, uintptr(value))
}

func XButton_GetDownFontColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetDownFontColor.Call(obj)
    return TColor(ret)
}

func XButton_SetDownFontColor(obj uintptr, value TColor) {
   xButton_SetDownFontColor.Call(obj, uintptr(value))
}

func XButton_GetHoverFontColor(obj uintptr) TColor {
    ret, _, _ := xButton_GetHoverFontColor.Call(obj)
    return TColor(ret)
}

func XButton_SetHoverFontColor(obj uintptr, value TColor) {
   xButton_SetHoverFontColor.Call(obj, uintptr(value))
}

func XButton_GetAction(obj uintptr) uintptr {
    ret, _, _ := xButton_GetAction.Call(obj)
    return ret
}

func XButton_SetAction(obj uintptr, value uintptr) {
   xButton_SetAction.Call(obj, value)
}

func XButton_GetAlign(obj uintptr) TAlign {
    ret, _, _ := xButton_GetAlign.Call(obj)
    return TAlign(ret)
}

func XButton_SetAlign(obj uintptr, value TAlign) {
   xButton_SetAlign.Call(obj, uintptr(value))
}

func XButton_GetAnchors(obj uintptr) TAnchors {
    ret, _, _ := xButton_GetAnchors.Call(obj)
    return TAnchors(ret)
}

func XButton_SetAnchors(obj uintptr, value TAnchors) {
   xButton_SetAnchors.Call(obj, uintptr(value))
}

func XButton_GetBiDiMode(obj uintptr) TBiDiMode {
    ret, _, _ := xButton_GetBiDiMode.Call(obj)
    return TBiDiMode(ret)
}

func XButton_SetBiDiMode(obj uintptr, value TBiDiMode) {
   xButton_SetBiDiMode.Call(obj, uintptr(value))
}

func XButton_GetConstraints(obj uintptr) uintptr {
    ret, _, _ := xButton_GetConstraints.Call(obj)
    return ret
}

func XButton_SetConstraints(obj uintptr, value uintptr) {
   xButton_SetConstraints.Call(obj, value)
}

func XButton_GetEnabled(obj uintptr) bool {
    ret, _, _ := xButton_GetEnabled.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetEnabled(obj uintptr, value bool) {
   xButton_SetEnabled.Call(obj, GoBoolToDBool(value))
}

func XButton_GetFont(obj uintptr) uintptr {
    ret, _, _ := xButton_GetFont.Call(obj)
    return ret
}

func XButton_SetFont(obj uintptr, value uintptr) {
   xButton_SetFont.Call(obj, value)
}

func XButton_GetParentFont(obj uintptr) bool {
    ret, _, _ := xButton_GetParentFont.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetParentFont(obj uintptr, value bool) {
   xButton_SetParentFont.Call(obj, GoBoolToDBool(value))
}

func XButton_GetParentShowHint(obj uintptr) bool {
    ret, _, _ := xButton_GetParentShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetParentShowHint(obj uintptr, value bool) {
   xButton_SetParentShowHint.Call(obj, GoBoolToDBool(value))
}

func XButton_GetPopupMenu(obj uintptr) uintptr {
    ret, _, _ := xButton_GetPopupMenu.Call(obj)
    return ret
}

func XButton_SetPopupMenu(obj uintptr, value uintptr) {
   xButton_SetPopupMenu.Call(obj, value)
}

func XButton_GetShowHint(obj uintptr) bool {
    ret, _, _ := xButton_GetShowHint.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetShowHint(obj uintptr, value bool) {
   xButton_SetShowHint.Call(obj, GoBoolToDBool(value))
}

func XButton_GetVisible(obj uintptr) bool {
    ret, _, _ := xButton_GetVisible.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_SetVisible(obj uintptr, value bool) {
   xButton_SetVisible.Call(obj, GoBoolToDBool(value))
}

func XButton_SetOnClick(obj uintptr, fn interface{}) {
    xButton_SetOnClick.Call(obj, addEventToMap(fn))
}

func XButton_SetOnDblClick(obj uintptr, fn interface{}) {
    xButton_SetOnDblClick.Call(obj, addEventToMap(fn))
}

func XButton_SetOnMouseDown(obj uintptr, fn interface{}) {
    xButton_SetOnMouseDown.Call(obj, addEventToMap(fn))
}

func XButton_SetOnMouseEnter(obj uintptr, fn interface{}) {
    xButton_SetOnMouseEnter.Call(obj, addEventToMap(fn))
}

func XButton_SetOnMouseLeave(obj uintptr, fn interface{}) {
    xButton_SetOnMouseLeave.Call(obj, addEventToMap(fn))
}

func XButton_SetOnMouseMove(obj uintptr, fn interface{}) {
    xButton_SetOnMouseMove.Call(obj, addEventToMap(fn))
}

func XButton_SetOnMouseUp(obj uintptr, fn interface{}) {
    xButton_SetOnMouseUp.Call(obj, addEventToMap(fn))
}

func XButton_GetBoundsRect(obj uintptr) TRect {
    var ret TRect
    xButton_GetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_SetBoundsRect(obj uintptr, value TRect) {
   xButton_SetBoundsRect.Call(obj, uintptr(unsafe.Pointer(&value)))
}

func XButton_GetClientHeight(obj uintptr) int32 {
    ret, _, _ := xButton_GetClientHeight.Call(obj)
    return int32(ret)
}

func XButton_SetClientHeight(obj uintptr, value int32) {
   xButton_SetClientHeight.Call(obj, uintptr(value))
}

func XButton_GetClientOrigin(obj uintptr) TPoint {
    var ret TPoint
    xButton_GetClientOrigin.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_GetClientRect(obj uintptr) TRect {
    var ret TRect
    xButton_GetClientRect.Call(obj, uintptr(unsafe.Pointer(&ret)))
    return ret
}

func XButton_GetClientWidth(obj uintptr) int32 {
    ret, _, _ := xButton_GetClientWidth.Call(obj)
    return int32(ret)
}

func XButton_SetClientWidth(obj uintptr, value int32) {
   xButton_SetClientWidth.Call(obj, uintptr(value))
}

func XButton_GetControlState(obj uintptr) TControlState {
    ret, _, _ := xButton_GetControlState.Call(obj)
    return TControlState(ret)
}

func XButton_SetControlState(obj uintptr, value TControlState) {
   xButton_SetControlState.Call(obj, uintptr(value))
}

func XButton_GetControlStyle(obj uintptr) TControlStyle {
    ret, _, _ := xButton_GetControlStyle.Call(obj)
    return TControlStyle(ret)
}

func XButton_SetControlStyle(obj uintptr, value TControlStyle) {
   xButton_SetControlStyle.Call(obj, uintptr(value))
}

func XButton_GetFloating(obj uintptr) bool {
    ret, _, _ := xButton_GetFloating.Call(obj)
    return DBoolToGoBool(ret)
}

func XButton_GetParent(obj uintptr) uintptr {
    ret, _, _ := xButton_GetParent.Call(obj)
    return ret
}

func XButton_SetParent(obj uintptr, value uintptr) {
   xButton_SetParent.Call(obj, value)
}

func XButton_GetLeft(obj uintptr) int32 {
    ret, _, _ := xButton_GetLeft.Call(obj)
    return int32(ret)
}

func XButton_SetLeft(obj uintptr, value int32) {
   xButton_SetLeft.Call(obj, uintptr(value))
}

func XButton_GetTop(obj uintptr) int32 {
    ret, _, _ := xButton_GetTop.Call(obj)
    return int32(ret)
}

func XButton_SetTop(obj uintptr, value int32) {
   xButton_SetTop.Call(obj, uintptr(value))
}

func XButton_GetWidth(obj uintptr) int32 {
    ret, _, _ := xButton_GetWidth.Call(obj)
    return int32(ret)
}

func XButton_SetWidth(obj uintptr, value int32) {
   xButton_SetWidth.Call(obj, uintptr(value))
}

func XButton_GetHeight(obj uintptr) int32 {
    ret, _, _ := xButton_GetHeight.Call(obj)
    return int32(ret)
}

func XButton_SetHeight(obj uintptr, value int32) {
   xButton_SetHeight.Call(obj, uintptr(value))
}

func XButton_GetCursor(obj uintptr) TCursor {
    ret, _, _ := xButton_GetCursor.Call(obj)
    return TCursor(ret)
}

func XButton_SetCursor(obj uintptr, value TCursor) {
   xButton_SetCursor.Call(obj, uintptr(value))
}

func XButton_GetHint(obj uintptr) string {
    ret, _, _ := xButton_GetHint.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_SetHint(obj uintptr, value string) {
   xButton_SetHint.Call(obj, GoStrToDStr(value))
}

func XButton_GetComponentCount(obj uintptr) int32 {
    ret, _, _ := xButton_GetComponentCount.Call(obj)
    return int32(ret)
}

func XButton_GetComponentIndex(obj uintptr) int32 {
    ret, _, _ := xButton_GetComponentIndex.Call(obj)
    return int32(ret)
}

func XButton_SetComponentIndex(obj uintptr, value int32) {
   xButton_SetComponentIndex.Call(obj, uintptr(value))
}

func XButton_GetOwner(obj uintptr) uintptr {
    ret, _, _ := xButton_GetOwner.Call(obj)
    return ret
}

func XButton_GetName(obj uintptr) string {
    ret, _, _ := xButton_GetName.Call(obj)
    return DStrToGoStr(ret)
}

func XButton_SetName(obj uintptr, value string) {
   xButton_SetName.Call(obj, GoStrToDStr(value))
}

func XButton_GetTag(obj uintptr) int {
    ret, _, _ := xButton_GetTag.Call(obj)
    return int(ret)
}

func XButton_SetTag(obj uintptr, value int) {
   xButton_SetTag.Call(obj, uintptr(value))
}

func XButton_GetAnchorSideLeft(obj uintptr) uintptr {
    ret, _, _ := xButton_GetAnchorSideLeft.Call(obj)
    return ret
}

func XButton_SetAnchorSideLeft(obj uintptr, value uintptr) {
   xButton_SetAnchorSideLeft.Call(obj, value)
}

func XButton_GetAnchorSideTop(obj uintptr) uintptr {
    ret, _, _ := xButton_GetAnchorSideTop.Call(obj)
    return ret
}

func XButton_SetAnchorSideTop(obj uintptr, value uintptr) {
   xButton_SetAnchorSideTop.Call(obj, value)
}

func XButton_GetAnchorSideRight(obj uintptr) uintptr {
    ret, _, _ := xButton_GetAnchorSideRight.Call(obj)
    return ret
}

func XButton_SetAnchorSideRight(obj uintptr, value uintptr) {
   xButton_SetAnchorSideRight.Call(obj, value)
}

func XButton_GetAnchorSideBottom(obj uintptr) uintptr {
    ret, _, _ := xButton_GetAnchorSideBottom.Call(obj)
    return ret
}

func XButton_SetAnchorSideBottom(obj uintptr, value uintptr) {
   xButton_SetAnchorSideBottom.Call(obj, value)
}

func XButton_GetBorderSpacing(obj uintptr) uintptr {
    ret, _, _ := xButton_GetBorderSpacing.Call(obj)
    return ret
}

func XButton_SetBorderSpacing(obj uintptr, value uintptr) {
   xButton_SetBorderSpacing.Call(obj, value)
}

func XButton_GetComponents(obj uintptr, AIndex int32) uintptr {
    ret, _, _ := xButton_GetComponents.Call(obj, uintptr(AIndex))
    return ret
}

func XButton_GetAnchorSide(obj uintptr, AKind TAnchorKind) uintptr {
    ret, _, _ := xButton_GetAnchorSide.Call(obj, uintptr(AKind))
    return ret
}

func XButton_StaticClassType() TClass {
    r, _, _:= xButton_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TAnchorSide ---------------------------

func AnchorSide_Assign(obj uintptr, Source uintptr)  {
    anchorSide_Assign.Call(obj, Source )
}

func AnchorSide_GetNamePath(obj uintptr) string {
    ret, _, _ := anchorSide_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func AnchorSide_ClassType(obj uintptr) TClass {
    ret, _, _ := anchorSide_ClassType.Call(obj)
    return TClass(ret)
}

func AnchorSide_ClassName(obj uintptr) string {
    ret, _, _ := anchorSide_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func AnchorSide_InstanceSize(obj uintptr) int32 {
    ret, _, _ := anchorSide_InstanceSize.Call(obj)
    return int32(ret)
}

func AnchorSide_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := anchorSide_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func AnchorSide_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := anchorSide_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func AnchorSide_GetHashCode(obj uintptr) int32 {
    ret, _, _ := anchorSide_GetHashCode.Call(obj)
    return int32(ret)
}

func AnchorSide_ToString(obj uintptr) string {
    ret, _, _ := anchorSide_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func AnchorSide_GetOwner(obj uintptr) uintptr {
    ret, _, _ := anchorSide_GetOwner.Call(obj)
    return ret
}

func AnchorSide_GetControl(obj uintptr) uintptr {
    ret, _, _ := anchorSide_GetControl.Call(obj)
    return ret
}

func AnchorSide_SetControl(obj uintptr, value uintptr) {
   anchorSide_SetControl.Call(obj, value)
}

func AnchorSide_GetSide(obj uintptr) TAnchorSideReference {
    ret, _, _ := anchorSide_GetSide.Call(obj)
    return TAnchorSideReference(ret)
}

func AnchorSide_SetSide(obj uintptr, value TAnchorSideReference) {
   anchorSide_SetSide.Call(obj, uintptr(value))
}

func AnchorSide_StaticClassType() TClass {
    r, _, _:= anchorSide_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TControlBorderSpacing ---------------------------

func ControlBorderSpacing_Assign(obj uintptr, Source uintptr)  {
    controlBorderSpacing_Assign.Call(obj, Source )
}

func ControlBorderSpacing_GetNamePath(obj uintptr) string {
    ret, _, _ := controlBorderSpacing_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ControlBorderSpacing_ClassType(obj uintptr) TClass {
    ret, _, _ := controlBorderSpacing_ClassType.Call(obj)
    return TClass(ret)
}

func ControlBorderSpacing_ClassName(obj uintptr) string {
    ret, _, _ := controlBorderSpacing_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ControlBorderSpacing_InstanceSize(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_InstanceSize.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := controlBorderSpacing_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ControlBorderSpacing_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := controlBorderSpacing_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ControlBorderSpacing_GetHashCode(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetHashCode.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_ToString(obj uintptr) string {
    ret, _, _ := controlBorderSpacing_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ControlBorderSpacing_GetControl(obj uintptr) uintptr {
    ret, _, _ := controlBorderSpacing_GetControl.Call(obj)
    return ret
}

func ControlBorderSpacing_GetAroundLeft(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetAroundLeft.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetAroundTop(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetAroundTop.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetAroundRight(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetAroundRight.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetAroundBottom(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetAroundBottom.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlLeft(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlLeft.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlTop(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlTop.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlWidth(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlWidth.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlHeight(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlHeight.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlRight(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlRight.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_GetControlBottom(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetControlBottom.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetOnChange(obj uintptr, fn interface{}) {
    controlBorderSpacing_SetOnChange.Call(obj, addEventToMap(fn))
}

func ControlBorderSpacing_GetLeft(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetLeft.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetLeft(obj uintptr, value int32) {
   controlBorderSpacing_SetLeft.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetTop(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetTop.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetTop(obj uintptr, value int32) {
   controlBorderSpacing_SetTop.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetRight(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetRight.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetRight(obj uintptr, value int32) {
   controlBorderSpacing_SetRight.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetBottom(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetBottom.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetBottom(obj uintptr, value int32) {
   controlBorderSpacing_SetBottom.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetAround(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetAround.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetAround(obj uintptr, value int32) {
   controlBorderSpacing_SetAround.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetInnerBorder(obj uintptr) int32 {
    ret, _, _ := controlBorderSpacing_GetInnerBorder.Call(obj)
    return int32(ret)
}

func ControlBorderSpacing_SetInnerBorder(obj uintptr, value int32) {
   controlBorderSpacing_SetInnerBorder.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetCellAlignHorizontal(obj uintptr) TControlCellAlign {
    ret, _, _ := controlBorderSpacing_GetCellAlignHorizontal.Call(obj)
    return TControlCellAlign(ret)
}

func ControlBorderSpacing_SetCellAlignHorizontal(obj uintptr, value TControlCellAlign) {
   controlBorderSpacing_SetCellAlignHorizontal.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetCellAlignVertical(obj uintptr) TControlCellAlign {
    ret, _, _ := controlBorderSpacing_GetCellAlignVertical.Call(obj)
    return TControlCellAlign(ret)
}

func ControlBorderSpacing_SetCellAlignVertical(obj uintptr, value TControlCellAlign) {
   controlBorderSpacing_SetCellAlignVertical.Call(obj, uintptr(value))
}

func ControlBorderSpacing_GetSpace(obj uintptr, Kind TAnchorKind) int32 {
    ret, _, _ := controlBorderSpacing_GetSpace.Call(obj, uintptr(Kind))
    return int32(ret)
}

func ControlBorderSpacing_SetSpace(obj uintptr, Kind TAnchorKind, value int32) {
   controlBorderSpacing_SetSpace.Call(obj, uintptr(Kind), uintptr(value))
}

func ControlBorderSpacing_StaticClassType() TClass {
    r, _, _:= controlBorderSpacing_StaticClassType.Call()
    return TClass(r)
}

//--------------------------- TControlChildSizing ---------------------------

func ControlChildSizing_Assign(obj uintptr, Source uintptr)  {
    controlChildSizing_Assign.Call(obj, Source )
}

func ControlChildSizing_GetNamePath(obj uintptr) string {
    ret, _, _ := controlChildSizing_GetNamePath.Call(obj)
    return DStrToGoStr(ret)
}

func ControlChildSizing_ClassType(obj uintptr) TClass {
    ret, _, _ := controlChildSizing_ClassType.Call(obj)
    return TClass(ret)
}

func ControlChildSizing_ClassName(obj uintptr) string {
    ret, _, _ := controlChildSizing_ClassName.Call(obj)
    return DStrToGoStr(ret)
}

func ControlChildSizing_InstanceSize(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_InstanceSize.Call(obj)
    return int32(ret)
}

func ControlChildSizing_InheritsFrom(obj uintptr, AClass TClass) bool {
    ret, _, _ := controlChildSizing_InheritsFrom.Call(obj, uintptr(AClass) )
    return DBoolToGoBool(ret)
}

func ControlChildSizing_Equals(obj uintptr, Obj uintptr) bool {
    ret, _, _ := controlChildSizing_Equals.Call(obj, Obj )
    return DBoolToGoBool(ret)
}

func ControlChildSizing_GetHashCode(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetHashCode.Call(obj)
    return int32(ret)
}

func ControlChildSizing_ToString(obj uintptr) string {
    ret, _, _ := controlChildSizing_ToString.Call(obj)
    return DStrToGoStr(ret)
}

func ControlChildSizing_GetControl(obj uintptr) uintptr {
    ret, _, _ := controlChildSizing_GetControl.Call(obj)
    return ret
}

func ControlChildSizing_SetOnChange(obj uintptr, fn interface{}) {
    controlChildSizing_SetOnChange.Call(obj, addEventToMap(fn))
}

func ControlChildSizing_GetLeftRightSpacing(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetLeftRightSpacing.Call(obj)
    return int32(ret)
}

func ControlChildSizing_SetLeftRightSpacing(obj uintptr, value int32) {
   controlChildSizing_SetLeftRightSpacing.Call(obj, uintptr(value))
}

func ControlChildSizing_GetTopBottomSpacing(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetTopBottomSpacing.Call(obj)
    return int32(ret)
}

func ControlChildSizing_SetTopBottomSpacing(obj uintptr, value int32) {
   controlChildSizing_SetTopBottomSpacing.Call(obj, uintptr(value))
}

func ControlChildSizing_GetHorizontalSpacing(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetHorizontalSpacing.Call(obj)
    return int32(ret)
}

func ControlChildSizing_SetHorizontalSpacing(obj uintptr, value int32) {
   controlChildSizing_SetHorizontalSpacing.Call(obj, uintptr(value))
}

func ControlChildSizing_GetVerticalSpacing(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetVerticalSpacing.Call(obj)
    return int32(ret)
}

func ControlChildSizing_SetVerticalSpacing(obj uintptr, value int32) {
   controlChildSizing_SetVerticalSpacing.Call(obj, uintptr(value))
}

func ControlChildSizing_GetEnlargeHorizontal(obj uintptr) TChildControlResizeStyle {
    ret, _, _ := controlChildSizing_GetEnlargeHorizontal.Call(obj)
    return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetEnlargeHorizontal(obj uintptr, value TChildControlResizeStyle) {
   controlChildSizing_SetEnlargeHorizontal.Call(obj, uintptr(value))
}

func ControlChildSizing_GetEnlargeVertical(obj uintptr) TChildControlResizeStyle {
    ret, _, _ := controlChildSizing_GetEnlargeVertical.Call(obj)
    return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetEnlargeVertical(obj uintptr, value TChildControlResizeStyle) {
   controlChildSizing_SetEnlargeVertical.Call(obj, uintptr(value))
}

func ControlChildSizing_GetShrinkHorizontal(obj uintptr) TChildControlResizeStyle {
    ret, _, _ := controlChildSizing_GetShrinkHorizontal.Call(obj)
    return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetShrinkHorizontal(obj uintptr, value TChildControlResizeStyle) {
   controlChildSizing_SetShrinkHorizontal.Call(obj, uintptr(value))
}

func ControlChildSizing_GetShrinkVertical(obj uintptr) TChildControlResizeStyle {
    ret, _, _ := controlChildSizing_GetShrinkVertical.Call(obj)
    return TChildControlResizeStyle(ret)
}

func ControlChildSizing_SetShrinkVertical(obj uintptr, value TChildControlResizeStyle) {
   controlChildSizing_SetShrinkVertical.Call(obj, uintptr(value))
}

func ControlChildSizing_GetLayout(obj uintptr) TControlChildrenLayout {
    ret, _, _ := controlChildSizing_GetLayout.Call(obj)
    return TControlChildrenLayout(ret)
}

func ControlChildSizing_SetLayout(obj uintptr, value TControlChildrenLayout) {
   controlChildSizing_SetLayout.Call(obj, uintptr(value))
}

func ControlChildSizing_GetControlsPerLine(obj uintptr) int32 {
    ret, _, _ := controlChildSizing_GetControlsPerLine.Call(obj)
    return int32(ret)
}

func ControlChildSizing_SetControlsPerLine(obj uintptr, value int32) {
   controlChildSizing_SetControlsPerLine.Call(obj, uintptr(value))
}

func ControlChildSizing_StaticClassType() TClass {
    r, _, _:= controlChildSizing_StaticClassType.Call()
    return TClass(r)
}
