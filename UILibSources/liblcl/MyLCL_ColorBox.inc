
//----------------------------------------
// The code is automatically generated by the GenlibLcl tool.
// Copyright Â© ying32. All Rights Reserved.
// 
// Licensed under Apache License 2.0
//
//----------------------------------------

function ColorBox_Create(AOwner: TComponent): TColorBox; extdecl;
begin
  Result :=  TColorBox.Create(AOwner);
end;

procedure ColorBox_Free(AObj: TColorBox); extdecl;
begin
  AObj.Free;
end;

procedure ColorBox_AddItem(AObj: TColorBox; Item: PChar; AObject: TObject); extdecl;
begin
  AObj.AddItem(Item, AObject);
end;

procedure ColorBox_Clear(AObj: TColorBox); extdecl;
begin
  AObj.Clear;
end;

procedure ColorBox_ClearSelection(AObj: TColorBox); extdecl;
begin
  AObj.ClearSelection;
end;

procedure ColorBox_DeleteSelected(AObj: TColorBox); extdecl;
begin
  AObj.DeleteSelected;
end;

function ColorBox_Focused(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.Focused;
end;

procedure ColorBox_SelectAll(AObj: TColorBox); extdecl;
begin
  AObj.SelectAll;
end;

function ColorBox_CanFocus(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.CanFocus;
end;

function ColorBox_ContainsControl(AObj: TColorBox; Control: TControl): LongBool; extdecl;
begin
  Result :=  AObj.ContainsControl(Control);
end;

function ColorBox_ControlAtPos(AObj: TColorBox; var Pos: TPoint; AllowDisabled: LongBool; AllowWinControls: LongBool): TControl; extdecl;
begin
  Result :=  AObj.ControlAtPos(Pos, AllowDisabled, AllowWinControls);
end;

procedure ColorBox_DisableAlign(AObj: TColorBox); extdecl;
begin
  AObj.DisableAlign;
end;

procedure ColorBox_EnableAlign(AObj: TColorBox); extdecl;
begin
  AObj.EnableAlign;
end;

function ColorBox_FindChildControl(AObj: TColorBox; ControlName: PChar): TControl; extdecl;
begin
  Result :=  AObj.FindChildControl(ControlName);
end;

procedure ColorBox_FlipChildren(AObj: TColorBox; AllLevels: LongBool); extdecl;
begin
  AObj.FlipChildren(AllLevels);
end;

function ColorBox_HandleAllocated(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.HandleAllocated;
end;

procedure ColorBox_InsertControl(AObj: TColorBox; AControl: TControl); extdecl;
begin
  AObj.InsertControl(AControl);
end;

procedure ColorBox_Invalidate(AObj: TColorBox); extdecl;
begin
  AObj.Invalidate;
end;

procedure ColorBox_RemoveControl(AObj: TColorBox; AControl: TControl); extdecl;
begin
  AObj.RemoveControl(AControl);
end;

procedure ColorBox_Realign(AObj: TColorBox); extdecl;
begin
  AObj.Realign;
end;

procedure ColorBox_Repaint(AObj: TColorBox); extdecl;
begin
  AObj.Repaint;
end;

procedure ColorBox_ScaleBy(AObj: TColorBox; M: Integer; D: Integer); extdecl;
begin
  AObj.ScaleBy(M, D);
end;

procedure ColorBox_ScrollBy(AObj: TColorBox; DeltaX: Integer; DeltaY: Integer); extdecl;
begin
  AObj.ScrollBy(DeltaX, DeltaY);
end;

procedure ColorBox_SetBounds(AObj: TColorBox; ALeft: Integer; ATop: Integer; AWidth: Integer; AHeight: Integer); extdecl;
begin
  AObj.SetBounds(ALeft, ATop, AWidth, AHeight);
end;

procedure ColorBox_SetFocus(AObj: TColorBox); extdecl;
begin
  AObj.SetFocus;
end;

procedure ColorBox_Update(AObj: TColorBox); extdecl;
begin
  AObj.Update;
end;

procedure ColorBox_BringToFront(AObj: TColorBox); extdecl;
begin
  AObj.BringToFront;
end;

procedure ColorBox_ClientToScreen(AObj: TColorBox; var Point: TPoint; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientToScreen(Point);
end;

procedure ColorBox_ClientToParent(AObj: TColorBox; var Point: TPoint; AParent: TWinControl; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientToParent(Point, AParent);
end;

function ColorBox_Dragging(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.Dragging;
end;

function ColorBox_HasParent(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.HasParent;
end;

procedure ColorBox_Hide(AObj: TColorBox); extdecl;
begin
  AObj.Hide;
end;

function ColorBox_Perform(AObj: TColorBox; Msg: Cardinal; WParam: NativeUInt; LParam: NativeInt): NativeInt; extdecl;
begin
  Result :=  AObj.Perform(Msg, WParam, LParam);
end;

procedure ColorBox_Refresh(AObj: TColorBox); extdecl;
begin
  AObj.Refresh;
end;

procedure ColorBox_ScreenToClient(AObj: TColorBox; var Point: TPoint; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ScreenToClient(Point);
end;

procedure ColorBox_ParentToClient(AObj: TColorBox; var Point: TPoint; AParent: TWinControl; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ParentToClient(Point, AParent);
end;

procedure ColorBox_SendToBack(AObj: TColorBox); extdecl;
begin
  AObj.SendToBack;
end;

procedure ColorBox_Show(AObj: TColorBox); extdecl;
begin
  AObj.Show;
end;

function ColorBox_GetTextBuf(AObj: TColorBox; Buffer: PChar; BufSize: Integer): Integer; extdecl;
begin
  Result :=  AObj.GetTextBuf(Buffer, BufSize);
end;

function ColorBox_GetTextLen(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  {$ifdef darwin}Length(AObj.Caption){$else}AObj.GetTextLen{$endif};
end;

procedure ColorBox_SetTextBuf(AObj: TColorBox; Buffer: PChar); extdecl;
begin
  AObj.SetTextBuf(Buffer);
end;

function ColorBox_FindComponent(AObj: TColorBox; AName: PChar): TComponent; extdecl;
begin
  Result :=  AObj.FindComponent(AName);
end;

function ColorBox_GetNamePath(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  PChar(AObj.GetNamePath);
end;

procedure ColorBox_Assign(AObj: TColorBox; Source: TPersistent); extdecl;
begin
  AObj.Assign(Source);
end;

function ColorBox_ClassType(AObj: TColorBox): TClass; extdecl;
begin
  Result :=  AObj.ClassType;
end;

function ColorBox_ClassName(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  ToPChar(AObj.ClassName);
end;

function ColorBox_InstanceSize(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.InstanceSize;
end;

function ColorBox_InheritsFrom(AObj: TColorBox; AClass: TClass): LongBool; extdecl;
begin
  Result :=  AObj.InheritsFrom(AClass);
end;

function ColorBox_Equals(AObj: TColorBox; Obj: TObject): LongBool; extdecl;
begin
  Result :=  AObj.Equals(Obj);
end;

function ColorBox_GetHashCode(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.GetHashCode;
end;

function ColorBox_ToString(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  PChar(AObj.ToString);
end;

procedure ColorBox_AnchorToNeighbour(AObj: TColorBox; ASide: TAnchorKind; ASpace: Integer; ASibling: TControl); extdecl;
begin
  AObj.AnchorToNeighbour(ASide, ASpace, ASibling);
end;

procedure ColorBox_AnchorParallel(AObj: TColorBox; ASide: TAnchorKind; ASpace: Integer; ASibling: TControl); extdecl;
begin
  AObj.AnchorParallel(ASide, ASpace, ASibling);
end;

procedure ColorBox_AnchorHorizontalCenterTo(AObj: TColorBox; ASibling: TControl); extdecl;
begin
  AObj.AnchorHorizontalCenterTo(ASibling);
end;

procedure ColorBox_AnchorVerticalCenterTo(AObj: TColorBox; ASibling: TControl); extdecl;
begin
  AObj.AnchorVerticalCenterTo(ASibling);
end;

procedure ColorBox_AnchorAsAlign(AObj: TColorBox; ATheAlign: TAlign; ASpace: Integer); extdecl;
begin
  AObj.AnchorAsAlign(ATheAlign, ASpace);
end;

procedure ColorBox_AnchorClient(AObj: TColorBox; ASpace: Integer); extdecl;
begin
  AObj.AnchorClient(ASpace);
end;

function ColorBox_GetAlign(AObj: TColorBox): TAlign; extdecl;
begin
  Result :=  AObj.Align;
end;

procedure ColorBox_SetAlign(AObj: TColorBox; AValue: TAlign); extdecl;
begin
  AObj.Align := AValue;
end;

function ColorBox_GetAutoComplete(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.AutoComplete;
end;

procedure ColorBox_SetAutoComplete(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.AutoComplete := AValue;
end;

function ColorBox_GetAutoDropDown(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.AutoDropDown;
end;

procedure ColorBox_SetAutoDropDown(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.AutoDropDown := AValue;
end;

function ColorBox_GetDefaultColorColor(AObj: TColorBox): TColor; extdecl;
begin
  Result :=  AObj.DefaultColorColor;
end;

procedure ColorBox_SetDefaultColorColor(AObj: TColorBox; AValue: TColor); extdecl;
begin
  AObj.DefaultColorColor := AValue;
end;

function ColorBox_GetNoneColorColor(AObj: TColorBox): TColor; extdecl;
begin
  Result :=  AObj.NoneColorColor;
end;

procedure ColorBox_SetNoneColorColor(AObj: TColorBox; AValue: TColor); extdecl;
begin
  AObj.NoneColorColor := AValue;
end;

function ColorBox_GetSelected(AObj: TColorBox): TColor; extdecl;
begin
  Result :=  AObj.Selected;
end;

procedure ColorBox_SetSelected(AObj: TColorBox; AValue: TColor); extdecl;
begin
  AObj.Selected := AValue;
end;

function ColorBox_GetStyle(AObj: TColorBox): TColorBoxStyle; extdecl;
begin
  Result :=  AObj.Style;
end;

procedure ColorBox_SetStyle(AObj: TColorBox; AValue: TColorBoxStyle); extdecl;
begin
  AObj.Style := AValue;
end;

function ColorBox_GetAnchors(AObj: TColorBox): TAnchors; extdecl;
begin
  Result :=  AObj.Anchors;
end;

procedure ColorBox_SetAnchors(AObj: TColorBox; AValue: TAnchors); extdecl;
begin
  AObj.Anchors := AValue;
end;

function ColorBox_GetBiDiMode(AObj: TColorBox): TBiDiMode; extdecl;
begin
  Result :=  AObj.BiDiMode;
end;

procedure ColorBox_SetBiDiMode(AObj: TColorBox; AValue: TBiDiMode); extdecl;
begin
  AObj.BiDiMode := AValue;
end;

function ColorBox_GetColor(AObj: TColorBox): TColor; extdecl;
begin
  Result :=  AObj.Color;
end;

procedure ColorBox_SetColor(AObj: TColorBox; AValue: TColor); extdecl;
begin
  AObj.Color := AValue;
end;

function ColorBox_GetConstraints(AObj: TColorBox): TSizeConstraints; extdecl;
begin
  Result :=  AObj.Constraints;
end;

procedure ColorBox_SetConstraints(AObj: TColorBox; AValue: TSizeConstraints); extdecl;
begin
  AObj.Constraints := AValue;
end;

function ColorBox_GetDoubleBuffered(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.DoubleBuffered;
end;

procedure ColorBox_SetDoubleBuffered(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.DoubleBuffered := AValue;
end;

function ColorBox_GetDropDownCount(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.DropDownCount;
end;

procedure ColorBox_SetDropDownCount(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.DropDownCount := AValue;
end;

function ColorBox_GetEnabled(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.Enabled;
end;

procedure ColorBox_SetEnabled(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.Enabled := AValue;
end;

function ColorBox_GetFont(AObj: TColorBox): TFont; extdecl;
begin
  Result :=  AObj.Font;
end;

procedure ColorBox_SetFont(AObj: TColorBox; AValue: TFont); extdecl;
begin
  AObj.Font := AValue;
end;

function ColorBox_GetItemHeight(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ItemHeight;
end;

procedure ColorBox_SetItemHeight(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.ItemHeight := AValue;
end;

function ColorBox_GetParentColor(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.ParentColor;
end;

procedure ColorBox_SetParentColor(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.ParentColor := AValue;
end;

function ColorBox_GetParentDoubleBuffered(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.ParentDoubleBuffered;
end;

procedure ColorBox_SetParentDoubleBuffered(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.ParentDoubleBuffered := AValue;
end;

function ColorBox_GetParentFont(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.ParentFont;
end;

procedure ColorBox_SetParentFont(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.ParentFont := AValue;
end;

function ColorBox_GetParentShowHint(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.ParentShowHint;
end;

procedure ColorBox_SetParentShowHint(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.ParentShowHint := AValue;
end;

function ColorBox_GetPopupMenu(AObj: TColorBox): TPopupMenu; extdecl;
begin
  Result :=  AObj.PopupMenu;
end;

procedure ColorBox_SetPopupMenu(AObj: TColorBox; AValue: TPopupMenu); extdecl;
begin
  AObj.PopupMenu := AValue;
end;

function ColorBox_GetShowHint(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.ShowHint;
end;

procedure ColorBox_SetShowHint(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.ShowHint := AValue;
end;

function ColorBox_GetTabOrder(AObj: TColorBox): TTabOrder; extdecl;
begin
  Result :=  AObj.TabOrder;
end;

procedure ColorBox_SetTabOrder(AObj: TColorBox; AValue: TTabOrder); extdecl;
begin
  AObj.TabOrder := AValue;
end;

function ColorBox_GetTabStop(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.TabStop;
end;

procedure ColorBox_SetTabStop(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.TabStop := AValue;
end;

function ColorBox_GetVisible(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.Visible;
end;

procedure ColorBox_SetVisible(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.Visible := AValue;
end;

procedure ColorBox_SetOnChange(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnChange}
  {$DEFINE EventMethodName := OnChange}
  EventMethodCode
end;

procedure ColorBox_SetOnClick(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnClick}
  {$DEFINE EventMethodName := OnClick}
  EventMethodCode
end;

procedure ColorBox_SetOnContextPopup(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnContextPopup}
  {$DEFINE EventMethodName := OnContextPopup}
  EventMethodCode
end;

procedure ColorBox_SetOnDragDrop(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnDragDrop}
  {$DEFINE EventMethodName := OnDragDrop}
  EventMethodCode
end;

procedure ColorBox_SetOnDragOver(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnDragOver}
  {$DEFINE EventMethodName := OnDragOver}
  EventMethodCode
end;

procedure ColorBox_SetOnEndDrag(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnEndDrag}
  {$DEFINE EventMethodName := OnEndDrag}
  EventMethodCode
end;

procedure ColorBox_SetOnEnter(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnEnter}
  {$DEFINE EventMethodName := OnEnter}
  EventMethodCode
end;

procedure ColorBox_SetOnExit(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnExit}
  {$DEFINE EventMethodName := OnExit}
  EventMethodCode
end;

procedure ColorBox_SetOnKeyDown(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyDown}
  {$DEFINE EventMethodName := OnKeyDown}
  EventMethodCode
end;

procedure ColorBox_SetOnKeyPress(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyPress}
  {$DEFINE EventMethodName := OnKeyPress}
  EventMethodCode
end;

procedure ColorBox_SetOnKeyUp(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnKeyUp}
  {$DEFINE EventMethodName := OnKeyUp}
  EventMethodCode
end;

procedure ColorBox_SetOnMouseEnter(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseEnter}
  {$DEFINE EventMethodName := OnMouseEnter}
  EventMethodCode
end;

procedure ColorBox_SetOnMouseLeave(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnMouseLeave}
  {$DEFINE EventMethodName := OnMouseLeave}
  EventMethodCode
end;

procedure ColorBox_SetOnSelect(AObj: TColorBox; AEventId: NativeUInt); extdecl;
begin
  {$DEFINE EventName := OnSelect}
  {$DEFINE EventMethodName := OnSelect}
  EventMethodCode
end;

function ColorBox_GetCharCase(AObj: TColorBox): TEditCharCase; extdecl;
begin
  Result :=  AObj.CharCase;
end;

procedure ColorBox_SetCharCase(AObj: TColorBox; AValue: TEditCharCase); extdecl;
begin
  AObj.CharCase := AValue;
end;

function ColorBox_GetSelText(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  PChar(AObj.SelText);
end;

procedure ColorBox_SetSelText(AObj: TColorBox; AValue: PChar); extdecl;
begin
  AObj.SelText := AValue;
end;

function ColorBox_GetCanvas(AObj: TColorBox): TCanvas; extdecl;
begin
  Result :=  AObj.Canvas;
end;

function ColorBox_GetDroppedDown(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.DroppedDown;
end;

procedure ColorBox_SetDroppedDown(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.DroppedDown := AValue;
end;

function ColorBox_GetItems(AObj: TColorBox): TStrings; extdecl;
begin
  Result :=  AObj.Items;
end;

procedure ColorBox_SetItems(AObj: TColorBox; AValue: TStrings); extdecl;
begin
  AObj.Items := AValue;
end;

function ColorBox_GetSelLength(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.SelLength;
end;

procedure ColorBox_SetSelLength(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.SelLength := AValue;
end;

function ColorBox_GetSelStart(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.SelStart;
end;

procedure ColorBox_SetSelStart(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.SelStart := AValue;
end;

function ColorBox_GetItemIndex(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ItemIndex;
end;

procedure ColorBox_SetItemIndex(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.ItemIndex := AValue;
end;

function ColorBox_GetDockClientCount(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.DockClientCount;
end;

function ColorBox_GetDockSite(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.DockSite;
end;

procedure ColorBox_SetDockSite(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.DockSite := AValue;
end;

function ColorBox_GetMouseInClient(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.MouseInClient;
end;

function ColorBox_GetVisibleDockClientCount(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.VisibleDockClientCount;
end;

function ColorBox_GetBrush(AObj: TColorBox): TBrush; extdecl;
begin
  Result :=  AObj.Brush;
end;

function ColorBox_GetControlCount(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ControlCount;
end;

function ColorBox_GetHandle(AObj: TColorBox): HWND; extdecl;
begin
  Result :=  AObj.Handle;
end;

function ColorBox_GetParentWindow(AObj: TColorBox): HWND; extdecl;
begin
  Result :=  AObj.ParentWindow;
end;

procedure ColorBox_SetParentWindow(AObj: TColorBox; AValue: HWND); extdecl;
begin
  AObj.ParentWindow := AValue;
end;

function ColorBox_GetUseDockManager(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.UseDockManager;
end;

procedure ColorBox_SetUseDockManager(AObj: TColorBox; AValue: LongBool); extdecl;
begin
  AObj.UseDockManager := AValue;
end;

function ColorBox_GetAction(AObj: TColorBox): TBasicAction; extdecl;
begin
  Result :=  AObj.Action;
end;

procedure ColorBox_SetAction(AObj: TColorBox; AValue: TBasicAction); extdecl;
begin
  AObj.Action := AValue;
end;

procedure ColorBox_GetBoundsRect(AObj: TColorBox; var Result: TRect); extdecl;
begin
  Result :=  AObj.BoundsRect;
end;

procedure ColorBox_SetBoundsRect(AObj: TColorBox; var AValue: TRect); extdecl;
begin
  AObj.BoundsRect := AValue;
end;

function ColorBox_GetClientHeight(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ClientHeight;
end;

procedure ColorBox_SetClientHeight(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.ClientHeight := AValue;
end;

procedure ColorBox_GetClientOrigin(AObj: TColorBox; var Result: TPoint); extdecl;
begin
  Result :=  AObj.ClientOrigin;
end;

procedure ColorBox_GetClientRect(AObj: TColorBox; var Result: TRect); extdecl;
begin
  Result :=  AObj.ClientRect;
end;

function ColorBox_GetClientWidth(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ClientWidth;
end;

procedure ColorBox_SetClientWidth(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.ClientWidth := AValue;
end;

function ColorBox_GetControlState(AObj: TColorBox): TControlState; extdecl;
begin
  Result :=  AObj.ControlState;
end;

procedure ColorBox_SetControlState(AObj: TColorBox; AValue: TControlState); extdecl;
begin
  AObj.ControlState := AValue;
end;

function ColorBox_GetControlStyle(AObj: TColorBox): TControlStyle; extdecl;
begin
  Result :=  AObj.ControlStyle;
end;

procedure ColorBox_SetControlStyle(AObj: TColorBox; AValue: TControlStyle); extdecl;
begin
  AObj.ControlStyle := AValue;
end;

function ColorBox_GetFloating(AObj: TColorBox): LongBool; extdecl;
begin
  Result :=  AObj.Floating;
end;

function ColorBox_GetParent(AObj: TColorBox): TWinControl; extdecl;
begin
  Result :=  AObj.Parent;
end;

procedure ColorBox_SetParent(AObj: TColorBox; AValue: TWinControl); extdecl;
begin
  AObj.Parent := AValue;
end;

function ColorBox_GetLeft(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.Left;
end;

procedure ColorBox_SetLeft(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.Left := AValue;
end;

function ColorBox_GetTop(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.Top;
end;

procedure ColorBox_SetTop(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.Top := AValue;
end;

function ColorBox_GetWidth(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.Width;
end;

procedure ColorBox_SetWidth(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.Width := AValue;
end;

function ColorBox_GetHeight(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.Height;
end;

procedure ColorBox_SetHeight(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.Height := AValue;
end;

function ColorBox_GetCursor(AObj: TColorBox): TCursor; extdecl;
begin
  Result :=  AObj.Cursor;
end;

procedure ColorBox_SetCursor(AObj: TColorBox; AValue: TCursor); extdecl;
begin
  AObj.Cursor := AValue;
end;

function ColorBox_GetHint(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  PChar(AObj.Hint);
end;

procedure ColorBox_SetHint(AObj: TColorBox; AValue: PChar); extdecl;
begin
  AObj.Hint := AValue;
end;

function ColorBox_GetComponentCount(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ComponentCount;
end;

function ColorBox_GetComponentIndex(AObj: TColorBox): Integer; extdecl;
begin
  Result :=  AObj.ComponentIndex;
end;

procedure ColorBox_SetComponentIndex(AObj: TColorBox; AValue: Integer); extdecl;
begin
  AObj.ComponentIndex := AValue;
end;

function ColorBox_GetOwner(AObj: TColorBox): TComponent; extdecl;
begin
  Result :=  AObj.Owner;
end;

function ColorBox_GetName(AObj: TColorBox): PChar; extdecl;
begin
  Result :=  PChar(AObj.Name);
end;

procedure ColorBox_SetName(AObj: TColorBox; AValue: PChar); extdecl;
begin
  AObj.Name := AValue;
end;

function ColorBox_GetTag(AObj: TColorBox): NativeInt; extdecl;
begin
  Result :=  AObj.Tag;
end;

procedure ColorBox_SetTag(AObj: TColorBox; AValue: NativeInt); extdecl;
begin
  AObj.Tag := AValue;
end;

function ColorBox_GetAnchorSideLeft(AObj: TColorBox): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideLeft;
end;

procedure ColorBox_SetAnchorSideLeft(AObj: TColorBox; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideLeft := AValue;
end;

function ColorBox_GetAnchorSideTop(AObj: TColorBox): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideTop;
end;

procedure ColorBox_SetAnchorSideTop(AObj: TColorBox; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideTop := AValue;
end;

function ColorBox_GetAnchorSideRight(AObj: TColorBox): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideRight;
end;

procedure ColorBox_SetAnchorSideRight(AObj: TColorBox; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideRight := AValue;
end;

function ColorBox_GetAnchorSideBottom(AObj: TColorBox): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSideBottom;
end;

procedure ColorBox_SetAnchorSideBottom(AObj: TColorBox; AValue: TAnchorSide); extdecl;
begin
  AObj.AnchorSideBottom := AValue;
end;

function ColorBox_GetChildSizing(AObj: TColorBox): TControlChildSizing; extdecl;
begin
  Result :=  AObj.ChildSizing;
end;

procedure ColorBox_SetChildSizing(AObj: TColorBox; AValue: TControlChildSizing); extdecl;
begin
  AObj.ChildSizing := AValue;
end;

function ColorBox_GetBorderSpacing(AObj: TColorBox): TControlBorderSpacing; extdecl;
begin
  Result :=  AObj.BorderSpacing;
end;

procedure ColorBox_SetBorderSpacing(AObj: TColorBox; AValue: TControlBorderSpacing); extdecl;
begin
  AObj.BorderSpacing := AValue;
end;

function ColorBox_GetColors(AObj: TColorBox; Index: Integer): TColor; extdecl;
begin
  Result :=  AObj.Colors[Index];
end;

function ColorBox_GetColorNames(AObj: TColorBox; Index: Integer): PChar; extdecl;
begin
  Result :=  PChar(AObj.ColorNames[Index]);
end;

function ColorBox_GetDockClients(AObj: TColorBox; Index: Integer): TControl; extdecl;
begin
  Result :=  AObj.DockClients[Index];
end;

function ColorBox_GetControls(AObj: TColorBox; Index: Integer): TControl; extdecl;
begin
  Result :=  AObj.Controls[Index];
end;

function ColorBox_GetComponents(AObj: TColorBox; AIndex: Integer): TComponent; extdecl;
begin
  Result :=  AObj.Components[AIndex];
end;

function ColorBox_GetAnchorSide(AObj: TColorBox; AKind: TAnchorKind): TAnchorSide; extdecl;
begin
  Result :=  AObj.AnchorSide[AKind];
end;

function ColorBox_StaticClassType: TClass; extdecl;
begin
  Result := TColorBox;
end;

exports
  ColorBox_Create,
  ColorBox_Free,
  ColorBox_AddItem,
  ColorBox_Clear,
  ColorBox_ClearSelection,
  ColorBox_DeleteSelected,
  ColorBox_Focused,
  ColorBox_SelectAll,
  ColorBox_CanFocus,
  ColorBox_ContainsControl,
  ColorBox_ControlAtPos,
  ColorBox_DisableAlign,
  ColorBox_EnableAlign,
  ColorBox_FindChildControl,
  ColorBox_FlipChildren,
  ColorBox_HandleAllocated,
  ColorBox_InsertControl,
  ColorBox_Invalidate,
  ColorBox_RemoveControl,
  ColorBox_Realign,
  ColorBox_Repaint,
  ColorBox_ScaleBy,
  ColorBox_ScrollBy,
  ColorBox_SetBounds,
  ColorBox_SetFocus,
  ColorBox_Update,
  ColorBox_BringToFront,
  ColorBox_ClientToScreen,
  ColorBox_ClientToParent,
  ColorBox_Dragging,
  ColorBox_HasParent,
  ColorBox_Hide,
  ColorBox_Perform,
  ColorBox_Refresh,
  ColorBox_ScreenToClient,
  ColorBox_ParentToClient,
  ColorBox_SendToBack,
  ColorBox_Show,
  ColorBox_GetTextBuf,
  ColorBox_GetTextLen,
  ColorBox_SetTextBuf,
  ColorBox_FindComponent,
  ColorBox_GetNamePath,
  ColorBox_Assign,
  ColorBox_ClassType,
  ColorBox_ClassName,
  ColorBox_InstanceSize,
  ColorBox_InheritsFrom,
  ColorBox_Equals,
  ColorBox_GetHashCode,
  ColorBox_ToString,
  ColorBox_AnchorToNeighbour,
  ColorBox_AnchorParallel,
  ColorBox_AnchorHorizontalCenterTo,
  ColorBox_AnchorVerticalCenterTo,
  ColorBox_AnchorAsAlign,
  ColorBox_AnchorClient,
  ColorBox_GetAlign,
  ColorBox_SetAlign,
  ColorBox_GetAutoComplete,
  ColorBox_SetAutoComplete,
  ColorBox_GetAutoDropDown,
  ColorBox_SetAutoDropDown,
  ColorBox_GetDefaultColorColor,
  ColorBox_SetDefaultColorColor,
  ColorBox_GetNoneColorColor,
  ColorBox_SetNoneColorColor,
  ColorBox_GetSelected,
  ColorBox_SetSelected,
  ColorBox_GetStyle,
  ColorBox_SetStyle,
  ColorBox_GetAnchors,
  ColorBox_SetAnchors,
  ColorBox_GetBiDiMode,
  ColorBox_SetBiDiMode,
  ColorBox_GetColor,
  ColorBox_SetColor,
  ColorBox_GetConstraints,
  ColorBox_SetConstraints,
  ColorBox_GetDoubleBuffered,
  ColorBox_SetDoubleBuffered,
  ColorBox_GetDropDownCount,
  ColorBox_SetDropDownCount,
  ColorBox_GetEnabled,
  ColorBox_SetEnabled,
  ColorBox_GetFont,
  ColorBox_SetFont,
  ColorBox_GetItemHeight,
  ColorBox_SetItemHeight,
  ColorBox_GetParentColor,
  ColorBox_SetParentColor,
  ColorBox_GetParentDoubleBuffered,
  ColorBox_SetParentDoubleBuffered,
  ColorBox_GetParentFont,
  ColorBox_SetParentFont,
  ColorBox_GetParentShowHint,
  ColorBox_SetParentShowHint,
  ColorBox_GetPopupMenu,
  ColorBox_SetPopupMenu,
  ColorBox_GetShowHint,
  ColorBox_SetShowHint,
  ColorBox_GetTabOrder,
  ColorBox_SetTabOrder,
  ColorBox_GetTabStop,
  ColorBox_SetTabStop,
  ColorBox_GetVisible,
  ColorBox_SetVisible,
  ColorBox_SetOnChange,
  ColorBox_SetOnClick,
  ColorBox_SetOnContextPopup,
  ColorBox_SetOnDragDrop,
  ColorBox_SetOnDragOver,
  ColorBox_SetOnEndDrag,
  ColorBox_SetOnEnter,
  ColorBox_SetOnExit,
  ColorBox_SetOnKeyDown,
  ColorBox_SetOnKeyPress,
  ColorBox_SetOnKeyUp,
  ColorBox_SetOnMouseEnter,
  ColorBox_SetOnMouseLeave,
  ColorBox_SetOnSelect,
  ColorBox_GetCharCase,
  ColorBox_SetCharCase,
  ColorBox_GetSelText,
  ColorBox_SetSelText,
  ColorBox_GetCanvas,
  ColorBox_GetDroppedDown,
  ColorBox_SetDroppedDown,
  ColorBox_GetItems,
  ColorBox_SetItems,
  ColorBox_GetSelLength,
  ColorBox_SetSelLength,
  ColorBox_GetSelStart,
  ColorBox_SetSelStart,
  ColorBox_GetItemIndex,
  ColorBox_SetItemIndex,
  ColorBox_GetDockClientCount,
  ColorBox_GetDockSite,
  ColorBox_SetDockSite,
  ColorBox_GetMouseInClient,
  ColorBox_GetVisibleDockClientCount,
  ColorBox_GetBrush,
  ColorBox_GetControlCount,
  ColorBox_GetHandle,
  ColorBox_GetParentWindow,
  ColorBox_SetParentWindow,
  ColorBox_GetUseDockManager,
  ColorBox_SetUseDockManager,
  ColorBox_GetAction,
  ColorBox_SetAction,
  ColorBox_GetBoundsRect,
  ColorBox_SetBoundsRect,
  ColorBox_GetClientHeight,
  ColorBox_SetClientHeight,
  ColorBox_GetClientOrigin,
  ColorBox_GetClientRect,
  ColorBox_GetClientWidth,
  ColorBox_SetClientWidth,
  ColorBox_GetControlState,
  ColorBox_SetControlState,
  ColorBox_GetControlStyle,
  ColorBox_SetControlStyle,
  ColorBox_GetFloating,
  ColorBox_GetParent,
  ColorBox_SetParent,
  ColorBox_GetLeft,
  ColorBox_SetLeft,
  ColorBox_GetTop,
  ColorBox_SetTop,
  ColorBox_GetWidth,
  ColorBox_SetWidth,
  ColorBox_GetHeight,
  ColorBox_SetHeight,
  ColorBox_GetCursor,
  ColorBox_SetCursor,
  ColorBox_GetHint,
  ColorBox_SetHint,
  ColorBox_GetComponentCount,
  ColorBox_GetComponentIndex,
  ColorBox_SetComponentIndex,
  ColorBox_GetOwner,
  ColorBox_GetName,
  ColorBox_SetName,
  ColorBox_GetTag,
  ColorBox_SetTag,
  ColorBox_GetAnchorSideLeft,
  ColorBox_SetAnchorSideLeft,
  ColorBox_GetAnchorSideTop,
  ColorBox_SetAnchorSideTop,
  ColorBox_GetAnchorSideRight,
  ColorBox_SetAnchorSideRight,
  ColorBox_GetAnchorSideBottom,
  ColorBox_SetAnchorSideBottom,
  ColorBox_GetChildSizing,
  ColorBox_SetChildSizing,
  ColorBox_GetBorderSpacing,
  ColorBox_SetBorderSpacing,
  ColorBox_GetColors,
  ColorBox_GetColorNames,
  ColorBox_GetDockClients,
  ColorBox_GetControls,
  ColorBox_GetComponents,
  ColorBox_GetAnchorSide,
  ColorBox_StaticClassType;

